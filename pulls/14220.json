{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220",
    "id": 215597670,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NTk3Njcw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14220",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14220.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14220.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/de9662b7b8e578d31401412e821c2d910d9ea80a",
    "number": 14220,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Transaction relay privacy bugfix",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR does ~~two~~ one thing~~s~~:\r\n\r\n* Fixes a privacy issue where if we relay a transaction to peer A (but not peer B), peer B can request the transaction and we'll provide it.  Instead, we should wait until we announce to peer B before providing the transaction.\r\n\r\n~~* Respond to getdata requests for transactions that are ancestors of newly-announced transactions.  Currently, our software will request the parents of an orphan transaction from the peer who announced the orphan, but if our peer is running a recent Bitcoin Core version, the request would typically be dropped.  So this should improve propagation for transaction chains, particularly for nodes that are just starting up.~~\r\n\r\n~~This PR also includes a test that transaction chains relay to peers that weren't connected when a parent was broadcast.~~",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-09-14T13:39:35Z",
    "updated_at": "2021-09-08T11:58:47Z",
    "closed_at": "2018-10-17T17:08:41Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "c860c6fdfc9338f0be462c35086a3f73aa63d7b4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sdaftuar:2018-09-txrelay",
      "ref": "2018-09-txrelay",
      "sha": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 245665,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:41:53Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-02-11T10:16:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4de0b5f39cc35636d499ad29ee3c63384b13fc76",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 127,
    "deletions": 5,
    "changed_files": 5,
    "commits": 3,
    "review_comments": 29,
    "comments": 20
  },
  "events": [
    {
      "event": "labeled",
      "id": 1846145684,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDYxNDU2ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1846145684",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T13:43:55Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1846184436,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg0NjE4NDQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1846184436",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T13:59:56Z"
    },
    {
      "event": "commented",
      "id": 421565005,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTU2NTAwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421565005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-15T12:46:42Z",
      "updated_at": "2018-10-09T04:26:56Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->No more conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-421565005",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 421713958,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTcxMzk1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421713958",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-16T07:15:00Z",
      "updated_at": "2018-09-16T07:15:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-421713958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 155747119,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1NzQ3MTE5",
      "url": null,
      "actor": null,
      "commit_id": "ba6c0a16868163e0c42927e7593b3596037df520",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-155747119",
      "submitted_at": "2018-09-16T14:36:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 421781112,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTc4MTExMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421781112",
      "actor": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-16T15:17:21Z",
      "updated_at": "2018-09-16T15:17:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK b723d95fa08c8058f4ab32cdd5329b4df3aac036",
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-421781112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 155757673,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1NzU3Njcz",
      "url": null,
      "actor": null,
      "commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-155757673",
      "submitted_at": "2018-09-16T21:13:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 422545832,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU0NTgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422545832",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-18T20:40:12Z",
      "updated_at": "2018-09-18T20:40:12Z",
      "author_association": "MEMBER",
      "body": "utACK. I wrote a test in  #14240 that should only pass with your first commit.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-422545832",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 157919312,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTE5MzEy",
      "url": null,
      "actor": null,
      "commit_id": "b723d95fa08c8058f4ab32cdd5329b4df3aac036",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-157919312",
      "submitted_at": "2018-09-22T19:04:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 424096098,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA5NjA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424096098",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T19:29:16Z",
      "updated_at": "2018-09-24T19:29:16Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar Do you feel like splitting this up? I believe one of the fixes is a bugfix, the other a feature.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424096098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "mentioned",
      "id": 1863986704,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2Mzk4NjcwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1863986704",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T19:29:16Z"
    },
    {
      "event": "subscribed",
      "id": 1863986705,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjM5ODY3MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1863986705",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T19:29:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1865525350,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg2NTUyNTM1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1865525350",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T12:04:19Z"
    },
    {
      "event": "commented",
      "id": 424316233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDMxNjIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424316233",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T12:06:28Z",
      "updated_at": "2018-09-25T12:06:28Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke This PR is now just the bugfix along with the test you wrote (thanks!), I'll separately PR the new feature.\r\n\r\nI believe I've also incorporated all the PR comments that are relevant for the bugfix commit.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424316233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "mentioned",
      "id": 1865529883,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2NTUyOTg4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1865529883",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T12:06:28Z"
    },
    {
      "event": "subscribed",
      "id": 1865529886,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjU1Mjk4ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1865529886",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T12:06:28Z"
    },
    {
      "event": "renamed",
      "id": 1865533178,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTg2NTUzMzE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1865533178",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T12:08:02Z",
      "rename": {
        "from": "Transaction relay improvements",
        "to": "Transaction relay privacy bugfix"
      }
    },
    {
      "event": "commented",
      "id": 424439341,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQzOTM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424439341",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T17:51:35Z",
      "updated_at": "2018-09-25T17:51:35Z",
      "author_association": "MEMBER",
      "body": "Tested ACK 736462c26de7a267bdf75c1f86bf12932c604b3d (I wrote the test, that fails without this patch)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424439341",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 424441006,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0MTAwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424441006",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T17:56:23Z",
      "updated_at": "2018-09-25T17:56:23Z",
      "author_association": "MEMBER",
      "body": "Is this for backport?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424441006",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 424444818,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0NDgxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424444818",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T18:07:19Z",
      "updated_at": "2018-09-25T18:07:19Z",
      "author_association": "MEMBER",
      "body": "I don't think we need to backport this (in particular I wouldn't want to interfere with the 0.17.0 release), as the bug has been present for so long, there's no urgency.  And I tend to think that changes like this to the p2p behavior are better to sit in master for a while before appearing in a release anyway.\r\n\r\nAny idea what is going on with the appveyor test run?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424444818",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 424456193,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1NjE5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424456193",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T18:42:17Z",
      "updated_at": "2018-09-25T18:42:17Z",
      "author_association": "MEMBER",
      "body": "I guess it's worth pointing out as well, that this change without the improvement in #14318 may well worsen relay of transactions that are part of chains a bit.  For instance, if a peer of ours asks for the parent of a transaction we announced, then as long as that parent is in mapRelay -- ie it was recently announced -- then we'd provide it, even if that peer wasn't connected to us at the time the parent transaction was announced.\r\n\r\nI have no idea how common that sort of thing is, but rather than spend too much time wondering about it, I'd say it's better to not backport this change (and arguably I shouldn't have unbundled this PR from #14318).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424456193",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 424836172,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDgzNjE3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424836172",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-26T19:13:16Z",
      "updated_at": "2018-09-26T19:13:16Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/14220/commits/736462c26de7a267bdf75c1f86bf12932c604b3d\r\n\r\nIn plain English, I'd characterize this change as \"don't respond to a GETDATA(txn) for a peer who you haven't previously sent INV(txn).\"",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-424836172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 159156936,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU5MTU2OTM2",
      "url": null,
      "actor": null,
      "commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-159156936",
      "submitted_at": "2018-09-26T19:17:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "labeled",
      "id": 1871424144,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NzE0MjQxNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871424144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T15:34:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1871763056,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg3MTc2MzA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871763056",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T18:01:39Z"
    },
    {
      "event": "commented",
      "id": 425188679,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTE4ODY3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425188679",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T18:04:30Z",
      "updated_at": "2018-09-27T18:04:30Z",
      "author_association": "MEMBER",
      "body": "Rebased, but I think we need to adjust the test so that it has a drastically lower error rate, or drop it from this PR.  @MarcoFalke thoughts?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-425188679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "mentioned",
      "id": 1871768892,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg3MTc2ODg5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871768892",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T18:04:30Z"
    },
    {
      "event": "subscribed",
      "id": 1871768897,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NzE3Njg4OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871768897",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T18:04:31Z"
    },
    {
      "event": "unlabeled",
      "id": 1871967109,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg3MTk2NzEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871967109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T19:38:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 159692379,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU5NjkyMzc5",
      "url": null,
      "actor": null,
      "commit_id": "47bf6e9622101181ca6d0ec60985fd683c17704c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 47bf6e9622",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-159692379",
      "submitted_at": "2018-09-28T03:30:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 425398442,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTM5ODQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425398442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-28T10:49:06Z",
      "updated_at": "2018-09-28T10:49:06Z",
      "author_association": "MEMBER",
      "body": "<!--32850dd3fdea838b4049e64f46995ea2-->\n| Coverage  | Change ([pull 14220](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/14220/total.coverage/index.html)) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html))   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0094 %            | 87.0361 %        |\n| Functions | -0.0130 %            | 84.1130 %        |\n| Branches  | +0.0047 %            | 51.5451 %        |\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-425398442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1874459616,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg3NDQ1OTYxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1874459616",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-28T21:01:48Z"
    },
    {
      "event": "commented",
      "id": 425768162,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc2ODE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425768162",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-01T01:26:10Z",
      "updated_at": "2018-10-01T01:26:10Z",
      "author_association": "MEMBER",
      "body": "re-ACK 320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-425768162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 161879411,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYxODc5NDEx",
      "url": null,
      "actor": null,
      "commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-utACK https://github.com/bitcoin/bitcoin/pull/14220/commits/320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-161879411",
      "submitted_at": "2018-10-05T03:24:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "labeled",
      "id": 1889367968,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4ODkzNjc5Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1889367968",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-08T04:02:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 162328321,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYyMzI4MzIx",
      "url": null,
      "actor": null,
      "commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-162328321",
      "submitted_at": "2018-10-08T04:53:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1891689163,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg5MTY4OTE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1891689163",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T02:40:20Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTc5YWJkMTM4Njc2NzNkZjUwMWJmNzEyZGFhODc4ZDQ2NjM4OWMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f979abd13867673df501bf712daa878d466389c1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f979abd13867673df501bf712daa878d466389c1",
      "tree": {
        "sha": "60d987437be04278ca18859cc670895780ce6b2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60d987437be04278ca18859cc670895780ce6b2a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4de0b5f39cc35636d499ad29ee3c63384b13fc76",
          "sha": "4de0b5f39cc35636d499ad29ee3c63384b13fc76",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4de0b5f39cc35636d499ad29ee3c63384b13fc76"
        }
      ],
      "message": "Don't relay tx data to peers until after tx announcement\n\nPrior to this commit, we'd respond with tx data for anything in mapRelay,\nregardless of whether the requesting peer was one that we'd sent an INV to\nfor the transaction in question.\n\nClose this privacy leak by maintaining a set of peers to which we've\nrelayed each transaction in mapRelay.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T02:51:39Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-09-10T20:54:46Z"
      },
      "sha": "f979abd13867673df501bf712daa878d466389c1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGUwYzNiMDkwMDc5ZTI3YTkxN2I4ZmY5NDY3YWQ3YmEyODQ5OGE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
      "tree": {
        "sha": "bb34ce1ff527895a970bd3724ae24276e7a39884",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb34ce1ff527895a970bd3724ae24276e7a39884"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f979abd13867673df501bf712daa878d466389c1",
          "sha": "f979abd13867673df501bf712daa878d466389c1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f979abd13867673df501bf712daa878d466389c1"
        }
      ],
      "message": "[qa] Test inter-bucket privacy leakage",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T02:57:01Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-15T23:51:20Z"
      },
      "sha": "a4e0c3b090079e27a917b8ff9467ad7ba28498a6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1891705820,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg5MTcwNTgyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1891705820",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T02:57:30Z"
    },
    {
      "event": "commented",
      "id": 428043168,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA0MzE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428043168",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T02:57:57Z",
      "updated_at": "2018-10-09T02:57:57Z",
      "author_association": "MEMBER",
      "body": "Picked up Marco's latest test and rebased on master due to the `test_runner.py` conflict.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-428043168",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTk2NjJiN2I4ZTU3OGQzMTQwMTQxMmU4MjFjMmQ5MTBkOWVhODBh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de9662b7b8e578d31401412e821c2d910d9ea80a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/de9662b7b8e578d31401412e821c2d910d9ea80a",
      "tree": {
        "sha": "a03b9ec365fbd725b54743caba7d5a0e94cb4911",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a03b9ec365fbd725b54743caba7d5a0e94cb4911"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
          "sha": "a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e0c3b090079e27a917b8ff9467ad7ba28498a6"
        }
      ],
      "message": "Satisfy the linter",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T03:04:37Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T03:04:37Z"
      },
      "sha": "de9662b7b8e578d31401412e821c2d910d9ea80a"
    },
    {
      "event": "commented",
      "id": 428044364,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA0NDM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428044364",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T03:06:09Z",
      "updated_at": "2018-10-09T03:06:09Z",
      "author_association": "MEMBER",
      "body": "Added a commit because of this:\r\n\r\n```\r\n./test/functional/p2p_leak_tx.py:8:1: F401 'test_framework.mininode.mininode_lock' imported but unused\r\n./test/functional/p2p_leak_tx.py:10:1: F401 'test_framework.util.assert_greater_than' imported but unused\r\n./test/functional/p2p_leak_tx.py:10:1: F401 'test_framework.util.wait_until' imported but unused\r\n```",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-428044364",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "unlabeled",
      "id": 1891727889,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg5MTcyNzg4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1891727889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T03:21:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 428047754,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA0Nzc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428047754",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T03:30:48Z",
      "updated_at": "2018-10-09T03:30:48Z",
      "author_association": "MEMBER",
      "body": "Feel free to just squash these trivial fixups in",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-428047754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 163200623,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYzMjAwNjIz",
      "url": null,
      "actor": null,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK the code change with a request for an additional comment.\r\n\r\nThe test appears to me to be broken. Perhaps we should split it out into a separate PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-163200623",
      "submitted_at": "2018-10-10T06:42:00Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 428486018,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ4NjAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428486018",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-10T08:34:37Z",
      "updated_at": "2018-10-10T08:34:37Z",
      "author_association": "MEMBER",
      "body": "One other question: do we know how large `mapRelay` is expected to grow? Do we know how much additional memory will be used by changing the `CTransactionRef` to a `RelayEntry`?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-428486018",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "commented",
      "id": 429881442,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg4MTQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429881442",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-15T14:43:05Z",
      "updated_at": "2018-10-15T14:43:05Z",
      "author_association": "MEMBER",
      "body": "I've written an alternative test here: https://github.com/jnewbery/bitcoin/tree/pr14220.1 which reliably tests the new behaviour and fails on master.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-429881442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "reviewed",
      "id": 165489169,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NDg5MTY5",
      "url": null,
      "actor": null,
      "commit_id": "f979abd13867673df501bf712daa878d466389c1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-165489169",
      "submitted_at": "2018-10-17T07:48:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "commented",
      "id": 430710707,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcxMDcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430710707",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-17T17:08:41Z",
      "updated_at": "2018-10-17T17:08:41Z",
      "author_association": "MEMBER",
      "body": ">One other question: do we know how large mapRelay is expected to grow? Do we know how much additional memory will be used by changing the CTransactionRef to a RelayEntry?\r\n\r\nmapRelay is bounded by our rate-limited transaction relay algorithm, but on further thought, this approach may potentially use quite a bit more memory than I originally realized.\r\n\r\nI'll close this PR for now and re-open when I have an alternative that I think is worth pursuing.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#issuecomment-430710707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14220"
    },
    {
      "event": "closed",
      "id": 1910166031,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTkxMDE2NjAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1910166031",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-17T17:08:41Z"
    },
    {
      "event": "reviewed",
      "id": 166787081,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2Nzg3MDgx",
      "url": null,
      "actor": null,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#pullrequestreview-166787081",
      "submitted_at": "2018-10-21T14:19:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
    },
    {
      "event": "locked",
      "id": 5271825304,
      "node_id": "LOE_lADOABII584VeeFgzwAAAAE6OauY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271825304",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:58:47Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217916417",
      "pull_request_review_id": 155747119,
      "id": 217916417,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkxNjQxNw==",
      "diff_hunk": "@@ -0,0 +1,80 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test relay of transaction chains.\n+\n+Ensure that if bitcoind announces a transaction it will also respond\n+to getdata requests for parents of the transaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    sync_blocks\n+)\n+\n+class ChainRelayTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Generating one utxo for node0\")\n+\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        self.nodes[1].generate(100)\n+        self.sync_all()\n+\n+        # Node0 should now have 1 utxo.\n+        assert self.nodes[0].getbalance() > 10 # Should be 50, but doesn't matter",
      "path": "test/functional/p2p_txchain_relay.py",
      "position": null,
      "original_position": 37,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "ba6c0a16868163e0c42927e7593b3596037df520",
      "in_reply_to_id": null,
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Comment doesn't seem to match the assert. Could just add...\r\n```\r\nassert_equal(len(self.nodes[0].listunspent()), 1)\r\n```",
      "created_at": "2018-09-16T14:36:09Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217916417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217916417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927370",
      "pull_request_review_id": 155757673,
      "id": 217927370,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyNzM3MA==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_map;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Don't relay tx data to peers until after tx announcement\"\r\n\r\nDoesn't seem quite obvious that `std::set` is worst, why did you picked `std::unordered_set`?",
      "created_at": "2018-09-16T20:50:38Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217927370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927456",
      "pull_request_review_id": 155757673,
      "id": 217927456,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyNzQ1Ng==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Don't relay tx data to peers until after tx announcement\"\r\n\r\nFrom developer notes:\r\n```\r\n- By default, declare single-argument constructors `explicit`.\r\n\r\n  - *Rationale*: This is a precaution to avoid unintended conversions that might\r\n    arise when single-argument constructors are used as implicit conversion\r\n    functions.\r\n```",
      "created_at": "2018-09-16T20:54:16Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217927456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927481",
      "pull_request_review_id": 155757673,
      "id": 217927481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyNzQ4MQ==",
      "diff_hunk": "@@ -3610,7 +3616,10 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             vRelayExpiration.pop_front();\n                         }\n \n-                        auto ret = mapRelay.insert(std::make_pair(hash, std::move(txinfo.tx)));\n+                        auto ret = mapRelay.insert(std::make_pair(hash, RelayEntry(std::move(txinfo.tx))));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Don't relay tx data to peers until after tx announcement\"\r\n\r\n~~nit, could use `emplace(k,v)` since you are touching this line.~~\r\n\r\nThis is moved and updated in the next commit.",
      "created_at": "2018-09-16T20:55:10Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217927481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3619,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927487",
      "pull_request_review_id": 155757673,
      "id": 217927487,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyNzQ4Nw==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_map;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": 217927370,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Don't relay tx data to peers until after tx announcement\"\r\n\r\nnit, s/_map/_set?\r\n",
      "created_at": "2018-09-16T20:55:31Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217927487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927530",
      "pull_request_review_id": 155757673,
      "id": 217927530,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyNzUzMA==",
      "diff_hunk": "@@ -164,6 +164,18 @@ namespace {\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs. */\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration GUARDED_BY(cs_main);\n \n+    void AddToMapRelay(CTransactionRef &&txref, NodeId peer, int64_t time_now) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+    {\n+        const uint256& hash = txref->GetHash();\n+        auto ret = mapRelay.emplace(std::make_pair(hash, RelayEntry(std::move(txref))));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "3c227a6bf97076da449cb956c894b3e0b01e6735",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Add ancestors of announced transactions to mapRelay\"\r\n\r\nnit, could drop `std::make_pair`.",
      "created_at": "2018-09-16T20:57:28Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r217927530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217927530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219679799",
      "pull_request_review_id": 157919312,
      "id": 219679799,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY3OTc5OQ==",
      "diff_hunk": "@@ -153,11 +154,28 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "b723d95fa08c8058f4ab32cdd5329b4df3aac036",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 21:02:10 cpplint(pr=14220): src/net_processing.cpp:158:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]\r\n```",
      "created_at": "2018-09-22T19:04:41Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r219679799",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219679799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219968248",
      "pull_request_review_id": 158269506,
      "id": 219968248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTk2ODI0OA==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_map;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": 217927370,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Constant time lookup seemed better to me than log_n lookup but I dunno, is there a reason you think std::set is better here?  I suspect it doesn't really matter.",
      "created_at": "2018-09-24T19:56:56Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r219968248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219968248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220690123",
      "pull_request_review_id": 159156936,
      "id": 220690123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDY5MDEyMw==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 50,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: distribuiton (spelling)",
      "created_at": "2018-09-26T19:16:12Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r220690123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220690123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220690330",
      "pull_request_review_id": 159156936,
      "id": 220690330,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDY5MDMzMA==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        EXPECTED_MEASURED_LEAK = .366485\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 85,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This test, being stochastic, looks like it'll fail spuriously. I guess it if happens too often, we can up `REPEATS` or something.",
      "created_at": "2018-09-26T19:16:55Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r220690330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220690330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220694414",
      "pull_request_review_id": 159162303,
      "id": 220694414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDY5NDQxNA==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        EXPECTED_MEASURED_LEAK = .366485\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 85,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": 220690330,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Someone could run it for 1000 times and see if it fails at all\r\n\r\n```\r\n./test/functional/test_runner.py -j 15 $(for i in {0..999}; do echo p2p_leak_tx ; done)",
      "created_at": "2018-09-26T19:30:31Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r220694414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220694414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220710702",
      "pull_request_review_id": 159182753,
      "id": 220710702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDcxMDcwMg==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_map;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "68657b8ae32265d724acdc919784b63030948b8d",
      "in_reply_to_id": 217927370,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I dunno too. Considering the size is small I agree it doesn't matter.",
      "created_at": "2018-09-26T20:25:05Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r220710702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220710702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221013286",
      "pull_request_review_id": 159560141,
      "id": 221013286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTAxMzI4Ng==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        EXPECTED_MEASURED_LEAK = .366485\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 85,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": 220690330,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like it fails about 9% of the time for me. :(",
      "created_at": "2018-09-27T17:36:49Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r221013286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221013286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221118923",
      "pull_request_review_id": 159692379,
      "id": 221118923,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTExODkyMw==",
      "diff_hunk": "@@ -1232,7 +1232,27 @@ def __repr__(self):\n         return \"msg_mempool()\"\n \n \n-class msg_sendheaders:\n+class msg_notfound():\n+    __slots__ = (\"vec\")\n+    command = b\"notfound\"\n+\n+    def __init__(self, vec=None):\n+        if vec is None:\n+            self.vec = []\n+        else:\n+            self.vec = vec\n+\n+    def deserialize(self, f):\n+        self.vec = deser_vector(f, CInv)\n+\n+    def serialize(self):\n+        return ser_vector(self.vec)\n+\n+    def __repr__(self):\n+        return \"msg_notfound(vec=%s)\" % (repr(self.vec))\n+\n+\n+class msg_sendheaders():",
      "path": "test/functional/test_framework/messages.py",
      "position": null,
      "original_position": 25,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "47bf6e9622101181ca6d0ec60985fd683c17704c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: unrelated change?",
      "created_at": "2018-09-28T01:09:11Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r221118923",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221118923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221133435",
      "pull_request_review_id": 159692379,
      "id": 221133435,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTEzMzQzNQ==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        EXPECTED_MEASURED_LEAK = .366485\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 85,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": 220690330,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry for that. I haven't actually run the test substantially after writing. I seems you could set `        EXPECTED_MEASURED_LEAK = .42` or so without making the test useless. (On master the leak is always 1.00, so setting the expected measured leak to any number less than 1 should be fine)\r\n\r\n![figure_1](https://user-images.githubusercontent.com/6399679/46206730-f3070d80-c2f2-11e8-8bb5-1e51e6870619.png)\r\n(measured leak on x-axis)\r\n",
      "created_at": "2018-09-28T03:28:01Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r221133435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221133435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221381012",
      "pull_request_review_id": 160023846,
      "id": 221381012,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTM4MTAxMg==",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversiarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to request the\n+        # transaction they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribuiton for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        EXPECTED_MEASURED_LEAK = .366485\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 85,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "736462c26de7a267bdf75c1f86bf12932c604b3d",
      "in_reply_to_id": 220690330,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I bumped it up to 0.45, and it failed once in 1000 runs, so i bumped it up to 0.50 and ran it 5000 times with no failures.  I have not really looked at the test or analyzed the statistics at all to verify that this makes sense.",
      "created_at": "2018-09-28T21:04:03Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r221381012",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221381012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221381060",
      "pull_request_review_id": 160023914,
      "id": 221381060,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTM4MTA2MA==",
      "diff_hunk": "@@ -1232,7 +1232,27 @@ def __repr__(self):\n         return \"msg_mempool()\"\n \n \n-class msg_sendheaders:\n+class msg_notfound():\n+    __slots__ = (\"vec\")\n+    command = b\"notfound\"\n+\n+    def __init__(self, vec=None):\n+        if vec is None:\n+            self.vec = []\n+        else:\n+            self.vec = vec\n+\n+    def deserialize(self, f):\n+        self.vec = deser_vector(f, CInv)\n+\n+    def serialize(self):\n+        return ser_vector(self.vec)\n+\n+    def __repr__(self):\n+        return \"msg_notfound(vec=%s)\" % (repr(self.vec))\n+\n+\n+class msg_sendheaders():",
      "path": "test/functional/test_framework/messages.py",
      "position": null,
      "original_position": 25,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "47bf6e9622101181ca6d0ec60985fd683c17704c",
      "in_reply_to_id": 221118923,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2018-09-28T21:04:17Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r221381060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221381060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223248001",
      "pull_request_review_id": 162328321,
      "id": 223248001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzI0ODAwMQ==",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to successfully request a\n+        # transaction if they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribution for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        # EXPECTED_MEASURED_LEAK = .366485\n+        # Because this test is empirical and our testing framework isn't set up\n+        # to handle tests that fail with some expected likelihood, we bump this\n+        # value up to decrease the false positive rate.\n+        EXPECTED_MEASURED_LEAK = .50\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 89,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand what this test is supposed to be testing. Is it:\r\n\r\n(i) that we don't leak txs to inbound peers that we haven't yet announced to (as stated in the docstring); or\r\n(ii) that txs are probabilistically announced to outbound peers before inbound peers.\r\n\r\nIf (i), can't we just test that for every tx, either we receive a `NOTFOUND` message for the tx or we've already received an `INV` message for the tx?\r\n\r\nThe `assert_greater_than()` call here seems to be simply testing (ii). Or maybe I'm misunderstanding?",
      "created_at": "2018-10-08T04:53:25Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223248001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223248001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223281424",
      "pull_request_review_id": 162367314,
      "id": 223281424,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzI4MTQyNA==",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to successfully request a\n+        # transaction if they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribution for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        # EXPECTED_MEASURED_LEAK = .366485\n+        # Because this test is empirical and our testing framework isn't set up\n+        # to handle tests that fail with some expected likelihood, we bump this\n+        # value up to decrease the false positive rate.\n+        EXPECTED_MEASURED_LEAK = .50\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 89,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "in_reply_to_id": 223248001,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense! That makes the test easier to understand as well:\r\n\r\n(to be applied on current HEAD commit of this branch)\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_leak_tx.py b/test/functional/p2p_leak_tx.py\r\nindex 21d1d4ed2d..a0ceaedd67 100755\r\n--- a/test/functional/p2p_leak_tx.py\r\n+++ b/test/functional/p2p_leak_tx.py\r\n@@ -13,10 +13,17 @@ from test_framework.util import (\r\n     wait_until,\r\n )\r\n \r\n+import time\r\n+\r\n+\r\n+class P2PNode(P2PDataStore):\r\n+    def on_inv(self, msg):\r\n+        pass\r\n+\r\n \r\n class P2PLeakTxTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n-        self.num_nodes = 2\r\n+        self.num_nodes = 1\r\n \r\n     def skip_test_if_missing_module(self):\r\n         self.skip_if_no_wallet()\r\n@@ -26,67 +33,28 @@ class P2PLeakTxTest(BitcoinTestFramework):\r\n         gen_node.generate(1)\r\n         self.sync_all()\r\n \r\n-        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\r\n-        outbound_peer = self.nodes[1]  # Our outbound peer\r\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PNode())  # An \"attacking\" inbound peer\r\n \r\n-        # In an adversarial setting we can generally assume that inbound peers\r\n-        # are more likely to spy on us than outbound peers. Thus, on average,\r\n-        # we announce transactions first to outbound peers, then to (all)\r\n-        # inbound peers. Inbound peers must not be able to successfully request a\r\n-        # transaction if they haven't yet received the announcement for it.\r\n-        #\r\n-        # With only one outbound peer, we expect that a tx is first announced\r\n-        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\r\n-        # the cases.\r\n-        #\r\n-        # Probability( time_ann_inbound < time_ann_outbound )                 =\r\n-        # ∫ f_in(x)                           * F_out(x)                   dx =\r\n-        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\r\n-        # 0.285714\r\n-        #\r\n-        # Where,\r\n-        # * f_in is the pdf of the exponential distribution for inbound peers,\r\n-        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\r\n-        # * F_out is the cdf of the expon. distribution for outbound peers,\r\n-        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\r\n-        #\r\n-        # Due to measurement delays, the actual monte-carlo leak is a bit\r\n-        # higher. Assume a total delay of 0.6 s (Includes network delays and\r\n-        # rpc delay to poll the raw mempool)\r\n-        #\r\n-        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\r\n-        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\r\n-        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\r\n-        # 0.366485\r\n-        # EXPECTED_MEASURED_LEAK = .366485\r\n-        # Because this test is empirical and our testing framework isn't set up\r\n-        # to handle tests that fail with some expected likelihood, we bump this\r\n-        # value up to decrease the false positive rate.\r\n-        EXPECTED_MEASURED_LEAK = .50\r\n-\r\n-        REPEATS = 100\r\n-        measured_leak = 0\r\n-        self.log.info('Start simulation for {} repeats'.format(REPEATS))\r\n+        REPEATS = 10\r\n+        self.log.info('Start test for {} repeats'.format(REPEATS))\r\n         for i in range(REPEATS):\r\n             self.log.debug('Run {}/{}'.format(i, REPEATS))\r\n             txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\r\n+\r\n+            time.sleep(5)\r\n+\r\n             want_tx = msg_getdata()\r\n             want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\r\n-\r\n-            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\r\n             inbound_peer.send_message(want_tx)\r\n             inbound_peer.sync_with_ping()\r\n \r\n             if inbound_peer.last_message.get('notfound'):\r\n+                self.log.debug('tx {} was not yet announced to us.'.format(txid))\r\n                 assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\r\n                 inbound_peer.last_message.pop('notfound')\r\n             else:\r\n-                measured_leak += 1\r\n-\r\n-        measured_leak /= REPEATS\r\n-        self.log.info('Measured leak of {}'.format(measured_leak))\r\n-\r\n-        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)\r\n+                self.log.debug('tx {} was announced to us.'.format(txid))\r\n+                assert int(txid, 16) in [inv.hash for inv in inbound_peer.last_message['inv'].inv]\r\n \r\n \r\n if __name__ == '__main__':\r\n",
      "created_at": "2018-10-08T08:23:57Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223281424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223281424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223293921",
      "pull_request_review_id": 162382581,
      "id": 223293921,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzI5MzkyMQ==",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to successfully request a\n+        # transaction if they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribution for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        # EXPECTED_MEASURED_LEAK = .366485\n+        # Because this test is empirical and our testing framework isn't set up\n+        # to handle tests that fail with some expected likelihood, we bump this\n+        # value up to decrease the false positive rate.\n+        EXPECTED_MEASURED_LEAK = .50\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 89,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "in_reply_to_id": 223248001,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Concept ACK the change to the test!\r\n\r\nCan we add multiple P2P connections to the node to get more test repeats in parallel, or does the change to tx propagation in https://github.com/bitcoin/bitcoin/pull/13298 mean that we'll announce to all those peers at the same time and not get any additional benefit?",
      "created_at": "2018-10-08T09:06:38Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223293921",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223293921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223296240",
      "pull_request_review_id": 162385405,
      "id": 223296240,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzI5NjI0MA==",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to successfully request a\n+        # transaction if they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribution for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        # EXPECTED_MEASURED_LEAK = .366485\n+        # Because this test is empirical and our testing framework isn't set up\n+        # to handle tests that fail with some expected likelihood, we bump this\n+        # value up to decrease the false positive rate.\n+        EXPECTED_MEASURED_LEAK = .50\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 89,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "in_reply_to_id": 223248001,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently we can only easily add inbound mininode peers (which are in the same bucket for tx propagation), so right now it couldn't run in parallel that way.\r\n\r\nI am happy to adjust the test as soon as we can add outbound connections to mininode peers.",
      "created_at": "2018-10-08T09:15:01Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223296240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223296240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223548444",
      "pull_request_review_id": 162701895,
      "id": 223548444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzU0ODQ0NA==",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PDataStore())  # An \"attacking\" inbound peer\n+        outbound_peer = self.nodes[1]  # Our outbound peer\n+\n+        # In an adversarial setting we can generally assume that inbound peers\n+        # are more likely to spy on us than outbound peers. Thus, on average,\n+        # we announce transactions first to outbound peers, then to (all)\n+        # inbound peers. Inbound peers must not be able to successfully request a\n+        # transaction if they haven't yet received the announcement for it.\n+        #\n+        # With only one outbound peer, we expect that a tx is first announced\n+        # to (all) inbound peers (and thus present a potential leak) in 28.5% of\n+        # the cases.\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound )                 =\n+        # ∫ f_in(x)                           * F_out(x)                   dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * x)) dx =\n+        # 0.285714\n+        #\n+        # Where,\n+        # * f_in is the pdf of the exponential distribution for inbound peers,\n+        #   with lambda_in = 1 / INVENTORY_BROADCAST_INTERVAL = 1/5\n+        # * F_out is the cdf of the expon. distribution for outbound peers,\n+        #   with lambda_out = 1 / (INVENTORY_BROADCAST_INTERVAL >> 1) = 1/2\n+        #\n+        # Due to measurement delays, the actual monte-carlo leak is a bit\n+        # higher. Assume a total delay of 0.6 s (Includes network delays and\n+        # rpc delay to poll the raw mempool)\n+        #\n+        # Probability( time_ann_inbound < time_ann_outbound + 0.6 )           =\n+        # ∫ f_in(x)                           * F_out(x + 0.6)             dx =\n+        # ∫ (lambda_in * exp(-lambda_in * x)) * (1 - exp(-lambda_out * (x+.6))) dx =\n+        # 0.366485\n+        # EXPECTED_MEASURED_LEAK = .366485\n+        # Because this test is empirical and our testing framework isn't set up\n+        # to handle tests that fail with some expected likelihood, we bump this\n+        # value up to decrease the false positive rate.\n+        EXPECTED_MEASURED_LEAK = .50\n+\n+        REPEATS = 100\n+        measured_leak = 0\n+        self.log.info('Start simulation for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+\n+            wait_until(lambda: txid in outbound_peer.getrawmempool(), lock=mininode_lock)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                measured_leak += 1\n+\n+        measured_leak /= REPEATS\n+        self.log.info('Measured leak of {}'.format(measured_leak))\n+\n+        assert_greater_than(EXPECTED_MEASURED_LEAK, measured_leak)",
      "path": "test/functional/p2p_leak_tx.py",
      "position": null,
      "original_position": 89,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "320a85e3427685d4bed9d585c3a3c45e288d5a30",
      "in_reply_to_id": 223248001,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks!",
      "created_at": "2018-10-09T02:58:19Z",
      "updated_at": "2018-10-09T03:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223548444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223548444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223950591",
      "pull_request_review_id": 163200623,
      "id": 223950591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzk1MDU5MQ==",
      "diff_hunk": "@@ -1284,8 +1290,8 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n-            if (mi != mapRelay.end()) {\n-                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n+            if (mi != mapRelay.end() && mi->second.m_node_set.count(pfrom->GetId())) {\n+                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second.m_txref));",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think a comment here would be helpful (since `mi->second.m_node_set.count(pfrom->GetId())` isn't immediately obvious when read outside the context of this PR). Something like:\r\n\r\n```\r\n// Only send the transaction if we've previously announced it to this peer\r\n```",
      "created_at": "2018-10-10T06:31:03Z",
      "updated_at": "2018-10-10T06:42:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223950591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223950591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1294,
      "original_line": 1294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223950825",
      "pull_request_review_id": 163200623,
      "id": 223950825,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzk1MDgyNQ==",
      "diff_hunk": "@@ -1284,8 +1290,8 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n-            if (mi != mapRelay.end()) {\n-                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n+            if (mi != mapRelay.end() && mi->second.m_node_set.count(pfrom->GetId())) {\n+                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second.m_txref));\n                 push = true;\n             } else if (pfrom->timeLastMempoolReq) {",
      "path": "src/net_processing.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that we can leak mempool contents (and lose privacy) to a peer if it sends us a MEMPOOL message. That is unchanged by this PR, but the logic here is a bit confusing and we should probably deprecate support for MEMPOOL in future.",
      "created_at": "2018-10-10T06:32:11Z",
      "updated_at": "2018-10-10T06:42:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223950825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223950825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1296,
      "original_line": 1296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223952467",
      "pull_request_review_id": 163200623,
      "id": 223952467,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzk1MjQ2Nw==",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+#!/usr/bin/env python3",
      "path": "test/functional/p2p_leak_tx.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've now reviewed this test. Sadly, it doesn't test the new code (and does not fail on master).\r\n\r\nSince the node-under-test has only one peer, the transaction won't get added to `mapRelay` until we send the `INV` to that peer. That means in the if/else branches at the bottom of this test:\r\n\r\n- if the node has already sent us an INV for the tx, then it'll be in the `mapRelay` and the node will send us the TX.\r\n- if the node has not yet sent us an INV for the tx, then it won't be in the `mapRelay` and we'll fail `mi != mapRelay.end()` and not even reach `&& mi->second.m_node_set.count(pfrom->GetId())`\r\n\r\nTo test the new code, we want the to be in `mapRelay`, but the peer to not be in the `RelayEntry`. That's not possible if the node has only one peer.\r\n\r\nPerhaps we should remove the test from this PR and add it under a future PR. If you do so, please tag me in that PR and I'll commit to reviewing the test.",
      "created_at": "2018-10-10T06:41:10Z",
      "updated_at": "2018-10-10T06:42:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r223952467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223952467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225809009",
      "pull_request_review_id": 165489169,
      "id": 225809009,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTgwOTAwOQ==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        explicit RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}",
      "path": "src/net_processing.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "f979abd13867673df501bf712daa878d466389c1",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Use `m_txref(std::move(tx))` here. `tx` in this context is _not_ an rvalue reference (as it's been bound to variable), it's only initialized by accepting an rvalue reference.",
      "created_at": "2018-10-17T07:35:39Z",
      "updated_at": "2018-10-17T07:48:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r225809009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225809009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 158,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225813001",
      "pull_request_review_id": 165489169,
      "id": 225813001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTgxMzAwMQ==",
      "diff_hunk": "@@ -1284,8 +1290,8 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n-            if (mi != mapRelay.end()) {\n-                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n+            if (mi != mapRelay.end() && mi->second.m_node_set.count(pfrom->GetId())) {\n+                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second.m_txref));\n                 push = true;\n             } else if (pfrom->timeLastMempoolReq) {",
      "path": "src/net_processing.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "in_reply_to_id": 223950825,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One relatively easy solution (I think), is to only announce transactions that have been longer than say 60s in the mempool at the time the MEMPOOL message is received, and to enforce the same time restriction in this block of code (so you can't fetch transactions that were received less than 60s before the last MEMPOOL request).",
      "created_at": "2018-10-17T07:47:49Z",
      "updated_at": "2018-10-17T07:48:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r225813001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225813001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1296,
      "original_line": 1296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226017914",
      "pull_request_review_id": 165740267,
      "id": 226017914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjAxNzkxNA==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        explicit RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}",
      "path": "src/net_processing.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "f979abd13867673df501bf712daa878d466389c1",
      "in_reply_to_id": 225809009,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had no idea, thank you for pointing this out!",
      "created_at": "2018-10-17T17:07:05Z",
      "updated_at": "2018-10-17T17:07:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r226017914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226017914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 158,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226864609",
      "pull_request_review_id": 166787081,
      "id": 226864609,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjg2NDYwOQ==",
      "diff_hunk": "@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        explicit RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_set;",
      "path": "src/net_processing.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "original_commit_id": "de9662b7b8e578d31401412e821c2d910d9ea80a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are at most 9 buckets, so a set of outbound `NodeId`s and a flag for inbound ones might demand less memory?",
      "created_at": "2018-10-21T14:19:34Z",
      "updated_at": "2018-10-21T14:19:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14220#discussion_r226864609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226864609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14220"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 160,
      "original_line": 160,
      "side": "RIGHT"
    }
  ]
}