{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
    "id": 1013011356,
    "node_id": "PR_kwDOABII5848YVOc",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25760",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25760.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25760.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/acbea66589100fe6ef726f4b2a92ec26132ef17b",
    "number": 25760,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rest: clean-up for `mempool` endpoints",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The functions `rest_mempool_info` and `rest_mempool_contents` are similar, the only difference between them is:\r\n`rest_mempool_info` uses `MempoolInfoToJSON` to get the mempool informations and `rest_mempool_contents` uses `MempoolToJSON`, for this reason this PR creates a new function to handle it and reduce duplicated code.\r\n\r\nAlso,\r\n1. Rename `strURIPart` to `str_uri_part`.\r\n2. Rename `strJSON` to `str_json`.\r\n",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2022-07-31T12:00:52Z",
    "updated_at": "2022-08-23T16:36:41Z",
    "closed_at": "2022-08-05T14:45:50Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-08-05T14:45:50Z",
    "merge_commit_sha": "7d3817b29a2ad6a1ca5bae6c342472bc74e2a7fe",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "brunoerg:2022-07-rest-improvements",
      "ref": "2022-07-rest-improvements",
      "sha": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 267841305,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNjc4NDEzMDU=",
        "name": "bitcoin",
        "full_name": "brunoerg/bitcoin",
        "owner": {
          "login": "brunoerg",
          "id": 19480819,
          "node_id": "MDQ6VXNlcjE5NDgwODE5",
          "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/brunoerg",
          "html_url": "https://github.com/brunoerg",
          "followers_url": "https://api.github.com/users/brunoerg/followers",
          "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
          "organizations_url": "https://api.github.com/users/brunoerg/orgs",
          "repos_url": "https://api.github.com/users/brunoerg/repos",
          "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/brunoerg/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/brunoerg/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/brunoerg/bitcoin",
        "archive_url": "https://api.github.com/repos/brunoerg/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/brunoerg/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/brunoerg/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/brunoerg/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/brunoerg/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/brunoerg/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/brunoerg/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/brunoerg/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/brunoerg/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/brunoerg/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/brunoerg/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/brunoerg/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/brunoerg/bitcoin/events",
        "forks_url": "https://api.github.com/repos/brunoerg/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/brunoerg/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/brunoerg/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/brunoerg/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/brunoerg/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/brunoerg/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/brunoerg/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/brunoerg/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/brunoerg/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/brunoerg/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/brunoerg/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/brunoerg/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/brunoerg/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/brunoerg/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/brunoerg/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/brunoerg/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:brunoerg/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/brunoerg/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/brunoerg/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/brunoerg/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/brunoerg/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/brunoerg/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/brunoerg/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/brunoerg/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/brunoerg/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/brunoerg/bitcoin/hooks",
        "svn_url": "https://github.com/brunoerg/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 219879,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-01T21:41:01Z",
        "created_at": "2020-05-29T11:30:10Z",
        "updated_at": "2022-12-07T18:05:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "92f6461cfd39fff2fc885dd623fa47e7d8d53827",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 13,
    "deletions": 28,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 10,
    "comments": 6
  },
  "events": [
    {
      "event": "labeled",
      "id": 7096260800,
      "node_id": "LE_lADOABII585O4iDLzwAAAAGm-FjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7096260800",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T12:27:50Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "reviewed",
      "id": 1056572010,
      "node_id": "PRR_kwDOABII584--gJq",
      "url": null,
      "actor": null,
      "commit_id": "029fad6f75a71af67828af0bf7134fdf4f54909f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK 029fad6\r\n\r\nAlternatively, you could also only register `/rest/mempool/` and inspect the `str_uri_part`? I think this would allow for slightly more code reduction.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1056572010",
      "submitted_at": "2022-07-31T14:00:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "commented",
      "id": 1200487616,
      "node_id": "IC_kwDOABII585HjfzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1200487616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T19:45:22Z",
      "updated_at": "2022-07-31T19:45:22Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25756](https://github.com/bitcoin/bitcoin/pull/25756) (rest: Remove support for a number of `-deprecatedrest` options by stickies-v)\n* [#25755](https://github.com/bitcoin/bitcoin/pull/25755) (rest: Use from_blockhash and txdetails query parameters by stickies-v)\n* [#25754](https://github.com/bitcoin/bitcoin/pull/25754) (rest: Extend HTTPRequest interface to support querying path (parameters) by stickies-v)\n* [#25753](https://github.com/bitcoin/bitcoin/pull/25753) (rest: Move format string from path-like parameter to query parameter by stickies-v)\n* [#25412](https://github.com/bitcoin/bitcoin/pull/25412) (rest: add `/deploymentinfo` endpoint by brunoerg)\n* [#21422](https://github.com/bitcoin/bitcoin/pull/21422) (Add feerate histogram to getmempoolinfo by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1200487616",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "ready_for_review",
      "id": 7101785297,
      "node_id": "RFRE_lADOABII585O4iDLzwAAAAGnTKTR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7101785297",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T13:55:45Z"
    },
    {
      "event": "commented",
      "id": 1203210096,
      "node_id": "IC_kwDOABII585Ht4dw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203210096",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T21:01:18Z",
      "updated_at": "2022-08-02T21:01:18Z",
      "author_association": "MEMBER",
      "body": "> Alternatively, you could also only register /rest/mempool/ and inspect the str_uri_part? I think this would allow for slightly more code reduction.\r\n\r\nNice, I had thought about it, but I think `str_uri_part` wouldn't get me the whole URI but only (in this case) the format, like: '.json'. Am I missing something?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203210096",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "commented",
      "id": 1203227318,
      "node_id": "IC_kwDOABII585Ht8q2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203227318",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T21:22:40Z",
      "updated_at": "2022-08-02T21:22:40Z",
      "author_association": "MEMBER",
      "body": "`http_request_cb` [passes](https://github.com/bitcoin/bitcoin/blob/de3c46c93818c6e4000175bcdbf7dd332f54768d/src/httpserver.cpp#L262) everything after the endpoint prefix to `str_uri_part`. If you register the endpoints with prefix `/rest/mempool/<info|content>`, then indeed only `.json` would get passed to `str_uri_part`. If however you just register `/rest/mempool/`, then everything after that i.e. `<info|content>.json` would get passed. (plug: #25754 is trying to clean up this interface)\r\n\r\nI don't think the current approach of registering both separately is unreasonable, so this is just a suggestion if you think that implementation makes sense - intuitively it would be my first approach.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203227318",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7114486528,
      "node_id": "HRFPE_lADOABII585O4iDLzwAAAAGoDnMA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7114486528",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:32:56Z"
    },
    {
      "event": "commented",
      "id": 1203351864,
      "node_id": "IC_kwDOABII585HubE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203351864",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:36:14Z",
      "updated_at": "2022-08-03T00:36:14Z",
      "author_association": "MEMBER",
      "body": "Nice, @stickies-v. Force-pushed addressing your suggestion.\r\n\r\nIt is clearer having only `/rest/mempool/`, and then check the `str_uri_part`.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203351864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "mentioned",
      "id": 7114495252,
      "node_id": "MEE_lADOABII585O4iDLzwAAAAGoDpUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7114495252",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:36:14Z"
    },
    {
      "event": "subscribed",
      "id": 7114495257,
      "node_id": "SE_lADOABII585O4iDLzwAAAAGoDpUZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7114495257",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:36:14Z"
    },
    {
      "event": "reviewed",
      "id": 1060092401,
      "node_id": "PRR_kwDOABII584_L7nx",
      "url": null,
      "actor": null,
      "commit_id": "001b45fc5e944176188c18986662f76ee40f25c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice! I've left a few more suggestions in comments, but I think that's pretty much it from me. \r\n\r\n<details>\r\n<summary>Couldn't make suggested code, so here's the diff instead:</summary>\r\n\r\n```diff\r\ndiff --git a/src/rest.cpp b/src/rest.cpp\r\nindex dd6fe8d8e..3f2ab98a8 100644\r\n--- a/src/rest.cpp\r\n+++ b/src/rest.cpp\r\n@@ -594,20 +594,23 @@ static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::s\r\n {\r\n     if (!CheckWarmup(req))\r\n         return false;\r\n-    const CTxMemPool* mempool = GetMemPool(context, req);\r\n-    if (!mempool) return false;\r\n+\r\n     std::string param;\r\n     const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\r\n+    if (param != \"contents\" && param != \"info\") {\r\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");\r\n+    }\r\n+\r\n+    const CTxMemPool* mempool = GetMemPool(context, req);\r\n+    if (!mempool) return false;\r\n \r\n     switch (rf) {\r\n     case RESTResponseFormat::JSON: {\r\n         std::string str_json;\r\n-        if (str_uri_part == \"contents.json\") {\r\n+        if (param == \"contents\") {\r\n             str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\r\n-        } else if (str_uri_part == \"info.json\") {\r\n-            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\r\n         } else {\r\n-            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format\");\r\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\r\n         }\r\n \r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n```\r\n</details>",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1060092401",
      "submitted_at": "2022-08-03T11:04:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7121333960,
      "node_id": "HRFPE_lADOABII585O4iDLzwAAAAGodu7I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7121333960",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T18:22:13Z"
    },
    {
      "event": "commented",
      "id": 1204322228,
      "node_id": "IC_kwDOABII585HyH-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1204322228",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T18:22:50Z",
      "updated_at": "2022-08-03T18:22:50Z",
      "author_association": "MEMBER",
      "body": "Thanks, @stickies-v for your review! Force-pushed addressing the latest suggestions.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1204322228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "mentioned",
      "id": 7121339602,
      "node_id": "MEE_lADOABII585O4iDLzwAAAAGodwTS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7121339602",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T18:22:50Z"
    },
    {
      "event": "subscribed",
      "id": 7121339611,
      "node_id": "SE_lADOABII585O4iDLzwAAAAGodwTb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7121339611",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T18:22:50Z"
    },
    {
      "event": "reviewed",
      "id": 1060823662,
      "node_id": "PRR_kwDOABII584_OuJu",
      "url": null,
      "actor": null,
      "commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK da0c612c3d69164da19332167c38bfcd1f9777a8 - nice work on removing all the duplicate code!\r\n\r\nJust 1 nit that I didn't see earlier, sorry.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1060823662",
      "submitted_at": "2022-08-03T18:47:53Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "reviewed",
      "id": 1063331655,
      "node_id": "PRR_kwDOABII584_YSdH",
      "url": null,
      "actor": null,
      "commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice deduplication! 👌 \r\n\r\nCode-review ACK da0c612c3d69164da19332167c38bfcd1f9777a8\r\n\r\nHappy to also re-ACK if you decide to take [stickies' nit about removing the 'Error' prefix](https://github.com/bitcoin/bitcoin/pull/25760/commits/da0c612c3d69164da19332167c38bfcd1f9777a8#r937008396).",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1063331655",
      "submitted_at": "2022-08-05T13:06:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjYmVhNjY1ODkxMDBmZTZlZjcyNmY0YjJhOTJlYzI2MTMyZWYxN2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "tree": {
        "sha": "43c49bda4e88cbaaaf62379feb034acd0f08ea10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43c49bda4e88cbaaaf62379feb034acd0f08ea10"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d89fc695a3aeb3e3dcadf371b7667572b38c836",
          "sha": "1d89fc695a3aeb3e3dcadf371b7667572b38c836",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d89fc695a3aeb3e3dcadf371b7667572b38c836"
        }
      ],
      "message": "rest: clean-up for `mempool` endpoints",
      "committer": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2022-08-05T13:28:11Z"
      },
      "author": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2022-07-19T12:57:19Z"
      },
      "sha": "acbea66589100fe6ef726f4b2a92ec26132ef17b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7135937653,
      "node_id": "HRFPE_lADOABII585O4iDLzwAAAAGpVcR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7135937653",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:28:31Z"
    },
    {
      "event": "commented",
      "id": 1206460839,
      "node_id": "IC_kwDOABII585H6SGn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206460839",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:29:26Z",
      "updated_at": "2022-08-05T13:29:26Z",
      "author_association": "MEMBER",
      "body": "Force-pushed removing the `Error:` prefix. Thanks, @stickies-v.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1206460839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25760"
    },
    {
      "event": "mentioned",
      "id": 7135943885,
      "node_id": "MEE_lADOABII585O4iDLzwAAAAGpVdzN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7135943885",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:29:26Z"
    },
    {
      "event": "subscribed",
      "id": 7135943891,
      "node_id": "SE_lADOABII585O4iDLzwAAAAGpVdzT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7135943891",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:29:26Z"
    },
    {
      "event": "reviewed",
      "id": 1063363253,
      "node_id": "PRR_kwDOABII584_YaK1",
      "url": null,
      "actor": null,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK acbea66589100fe6ef726f4b2a92ec26132ef17b - verified that just the error message was updated since https://github.com/bitcoin/bitcoin/commit/da0c612c3d69164da19332167c38bfcd1f9777a8",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1063363253",
      "submitted_at": "2022-08-05T13:30:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "reviewed",
      "id": 1063367236,
      "node_id": "PRR_kwDOABII584_YbJE",
      "url": null,
      "actor": null,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1063367236",
      "submitted_at": "2022-08-05T13:32:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "reviewed",
      "id": 1063388021,
      "node_id": "PRR_kwDOABII584_YgN1",
      "url": null,
      "actor": null,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#pullrequestreview-1063388021",
      "submitted_at": "2022-08-05T13:47:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
    },
    {
      "event": "merged",
      "id": 7136498316,
      "node_id": "ME_lADOABII585O4iDLzwAAAAGpXlKM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7136498316",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7d3817b29a2ad6a1ca5bae6c342472bc74e2a7fe",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d3817b29a2ad6a1ca5bae6c342472bc74e2a7fe",
      "created_at": "2022-08-05T14:45:50Z"
    },
    {
      "event": "closed",
      "id": 7136498346,
      "node_id": "CE_lADOABII585O4iDLzwAAAAGpXlKq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7136498346",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T14:45:51Z"
    },
    {
      "event": "referenced",
      "id": 7137474429,
      "node_id": "REFE_lADOABII585O4iDLzwAAAAGpbTd9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7137474429",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f18101343849d61c80004ef70b2539c1878488c1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/f18101343849d61c80004ef70b2539c1878488c1",
      "created_at": "2022-08-05T17:27:00Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936520429",
      "pull_request_review_id": 1060092401,
      "id": 936520429,
      "node_id": "PRRC_kwDOABII58430irt",
      "diff_hunk": "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "001b45fc5e944176188c18986662f76ee40f25c9",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd use `param` instead of `str_uri_part` directly because it already has the format string and any query parameters stripped from it, that makes it a bit more resilient.",
      "created_at": "2022-08-03T10:51:54Z",
      "updated_at": "2022-08-03T11:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936520429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936520429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": 605,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 607,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936523979",
      "pull_request_review_id": 1060092401,
      "id": 936523979,
      "node_id": "PRRC_kwDOABII58430jjL",
      "diff_hunk": "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        } else {\n+            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format\");\n+        }",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "001b45fc5e944176188c18986662f76ee40f25c9",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ideally this check is done earlier in the code, if an invalid path is provided we shouldn't even be getting the mempool etc first. It also makes bad calls more clear, if you e.g. call `GET /rest/mempool/doesntexist` you'd get \"output format not found (available: json)\" as response, whereas \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\" would be more helpful.",
      "created_at": "2022-08-03T10:56:16Z",
      "updated_at": "2022-08-03T11:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936523979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936523979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": 609,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936852664",
      "pull_request_review_id": 1060588558,
      "id": 936852664,
      "node_id": "PRRC_kwDOABII58431zy4",
      "diff_hunk": "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        } else {\n+            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format\");\n+        }",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "001b45fc5e944176188c18986662f76ee40f25c9",
      "in_reply_to_id": 936523979,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, I agree.",
      "created_at": "2022-08-03T16:07:45Z",
      "updated_at": "2022-08-03T16:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936852664",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936852664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": 609,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937000609",
      "pull_request_review_id": 1060812872,
      "id": 937000609,
      "node_id": "PRRC_kwDOABII58432X6h",
      "diff_hunk": "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "001b45fc5e944176188c18986662f76ee40f25c9",
      "in_reply_to_id": 936520429,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-03T18:20:40Z",
      "updated_at": "2022-08-03T18:20:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937000609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937000609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": 605,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 607,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937008396",
      "pull_request_review_id": 1060823662,
      "id": 937008396,
      "node_id": "PRRC_kwDOABII58432Z0M",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: We already have 3 other instances of this where we don't prefix with \"Error:\", so maybe best to keep it consistent.\r\n```suggestion\r\n        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\r\n```",
      "created_at": "2022-08-03T18:30:10Z",
      "updated_at": "2022-08-03T18:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937008396",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937008396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937035930",
      "pull_request_review_id": 1060861885,
      "id": 937035930,
      "node_id": "PRRC_kwDOABII58432gia",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "in_reply_to_id": 937008396,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Interesting, there are some places where \"Error:\" seems to be used. Gonna check it.\r\n\r\n\r\n\r\n",
      "created_at": "2022-08-03T19:04:03Z",
      "updated_at": "2022-08-03T19:04:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937035930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937035930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937037452",
      "pull_request_review_id": 1060864129,
      "id": 937037452,
      "node_id": "PRRC_kwDOABII58432g6M",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "in_reply_to_id": 937008396,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah there is, just not for the \"Invalid URI format\" ones. ",
      "created_at": "2022-08-03T19:06:05Z",
      "updated_at": "2022-08-03T19:06:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937037452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937037452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938808129",
      "pull_request_review_id": 1063353381,
      "id": 938808129,
      "node_id": "PRRC_kwDOABII58439RNB",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "in_reply_to_id": 937008396,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done! ",
      "created_at": "2022-08-05T13:23:05Z",
      "updated_at": "2022-08-05T13:23:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938808129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938808129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833287",
      "pull_request_review_id": 1063388021,
      "id": 938833287,
      "node_id": "PRRC_kwDOABII58439XWH",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\n     }\n-}\n \n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (param == \"contents\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        }",
      "path": "src/rest.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe reduce temporaries and reassignments here.\r\n\r\n```diff\r\n     case RESTResponseFormat::JSON: {\r\n-        std::string str_json;\r\n-        if (param == \"contents\") {\r\n-            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\r\n-        } else {\r\n-            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\r\n-        }\r\n-\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, str_json);\r\n+        req->WriteReply(HTTP_OK, (param == \"contents\" ? MempoolToJSON(*mempool, /*verbose=*/true) : MempoolInfoToJSON(*mempool)).write() + \"\\n\");\r\n         return true;\r\n```\r\n",
      "created_at": "2022-08-05T13:47:16Z",
      "updated_at": "2022-08-05T13:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938833287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 614,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938852332",
      "pull_request_review_id": 1063415730,
      "id": 938852332,
      "node_id": "PRRC_kwDOABII58439b_s",
      "diff_hunk": "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\n     }\n-}\n \n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (param == \"contents\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        }",
      "path": "src/rest.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_commit_id": "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "in_reply_to_id": 938833287,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It could make sense to avoid `std::string` copies in `WriteReply`, but maybe for a follow-up?\r\n\r\nedit: I guess that's not possible, as libevent only accepts a (read-only) span, not the memory directly",
      "created_at": "2022-08-05T14:06:50Z",
      "updated_at": "2022-08-05T15:36:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938852332",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938852332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 614,
      "original_line": 614,
      "side": "RIGHT"
    }
  ]
}