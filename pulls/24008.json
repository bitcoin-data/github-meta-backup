{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008",
    "id": 816599224,
    "node_id": "PR_kwDOABII584wrFC4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24008",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24008.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24008.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ac9adf012925c770dfe523c5b57451f313cc8be5",
    "number": 24008,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "assumeutxo: net_processing changes",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: #27596) \r\n\r\n---\r\n\r\nThis PR includes the changes necessary to perform network functionality with multiple chainstates in use. Various pieces of net_processing logic have to be modified in order to support block download that is simultaneous across numerous chainstates.\r\n\r\nChanges include\r\n\r\n- Modify FindNextBlocksToDownload() to parameterize the chainstate\r\n  being worked on.\r\n\r\n- Change GetNodeStateStats to take the max nCommonHeight per peer across\r\n  all chainstates.\r\n\r\n- Add CNodeState::chainstate_to_last_common_block\r\n  * we need this to allow handling for a single peer to distinguish\r\n    between separate chainstates we're simultaneously downloading blocks for\r\n\r\n- Share `requests_available` across chainstates when finding the next blocks\r\n  to download (during calls to FindNextBlocksToDownload()).\r\n\r\n---\r\n\r\nThis PR shares commit https://github.com/jamesob/bitcoin/commit/17906dd52543fb75d2c45de884799b35ec5721f4 with #24006, and is included here so that the two changes can be reviewed in parallel.\r\n\r\nThis PR excludes a small net_processing commit, https://github.com/jamesob/bitcoin/commit/3e6164d96f9a42ecbf34359f6fd1af5413346933, which will be proposed for merge after #24006 since it relies on the introduction of the `BackgroundBlockConnected()` validationinterface event that the indexing changes introduce.\r\n\r\n---\r\n\r\nSome commits here are best reviewed with `--ignore-space-change`.\r\n\r\nUnit-testing net_processing is notoriously difficult and with that in mind I haven't included any unittests here, but in parallel with review of these changes I will attempt to write some tests. Note that this behavior is covered in the functional tests included in the parent PR: https://github.com/jamesob/bitcoin/commit/c4949f2daf05289e76123b3c705277bf735a79d6",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2022-01-07T19:08:10Z",
    "updated_at": "2023-05-27T13:15:00Z",
    "closed_at": "2023-05-26T21:26:05Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "d8d34d16c1af74b83790748501be12d40c4338e6",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jamesob:2022-01-au-netprocessing",
      "ref": "2022-01-au-netprocessing",
      "sha": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fc06881f13495154c888a64a38c7d538baf00435",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 184,
    "deletions": 44,
    "changed_files": 3,
    "commits": 5,
    "review_comments": 120,
    "comments": 17
  },
  "events": [
    {
      "event": "labeled",
      "id": 5859523353,
      "node_id": "LE_lADOABII585BXKi4zwAAAAFdQTsZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5859523353",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-07T19:13:06Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 5859523358,
      "node_id": "LE_lADOABII585BXKi4zwAAAAFdQTse",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5859523358",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-07T19:13:06Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 1007716637,
      "node_id": "IC_kwDOABII5848EIkd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1007716637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-07T20:25:47Z",
      "updated_at": "2023-05-23T23:49:36Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [fjahr](https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1428107827) |\n| Concept ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1064991171), [ariard](https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1081310397), [mzumsande](https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1157367086) |\n| Approach ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-875201275) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1178353665) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27626](https://github.com/bitcoin/bitcoin/pull/27626) (Parallel compact block downloads, take 3 by instagibbs)\n* [#27596](https://github.com/bitcoin/bitcoin/pull/27596) (assumeutxo (2) by jamesob)\n* [#26762](https://github.com/bitcoin/bitcoin/pull/26762) (refactor: Make `CCheckQueue` RAII-styled by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1007716637",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "reviewed",
      "id": 869907044,
      "node_id": "PRR_kwDOABII584z2bpk",
      "url": null,
      "actor": null,
      "commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Checkpoint review feedback for the first two commits.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-869907044",
      "submitted_at": "2022-02-02T23:09:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 875201275,
      "node_id": "PRR_kwDOABII5840KoL7",
      "url": null,
      "actor": null,
      "commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK 0ef00576cc9a4aac27310b9fc29c534ad829aad9 the logic seems good AFAICS",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-875201275",
      "submitted_at": "2022-02-07T21:42:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 907044195,
      "node_id": "PRR_kwDOABII5842EGVj",
      "url": null,
      "actor": null,
      "commit_id": "0ef00576cc9a4aac27310b9fc29c534ad829aad9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-907044195",
      "submitted_at": "2022-03-11T10:36:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "commented",
      "id": 1064991171,
      "node_id": "IC_kwDOABII584_ennD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064991171",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T10:41:22Z",
      "updated_at": "2022-03-11T10:41:22Z",
      "author_association": "MEMBER",
      "body": "ACK modulo nits by me and jonatack",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1064991171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "reviewed",
      "id": 916299921,
      "node_id": "PRR_kwDOABII5842naCR",
      "url": null,
      "actor": null,
      "commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks good! Code review ACK c4d90167f030547373715a44fc020d0da8461565\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-916299921",
      "submitted_at": "2022-03-21T21:08:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 944575785,
      "node_id": "PRR_kwDOABII5844TRUp",
      "url": null,
      "actor": null,
      "commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK\r\n\r\nOnly did a light code review pass for now because there are already a lot of open comments to be addressed, I will come back when that is done.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-944575785",
      "submitted_at": "2022-04-18T17:18:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 6514078243,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGERPIj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6514078243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T10:53:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1112111998,
      "node_id": "IC_kwDOABII585CSXt-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112111998",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T11:53:23Z",
      "updated_at": "2022-04-28T11:53:23Z",
      "author_association": "MEMBER",
      "body": "Thanks for all the feedback so far; I'll get around to fixing this up in the next day or so after I get #24232 in order.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1112111998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6526743634,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGFBjRS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526743634",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T21:58:29Z"
    },
    {
      "event": "reviewed",
      "id": 958298033,
      "node_id": "PRR_kwDOABII5845Hnex",
      "url": null,
      "actor": null,
      "commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased, thanks for the feedback all.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-958298033",
      "submitted_at": "2022-04-29T21:58:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "unlabeled",
      "id": 6527011778,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGFCkvC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6527011778",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T22:29:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 958380230,
      "node_id": "PRR_kwDOABII5845H7jG",
      "url": null,
      "actor": null,
      "commit_id": "2c7595a6f727544ce87e7caa2ef10e05232358a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-958380230",
      "submitted_at": "2022-04-29T22:55:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 6527925127,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGFGDuH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6527925127",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T11:02:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6534265787,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGFePu7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6534265787",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T15:18:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6534338170,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGFehZ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6534338170",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T15:28:38Z"
    },
    {
      "event": "unlabeled",
      "id": 6534972353,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGFg8PB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6534972353",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T17:13:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6603554584,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGJmj8Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6603554584",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-13T07:39:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6617079117,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGKaJ1N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617079117",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:12:26Z"
    },
    {
      "event": "unlabeled",
      "id": 6617105661,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGKaQT9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617105661",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:15:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6708325351,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGP2Ovn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6708325351",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-31T10:21:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6728887316,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGREqwU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6728887316",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T14:28:19Z"
    },
    {
      "event": "unlabeled",
      "id": 6729865646,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGRIZmu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6729865646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T16:33:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6731522488,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGROuG4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6731522488",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T20:47:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 994264356,
      "node_id": "PRR_kwDOABII5847Q0Uk",
      "url": null,
      "actor": null,
      "commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-994264356",
      "submitted_at": "2022-06-02T23:20:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6764931475,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGTOKmT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6764931475",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-07T21:40:00Z"
    },
    {
      "event": "reviewed",
      "id": 998813279,
      "node_id": "PRR_kwDOABII5847iK5f",
      "url": null,
      "actor": null,
      "commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the review @ajtowns.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-998813279",
      "submitted_at": "2022-06-07T21:40:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "unlabeled",
      "id": 6765398384,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGTP8lw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6765398384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-07T23:36:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6770204463,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGTiR8v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6770204463",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-08T14:02:51Z"
    },
    {
      "event": "labeled",
      "id": 6930131911,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGdEWvH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6930131911",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T21:07:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7014138518,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAGiE0KW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7014138518",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T17:45:04Z"
    },
    {
      "event": "unlabeled",
      "id": 7014238057,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAGiFMdp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7014238057",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T17:59:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7018644926,
      "node_id": "LE_lADOABII585BXKi4zwAAAAGiWAW-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7018644926",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T08:38:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1081310397,
      "node_id": "PRR_kwDOABII585Ac3y9",
      "url": null,
      "actor": null,
      "commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nLeft few high-level comments, I still wonder about the approach itself, w.r.t to all the assumptions (some loosely documented) underpinning block-download that could be altered by those changes. There is also the question if multiple chainstates block download is robust against buggy or deliberately DoSy peers.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1081310397",
      "submitted_at": "2022-08-23T01:46:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1134795496,
      "node_id": "PRR_kwDOABII585Do5ro",
      "url": null,
      "actor": null,
      "commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1134795496",
      "submitted_at": "2022-10-07T16:23:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7571992700,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAHDU3B8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7571992700",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T13:38:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7572087628,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAHDVONM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7572087628",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T13:48:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7765594023,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAHO3Y-n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7765594023",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T18:20:03Z"
    },
    {
      "event": "commented",
      "id": 1307649381,
      "node_id": "IC_kwDOABII585N8SVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307649381",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T18:21:36Z",
      "updated_at": "2022-11-08T18:21:36Z",
      "author_association": "MEMBER",
      "body": "Rebased here and I _think_ all feedback has been addressed.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1307649381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "unlabeled",
      "id": 7765644793,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAHO3lX5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7765644793",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T18:27:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1173511441,
      "node_id": "PRR_kwDOABII585F8l0R",
      "url": null,
      "actor": null,
      "commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1173511441",
      "submitted_at": "2022-11-09T08:00:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1157367086,
      "node_id": "PRR_kwDOABII585E_AUu",
      "url": null,
      "actor": null,
      "commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThe changes look good to me - I wonder if there is a way to make sure that there aren't more things in net_processing that would need to be adapted. I guess we'd have to wait for functional tests with that?\r\n\r\nAlso, as far as I understand it, AssumeUTXO will mess up the order of the blocks stored on disk - the first blockfiles would have the blocks between the AssumeUTXO block and the tip, and the subsequent blockfiles would have the blocks between Genesis and the AssumeUTXO block. I wonder if that could break or slow down something, have you tried a `reindex` for example?\r\n\r\n\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1157367086",
      "submitted_at": "2022-11-09T23:00:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1178353665,
      "node_id": "PRR_kwDOABII585GPEAB",
      "url": null,
      "actor": null,
      "commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light code review ACK 645418e8b4d76a0c640590024452b4342802286e. All the changes in this PR are very straightforward and clean thanks to the nice work in preceding PRs. I just want to get more familiar with surrounding net_processing code before adding full ACK.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1178353665",
      "submitted_at": "2022-11-14T02:38:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1179743982,
      "node_id": "PRR_kwDOABII585GUXbu",
      "url": null,
      "actor": null,
      "commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1179743982",
      "submitted_at": "2022-11-14T19:59:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1180724106,
      "node_id": "PRR_kwDOABII585GYGuK",
      "url": null,
      "actor": null,
      "commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1180724106",
      "submitted_at": "2022-11-15T11:48:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 7959809502,
      "node_id": "LE_lADOABII585BXKi4zwAAAAHacQ3e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7959809502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-05T22:51:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7979286549,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAHbmkAV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7979286549",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T15:50:41Z"
    },
    {
      "event": "unlabeled",
      "id": 7980102734,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAHbprRO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7980102734",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T17:12:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8012381472,
      "node_id": "LE_lADOABII585BXKi4zwAAAAHdkz0g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8012381472",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-12T10:02:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8038023268,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAHfGoBk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8038023268",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T14:47:04Z"
    },
    {
      "event": "unlabeled",
      "id": 8039094771,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAHfKtnz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8039094771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T16:31:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 8067559349,
      "node_id": "REFE_lADOABII585BXKi4zwAAAAHg3S-1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8067559349",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "65f5cfda656c150dd0df40369845c53fa387b25f",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/65f5cfda656c150dd0df40369845c53fa387b25f",
      "created_at": "2022-12-19T09:34:47Z"
    },
    {
      "event": "reviewed",
      "id": 1311957223,
      "node_id": "PRR_kwDOABII585OMuDn",
      "url": null,
      "actor": null,
      "commit_id": "88a7b840147952f9ec4fbd2e6a73632e355281e0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed the first two commits.\r\n\r\nThey brought up a question in me: what happens if during snapshot validation we find a fork with more PoW that does not contain the assumed UTXO block? Do we finish the background validation and then reorg away, do we abort it, or is this unhandled?\r\n\r\nThe second commit is also not really `net_processing`, but the PR already has a Validation tag, so hopefully that's clear to everyone.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1311957223",
      "submitted_at": "2023-02-23T19:47:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 8691800253,
      "node_id": "LE_lADOABII585BXKi4zwAAAAIGEli9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691800253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T00:33:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8700929629,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAIGnaZd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8700929629",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T21:40:53Z"
    },
    {
      "event": "unlabeled",
      "id": 8700930448,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAIGnamQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8700930448",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T21:41:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1462344633,
      "node_id": "IC_kwDOABII585XKZu5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462344633",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T16:15:51Z",
      "updated_at": "2023-03-09T16:15:51Z",
      "author_association": "MEMBER",
      "body": "> Also, as far as I understand it, AssumeUTXO will mess up the order of the blocks stored on disk - the first blockfiles would have the blocks between the AssumeUTXO block and the tip, and the subsequent blockfiles would have the blocks between Genesis and the AssumeUTXO block. I wonder if that could break or slow down something, have you tried a reindex for example?\r\n\r\nThis is certainly worth addressing. My inclination is to say that given there are only 6925 separate block files on my mainnet node at time of writing, I wouldn't expect a significant slowdown to intermingle block storage locality. But that said this should certainly be benchmarked. Over the next week I'll do an IBD with assumeutxo, and then compare reindexing it to reindexing a \"traditionally\" IBD'd datadir.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1462344633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "reviewed",
      "id": 1334725192,
      "node_id": "PRR_kwDOABII585PjkpI",
      "url": null,
      "actor": null,
      "commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "(two nits, feel free to ignore)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1334725192",
      "submitted_at": "2023-03-10T12:10:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1336057822,
      "node_id": "PRR_kwDOABII585Pop_e",
      "url": null,
      "actor": null,
      "commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light code review ACK 07ab98ecc64a39b377e20dcdd571a750ab62fd97\r\n\r\nWill do another pass after the open comments are addressed.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1336057822",
      "submitted_at": "2023-03-12T17:52:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "review_requested",
      "id": 8726040025,
      "node_id": "RRE_lADOABII585BXKi4zwAAAAIIHM3Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8726040025",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-12T17:52:19Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1509171387,
      "node_id": "IC_kwDOABII585Z9CC7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1509171387",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T20:03:39Z",
      "updated_at": "2023-04-14T20:06:05Z",
      "author_association": "MEMBER",
      "body": "> Approach ACK [0ef0057](https://github.com/bitcoin/bitcoin/commit/0ef00576cc9a4aac27310b9fc29c534ad829aad9) the logic seems good AFAICS\r\n\r\nWill re-review after my last review 14 months age.\r\n\r\nFinishing the 2 remaining PRs in the parent https://github.com/bitcoin/bitcoin/pull/15606 after v25 branch-off, to target early in the v26 release cycle might be a reasonable goal?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1509171387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9048423955,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAIbU_4T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048423955",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T16:04:07Z"
    },
    {
      "event": "reviewed",
      "id": 1392348713,
      "node_id": "PRR_kwDOABII585S_Y4p",
      "url": null,
      "actor": null,
      "commit_id": "b39fa3e1fe32b84d81527d441fb16690fec93fb9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks to all the dedicated reviewers and my apologies for the delay. Lot of good feedback addressed.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1392348713",
      "submitted_at": "2023-04-19T16:05:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 9049003851,
      "node_id": "LE_lADOABII585BXKi4zwAAAAIbXNdL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9049003851",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T17:07:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9049330062,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAIbYdGO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9049330062",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T17:47:05Z"
    },
    {
      "event": "unlabeled",
      "id": 9049964131,
      "node_id": "UNLE_lADOABII585BXKi4zwAAAAIba35j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9049964131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T19:02:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1535354925,
      "node_id": "IC_kwDOABII585bg6gt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535354925",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-04T20:14:53Z",
      "updated_at": "2023-05-04T20:14:53Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar did you have Current Thoughts about this approach? Trying to bridge IRC discussions to the blocking PR",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1535354925",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9171226262,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIipc6W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9171226262",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-04T20:14:53Z"
    },
    {
      "event": "subscribed",
      "id": 9171226276,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIipc6k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9171226276",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-04T20:14:53Z"
    },
    {
      "event": "commented",
      "id": 1539999879,
      "node_id": "IC_kwDOABII585byoiH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1539999879",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T11:30:52Z",
      "updated_at": "2023-05-09T11:30:52Z",
      "author_association": "MEMBER",
      "body": "The first commit tends to confuses me, so I'll just note a clarification here. I'm not fully convinced that blocks near the tip can't end up getting processed by the background chainstate. And if they do, I'm not sure if that's bad.\r\n\r\nWhen a block comes in near the tip, we know the header so `LookupBlockIndex` will return a `pblock`. This header is _not_ contained in `m_chain`, because headers are only added to `m_chain` by `ConnectTip()`. So a potential tip block is sent to the snapshot chainstate.\r\n\r\n`m_chain` grows sequentially as the tip moves from the snapshot height onwards. Therefore is we only receive each block once, you would expect `!m_snapshot_chainstate->m_chain.Contains(pblock)` to be `true` for candidate tip blocks, and `false` for blocks from before the snapshot.\r\n\r\nBut blocks can be received multiple times (and out of order, but that doesn't seem to be a problem). Each time a block is received it triggers `ProcessNewBlock()`. Can this never be called with a block _in `m_chain`_ that is between the snapshot and the tip? What if we receive a block that we saw before and already added to `m_chain`?\r\n\r\nnet_processing calls `chainman.ProcessNewBlock` from `ProcessBlock()`, which is called two different sites: when receiving a compact block, a `BLOCKTXN` message and when receiving a `BLOCK` message. I don't think these call sites check that we already processed this block.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1539999879",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "reviewed",
      "id": 1418382365,
      "node_id": "PRR_kwDOABII585Uiswd",
      "url": null,
      "actor": null,
      "commit_id": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1418382365",
      "submitted_at": "2023-05-09T11:34:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1418514150,
      "node_id": "PRR_kwDOABII585UjM7m",
      "url": null,
      "actor": null,
      "commit_id": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023 is missing a comment for the use of `ActiveChainstate` in `ProcessGetBlockData` and after receiving a `GETBLOCKS` message.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1418514150",
      "submitted_at": "2023-05-09T12:51:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "commented",
      "id": 1540089055,
      "node_id": "IC_kwDOABII585by-Tf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540089055",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T13:05:17Z",
      "updated_at": "2023-05-09T13:05:17Z",
      "author_association": "MEMBER",
      "body": "> @sdaftuar did you have Current Thoughts about this approach? Trying to bridge IRC discussions to the blocking PR\r\n\r\nI was trying to come up with my own proof-of-concept to demonstrate an alternate approach before commenting, but just to get everyone up to speed on what I'm thinking:\r\n\r\n* The first commit \"validation: introduce ChainstateManager::GetChainstateForNewBlock\" seems like something we don't conceptually need. I think the underlying issue is that `AcceptBlock` should be chainstate-agnostic -- the decision to store a block on disk isn't fundamentally based on a chain tip or the utxos we have. (The reason it comes into play in the current logic is as a heuristic for anti-DoS checks.) I have a branch that refactors `AcceptBlock` and some related code into `ChainstateManager` to show what I mean.  https://github.com/bitcoin/bitcoin/compare/master...sdaftuar:bitcoin:2023-04-blockstorage\r\n* I think we can avoid parametrizing data in `net_processing` by chainstate, and thus avoid storing chainstate-pointers or making the existing download logic more complex by having it support two different download strategies at the same time. My thought is that a lot of the complexity in `FindNextBlocksToDownload` comes from being able to download blocks towards any tip that our peer has which has more work than our own. However, in the background sync case, we are only interested in download blocks towards the snapshot base block hash.  So all we need to know is whether our peer's tip contains the base block hash, and if it does, we just walk from our background chainstate tip towards that base block and look for blocks that we haven't requested yet.\r\n\r\nI don't have a branch to share yet that implements that second bullet, but I'm hoping to get to it soon.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1540089055",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9200442116,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIkY5sE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9200442116",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T13:05:17Z"
    },
    {
      "event": "subscribed",
      "id": 9200442139,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIkY5sb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9200442139",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T13:05:17Z"
    },
    {
      "event": "reviewed",
      "id": 1418631351,
      "node_id": "PRR_kwDOABII585Ujpi3",
      "url": null,
      "actor": null,
      "commit_id": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Other than my remarks I'm happy with c7cdc7ca833ce1b5ce9a696fb4ef633c55528023.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1418631351",
      "submitted_at": "2023-05-09T14:09:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxNGFlMTMyYzVhNTIwNGE5YTc1NWM4NGM2ZGUwNWZiMzA0NTkyMjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c14ae132c5a5204a9a755c84c6de05fb30459221",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c14ae132c5a5204a9a755c84c6de05fb30459221",
      "tree": {
        "sha": "80083833da234a5be412c298b1f36533e0416857",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80083833da234a5be412c298b1f36533e0416857"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc06881f13495154c888a64a38c7d538baf00435",
          "sha": "fc06881f13495154c888a64a38c7d538baf00435",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fc06881f13495154c888a64a38c7d538baf00435"
        }
      ],
      "message": "validation: introduce ChainstateManager::GetChainstateForNewBlock\n\nand use it in ProcessNewBlock().\n\nThis is needed for an upcoming change to `net_processing`.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-09T19:08:12Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T19:58:45Z"
      },
      "sha": "c14ae132c5a5204a9a755c84c6de05fb30459221"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRlZmRkYWUwOTBmNmFmNTFlODMzMTY1ZTk1MmZiODBkMDAwZTRlOTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/defddae090f6af51e833165e952fb80d000e4e97",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/defddae090f6af51e833165e952fb80d000e4e97",
      "tree": {
        "sha": "faeb9092941cc8b93bc5b20645f7827db7dbdec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faeb9092941cc8b93bc5b20645f7827db7dbdec7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c14ae132c5a5204a9a755c84c6de05fb30459221",
          "sha": "c14ae132c5a5204a9a755c84c6de05fb30459221",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c14ae132c5a5204a9a755c84c6de05fb30459221"
        }
      ],
      "message": "doc: add docstring for CanDirectFetch()\n\nUnrelated to assumeutxo changes, but while I was in the\nneighborhood...",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-09T19:08:14Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-01-07T17:31:19Z"
      },
      "sha": "defddae090f6af51e833165e952fb80d000e4e97"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1OGZlY2RjN2QyYzk5YWY5YWU2YWVkYzY4YzM2MDAzMjFlN2M1NjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "tree": {
        "sha": "0c9b840c07147953581b52ad0b830fda9ff60e99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c9b840c07147953581b52ad0b830fda9ff60e99"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/defddae090f6af51e833165e952fb80d000e4e97",
          "sha": "defddae090f6af51e833165e952fb80d000e4e97",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/defddae090f6af51e833165e952fb80d000e4e97"
        }
      ],
      "message": "net_processing: work with multiple chainstates\n\nMost easily reviewed with `--ignore-space-change`\n\n- Modify FindNextBlocksToDownload() to parameterize the chainstate\n  being worked on.\n\n- Change GetNodeStateStats to take the max nCommonHeight per peer across\n  all chainstates.\n\n- Add CNodeState::chainstate_to_last_common_block\n  * we need this to allow handling for a single peer to distinguish\n    between separate chainstates we're simultaneously downloading blocks for\n\n- Share `requests_available` across chainstates when finding the next blocks\n  to download (call to `FindNextBlocksToDownload()`).",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-09T19:08:14Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-01-07T17:32:06Z"
      },
      "sha": "058fecdc7d2c99af9ae6aedc68c3600321e7c565"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2YTZmZTdmNDJmZWEwZGJjOTlkNDRhMmMwMTE2MjA2MmEwYzhhNTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46a6fe7f42fea0dbc99d44a2c01162062a0c8a57",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46a6fe7f42fea0dbc99d44a2c01162062a0c8a57",
      "tree": {
        "sha": "bdb1032f222f463bf51502d628b6d874d0fda7e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdb1032f222f463bf51502d628b6d874d0fda7e4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058fecdc7d2c99af9ae6aedc68c3600321e7c565",
          "sha": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/058fecdc7d2c99af9ae6aedc68c3600321e7c565"
        }
      ],
      "message": "p2p: don't advertise until we finish all IBDs\n\nUntil we have completed IBD on all chainstates, don't answer getheaders\nrequests from our peers or advertise ourselves. This preserves the\nexisting behavior of not performing these actions until IBD of the\nwhole chain completes.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-09T19:08:14Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-11T18:24:29Z"
      },
      "sha": "46a6fe7f42fea0dbc99d44a2c01162062a0c8a57"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjOWFkZjAxMjkyNWM3NzBkZmU1MjNjNWI1NzQ1MWYzMTNjYzhiZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac9adf012925c770dfe523c5b57451f313cc8be5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac9adf012925c770dfe523c5b57451f313cc8be5",
      "tree": {
        "sha": "d02b75562e46892d47c1892f9ce089ab01b8f604",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d02b75562e46892d47c1892f9ce089ab01b8f604"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46a6fe7f42fea0dbc99d44a2c01162062a0c8a57",
          "sha": "46a6fe7f42fea0dbc99d44a2c01162062a0c8a57",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/46a6fe7f42fea0dbc99d44a2c01162062a0c8a57"
        }
      ],
      "message": "net_processing: add commentary describing IsIBD use\n\nFor all remaining usages of IsInitialBlockDownload() where\nthe status of any background validation chainstate that might\nbe in use isn't relevant.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-09T19:08:14Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-29T21:42:51Z"
      },
      "sha": "ac9adf012925c770dfe523c5b57451f313cc8be5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9204278435,
      "node_id": "HRFPE_lADOABII585BXKi4zwAAAAIkniSj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9204278435",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T19:20:13Z"
    },
    {
      "event": "reviewed",
      "id": 1419307024,
      "node_id": "PRR_kwDOABII585UmOgQ",
      "url": null,
      "actor": null,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've udpated this PR to remove the new `ChainstateManager::GetAllForBlockDownload()`, instead adding a parameter `assumed_first` to the existing `GetAll()`. I think this is clearer at the net_processing call site and avoids another unnecessary method.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1419307024",
      "submitted_at": "2023-05-09T19:21:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1419316384,
      "node_id": "PRR_kwDOABII585UmQyg",
      "url": null,
      "actor": null,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've updated this PR to remove the new `ChainstateManager::GetAllForBlockDownload()`, instead adding a parameter `assumed_first` to the existing `GetAll()`. I think this is clearer at the net_processing call site and avoids another unnecessary method.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1419316384",
      "submitted_at": "2023-05-09T19:22:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "commented",
      "id": 1540768765,
      "node_id": "IC_kwDOABII585b1kP9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540768765",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T19:24:51Z",
      "updated_at": "2023-05-09T19:24:51Z",
      "author_association": "MEMBER",
      "body": "> Also, as far as I understand it, AssumeUTXO will mess up the order of the blocks stored on disk - the first blockfiles would have the blocks between the AssumeUTXO block and the tip, and the subsequent blockfiles would have the blocks between Genesis and the AssumeUTXO block. I wonder if that could break or slow down something, have you tried a reindex for example?\r\n\r\nIt's worth noting that there's a proposed remedy for this in #27596 - see https://github.com/bitcoin/bitcoin/pull/27596/commits/b29f39ecd9affdfa90e273c6e6422b5c2c04cd01. cc @mzumsande",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1540768765",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9204311016,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIknqPo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9204311016",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T19:24:51Z"
    },
    {
      "event": "subscribed",
      "id": 9204311034,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIknqP6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9204311034",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T19:24:51Z"
    },
    {
      "event": "reviewed",
      "id": 1428107827,
      "node_id": "PRR_kwDOABII585VHzIz",
      "url": null,
      "actor": null,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK ac9adf012925c770dfe523c5b57451f313cc8be5\r\n\r\nThis is alright, I am just not loving the new `assumed_first` parameter to be honest. But curious to hear what you say @jamesob . If you change it, I promise to re-review it swiftly.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1428107827",
      "submitted_at": "2023-05-16T12:59:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "commented",
      "id": 1549933311,
      "node_id": "IC_kwDOABII585cYhr_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549933311",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T15:51:05Z",
      "updated_at": "2023-05-16T15:51:05Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review! I'm done with nits on this one, and assumeutxo in general.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1549933311",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "reviewed",
      "id": 1429052571,
      "node_id": "PRR_kwDOABII585VLZyb",
      "url": null,
      "actor": null,
      "commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1429052571",
      "submitted_at": "2023-05-16T17:27:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1429084243,
      "node_id": "PRR_kwDOABII585VLhhT",
      "url": null,
      "actor": null,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Happy with the improvements in ac9adf012925c770dfe523c5b57451f313cc8be5.\r\n\r\nI wrote:\r\n\r\n> The first commit tends to confuses me\r\n\r\nCould use some thoughts on that comment (from anyone really).\r\n\r\n@sdaftuar wrote:\r\n\r\n> The first commit \"validation: introduce `ChainstateManager::GetChainstateForNewBlock\"` seems like something we don't conceptually need.\r\n\r\nI'm pretty close to wrapping my head around it, so would be OK with merging it once I do _and then_ refactor it. Avoiding the complexity in the first place sounds nice too, though someone else may need to take over the rebase baton from @jamesob in that case.\r\n\r\n> Also, as far as I understand it, AssumeUTXO will mess up the order of the blocks stored on disk\r\n\r\nI'm fine dealing with that in later PRs.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1429084243",
      "submitted_at": "2023-05-16T17:35:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "commented",
      "id": 1550427767,
      "node_id": "IC_kwDOABII585caaZ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550427767",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:16:30Z",
      "updated_at": "2023-05-16T22:16:30Z",
      "author_association": "MEMBER",
      "body": "> I wrote:\r\n> \r\n> > The first commit tends to confuses me\r\n> \r\n> Could use some thoughts on that comment (from anyone really).\r\n\r\n@Sjors I found it hard to follow that message, to be honest :D Could you maybe try to formulate more clearly what is bothering you in particular and what questions you need to be answered? It might help if you reference the specific phases you are thinking of based on `doc/design/assumeutxo.md`. I think this is the most confusing part when discussing this.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1550427767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9262898201,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIoHJwZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262898201",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:16:30Z"
    },
    {
      "event": "subscribed",
      "id": 9262898210,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIoHJwi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262898210",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:16:30Z"
    },
    {
      "event": "commented",
      "id": 1550948362,
      "node_id": "IC_kwDOABII585ccZgK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550948362",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T08:09:20Z",
      "updated_at": "2023-05-17T08:09:20Z",
      "author_association": "MEMBER",
      "body": "I guess a simpler way to phrase it is: what can go wrong if c14ae132c5a5204a9a755c84c6de05fb30459221 picks the incorrect chainstate for a block? What are all the different ways in which we can receive a block? What do we expect to happen in each of these cases? Tests would be a really nice way to illustrate that, but are apparently a pain to write for net_processing. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1550948362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "commented",
      "id": 1551540184,
      "node_id": "IC_kwDOABII585cep_Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551540184",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T14:47:33Z",
      "updated_at": "2023-05-17T14:48:20Z",
      "author_association": "MEMBER",
      "body": "> I guess a simpler way to phrase it is: what can go wrong if [c14ae13](https://github.com/bitcoin/bitcoin/commit/c14ae132c5a5204a9a755c84c6de05fb30459221) picks the incorrect chainstate for a block? What are all the different ways in which we can receive a block? What do we expect to happen in each of these cases? Tests would be a really nice way to illustrate that, but are apparently a pain to write for net_processing.\r\n\r\n@Sjors I have tried to create an overview of the different cases and added my understanding of what is happening, I hope this helps move the discussion along and clear up the confusion. Let me know if it helps or if I missed the point. Rather than copying it in here, it's probably better to keep it in the gist, so it can be updated and referenced easier and GitHub doesn't swallow it like the other comments. And I have thrown this together rather quickly so it's probably more likely that I have made a mistake in the overview rather than that the code is wrong if something seems weird :)\r\n\r\nHere it is: https://gist.github.com/fjahr/4b90adf2c24b39b84d5e6f4822f6a14f\r\n\r\nSo let’s sink some ships… \\*insert boating accident joke\\*\r\n\r\nThe one thing that did not realize before is that syncing the ibd chain seems to work rather inefficiently unless I am missing something. From my understanding now (see A2, A3, A4) it seems that blocks would need to be received a second time in order to be included in ibd because they are first included in snapshot? I guess the naive way to fix this would be to look at the snapshot height and decide based on that which chainstate to use. But putting even more logic like this into net_processing seems wrong and makes me agree more with @sdaftuar that this may be better handled differently instead.\r\n\r\nScattered thoughts that are probably ok but might be considered for cleanup later: \r\n- What are the implications of the snapshot being \"inactive\" while loading per `doc/design/assumeutxo.md` (Row 2)? There isn't really a status like `m_disabled` for that. So I guess it's is just theoretically inactive but it can already be used. Maybe note that in `assumeutxo.md`.\r\n- Still hitting the disabled chain also seems kind of wasteful but it’s probably not a big deal and shouldn’t happen too often in normal operation (Row 5).\r\n- We do potentially save many blocks twice if we receive them multiple times. I don’t think this is a strong attack vector, but in the extreme case a node could have the full chain on disk twice, so use 2x the storage until it is restarted.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1551540184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9270434947,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIoj5yD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9270434947",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T14:47:34Z"
    },
    {
      "event": "subscribed",
      "id": 9270434959,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIoj5yP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9270434959",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T14:47:34Z"
    },
    {
      "event": "mentioned",
      "id": 9270434984,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAIoj5yo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9270434984",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T14:47:34Z"
    },
    {
      "event": "subscribed",
      "id": 9270434999,
      "node_id": "SE_lADOABII585BXKi4zwAAAAIoj5y3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9270434999",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T14:47:34Z"
    },
    {
      "event": "reviewed",
      "id": 1436750098,
      "node_id": "PRR_kwDOABII585VoxES",
      "url": null,
      "actor": null,
      "commit_id": "c14ae132c5a5204a9a755c84c6de05fb30459221",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1436750098",
      "submitted_at": "2023-05-22T14:19:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "reviewed",
      "id": 1436854309,
      "node_id": "PRR_kwDOABII585VpKgl",
      "url": null,
      "actor": null,
      "commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#pullrequestreview-1436854309",
      "submitted_at": "2023-05-22T15:09:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
    },
    {
      "event": "labeled",
      "id": 9326094939,
      "node_id": "LE_lADOABII585BXKi4zwAAAAIr4Opb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9326094939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T10:41:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1560882231,
      "node_id": "IC_kwDOABII585dCSw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1560882231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T10:41:03Z",
      "updated_at": "2023-05-24T10:41:03Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1560882231",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "commented",
      "id": 1564974163,
      "node_id": "IC_kwDOABII585dR5xT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564974163",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T21:26:05Z",
      "updated_at": "2023-05-26T21:26:05Z",
      "author_association": "MEMBER",
      "body": "Closing in lieu of some simpler changes that @sdaftuar has written, currently integrated in #27596.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1564974163",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "closed",
      "id": 9354781845,
      "node_id": "CE_lADOABII585BXKi4zwAAAAItlqSV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354781845",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T21:26:05Z"
    },
    {
      "event": "mentioned",
      "id": 9354781868,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAItlqSs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354781868",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T21:26:05Z"
    },
    {
      "event": "subscribed",
      "id": 9354781872,
      "node_id": "SE_lADOABII585BXKi4zwAAAAItlqSw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354781872",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T21:26:06Z"
    },
    {
      "event": "commented",
      "id": 1565416944,
      "node_id": "IC_kwDOABII585dTl3w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1565416944",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T13:14:59Z",
      "updated_at": "2023-05-27T13:14:59Z",
      "author_association": "MEMBER",
      "body": "@fjahr thanks for the write up! It's on my reading list. Will also look at @sdaftuar's PR.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#issuecomment-1565416944",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24008"
    },
    {
      "event": "mentioned",
      "id": 9357290912,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAItvO2g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9357290912",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T13:15:00Z"
    },
    {
      "event": "subscribed",
      "id": 9357290918,
      "node_id": "SE_lADOABII585BXKi4zwAAAAItvO2m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9357290918",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T13:15:00Z"
    },
    {
      "event": "mentioned",
      "id": 9357290923,
      "node_id": "MEE_lADOABII585BXKi4zwAAAAItvO2r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9357290923",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T13:15:00Z"
    },
    {
      "event": "subscribed",
      "id": 9357290928,
      "node_id": "SE_lADOABII585BXKi4zwAAAAItvO2w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9357290928",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T13:15:00Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797103646",
      "pull_request_review_id": 869907044,
      "id": 797103646,
      "node_id": "PRRC_kwDOABII584vgtYe",
      "diff_hunk": "@@ -822,6 +822,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "17906dd5\r\n```suggestion\r\n    // Returns nullptr if no snapshot has been loaded.\r\n```",
      "created_at": "2022-02-01T22:38:20Z",
      "updated_at": "2022-02-02T23:09:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r797103646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797103646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 825,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797105983",
      "pull_request_review_id": 869907044,
      "id": 797105983,
      "node_id": "PRRC_kwDOABII584vgt8_",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "17906dd5 suggestions\r\n\r\n- add `AssertLockHeld(::cs_main);`\r\n- use PascalCase for the function name in new code\r\n- use const with braced initialization\r\n\r\n<details><summary>suggested diff</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex d81ee4fa03..5c9bf34aad 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -5091,16 +5091,18 @@ void ChainstateManager::MaybeRebalanceCaches()\r\n     }\r\n }\r\n \r\n-CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\r\n+CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n-    auto blockhash_op = SnapshotBlockhash();\r\n+    const auto blockhash_op{SnapshotBlockhash()};\r\n     if (!blockhash_op) return nullptr;\r\n     return m_blockman.LookupBlockIndex(*blockhash_op);\r\n }\r\n \r\n-std::optional<int> ChainstateManager::getSnapshotHeight()\r\n+std::optional<int> ChainstateManager::GetSnapshotHeight()\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n-    CBlockIndex* base = getSnapshotBaseBlock();\r\n+    const CBlockIndex* base{GetSnapshotBaseBlock()};\r\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\r\n }\r\n \r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex ddeddbcecc..5bc249c27c 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -842,8 +842,8 @@ private:\r\n     friend CChainState;\r\n \r\n     // Returns nullptr if no snapshot ahs been loaded.\r\n-    CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n-    std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    std::optional<int> GetSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n public:\r\n     std::thread m_load_block;\r\n```\r\n</p></details>\r\n",
      "created_at": "2022-02-01T22:40:59Z",
      "updated_at": "2022-02-02T23:18:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r797105983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797105983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797166061",
      "pull_request_review_id": 869907044,
      "id": 797166061,
      "node_id": "PRRC_kwDOABII584vg8nt",
      "diff_hunk": "@@ -4921,6 +4951,21 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+CChainState& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    auto* pblock = m_blockman.LookupBlockIndex(blockhash);\n+    if (m_snapshot_chainstate &&\n+            // If pblock is null, we haven't seen the header for this block.\n+            // Because we expect to have received the headers for the IBD chain\n+            // contents before receiving blocks, this means that any block for\n+            // which we don't have headers should go in the snapshot chain.\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\n+        return *m_snapshot_chainstate.get();\n+    }",
      "path": "src/validation.cpp",
      "position": 74,
      "original_position": 80,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "75912c5 suggestions\r\n\r\n- add missing `AssertLockHeld(::cs_main);`\r\n- place comment outside of conditional\r\n- const with braced init\r\n\r\n<details><summary>suggested diff</summary><p>\r\n\r\n```diff\r\n\r\n CChainState& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n-    auto* pblock = m_blockman.LookupBlockIndex(blockhash);\r\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\r\n     if (m_snapshot_chainstate &&\r\n-            // If pblock is null, we haven't seen the header for this block.\r\n-            // Because we expect to have received the headers for the IBD chain\r\n-            // contents before receiving blocks, this means that any block for\r\n-            // which we don't have headers should go in the snapshot chain.\r\n-            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\r\n+        (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\r\n+        // If pblock is null, we haven't seen the header for this block.\r\n+        // Because we expect to have received the headers for the IBD chain\r\n+        // contents before receiving blocks, this means that any block for\r\n+        // which we don't have headers should go in the snapshot chain.\r\n         return *m_snapshot_chainstate.get();\r\n```\r\n</p></details>\r\n",
      "created_at": "2022-02-02T00:00:32Z",
      "updated_at": "2022-02-02T23:09:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r797166061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797166061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5572,
      "original_line": 5572,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797169841",
      "pull_request_review_id": 869907044,
      "id": 797169841,
      "node_id": "PRRC_kwDOABII584vg9ix",
      "diff_hunk": "@@ -3603,6 +3603,12 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n {\n     AssertLockNotHeld(cs_main);\n \n+    CChainState* chainstate;\n+    {\n+        LOCK(cs_main);\n+        chainstate = &this->GetChainstateForNewBlock(block->GetHash());\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "75912c552e43e0bb43e42349164d0aa279927013 suggestions\r\n- `::cs_main` preferred over `cs_main` to clarify it is a global\r\n-  `chainstate` can use braced init and an inlined `WITH_LOCK` macro\r\n\r\n<details><summary>diff</summary><p>\r\n\r\n```diff\r\n     AssertLockNotHeld(cs_main);\r\n-\r\n-    CChainState* chainstate;\r\n-    {\r\n-        LOCK(cs_main);\r\n-        chainstate = &this->GetChainstateForNewBlock(block->GetHash());\r\n-    }\r\n+    CChainState* chainstate{\r\n+        WITH_LOCK(::cs_main, return &this->GetChainstateForNewBlock(block->GetHash()))};\r\n```\r\n</p></details>\r\n",
      "created_at": "2022-02-02T00:06:20Z",
      "updated_at": "2022-02-02T23:11:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r797169841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797169841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801024687",
      "pull_request_review_id": 875201275,
      "id": 801024687,
      "node_id": "PRRC_kwDOABII584vvqqv",
      "diff_hunk": "@@ -3620,18 +3626,21 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         bool ret = CheckBlock(*block, state, chainparams.GetConsensus());\n         if (ret) {\n             // Store to disk\n-            ret = ActiveChainstate().AcceptBlock(block, state, &pindex, force_processing, nullptr, new_block);\n+            ret = chainstate->AcceptBlock(\n+                block, state, &pindex, force_processing, nullptr, new_block);\n         }\n         if (!ret) {\n             GetMainSignals().BlockChecked(*block, state);\n             return error(\"%s: AcceptBlock FAILED (%s)\", __func__, state.ToString());\n         }\n     }\n \n-    NotifyHeaderTip(ActiveChainstate());\n+    if (WITH_LOCK(::cs_main, return chainstate == &this->ActiveChainstate())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "75912c552e43e0bb43e42349164d0aa279927013 is the lock needed for `chainstate`? `ChainstateManager::ActiveChainstate()` already locks `cs_main`\r\n\r\n```suggestion\r\n    if (chainstate == &this->ActiveChainstate()) {\r\n```",
      "created_at": "2022-02-07T20:18:35Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801024687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801024687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3638,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801030242",
      "pull_request_review_id": 875201275,
      "id": 801030242,
      "node_id": "PRRC_kwDOABII584vvsBi",
      "diff_hunk": "@@ -4596,6 +4605,27 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8cafc54 thread safety run-time assertion needed here\r\n```diff\r\n std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n     std::vector<CChainState*> out;\r\n```\r\n",
      "created_at": "2022-02-07T20:26:31Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801030242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801030242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4986,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801031354",
      "pull_request_review_id": 875201275,
      "id": 801031354,
      "node_id": "PRRC_kwDOABII584vvsS6",
      "diff_hunk": "@@ -4596,6 +4605,27 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    std::vector<CChainState*> out;\n+\n+    bool snapshot_in_ibd =\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8cafc54 style nit\r\n```diff\r\n-    bool snapshot_in_ibd =\r\n-        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload();\r\n+    const bool snapshot_in_ibd{\r\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\r\n```\r\n",
      "created_at": "2022-02-07T20:28:02Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801031354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801031354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801056945",
      "pull_request_review_id": 875201275,
      "id": 801056945,
      "node_id": "PRRC_kwDOABII584vvyix",
      "diff_hunk": "@@ -538,7 +538,12 @@ class PeerManagerImpl final : public PeerManager\n     /** Update pindexLastCommonBlock and add not-in-flight missing successors to vBlocks, until it has",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0ef00576\r\n```diff\r\n-    /** Update pindexLastCommonBlock and add not-in-flight missing successors to vBlocks, until it has\r\n-     *  at most count entries.\r\n+    /** Update `chainstate_to_last_common_block` and add not-in-flight missing\r\n+     *  successors to `vBlocks`, until it has at most `count` entries.\r\n```\r\n",
      "created_at": "2022-02-07T21:04:47Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801056945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801056945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 538,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801058811",
      "pull_request_review_id": 875201275,
      "id": 801058811,
      "node_id": "PRRC_kwDOABII584vvy_7",
      "diff_hunk": "@@ -1014,32 +1039,45 @@ void PeerManagerImpl::FindNextBlocksToDownload(NodeId nodeid, unsigned int count\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n+    const CChain& our_chain = chainstate->m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == nullptr) {\n+    if (!state->chainstate_to_last_common_block.count(chainstate)) {\n         // Bootstrap quickly by guessing a parent of our best tip is the forking point.\n         // Guessing wrong in either direction is not a problem.\n-        state->pindexLastCommonBlock = m_chainman.ActiveChain()[std::min(state->pindexBestKnownBlock->nHeight, m_chainman.ActiveChain().Height())];\n+        //\n+        // Namespace this by chainstate so that we can simultaneously sync two\n+        // separate chainstates at different heights.\n+        state->chainstate_to_last_common_block[chainstate] = our_chain[",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0ef00576 not sure, but maybe safer on first use in this function to raise instead of failing silently/UB\r\n```suggestion\r\n        state->chainstate_to_last_common_block.at(chainstate) = our_chain[\r\n```",
      "created_at": "2022-02-07T21:07:34Z",
      "updated_at": "2022-02-07T21:43:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801058811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801058811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801068809",
      "pull_request_review_id": 875201275,
      "id": 801068809,
      "node_id": "PRRC_kwDOABII584vv1cJ",
      "diff_hunk": "@@ -4975,21 +5026,37 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (!pto->fClient && ((fFetch && !pto->m_limited_node) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*pto);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        int requests_available = MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight;\n+\n+        // Service the snapshot chainstate first - more important to get to the\n+        // network's tip quickly than do the background validation on the\n+        // snapshot.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 238,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0ef00576cc9a4aac27310b9fc29c534ad829aad9 suggestions\r\n\r\n```diff\r\n-        // during IBD, but once it hits a tip capacity will trickle into subsequent\r\n-        // chainstates.\r\n-        int requests_available = MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight;\r\n+        // during IBD, but once it hits a tip, capacity will trickle into\r\n+        // subsequent chainstates.\r\n+        int requests_available{MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight};\r\n \r\n-        // Service the snapshot chainstate first - more important to get to the\r\n-        // network's tip quickly than do the background validation on the\r\n-        // snapshot.\r\n+        // GetAllForBlockDownload() services the snapshot chainstate first.\r\n+        // It is more important to get to the network's tip quickly than do the\r\n+        // background validation on the snapshot.\r\n```\r\n",
      "created_at": "2022-02-07T21:22:16Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801068809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801068809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5037,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801072282",
      "pull_request_review_id": 875201275,
      "id": 801072282,
      "node_id": "PRRC_kwDOABII584vv2Sa",
      "diff_hunk": "@@ -3184,7 +3234,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         LOCK(cs_main);\n-        if (m_chainman.ActiveChainstate().IsInitialBlockDownload() && !pfrom.HasPermission(NetPermissionFlags::Download)) {\n+        if (m_chainman.IsAnyChainInIBD() && !pfrom.HasPermission(NetPermissionFlags::Download)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 194,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c4d90167 see #24178 that changes this logic",
      "created_at": "2022-02-07T21:27:14Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801072282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801072282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801075886",
      "pull_request_review_id": 875201275,
      "id": 801075886,
      "node_id": "PRRC_kwDOABII584vv3Ku",
      "diff_hunk": "@@ -2660,6 +2707,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         // Self advertisement & GETADDR logic\n         if (!pfrom.IsInboundConn() && SetupAddressRelay(pfrom, *peer)) {\n+            bool is_ibd;\n+            WITH_LOCK(::cs_main, is_ibd = m_chainman.IsAnyChainInIBD());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 175,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c4d90167 can simplify here\r\n```diff\r\n-            bool is_ibd;\r\n-            WITH_LOCK(::cs_main, is_ibd = m_chainman.IsAnyChainInIBD());\r\n+            const bool is_ibd{WITH_LOCK(::cs_main, return m_chainman.IsAnyChainInIBD())};\r\n```\r\n",
      "created_at": "2022-02-07T21:32:14Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801075886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801075886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801077582",
      "pull_request_review_id": 875201275,
      "id": 801077582,
      "node_id": "PRRC_kwDOABII584vv3lO",
      "diff_hunk": "@@ -4412,9 +4462,10 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, Peer& peer, std::chrono::micros\n     if (!peer.m_addr_relay_enabled) return;\n \n     LOCK(peer.m_addr_send_times_mutex);\n+    bool is_ibd = WITH_LOCK(::cs_main, return m_chainman.IsAnyChainInIBD());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c4d90167f030547373715a44fc020d0da8461565\r\n```suggestion\r\n    const bool is_ibd{WITH_LOCK(::cs_main, return m_chainman.IsAnyChainInIBD())};\r\n```",
      "created_at": "2022-02-07T21:34:48Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801077582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801077582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4465,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801081962",
      "pull_request_review_id": 875201275,
      "id": 801081962,
      "node_id": "PRRC_kwDOABII584vv4pq",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+CChainState& ChainstateManager::getChainstateForIndexing()\n+{\n+    return getSnapshotBaseBlock() ? *m_ibd_chainstate : *m_active_chainstate;\n+}\n+\n+bool ChainstateManager::hasBgChainstateInUse()\n+{\n+    return this->SnapshotBlockhash() && !m_snapshot_validated;\n+}\n+\n+bool ChainstateManager::IsAnyChainInIBD()\n+{\n+    return",
      "path": "src/validation.cpp",
      "position": 89,
      "original_position": 118,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0ef00576cc9a4aac27310b9fc29c534ad829aad9 \r\n\r\n```diff\r\n CChainState& ChainstateManager::getChainstateForIndexing()\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n     return getSnapshotBaseBlock() ? *m_ibd_chainstate : *m_active_chainstate;\r\n }\r\n \r\n@@ -5117,6 +5119,7 @@ bool ChainstateManager::hasBgChainstateInUse()\r\n \r\n bool ChainstateManager::IsAnyChainInIBD()\r\n {\r\n+    AssertLockHeld(::cs_main);\r\n     return\r\n```\r\n\r\nNaming style: PascalCase for `getChainstateForIndexing()` and `getSnapshotHeight()`?",
      "created_at": "2022-02-07T21:41:24Z",
      "updated_at": "2022-02-07T21:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r801081962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801081962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5843,
      "original_line": 5843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805085789",
      "pull_request_review_id": 880788546,
      "id": 805085789,
      "node_id": "PRRC_kwDOABII584v_KJd",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> use PascalCase for the function name in new code\r\n\r\n@ryanofsky has pioneered using `thisCovention` for method names (in order to distinguish methods from functions without using `this`) and so I've been using that here.",
      "created_at": "2022-02-12T00:29:28Z",
      "updated_at": "2022-02-12T00:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r805085789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805085789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824590539",
      "pull_request_review_id": 907044195,
      "id": 824590539,
      "node_id": "PRRC_kwDOABII584xJkDL",
      "diff_hunk": "@@ -4980,21 +5022,37 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (!pto->fClient && ((fFetch && !pto->m_limited_node) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*pto);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        int requests_available = MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 181,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "0ef00576cc9a4aac27310b9fc29c534ad829aad9",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it takes some effort to see it can't overflow, but perhaps we should make it uint and make according changes?",
      "created_at": "2022-03-11T10:36:33Z",
      "updated_at": "2022-03-11T10:36:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r824590539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824590539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831501460",
      "pull_request_review_id": 916299921,
      "id": 831501460,
      "node_id": "PRRC_kwDOABII584xj7SU",
      "diff_hunk": "@@ -822,6 +822,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.\n+    CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "17906dd52543fb75d2c45de884799b35ec5721f4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add ChainstateManager.getSnapshot{Height,BaseBlock}()\" (17906dd52543fb75d2c45de884799b35ec5721f4)\r\n\r\nCan methods be const?",
      "created_at": "2022-03-21T20:09:30Z",
      "updated_at": "2022-03-21T21:08:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r831501460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831501460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 826,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831511847",
      "pull_request_review_id": 916299921,
      "id": 831511847,
      "node_id": "PRRC_kwDOABII584xj90n",
      "diff_hunk": "@@ -4921,6 +4930,21 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+CChainState& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{",
      "path": "src/validation.cpp",
      "position": 57,
      "original_position": 43,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "75912c552e43e0bb43e42349164d0aa279927013",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: introduce ChainstateManager::GetChainstateForNewBlock\" (75912c552e43e0bb43e42349164d0aa279927013)\r\n\r\nNote: In my own words I'd describe the logic as: Always prefer to add blocks to the newer snapshot chainstate, not the older background chainstate, but add blocks to the background chainstate if they're already in in the snapshot chainstate.",
      "created_at": "2022-03-21T20:23:43Z",
      "updated_at": "2022-03-21T21:08:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r831511847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831511847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5555,
      "original_line": 5555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831533853",
      "pull_request_review_id": 916299921,
      "id": 831533853,
      "node_id": "PRRC_kwDOABII584xkDMd",
      "diff_hunk": "@@ -987,6 +987,23 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns true if any chainstate in use is in initial block download.\n+    bool IsAnyChainInIBD() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns the chainstate that indexers should consult when ensuring that an\n+    //!   index is synced with a chain where we can expect block index entries to have\n+    //!   BLOCK_HAVE_DATA beneath the tip.\n+    //!\n+    //!   In other words, give us the chainstate for which we can reasonably expect\n+    //!   that all blocks beneath the tip have been indexed. In practice this means\n+    //!   when using an assumed-valid chainstate based upon a snapshot, return only the\n+    //!   fully validated chain.\n+    CChainState& getChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns true if we have more than one chainstate in use. This means that a\n+    //! background validation chainstate is running.\n+    bool hasBgChainstateInUse();",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"p2p: don't advertise until we finish all IBDs\" (c4d90167f030547373715a44fc020d0da8461565)\r\n\r\nMaybe wait to add these until they are actually used and tested",
      "created_at": "2022-03-21T20:53:48Z",
      "updated_at": "2022-03-21T21:08:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r831533853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831533853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 993,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831542382",
      "pull_request_review_id": 916299921,
      "id": 831542382,
      "node_id": "PRRC_kwDOABII584xkFRu",
      "diff_hunk": "@@ -3231,7 +3234,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         LOCK(cs_main);\n-        if (m_chainman.ActiveChainstate().IsInitialBlockDownload() && !pfrom.HasPermission(NetPermissionFlags::Download)) {\n+        if (m_chainman.IsAnyChainInIBD() && !pfrom.HasPermission(NetPermissionFlags::Download)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"p2p: don't advertise until we finish all IBDs\" (c4d90167f030547373715a44fc020d0da8461565)\r\n\r\nThere are a few other `ActiveChainstate().IsInitialBlockDownload()` calls in this file that aren't replaced by `m_chainman.IsAnyChainInIBD()` calls. Will these need to be changed later to avoid changing network behavior when an assumeutxo snapshot is loaded? If not, maybe it is worth going through the calls in this PR and adding comments that could shed more light on why message processing is affected by IBD status, or why it only depends on active IBD status not full IBD status.",
      "created_at": "2022-03-21T21:05:33Z",
      "updated_at": "2022-03-21T21:08:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r831542382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831542382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847983627",
      "pull_request_review_id": 938917428,
      "id": 847983627,
      "node_id": "PRRC_kwDOABII584yizQL",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There isn't a function with the name `GetSnapshotHeight` or `GetSnapshotBaseBlock` -- why would you need to distinguish the method from a function that doesn't exist? I really dislike the \"let's randomly introduce new and different code style conventions\" approach, especially when combined with \"let's patch the entire codebase to update to the latest style conventions\".\r\n\r\nThe developers-notes say \"Class names, function names, and method names are UpperCamelCase\r\n(PascalCase). Do not prefix class names with `C`.\"",
      "created_at": "2022-04-12T05:29:10Z",
      "updated_at": "2022-04-12T05:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r847983627",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847983627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848008098",
      "pull_request_review_id": 938949931,
      "id": 848008098,
      "node_id": "PRRC_kwDOABII584yi5Oi",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> There isn't a function with the name `GetSnapshotHeight` or `GetSnapshotBaseBlock` -- why would you need to distinguish the method from a function that doesn't exist?\r\n\r\nThe reason I like calling non-static member variables `m_var` instead of `var` is not to distinguish them from other variables called `var`, but to make it obvious that they are members, and make code easier to read and understand. Similarly the reason I like calling non-static member functions `fun()` instead of `Fun()` is not to distinguish from other functions call `Fun()`, but to make it obvious that they are members, so code is clearer and easier to understand. It is nice to know, when you are calling a function, if that function will have access to `*this`.\r\n\r\nI just wanted to respond to your question though, not defend or debate anything. This could easily be a garbage coding convention and I am stupid for liking it.",
      "created_at": "2022-04-12T06:10:42Z",
      "updated_at": "2022-04-12T06:10:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848008098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848008098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848018690",
      "pull_request_review_id": 938966769,
      "id": 848018690,
      "node_id": "PRRC_kwDOABII584yi70C",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's a completely fine convention, it's just not the one this codebase has adopted. And if we keep changing conventions we'll never get the benefit of any of them.",
      "created_at": "2022-04-12T06:27:41Z",
      "updated_at": "2022-04-12T06:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848018690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848018690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848490431",
      "pull_request_review_id": 939626155,
      "id": 848490431,
      "node_id": "PRRC_kwDOABII584yku-_",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it's just not the one this codebase has adopted\r\n\r\n@ajtowns I encourage you to take a look at the entire `src/interfaces` and `src/node` subtrees. Pretty much all of the multiprocess code (and increasingly some validation code) has been using this convention for years.",
      "created_at": "2022-04-12T14:14:58Z",
      "updated_at": "2022-04-12T14:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848490431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848490431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848515694",
      "pull_request_review_id": 939662822,
      "id": 848515694,
      "node_id": "PRRC_kwDOABII584yk1Ju",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If there's agreement on this style, it would be helpful and save developer time to update the developer notes.",
      "created_at": "2022-04-12T14:36:53Z",
      "updated_at": "2022-04-12T14:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848515694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848515694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848582465",
      "pull_request_review_id": 939758507,
      "id": 848582465,
      "node_id": "PRRC_kwDOABII584ylFdB",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jonatack agree, but previous attempts have been rejected and locked (?): https://github.com/bitcoin/bitcoin/pull/14635#issuecomment-492796314",
      "created_at": "2022-04-12T15:36:08Z",
      "updated_at": "2022-04-12T15:36:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848582465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848582465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848695416",
      "pull_request_review_id": 939919431,
      "id": 848695416,
      "node_id": "PRRC_kwDOABII584ylhB4",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I look through the existing codebase, and model my new code on that rather than the developer notes, I'll be using hungarian notation, just as satoshi intended. Suggesting an alternative convention is fine, but if it gets rejected, you don't just keep on using it anyway.",
      "created_at": "2022-04-12T17:38:21Z",
      "updated_at": "2022-04-12T17:38:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r848695416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848695416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852237486",
      "pull_request_review_id": 944575785,
      "id": 852237486,
      "node_id": "PRRC_kwDOABII584yzByu",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For the sake of progress here it seems like it would be better to change these methods back to the Uppercase for now and keep that discussion seperate in #24846.",
      "created_at": "2022-04-18T16:26:32Z",
      "updated_at": "2022-04-18T17:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r852237486",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852237486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852240540",
      "pull_request_review_id": 944575785,
      "id": 852240540,
      "node_id": "PRRC_kwDOABII584yzCic",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Did you consider making the interface of the two methods consistent and `getSnapshotBaseBlock` return an optional as well?",
      "created_at": "2022-04-18T16:31:19Z",
      "updated_at": "2022-04-18T17:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r852240540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852240540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852263118",
      "pull_request_review_id": 944575785,
      "id": 852263118,
      "node_id": "PRRC_kwDOABII584yzIDO",
      "diff_hunk": "@@ -987,6 +987,23 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns true if any chainstate in use is in initial block download.\n+    bool IsAnyChainInIBD() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns the chainstate that indexers should consult when ensuring that an\n+    //!   index is synced with a chain where we can expect block index entries to have\n+    //!   BLOCK_HAVE_DATA beneath the tip.\n+    //!\n+    //!   In other words, give us the chainstate for which we can reasonably expect\n+    //!   that all blocks beneath the tip have been indexed. In practice this means\n+    //!   when using an assumed-valid chainstate based upon a snapshot, return only the\n+    //!   fully validated chain.\n+    CChainState& getChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns true if we have more than one chainstate in use. This means that a\n+    //! background validation chainstate is running.\n+    bool hasBgChainstateInUse();",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 831533853,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1",
      "created_at": "2022-04-18T17:06:42Z",
      "updated_at": "2022-04-18T17:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r852263118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852263118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 993,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862185596",
      "pull_request_review_id": 958298033,
      "id": 862185596,
      "node_id": "PRRC_kwDOABII584zY-h8",
      "diff_hunk": "@@ -3231,7 +3234,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         LOCK(cs_main);\n-        if (m_chainman.ActiveChainstate().IsInitialBlockDownload() && !pfrom.HasPermission(NetPermissionFlags::Download)) {\n+        if (m_chainman.IsAnyChainInIBD() && !pfrom.HasPermission(NetPermissionFlags::Download)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 831542382,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point; I've added some commentary to the other uses of IsInitialBlockDownload().",
      "created_at": "2022-04-29T21:42:27Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862185596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862185596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862188708",
      "pull_request_review_id": 958298033,
      "id": 862188708,
      "node_id": "PRRC_kwDOABII584zY_Sk",
      "diff_hunk": "@@ -822,6 +822,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.\n+    CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "17906dd52543fb75d2c45de884799b35ec5721f4",
      "in_reply_to_id": 831501460,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-04-29T21:48:28Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862188708",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862188708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 826,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862191203",
      "pull_request_review_id": 958298033,
      "id": 862191203,
      "node_id": "PRRC_kwDOABII584zY_5j",
      "diff_hunk": "@@ -4984,3 +5029,33 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797105983,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Relented on all counts here.",
      "created_at": "2022-04-29T21:51:31Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862191203",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862191203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862191338",
      "pull_request_review_id": 958298033,
      "id": 862191338,
      "node_id": "PRRC_kwDOABII584zY_7q",
      "diff_hunk": "@@ -3603,6 +3603,12 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n {\n     AssertLockNotHeld(cs_main);\n \n+    CChainState* chainstate;\n+    {\n+        LOCK(cs_main);\n+        chainstate = &this->GetChainstateForNewBlock(block->GetHash());\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797169841,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T21:51:45Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862191338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862191338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862193503",
      "pull_request_review_id": 958298033,
      "id": 862193503,
      "node_id": "PRRC_kwDOABII584zZAdf",
      "diff_hunk": "@@ -4921,6 +4951,21 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+CChainState& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    auto* pblock = m_blockman.LookupBlockIndex(blockhash);\n+    if (m_snapshot_chainstate &&\n+            // If pblock is null, we haven't seen the header for this block.\n+            // Because we expect to have received the headers for the IBD chain\n+            // contents before receiving blocks, this means that any block for\n+            // which we don't have headers should go in the snapshot chain.\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\n+        return *m_snapshot_chainstate.get();\n+    }",
      "path": "src/validation.cpp",
      "position": 74,
      "original_position": 80,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 797166061,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T21:55:13Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862193503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862193503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5572,
      "original_line": 5572,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862193784",
      "pull_request_review_id": 958298033,
      "id": 862193784,
      "node_id": "PRRC_kwDOABII584zZAh4",
      "diff_hunk": "@@ -3620,18 +3626,21 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         bool ret = CheckBlock(*block, state, chainparams.GetConsensus());\n         if (ret) {\n             // Store to disk\n-            ret = ActiveChainstate().AcceptBlock(block, state, &pindex, force_processing, nullptr, new_block);\n+            ret = chainstate->AcceptBlock(\n+                block, state, &pindex, force_processing, nullptr, new_block);\n         }\n         if (!ret) {\n             GetMainSignals().BlockChecked(*block, state);\n             return error(\"%s: AcceptBlock FAILED (%s)\", __func__, state.ToString());\n         }\n     }\n \n-    NotifyHeaderTip(ActiveChainstate());\n+    if (WITH_LOCK(::cs_main, return chainstate == &this->ActiveChainstate())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 801024687,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T21:55:35Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862193784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862193784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3638,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862195583",
      "pull_request_review_id": 958298033,
      "id": 862195583,
      "node_id": "PRRC_kwDOABII584zZA9_",
      "diff_hunk": "@@ -4596,6 +4605,27 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    std::vector<CChainState*> out;\n+\n+    bool snapshot_in_ibd =\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 801031354,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T21:58:10Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862195583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862195583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862195631",
      "pull_request_review_id": 958298033,
      "id": 862195631,
      "node_id": "PRRC_kwDOABII584zZA-v",
      "diff_hunk": "@@ -4596,6 +4605,27 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 801030242,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T21:58:16Z",
      "updated_at": "2022-04-29T21:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862195631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862195631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4986,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862196865",
      "pull_request_review_id": 958313747,
      "id": 862196865,
      "node_id": "PRRC_kwDOABII584zZBSB",
      "diff_hunk": "@@ -987,6 +987,23 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns true if any chainstate in use is in initial block download.\n+    bool IsAnyChainInIBD() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns the chainstate that indexers should consult when ensuring that an\n+    //!   index is synced with a chain where we can expect block index entries to have\n+    //!   BLOCK_HAVE_DATA beneath the tip.\n+    //!\n+    //!   In other words, give us the chainstate for which we can reasonably expect\n+    //!   that all blocks beneath the tip have been indexed. In practice this means\n+    //!   when using an assumed-valid chainstate based upon a snapshot, return only the\n+    //!   fully validated chain.\n+    CChainState& getChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! @returns true if we have more than one chainstate in use. This means that a\n+    //! background validation chainstate is running.\n+    bool hasBgChainstateInUse();",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 831533853,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, not sure what happened here. Too many assumeutxo commits getting shuffled around.",
      "created_at": "2022-04-29T22:00:19Z",
      "updated_at": "2022-04-29T22:00:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862196865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862196865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 993,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862248090",
      "pull_request_review_id": 958380230,
      "id": 862248090,
      "node_id": "PRRC_kwDOABII584zZNya",
      "diff_hunk": "@@ -5218,3 +5261,35 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return {};\n+    const CBlockIndex* found = m_blockman.LookupBlockIndex(*blockhash_op);\n+\n+    if (found) {\n+        return *found;\n+    }\n+    return {};\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n+{\n+    AssertLockHeld(::cs_main);\n+    auto base{this->GetSnapshotBaseBlock()};\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+CChainState& ChainstateManager::getChainstateForIndexing()\n+{\n+    return getSnapshotBaseBlock() ? *m_ibd_chainstate : *m_active_chainstate;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "2c7595a6f727544ce87e7caa2ef10e05232358a7",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missed an uppercase here it seems.",
      "created_at": "2022-04-29T22:55:04Z",
      "updated_at": "2022-04-29T22:55:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r862248090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862248090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863006004",
      "pull_request_review_id": 959297850,
      "id": 863006004,
      "node_id": "PRRC_kwDOABII584zcG00",
      "diff_hunk": "@@ -5218,3 +5261,35 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return {};\n+    const CBlockIndex* found = m_blockman.LookupBlockIndex(*blockhash_op);\n+\n+    if (found) {\n+        return *found;\n+    }\n+    return {};\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n+{\n+    AssertLockHeld(::cs_main);\n+    auto base{this->GetSnapshotBaseBlock()};\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+CChainState& ChainstateManager::getChainstateForIndexing()\n+{\n+    return getSnapshotBaseBlock() ? *m_ibd_chainstate : *m_active_chainstate;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "2c7595a6f727544ce87e7caa2ef10e05232358a7",
      "in_reply_to_id": 862248090,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, thanks.",
      "created_at": "2022-05-02T16:45:07Z",
      "updated_at": "2022-05-02T16:45:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r863006004",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863006004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888466699",
      "pull_request_review_id": 994264356,
      "id": 888466699,
      "node_id": "PRRC_kwDOABII58409O0L",
      "diff_hunk": "@@ -5225,3 +5268,30 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This makes a copy of the CBlockIndex rather than returning a pointer to the existing one?",
      "created_at": "2022-06-02T22:44:41Z",
      "updated_at": "2022-06-02T23:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r888466699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888466699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888474234",
      "pull_request_review_id": 994264356,
      "id": 888474234,
      "node_id": "PRRC_kwDOABII58409Qp6",
      "diff_hunk": "@@ -380,8 +380,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "56cae81ed7fe59170a4413444d509e1a3c7b132d",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Having a one or two element map for every peer seems a bit icky.\r\n\r\nIs this even necessary though? If you have a common snapshot block, then your common IBD block will be whatever your IBD tip is, no? And if you do have a snapshot block, but don't have a common snapshot block with this peer, don't you want to disconnect?\r\n\r\nI guess I'm suggesting replacing this by a `CBlockIndex*` to trace the last common block, and a `bool is_last_common_block_from_snapshot`?",
      "created_at": "2022-06-02T23:00:58Z",
      "updated_at": "2022-06-02T23:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r888474234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888474234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888476401",
      "pull_request_review_id": 994264356,
      "id": 888476401,
      "node_id": "PRRC_kwDOABII58409RLx",
      "diff_hunk": "@@ -1014,32 +1039,45 @@ void PeerManagerImpl::FindNextBlocksToDownload(NodeId nodeid, unsigned int count\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n+    const CChain& our_chain = chainstate->m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == nullptr) {\n+    if (!state->chainstate_to_last_common_block.count(chainstate)) {\n         // Bootstrap quickly by guessing a parent of our best tip is the forking point.\n         // Guessing wrong in either direction is not a problem.\n-        state->pindexLastCommonBlock = m_chainman.ActiveChain()[std::min(state->pindexBestKnownBlock->nHeight, m_chainman.ActiveChain().Height())];\n+        //\n+        // Namespace this by chainstate so that we can simultaneously sync two\n+        // separate chainstates at different heights.\n+        state->chainstate_to_last_common_block[chainstate] = our_chain[",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 801058811,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`x[k]` for a map [isn't undefined behaviour](https://en.cppreference.com/w/cpp/container/map/operator_at), it creates the entry (setting it to nullptr here), then the `=` replaces it. `insert_or_assign(chainstate, our_chain[blah])` would arguably be better I guess.",
      "created_at": "2022-06-02T23:06:14Z",
      "updated_at": "2022-06-02T23:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r888476401",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888476401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888478773",
      "pull_request_review_id": 994264356,
      "id": 888478773,
      "node_id": "PRRC_kwDOABII58409Rw1",
      "diff_hunk": "@@ -5288,3 +5288,10 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n     auto base{this->GetSnapshotBaseBlock()};\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+bool ChainstateManager::IsAnyChainInIBD()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f61f80a043cb0e9fb336ee2098f10302742aa2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems weird not to take the lock in the function, rather than have every caller invoke it as `WITH_LOCK(cs_main, ...)`",
      "created_at": "2022-06-02T23:12:18Z",
      "updated_at": "2022-06-02T23:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r888478773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888478773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888480307",
      "pull_request_review_id": 994264356,
      "id": 888480307,
      "node_id": "PRRC_kwDOABII58409SIz",
      "diff_hunk": "@@ -1038,6 +1038,9 @@ class ChainstateManager\n     /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n     std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev) const;\n \n+    //! Returns true if any chainstate in use is in initial block download.\n+    bool IsAnyChainInIBD() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f61f80a043cb0e9fb336ee2098f10302742aa2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not entirely clear to me that this (\"Until we have completed IBD on all chainstates, don't answer getheaders requests from our peers or advertise ourselves.\") is a good idea? If you've caught up on the snapshot chain, is the fact that you got there via assumeutxo any worse than getting there via assumevalid? No objection to keeping it purely for \"first, do no harm\" reasons, but if we're already confident there's no harm possible, better to have more nodes sharing headers etc, than less.",
      "created_at": "2022-06-02T23:16:22Z",
      "updated_at": "2022-06-02T23:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r888480307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888480307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891686321",
      "pull_request_review_id": 998813279,
      "id": 891686321,
      "node_id": "PRRC_kwDOABII5841Jg2x",
      "diff_hunk": "@@ -380,8 +380,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "56cae81ed7fe59170a4413444d509e1a3c7b132d",
      "in_reply_to_id": 888474234,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Having a one or two element map for every peer seems a bit icky.\r\n\r\nHow come? Aren't the number of peers (in the hundreds at the most, by default ~10?) going to make the memory consumption of this data structure negligible?\r\n\r\n> I guess I'm suggesting replacing this by a CBlockIndex* to trace the last common block, and a bool is_last_common_block_from_snapshot?\r\n\r\nThe consensus has been that we want as few parts of the system as possible knowing about \"snapshots\" per se. The current approach also has the advantage that if we were ever to further parallelize validation with more than one background validation chainstate, we could keep this structure. \r\n\r\nI think this suggestion also makes end usage of this data more complicated, because we have to articulate the logic you spell out above within usages. I don't think the memory parsimony justifies the added complexity.",
      "created_at": "2022-06-07T20:35:19Z",
      "updated_at": "2022-06-07T21:40:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891686321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891686321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891688836",
      "pull_request_review_id": 998813279,
      "id": 891688836,
      "node_id": "PRRC_kwDOABII5841JheE",
      "diff_hunk": "@@ -1014,32 +1039,45 @@ void PeerManagerImpl::FindNextBlocksToDownload(NodeId nodeid, unsigned int count\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n+    const CChain& our_chain = chainstate->m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == nullptr) {\n+    if (!state->chainstate_to_last_common_block.count(chainstate)) {\n         // Bootstrap quickly by guessing a parent of our best tip is the forking point.\n         // Guessing wrong in either direction is not a problem.\n-        state->pindexLastCommonBlock = m_chainman.ActiveChain()[std::min(state->pindexBestKnownBlock->nHeight, m_chainman.ActiveChain().Height())];\n+        //\n+        // Namespace this by chainstate so that we can simultaneously sync two\n+        // separate chainstates at different heights.\n+        state->chainstate_to_last_common_block[chainstate] = our_chain[",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c4d90167f030547373715a44fc020d0da8461565",
      "in_reply_to_id": 801058811,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree that this isn't UB; not going to address unless there is an observable benefit.",
      "created_at": "2022-06-07T20:38:36Z",
      "updated_at": "2022-06-07T21:40:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891688836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891688836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891689931",
      "pull_request_review_id": 998813279,
      "id": 891689931,
      "node_id": "PRRC_kwDOABII5841JhvL",
      "diff_hunk": "@@ -5225,3 +5268,30 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "in_reply_to_id": 888466699,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Copy here doesn't seem like a big deal; smallish data structures and this function is (and always will be) called pretty sparingly. Plus, copy means we don't have to worry about the lifetime of the underlying CBlockIndex reference.",
      "created_at": "2022-06-07T20:40:04Z",
      "updated_at": "2022-06-07T21:40:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891689931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891689931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891690511",
      "pull_request_review_id": 998813279,
      "id": 891690511,
      "node_id": "PRRC_kwDOABII5841Jh4P",
      "diff_hunk": "@@ -5288,3 +5288,10 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n     auto base{this->GetSnapshotBaseBlock()};\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+bool ChainstateManager::IsAnyChainInIBD()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f61f80a043cb0e9fb336ee2098f10302742aa2e3",
      "in_reply_to_id": 888478773,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought that generally we preferred lock annotations to inline locking for short functions like these to avoid recursive acquisitions.",
      "created_at": "2022-06-07T20:40:53Z",
      "updated_at": "2022-06-07T21:40:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891690511",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891690511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891731127",
      "pull_request_review_id": 998813279,
      "id": 891731127,
      "node_id": "PRRC_kwDOABII5841Jry3",
      "diff_hunk": "@@ -1038,6 +1038,9 @@ class ChainstateManager\n     /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n     std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev) const;\n \n+    //! Returns true if any chainstate in use is in initial block download.\n+    bool IsAnyChainInIBD() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f61f80a043cb0e9fb336ee2098f10302742aa2e3",
      "in_reply_to_id": 888480307,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good observation. I definitely agree that we should still be answering getheaders requests, which I think we are per this code: https://github.com/jamesob/bitcoin/blob/39ddd522c37f760c8054d2fa58e026c69a50ce8b/src/net_processing.cpp#L3292-L3321. In terms of advertising ourselves while background-validating, I'll remain conservative in this changeset and defer to others... should be a pretty easy follow-up if deemed safe, and it'd allow someone besides me to make assumeutxo-related changes :).",
      "created_at": "2022-06-07T21:38:32Z",
      "updated_at": "2022-06-07T21:40:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891731127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891731127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891949166",
      "pull_request_review_id": 999156385,
      "id": 891949166,
      "node_id": "PRRC_kwDOABII5841KhBu",
      "diff_hunk": "@@ -5225,3 +5268,30 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "in_reply_to_id": 888466699,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems dangerous. There are many places in the code base where raw pointers are compared to check CBlockIndex equality. Creating a copy will change the raw pointer and make two \"identical\" CBlockIndex appear different.\r\n\r\nAlso copying a CBlockIndex does not extend its lifetime. It has a pprev member, that will be deleted as well.\r\n\r\nIf someone has an easy patch to `=delete` the copy constructor, I'd be looking forward to review.\r\n\r\n\r\n(If you really want to refer to a block after the lifetime of the CBlockIndex, for whatever reason, you could return the hash of the block)",
      "created_at": "2022-06-08T05:59:51Z",
      "updated_at": "2022-06-08T05:59:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r891949166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/891949166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892424673",
      "pull_request_review_id": 999820980,
      "id": 892424673,
      "node_id": "PRRC_kwDOABII5841MVHh",
      "diff_hunk": "@@ -5225,3 +5268,30 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "in_reply_to_id": 888466699,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good points, I should think harder. Fixed and pushed.",
      "created_at": "2022-06-08T14:03:01Z",
      "updated_at": "2022-06-08T14:03:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r892424673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892424673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892580801",
      "pull_request_review_id": 1000046674,
      "id": 892580801,
      "node_id": "PRRC_kwDOABII5841M7PB",
      "diff_hunk": "@@ -5225,3 +5268,30 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+std::optional<const CBlockIndex> ChainstateManager::GetSnapshotBaseBlock() const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "df44c76cdb637d3aa5b6807163f014137b381918",
      "in_reply_to_id": 888466699,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If someone has an easy patch to =delete the copy constructor, I'd be looking forward to review.\r\n\r\nAdded in https://github.com/bitcoin/bitcoin/pull/25311.",
      "created_at": "2022-06-08T16:11:38Z",
      "updated_at": "2022-06-08T16:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r892580801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892580801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/895298321",
      "pull_request_review_id": 1003746458,
      "id": 895298321,
      "node_id": "PRRC_kwDOABII5841XSsR",
      "diff_hunk": "@@ -380,8 +380,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "56cae81ed7fe59170a4413444d509e1a3c7b132d",
      "in_reply_to_id": 888474234,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The consensus has been that we want as few parts of the system as possible knowing about \"snapshots\" per se.\r\n\r\nSure; but the map already means the code needs to know about snapshots per se.\r\n\r\n> if we were ever to further parallelize validation with more than one background validation chainstate, we could keep this structure.\r\n\r\nThat seems crazy to me; managing two utxo sets is already a lot of space, increasing that is costly, and I don't think validating the chain at many points would help with any bottlenecks.\r\n\r\nBut you shouldn't even need the bool; the fact that the snapshots are all at different points in the same chain should let you just say: `last_common_block_for_this_chainstate = min(tip, last_common_block)` when picking where to start, and `if (last_common_block->nHeight < pindex->nHeight) last_common_block = pindex` when updating.\r\n\r\n<details>\r\n<summary>(click for suggestion)</summary>\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -391,7 +391,7 @@ struct CNodeState {\r\n     //! any CChainState objects which were in use at any point (e.g. a background\r\n     //! validation chainstate which has completed) until the end of\r\n     //! init.cpp:Shutdown(), else we'll have bad pointers here.\r\n-    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};\r\n+    const CBlockIndex* last_common_block = nullptr;\r\n \r\n     //! The best header we have sent our peer.\r\n     const CBlockIndex* pindexBestHeaderSent{nullptr};\r\n@@ -757,7 +757,7 @@ private:\r\n \r\n     bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n-    /** Update chainstate_to_last_common_block and add not-in-flight missing successors\r\n+    /** Update last_common_block and add not-in-flight missing successors\r\n      * to vBlocks, until it has at most count entries.\r\n      */\r\n     void FindNextBlocksToDownload(\r\n@@ -1140,6 +1140,13 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\r\n     }\r\n }\r\n \r\n+static const CBlockIndex* GetLastCommonBlock(const CBlockIndex* tip, const CBlockIndex* last_common_block) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\r\n+{\r\n+    if (last_common_block == nullptr || tip == nullptr) return nullptr;\r\n+    if (tip->nHeight <= last_common_block->nHeight) return tip;\r\n+    return last_common_block;\r\n+}\r\n+\r\n void PeerManagerImpl::FindNextBlocksToDownload(\r\n     const CChainState* const chainstate,\r\n     NodeId nodeid,\r\n@@ -1167,27 +1174,22 @@ void PeerManagerImpl::FindNextBlocksToDownload(\r\n         return;\r\n     }\r\n \r\n-    if (!state->chainstate_to_last_common_block.count(chainstate)) {\r\n+    if (!state->last_common_block) {\r\n         // Bootstrap quickly by guessing a parent of our best tip is the forking point.\r\n         // Guessing wrong in either direction is not a problem.\r\n-        //\r\n-        // Namespace this by chainstate so that we can simultaneously sync two\r\n-        // separate chainstates at different heights.\r\n-        state->chainstate_to_last_common_block[chainstate] = our_chain[\r\n-            std::min(state->pindexBestKnownBlock->nHeight, our_chain.Height())];\r\n+        state->last_common_block = our_chain[std::min(state->pindexBestKnownBlock->nHeight, our_chain.Height())];\r\n     }\r\n \r\n     // If the peer reorganized, our previous chainstate_to_last_common_block may not be an ancestor\r\n     // of its current tip anymore. Go back enough to fix that.\r\n-    state->chainstate_to_last_common_block[chainstate] = LastCommonAncestor(\r\n-        state->chainstate_to_last_common_block[chainstate], state->pindexBestKnownBlock);\r\n+    state->last_common_block = LastCommonAncestor(state->last_common_block, state->pindexBestKnownBlock);\r\n \r\n-    if (state->chainstate_to_last_common_block[chainstate] == state->pindexBestKnownBlock) {\r\n+    if (state->last_common_block == state->pindexBestKnownBlock) {\r\n         return;\r\n     }\r\n \r\n     std::vector<const CBlockIndex*> vToFetch;\r\n-    const CBlockIndex *pindexWalk = state->chainstate_to_last_common_block[chainstate];\r\n+    const CBlockIndex* pindexWalk = GetLastCommonBlock(our_tip, state->last_common_block);\r\n     // Never fetch further than the best block we know the peer has, or more than BLOCK_DOWNLOAD_WINDOW + 1 beyond the last\r\n     // linked block we have in common with this peer. The +1 is so we can detect stalling, namely if we would be able to\r\n     // download that next block if the window were 1 larger.\r\n@@ -1209,7 +1211,7 @@ void PeerManagerImpl::FindNextBlocksToDownload(\r\n \r\n         // Iterate over those blocks in vToFetch (in forward direction), adding the ones that\r\n         // are not yet downloaded and not in flight to vBlocks. In the meantime, update\r\n-        // chainstate_to_last_common_block as long as all ancestors are already downloaded, or if it's\r\n+        // last_common_block as long as all ancestors are already downloaded, or if it's\r\n         // already part of our chain (and therefore don't need it even if pruned).\r\n         for (const CBlockIndex* pindex : vToFetch) {\r\n             if (!pindex->IsValid(BLOCK_VALID_TREE)) {\r\n@@ -1221,8 +1223,11 @@ void PeerManagerImpl::FindNextBlocksToDownload(\r\n                 return;\r\n             }\r\n             if (pindex->nStatus & BLOCK_HAVE_DATA || our_chain.Contains(pindex)) {\r\n-                if (pindex->HaveTxsDownloaded())\r\n-                    state->chainstate_to_last_common_block[chainstate] = pindex;\r\n+                if (pindex->HaveTxsDownloaded()) {\r\n+                    if (state->last_common_block == nullptr || pindex->nHeight > state->last_common_block->nHeight) {\r\n+                        state->last_common_block = pindex;\r\n+                    }\r\n+                }\r\n             } else if (!IsBlockRequested(pindex->GetBlockHash())) {\r\n                 // The block is not already downloaded, and not yet in flight.\r\n                 if (pindex->nHeight > nWindowEnd) {\r\n@@ -1434,13 +1439,8 @@ bool PeerManagerImpl::GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) c\r\n         stats.nSyncHeight = state->pindexBestKnownBlock ? state->pindexBestKnownBlock->nHeight : -1;\r\n         stats.nCommonHeight = -1;\r\n \r\n-        // Take the max common height with this peer across chainstates.\r\n-        for (const auto& it : state->chainstate_to_last_common_block) {\r\n-            const CBlockIndex* block = it.second;\r\n-            if (block && block->nHeight > stats.nCommonHeight) {\r\n-                stats.nCommonHeight = block->nHeight;\r\n-            }\r\n-        }\r\n+        if (state->last_common_block) stats.nCommonHeight = state->last_common_block->nHeight;\r\n+\r\n         for (const QueuedBlock& queue : state->vBlocksInFlight) {\r\n             if (queue.pindex)\r\n                 stats.vHeightInFlight.push_back(queue.pindex->nHeight);\r\n```\r\n</details>",
      "created_at": "2022-06-13T03:23:15Z",
      "updated_at": "2022-06-13T03:23:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r895298321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/895298321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905108173",
      "pull_request_review_id": 1017136953,
      "id": 905108173,
      "node_id": "PRRC_kwDOABII58418trN",
      "diff_hunk": "@@ -380,8 +380,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "56cae81ed7fe59170a4413444d509e1a3c7b132d",
      "in_reply_to_id": 888474234,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Sure; but the map already means the code needs to know about snapshots per se.\r\n\r\nThis is not true - knowing about multiple chainstates is not knowing about snapshots, per the definition of \"per se!\"\r\n\r\n---\r\n\r\nThanks for the example patch. I have looked at this a few times, and I still haven't been able to convince myself that it does something equivalent. It likely does - I'm maybe just too tired or demotivated to see it. \r\n\r\nAs I just mentioned in https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1007902467, I am growing very weary of work on assumeutxo after three years. Unless there are substantive safety/correctness concerns, I will not be making substantial changes to the approach in this and other PRs.\r\n",
      "created_at": "2022-06-23T14:41:10Z",
      "updated_at": "2022-06-23T14:41:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r905108173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905108173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952029829",
      "pull_request_review_id": 1081310397,
      "id": 952029829,
      "node_id": "PRRC_kwDOABII5844vtKF",
      "diff_hunk": "@@ -913,6 +913,19 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         CAutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Return the relevant chainstate for a new block.\n+    //!\n+    //! Because the use of UTXO snapshots requires the simultaneous maintenance\n+    //! of two chainstates, when a new block message arrives we have to decide\n+    //! which chain we should attempt to append it to.\n+    //!\n+    //! If our most-work chain hasn't seen the incoming blockhash, return that.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "84443da54fd3469812564c8cbed61808809f0e82",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note, I think there is a discrepancy between the comment and the actual `GetChainStateForNewBlock()` logic.\r\n\r\nFrom my understanding, the comment is saying the decision criteria to append a new block should be the PoW accumulated. However, the logic implemented probe the presence of the block in the snapshot chainstate, then if it's already included select the IBD chainstate as the relevant chainstate ?\r\n\r\nThat said, I think this approach is sound in case of a peer deliberately sending non-requested blocks to stale the assumeutxo-syncing, where the snapshot chainstate would be prevented to reach the tip quickly. ",
      "created_at": "2022-08-23T00:14:36Z",
      "updated_at": "2022-08-23T01:46:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r952029829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952029829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952045802",
      "pull_request_review_id": 1081310397,
      "id": 952045802,
      "node_id": "PRRC_kwDOABII5844vxDq",
      "diff_hunk": "@@ -4693,6 +4693,28 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<CChainState*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "38ac3b3bc3ef70303641ef96b824aaca5af1de0f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if it's too early if snapshot chainstate is deprioritized after we get out of IBD. The current definition of network tip is `DEFAULT_MAX_TIP_AGE`, that's still 24h of blocks. If we start to download blocks in parallel for both chainstates, the slow down might diminish the \"quick deployment effect\" for a assumeutxo user.\r\n\r\nI think this concern could only be qualified once the assumeutxo feature is completed and we observe such perf bottleneck. If it's the case, we could introduce a tighter notion of chain tip, such as 2h of blocks. So this is just a note on potential assumeutxo refinements.",
      "created_at": "2022-08-23T00:58:37Z",
      "updated_at": "2022-08-23T01:46:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r952045802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952045802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952062129",
      "pull_request_review_id": 1081310397,
      "id": 952062129,
      "node_id": "PRRC_kwDOABII5844v1Cx",
      "diff_hunk": "@@ -5237,21 +5278,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (!pto->fClient && ((sync_blocks_and_headers_from_peer && !pto->m_limited_node) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*pto);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.",
      "path": "src/net_processing.cpp",
      "position": 262,
      "original_position": 176,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f33a023bc9b82b015550b79ce01a8867fc34da5f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As we have two chainstates requesting blocks in parallel, at least as long as snapshot has not reached network's tip, there is a possibility that the bandwidth consumption increase exhaust the monthly ISP data usage caps of the assumeutxo hosts. In some world regions, the Internet access is capped to 5 - 30 GB/month. That's okay, I think we have few options to do resources control like `maxreceivebuffer`, however I wonder if there are other interactions where we're making assumptions on bandwidth / download throughput that would be altered by that change.",
      "created_at": "2022-08-23T01:41:24Z",
      "updated_at": "2022-08-23T01:46:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r952062129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952062129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5871,
      "original_line": 5871,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952063025",
      "pull_request_review_id": 1081310397,
      "id": 952063025,
      "node_id": "PRRC_kwDOABII5844v1Qx",
      "diff_hunk": "@@ -1849,6 +1849,10 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n     // 3. This is currently the best block we're aware of. We haven't updated\n     //    the tip yet so we have no way to check this directly here. Instead we\n     //    just check that there are currently no other blocks in flight.\n+    //\n+    // No need to consider the background validation chainstate's IBD status\n+    // (if applicable) because any active chainstate not in IBD will allow\n+    // us to judge block validity.",
      "path": "src/net_processing.cpp",
      "position": 173,
      "original_position": 7,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `doc/design/assumeutxo.md` could be updated with the description of the changes implemented here. Beyond, such documentation would constitute a good reference to review the changes themselves and assert their correctness.",
      "created_at": "2022-08-23T01:43:35Z",
      "updated_at": "2022-08-23T01:46:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r952063025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/952063025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2035,
      "original_line": 2035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/990270144",
      "pull_request_review_id": 1134795496,
      "id": 990270144,
      "node_id": "PRRC_kwDOABII5847BlLA",
      "diff_hunk": "@@ -386,8 +386,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we can do this without adding `Chainstate` pointers to `CNodeState` which i would really prefer.\r\n\r\nWhat I would suggest is that we nuke `pindexLastCommonBlock` entirely and compute it on demand instead (the performance overhead should be minimal). Then we don't need to keep track of it per chainstate but rather only compute it on demand for a given chain. I have a branch that should illustrate what i mean: https://github.com/dergoegge/bitcoin/commits/2022-10-assumeutxo-netproc (last commit puts the loop over the chains inside of `FindNextBlocksToDownload`, not sure if that works out)",
      "created_at": "2022-10-07T16:23:11Z",
      "updated_at": "2022-10-07T16:23:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r990270144",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/990270144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1006241550",
      "pull_request_review_id": 1157367086,
      "id": 1006241550,
      "node_id": "PRRC_kwDOABII5847-gcO",
      "diff_hunk": "@@ -831,6 +831,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "57de47bca91208f2178a470cf3bb666f4da5a713",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetSnapshotBaseHeight()` is never used in this PR.",
      "created_at": "2022-10-26T22:30:18Z",
      "updated_at": "2022-11-09T23:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1006241550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1006241550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1006259405",
      "pull_request_review_id": 1157367086,
      "id": 1006259405,
      "node_id": "PRRC_kwDOABII5847-kzN",
      "diff_hunk": "@@ -2425,6 +2429,10 @@ void PeerManagerImpl::UpdatePeerStateForReceivedHeaders(CNode& pfrom,\n \n     // If we're in IBD, we want outbound peers that will serve us a useful\n     // chain. Disconnect peers that are on chains with insufficient work.\n+    //\n+    // Can ignore background validation chainstate IBD status here (if applicable);\n+    // as long as the active chainstate is out of IBD, we are able to assess\n+    // work in the headers chain.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why would we need a chainstate to be out of IBD to assess work in a headers chain?\r\nIn my understanding, the reason for this check is that if the peer is on a chain with insufficient work, we disconnect them here because they wouldn't be able to help us sync.\r\nThis could also apply to the background validation chain, so I guess we'd have to decide whether syncing that chain is a high enough priority that we would kick a peer for it.",
      "created_at": "2022-10-26T23:04:30Z",
      "updated_at": "2022-11-09T23:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1006259405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1006259405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016945847",
      "pull_request_review_id": 1172590162,
      "id": 1016945847,
      "node_id": "PRRC_kwDOABII5848nVy3",
      "diff_hunk": "@@ -913,6 +913,19 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         CAutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Return the relevant chainstate for a new block.\n+    //!\n+    //! Because the use of UTXO snapshots requires the simultaneous maintenance\n+    //! of two chainstates, when a new block message arrives we have to decide\n+    //! which chain we should attempt to append it to.\n+    //!\n+    //! If our most-work chain hasn't seen the incoming blockhash, return that.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "84443da54fd3469812564c8cbed61808809f0e82",
      "in_reply_to_id": 952029829,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah there's nothing to do with PoW here per se - when I say \"most-work\" that's just shorthand for \"active chain.\" I'll update the comment to be more specific.",
      "created_at": "2022-11-08T17:48:44Z",
      "updated_at": "2022-11-08T17:48:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1016945847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016945847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016950655",
      "pull_request_review_id": 1172597079,
      "id": 1016950655,
      "node_id": "PRRC_kwDOABII5848nW9_",
      "diff_hunk": "@@ -386,8 +386,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any CChainState objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const CChainState*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "4d581ddf2caeb6ab3a3eeddbf7ea15452bb1c11b",
      "in_reply_to_id": 990270144,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[rehashing a discussion from CoreDev]\r\n\r\nThis is a good idea, but should be considered separately as it will require benchmarking and more thorough analysis to ensure that it e.g. doesn't open some kind of DoS vector. I'm not familiar with why these values were cached in the first place, and so \"un-caching\" them is a design choice I'd rather not conflate here with assumeutxo.",
      "created_at": "2022-11-08T17:53:51Z",
      "updated_at": "2022-11-08T17:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1016950655",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016950655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016952651",
      "pull_request_review_id": 1172599824,
      "id": 1016952651,
      "node_id": "PRRC_kwDOABII5848nXdL",
      "diff_hunk": "@@ -5237,21 +5278,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (!pto->fClient && ((sync_blocks_and_headers_from_peer && !pto->m_limited_node) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*pto);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.",
      "path": "src/net_processing.cpp",
      "position": 262,
      "original_position": 176,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "f33a023bc9b82b015550b79ce01a8867fc34da5f",
      "in_reply_to_id": 952062129,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Huh? We are still sharing the same number of `requests_available` - we're just splitting them across two chainstates. It should be identical from the standpoint of bandwidth usage.",
      "created_at": "2022-11-08T17:55:54Z",
      "updated_at": "2022-11-08T17:55:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1016952651",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016952651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5871,
      "original_line": 5871,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016969344",
      "pull_request_review_id": 1172624940,
      "id": 1016969344,
      "node_id": "PRRC_kwDOABII5848nbiA",
      "diff_hunk": "@@ -4693,6 +4693,28 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<CChainState*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "38ac3b3bc3ef70303641ef96b824aaca5af1de0f",
      "in_reply_to_id": 952045802,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Even after IBD, the snapshot chainstate will still take priority for block download due to the ordering here.",
      "created_at": "2022-11-08T18:14:04Z",
      "updated_at": "2022-11-08T18:14:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1016969344",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016969344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1017562163",
      "pull_request_review_id": 1173511441,
      "id": 1017562163,
      "node_id": "PRRC_kwDOABII5848psQz",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+    // Exclude the ibd chainstate (which is in the background if we have a snapshot\n+    // chainstate active) if the snapshot chainstate is in IBD because the main\n+    // priority is getting the active chain to network tip.\n+    if (!IsSnapshotValidated() && !snapshot_in_ibd && m_ibd_chainstate) {\n+        out.push_back(m_ibd_chainstate.get());\n+    }\n+\n+    assert(out.size() > 0);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm likely misunderstanding something.\r\nImagine a snapshot doesn't exist. Then, if `m_ibd_chainstate == false`, `out` will be empty, and this would trigger an issue?\r\n\r\nSo, if the caller must not call it in this case, this requirement probably should be documented?",
      "created_at": "2022-11-09T08:00:17Z",
      "updated_at": "2022-11-09T08:00:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1017562163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1017562163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4997,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018465778",
      "pull_request_review_id": 1157367086,
      "id": 1018465778,
      "node_id": "PRRC_kwDOABII5848tI3y",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+    // Exclude the ibd chainstate (which is in the background if we have a snapshot\n+    // chainstate active) if the snapshot chainstate is in IBD because the main\n+    // priority is getting the active chain to network tip.\n+    if (!IsSnapshotValidated() && !snapshot_in_ibd && m_ibd_chainstate) {\n+        out.push_back(m_ibd_chainstate.get());\n+    }\n+\n+    assert(out.size() > 0);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": 1017562163,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm new to AssumeUTXO and had a similar question - I came to the conclustion that `m_ibd_chainstate` always exists. If we are in a situation where the background chainstate catches up with the snapshot, after the next restart there will be only one chain, which is the old snapshot chainstate, but it will now be \"rebranded\" as `m_ibd_chainstate` (#25740). If we never used AssumeUTXO, the usual chainstate will be `m_ibd_chainstate`.",
      "created_at": "2022-11-09T22:15:58Z",
      "updated_at": "2022-11-09T23:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1018465778",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018465778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4997,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021007712",
      "pull_request_review_id": 1178353665,
      "id": 1021007712,
      "node_id": "PRRC_kwDOABII584821dg",
      "diff_hunk": "@@ -5302,3 +5302,18 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+const CBlockIndex* ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "3219f1d682378003296b9e8792ae73557c518a0d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add ChainstateManager.GetSnapshot{BaseHeight,BaseBlock}()\" (3219f1d682378003296b9e8792ae73557c518a0d)\r\n\r\nMaybe it could return `Assert(LookupBlockIndex())` to assert that the hash is valid if there is a snapshot.",
      "created_at": "2022-11-14T01:28:47Z",
      "updated_at": "2022-11-14T02:38:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021007712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021007712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021014794",
      "pull_request_review_id": 1178353665,
      "id": 1021014794,
      "node_id": "PRRC_kwDOABII584823MK",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+    // Exclude the ibd chainstate (which is in the background if we have a snapshot\n+    // chainstate active) if the snapshot chainstate is in IBD because the main\n+    // priority is getting the active chain to network tip.\n+    if (!IsSnapshotValidated() && !snapshot_in_ibd && m_ibd_chainstate) {\n+        out.push_back(m_ibd_chainstate.get());\n+    }\n+\n+    assert(out.size() > 0);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": 1017562163,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainstateManager::GetAllForBlockDownload()\" (42f5b6b03bba1ef1c1bc6c225606d119c4e27169)\r\n\r\nYeah I basically repeat this same comment in all my assumeutxo reviews, but I still find the terms \"IBD chainstate\" and \"snapshot chainstate\" confusing and think it would be nice to abolish them later (https://github.com/bitcoin/bitcoin/pull/24232#discussion_r835355848).\r\n\r\nUsually when you try to write code that is more general than it needs to be, it makes things more complicated. But sometimes generalizing code makes it simpler. I think all the code using chainstatemanager would be simpler if chainstatemanager just kept a simple vector of chainstates and pointer to the active chainstate, so assumeutxo logic and terminology would be only need to appear in code loading and validating the snapshot, and the rest of validation and net processing code would only have to care about active and inactive chainstates.",
      "created_at": "2022-11-14T01:54:35Z",
      "updated_at": "2022-11-14T02:39:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021014794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021014794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4997,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021018683",
      "pull_request_review_id": 1178353665,
      "id": 1021018683,
      "node_id": "PRRC_kwDOABII584824I7",
      "diff_hunk": "@@ -1293,31 +1313,44 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(peer.m_id);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n+    const CChain& our_chain = chainstate->m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == nullptr) {\n+    if (!state->chainstate_to_last_common_block.count(chainstate)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c5bfecff4d0db726fab893a46cc1dab29591f325",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net_processing: work with multiple chainstates\" (c5bfecff4d0db726fab893a46cc1dab29591f325)\r\n\r\nThere's a lot of map lookups in this function, and it seems like you could eliminate them all by declaring a local reference\r\n\r\n```\r\nconst CBlockIndex*& last_common_block =  state->chainstate_to_last_common_block[chainstate];\r\n```\r\n\r\nNote the pointer is const but the reference is non-const, so you could assign to it and make fewer changes to code below, just replacing `state->pindexLastCommonBlock` with `last_common_block` and `m_chainman.ActiveChain()` with `our_chain`.",
      "created_at": "2022-11-14T02:07:17Z",
      "updated_at": "2022-11-14T02:39:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021018683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021018683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021024865",
      "pull_request_review_id": 1178353665,
      "id": 1021024865,
      "node_id": "PRRC_kwDOABII584825ph",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+    // Exclude the ibd chainstate (which is in the background if we have a snapshot\n+    // chainstate active) if the snapshot chainstate is in IBD because the main\n+    // priority is getting the active chain to network tip.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainstateManager::GetAllForBlockDownload()\" (42f5b6b03bba1ef1c1bc6c225606d119c4e27169)\r\n\r\nIs there a reason to exclude the ibd chainstate if the comment in commit \"net_processing: work with multiple chainstates\" (c5bfecff4d0db726fab893a46cc1dab29591f325) is correct: \"The first chainstate in line for processing will likely exhaust this during IBD, but once it hits a tip capacity will trickle into subsequent chainstates.\"?\r\n\r\nIt seems cleaner if code in net_processing just decide what blocks to download and validation code doesn't have to be involved in the details.\r\n\r\nEDIT: To be more specific, I'm suggesting dropping this `GetAllForBlockDownload` method and just having net_processing code call `GetAll` instead. `GetAll` method could be changed to return snapshot chainstate before IBD chainstate so it has higher priority to download blocks",
      "created_at": "2022-11-14T02:26:36Z",
      "updated_at": "2022-11-14T19:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021024865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021024865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 4838,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021992945",
      "pull_request_review_id": 1179743982,
      "id": 1021992945,
      "node_id": "PRRC_kwDOABII58486l_x",
      "diff_hunk": "@@ -3902,18 +3904,21 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n         bool ret = CheckBlock(*block, state, GetConsensus());\n         if (ret) {\n             // Store to disk\n-            ret = ActiveChainstate().AcceptBlock(block, state, &pindex, force_processing, nullptr, new_block, min_pow_checked);\n+            ret = chainstate->AcceptBlock(\n+                block, state, &pindex, force_processing, nullptr, new_block, min_pow_checked);\n         }\n         if (!ret) {\n             GetMainSignals().BlockChecked(*block, state);\n             return error(\"%s: AcceptBlock FAILED (%s)\", __func__, state.ToString());\n         }\n     }\n \n-    NotifyHeaderTip(ActiveChainstate());\n+    if (chainstate == &this->ActiveChainstate()) {\n+        NotifyHeaderTip(*chainstate);\n+    }\n \n     BlockValidationState state; // Only used to report errors, not invalidity - ignore it\n-    if (!ActiveChainstate().ActivateBestChain(state, block)) {\n+    if (!chainstate->ActivateBestChain(state, block)) {",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "650677dd66cede06e242975f51c0e5e77b99079f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: introduce ChainstateManager::GetChainstateForNewBlock\" (650677dd66cede06e242975f51c0e5e77b99079f)\r\n\r\nIf I revert this line, all tests seem to still pass. I understand why we can't have functional tests for this code before there is a snapshot loading RPC but it seems like it shouldn't be that hard to come up with a unit test that would exercise this logic. I don't think it's good to be in a state where validation code doesn't have test coverage, even if it's a temporary state.",
      "created_at": "2022-11-14T19:50:13Z",
      "updated_at": "2022-11-14T19:59:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021992945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021992945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4057,
      "original_line": 4057,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021995519",
      "pull_request_review_id": 1179743982,
      "id": 1021995519,
      "node_id": "PRRC_kwDOABII58486mn_",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainstateManager::GetAllForBlockDownload()\" (42f5b6b03bba1ef1c1bc6c225606d119c4e27169)\r\n\r\nAfter #24008 will this need to change to `m_snapshot_chainstate && IsUsable(m_snapshot_chainstate)`?",
      "created_at": "2022-11-14T19:53:24Z",
      "updated_at": "2022-11-14T19:59:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1021995519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021995519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022688185",
      "pull_request_review_id": 1180724106,
      "id": 1022688185,
      "node_id": "PRRC_kwDOABII58489Pu5",
      "diff_hunk": "@@ -5776,21 +5844,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (Chainstate* chainstate : m_chainman.GetAllForBlockDownload()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 291,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c5bfecff4d0db726fab893a46cc1dab29591f325\r\n```suggestion\r\n        for (const auto* chainstate : m_chainman.GetAllForBlockDownload()) {\r\n```",
      "created_at": "2022-11-15T11:44:02Z",
      "updated_at": "2022-11-15T11:48:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1022688185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022688185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022689304",
      "pull_request_review_id": 1180724106,
      "id": 1022689304,
      "node_id": "PRRC_kwDOABII58489QAY",
      "diff_hunk": "@@ -4819,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169\r\n```suggestion\r\nstd::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload() const\r\n```",
      "created_at": "2022-11-15T11:45:14Z",
      "updated_at": "2022-11-15T11:48:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1022689304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022689304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022690017",
      "pull_request_review_id": 1180724106,
      "id": 1022690017,
      "node_id": "PRRC_kwDOABII58489QLh",
      "diff_hunk": "@@ -5302,3 +5345,25 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+const CBlockIndex* ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n+{\n+    AssertLockHeld(::cs_main);\n+    auto base{this->GetSnapshotBaseBlock()};\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+bool ChainstateManager::IsAnyChainInIBD()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "03abde6150e9950e18edc00cb0541a33f714a231\r\n```suggestion\r\nbool ChainstateManager::IsAnyChainInIBD() const\r\n```",
      "created_at": "2022-11-15T11:46:04Z",
      "updated_at": "2022-11-15T11:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1022690017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022690017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116123753",
      "pull_request_review_id": 1311957223,
      "id": 1116123753,
      "node_id": "PRRC_kwDOABII585ChrJp",
      "diff_hunk": "@@ -831,6 +831,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "57de47bca91208f2178a470cf3bb666f4da5a713",
      "in_reply_to_id": 1006241550,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Neither are used here, because `GetSnapshotBaseBlock` is only used by `GetSnapshotBaseHeight`. But they are used in the final PR, so I'm fine with introducing them here.",
      "created_at": "2023-02-23T18:58:08Z",
      "updated_at": "2023-02-23T19:47:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1116123753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116123753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116142978",
      "pull_request_review_id": 1311957223,
      "id": 1116142978,
      "node_id": "PRRC_kwDOABII585Chv2C",
      "diff_hunk": "@@ -5302,3 +5302,18 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+const CBlockIndex* ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "3219f1d682378003296b9e8792ae73557c518a0d",
      "in_reply_to_id": 1021007712,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems like a good idea, also because `GetSnapshotBaseHeight` will deference the result to get a height. (Though it won't crash because it checks if the result is a `nullptr`.)",
      "created_at": "2023-02-23T19:15:57Z",
      "updated_at": "2023-02-23T19:47:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1116142978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116142978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116158372",
      "pull_request_review_id": 1311957223,
      "id": 1116158372,
      "node_id": "PRRC_kwDOABII585Chzmk",
      "diff_hunk": "@@ -938,6 +938,19 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         AutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Return the relevant chainstate for a new block.\n+    //!\n+    //! Because the use of UTXO snapshots requires the simultaneous maintenance\n+    //! of two chainstates, when a new block message arrives we have to decide\n+    //! which chain we should attempt to append it to.\n+    //!\n+    //! If our active chainstate hasn't seen the incoming blockhash, return that.",
      "path": "src/validation.h",
      "position": 21,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "bf99340edefc83913116f2ef972988e016deba3d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find the explanation in the function body more clear. Maybe say:\r\n\r\n```md\r\n// Because we expect to have received the headers for the IBD chain\r\n// contents before receiving blocks, when the (shared) block manager\r\n// doesn't include a header for this block, it must go to\r\n// to the snapshot chain.\r\n```",
      "created_at": "2023-02-23T19:32:46Z",
      "updated_at": "2023-02-23T19:47:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1116158372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116158372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1055,
      "original_line": 1055,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116169293",
      "pull_request_review_id": 1311957223,
      "id": 1116169293,
      "node_id": "PRRC_kwDOABII585Ch2RN",
      "diff_hunk": "@@ -5204,6 +5209,22 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    if (m_snapshot_chainstate &&\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "bf99340edefc83913116f2ef972988e016deba3d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bf99340edefc83913116f2ef972988e016deba3d IIUC: maybe clarify here that `m_chain.Contains` searches both the snapshot headers _and_ the IBD headers it's built on top of. When a `pblock` exists but is not contained in the chainstate it's a fork, and it's up to the snapshot chainstate to explore those.",
      "created_at": "2023-02-23T19:42:35Z",
      "updated_at": "2023-02-23T19:48:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1116169293",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1116169293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132286555",
      "pull_request_review_id": 1334725192,
      "id": 1132286555,
      "node_id": "PRRC_kwDOABII585DfVJb",
      "diff_hunk": "@@ -889,10 +899,15 @@ class PeerManagerImpl final : public PeerManager\n \n     bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    /** Update pindexLastCommonBlock and add not-in-flight missing successors to vBlocks, until it has\n-     *  at most count entries.\n+    /** Update chainstate_to_last_common_block and add not-in-flight missing successors\n+     * to vBlocks, until it has at most count entries.\n      */\n-    void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void FindNextBlocksToDownload(\n+        const Chainstate* const chainstate,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit (feel free to ignore): What about passing a `const&` ref here? Otherwise someone could pass in a `nullptr` and run into UB at runtime?",
      "created_at": "2023-03-10T12:02:29Z",
      "updated_at": "2023-03-10T12:10:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1132286555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132286555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 906,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132291848",
      "pull_request_review_id": 1334725192,
      "id": 1132291848,
      "node_id": "PRRC_kwDOABII585DfWcI",
      "diff_hunk": "@@ -5485,6 +5512,22 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    if (m_snapshot_chainstate &&\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\n+        return *m_snapshot_chainstate.get();\n+    }\n+    assert(m_ibd_chainstate);\n+    return *m_ibd_chainstate.get();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: No need to call `get` if you call `*` later on. Also, can inline the assert:\r\n```suggestion\r\n\r\n    return *Assert(m_ibd_chainstate);\r\n```",
      "created_at": "2023-03-10T12:08:58Z",
      "updated_at": "2023-03-10T12:10:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1132291848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132291848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 5527,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5528,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133292021",
      "pull_request_review_id": 1336057822,
      "id": 1133292021,
      "node_id": "PRRC_kwDOABII585DjKn1",
      "diff_hunk": "@@ -5485,6 +5490,22 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};",
      "path": "src/validation.cpp",
      "position": 64,
      "original_position": 41,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e4813736298c5dfc6ba96302a148293e8ecd029",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This function could have an early return of `m_ibd_chainstate` if there is no `m_snapshot_chainstate` which should be the base case, i.e. when assumeutxo is not used?",
      "created_at": "2023-03-12T17:15:55Z",
      "updated_at": "2023-03-12T17:52:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1133292021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133292021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5562,
      "original_line": 5562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133294858",
      "pull_request_review_id": 1336057822,
      "id": 1133294858,
      "node_id": "PRRC_kwDOABII585DjLUK",
      "diff_hunk": "@@ -410,8 +410,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any Chainstate objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const Chainstate*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "ed8f55b87cc6e8ce4fcb05c00829996267d39748",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `m_chainstate_to_last_common_block`",
      "created_at": "2023-03-12T17:32:36Z",
      "updated_at": "2023-03-12T17:52:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1133294858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133294858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171514903",
      "pull_request_review_id": 1392348713,
      "id": 1171514903,
      "node_id": "PRRC_kwDOABII585F0-YX",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+    // Exclude the ibd chainstate (which is in the background if we have a snapshot\n+    // chainstate active) if the snapshot chainstate is in IBD because the main\n+    // priority is getting the active chain to network tip.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": 1021024865,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, that's a good point. Will do, thanks!",
      "created_at": "2023-04-19T15:29:33Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171514903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171514903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 4838,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171516859",
      "pull_request_review_id": 1392348713,
      "id": 1171516859,
      "node_id": "PRRC_kwDOABII585F0-27",
      "diff_hunk": "@@ -4824,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    AssertLockHeld(::cs_main);\n+    std::vector<Chainstate*> out;\n+\n+    bool snapshot_in_ibd{\n+        m_snapshot_chainstate && m_snapshot_chainstate->IsInitialBlockDownload()};\n+\n+    if (m_snapshot_chainstate) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "42f5b6b03bba1ef1c1bc6c225606d119c4e27169",
      "in_reply_to_id": 1021995519,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-04-19T15:30:41Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171516859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171516859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171516957",
      "pull_request_review_id": 1392348713,
      "id": 1171516957,
      "node_id": "PRRC_kwDOABII585F0-4d",
      "diff_hunk": "@@ -4819,6 +4824,28 @@ std::vector<Chainstate*> ChainstateManager::GetAll()\n     return out;\n }\n \n+std::vector<Chainstate*> ChainstateManager::GetAllForBlockDownload()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": 1022689304,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-04-19T15:30:46Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171516957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171516957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527318",
      "pull_request_review_id": 1392348713,
      "id": 1171527318,
      "node_id": "PRRC_kwDOABII585F1BaW",
      "diff_hunk": "@@ -1293,31 +1313,44 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(peer.m_id);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n+    const CChain& our_chain = chainstate->m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == nullptr) {\n+    if (!state->chainstate_to_last_common_block.count(chainstate)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c5bfecff4d0db726fab893a46cc1dab29591f325",
      "in_reply_to_id": 1021018683,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Great catch, done.",
      "created_at": "2023-04-19T15:38:53Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171527318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527608",
      "pull_request_review_id": 1392348713,
      "id": 1171527608,
      "node_id": "PRRC_kwDOABII585F1Be4",
      "diff_hunk": "@@ -889,10 +899,15 @@ class PeerManagerImpl final : public PeerManager\n \n     bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    /** Update pindexLastCommonBlock and add not-in-flight missing successors to vBlocks, until it has\n-     *  at most count entries.\n+    /** Update chainstate_to_last_common_block and add not-in-flight missing successors\n+     * to vBlocks, until it has at most count entries.\n      */\n-    void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void FindNextBlocksToDownload(\n+        const Chainstate* const chainstate,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "in_reply_to_id": 1132286555,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yup, good idea. Done.",
      "created_at": "2023-04-19T15:39:07Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171527608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 906,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527697",
      "pull_request_review_id": 1392348713,
      "id": 1171527697,
      "node_id": "PRRC_kwDOABII585F1BgR",
      "diff_hunk": "@@ -410,8 +410,18 @@ struct CNodeState {\n     const CBlockIndex* pindexBestKnownBlock{nullptr};\n     //! The hash of the last unknown block this peer has announced.\n     uint256 hashLastUnknownBlock{};\n-    //! The last full block we both have.\n-    const CBlockIndex* pindexLastCommonBlock{nullptr};\n+\n+    //! The last full block we both have (per chainstate).\n+    //!\n+    //! This is namespaced by chainstate to allow syncing two separate chainstates\n+    //! simultaneously from a single peer.\n+    //!\n+    //! Nota bene: this is contingent on the ChainstateManager not destructing\n+    //! any Chainstate objects which were in use at any point (e.g. a background\n+    //! validation chainstate which has completed) until the end of\n+    //! init.cpp:Shutdown(), else we'll have bad pointers here.\n+    std::map<const Chainstate*, const CBlockIndex*> chainstate_to_last_common_block = {};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "ed8f55b87cc6e8ce4fcb05c00829996267d39748",
      "in_reply_to_id": 1133294858,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-04-19T15:39:11Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171527697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171527697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171531164",
      "pull_request_review_id": 1392348713,
      "id": 1171531164,
      "node_id": "PRRC_kwDOABII585F1CWc",
      "diff_hunk": "@@ -5776,21 +5844,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (Chainstate* chainstate : m_chainman.GetAllForBlockDownload()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 291,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": 1022688185,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-04-19T15:41:52Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171531164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171531164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171549876",
      "pull_request_review_id": 1392348713,
      "id": 1171549876,
      "node_id": "PRRC_kwDOABII585F1G60",
      "diff_hunk": "@@ -5485,6 +5490,22 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};",
      "path": "src/validation.cpp",
      "position": 64,
      "original_position": 41,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e4813736298c5dfc6ba96302a148293e8ecd029",
      "in_reply_to_id": 1133292021,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, added.",
      "created_at": "2023-04-19T15:57:01Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171549876",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171549876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5562,
      "original_line": 5562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171551677",
      "pull_request_review_id": 1392348713,
      "id": 1171551677,
      "node_id": "PRRC_kwDOABII585F1HW9",
      "diff_hunk": "@@ -5204,6 +5209,22 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    if (m_snapshot_chainstate &&\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "bf99340edefc83913116f2ef972988e016deba3d",
      "in_reply_to_id": 1116169293,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, done.",
      "created_at": "2023-04-19T15:58:30Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171551677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171551677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171552108",
      "pull_request_review_id": 1392348713,
      "id": 1171552108,
      "node_id": "PRRC_kwDOABII585F1Hds",
      "diff_hunk": "@@ -5485,6 +5512,22 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    if (m_snapshot_chainstate &&\n+            (pblock == nullptr || !m_snapshot_chainstate->m_chain.Contains(pblock))) {\n+        return *m_snapshot_chainstate.get();\n+    }\n+    assert(m_ibd_chainstate);\n+    return *m_ibd_chainstate.get();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "07ab98ecc64a39b377e20dcdd571a750ab62fd97",
      "in_reply_to_id": 1132291848,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2023-04-19T15:58:51Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171552108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171552108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": 5527,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5528,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171552243",
      "pull_request_review_id": 1392348713,
      "id": 1171552243,
      "node_id": "PRRC_kwDOABII585F1Hfz",
      "diff_hunk": "@@ -938,6 +938,19 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         AutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Return the relevant chainstate for a new block.\n+    //!\n+    //! Because the use of UTXO snapshots requires the simultaneous maintenance\n+    //! of two chainstates, when a new block message arrives we have to decide\n+    //! which chain we should attempt to append it to.\n+    //!\n+    //! If our active chainstate hasn't seen the incoming blockhash, return that.",
      "path": "src/validation.h",
      "position": 21,
      "original_position": 10,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "bf99340edefc83913116f2ef972988e016deba3d",
      "in_reply_to_id": 1116158372,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reworded.",
      "created_at": "2023-04-19T15:58:57Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171552243",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171552243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1055,
      "original_line": 1055,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171554198",
      "pull_request_review_id": 1392348713,
      "id": 1171554198,
      "node_id": "PRRC_kwDOABII585F1H-W",
      "diff_hunk": "@@ -5302,3 +5345,25 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+const CBlockIndex* ChainstateManager::GetSnapshotBaseBlock() const\n+{\n+    AssertLockHeld(::cs_main);\n+    const auto blockhash_op{this->SnapshotBlockhash()};\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n+{\n+    AssertLockHeld(::cs_main);\n+    auto base{this->GetSnapshotBaseBlock()};\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+bool ChainstateManager::IsAnyChainInIBD()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "645418e8b4d76a0c640590024452b4342802286e",
      "in_reply_to_id": 1022690017,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-04-19T16:00:27Z",
      "updated_at": "2023-04-19T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1171554198",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171554198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188458662",
      "pull_request_review_id": 1418382365,
      "id": 1188458662,
      "node_id": "PRRC_kwDOABII585G1nCm",
      "diff_hunk": "@@ -5515,6 +5520,29 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    // Early return to avoid unnecessary blockindex lookup when assumeutxo is not in use.\n+    if (!m_snapshot_chainstate) {\n+        return *Assert(m_ibd_chainstate);\n+    }\n+\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    //\n+    // Note that searching the snapshot chain (as below) implicitly searches the ibd\n+    // chain, since the former includes the latter.\n+    if (m_snapshot_chainstate &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "426ebe830b3bb076182505b60233e8c8f6d35069",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "426ebe830b3bb076182505b60233e8c8f6d35069: the `m_snapshot_chainstate` check is now redundant:  https://github.com/bitcoin/bitcoin/pull/24008/commits/426ebe830b3bb076182505b60233e8c8f6d35069#r1171549876",
      "created_at": "2023-05-09T10:33:03Z",
      "updated_at": "2023-05-09T11:34:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188458662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188458662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188522463",
      "pull_request_review_id": 1418514150,
      "id": 1188522463,
      "node_id": "PRRC_kwDOABII585G12nf",
      "diff_hunk": "@@ -2777,7 +2781,7 @@ void PeerManagerImpl::UpdatePeerStateForReceivedHeaders(CNode& pfrom, Peer& peer\n \n     // If we're in IBD, we want outbound peers that will serve us a useful\n     // chain. Disconnect peers that are on chains with insufficient work.\n-    if (m_chainman.ActiveChainstate().IsInitialBlockDownload() && !may_have_more_headers) {\n+    if (m_chainman.IsAnyChainInIBD() && !may_have_more_headers) {",
      "path": "src/net_processing.cpp",
      "position": 182,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023: this line does more than \"add commentary\". Maybe move this to 3a7a714721a593e271ce70d4612c995968dbb0da or its own commit directly after that one?\r\n\r\nThe code comment could clarify why we care about this even for the background sync: \"with insufficient work\" -> \"with less than the minimum chain work.\"",
      "created_at": "2023-05-09T12:29:52Z",
      "updated_at": "2023-05-09T12:51:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188522463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188522463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2785,
      "original_line": 2785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188597311",
      "pull_request_review_id": 1418631351,
      "id": 1188597311,
      "node_id": "PRRC_kwDOABII585G2I4_",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 178,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed: nit `>=` seems more intuitive, so the else case can't be 0. ",
      "created_at": "2023-05-09T13:25:57Z",
      "updated_at": "2023-05-09T14:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188597311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188597311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5851,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188619638",
      "pull_request_review_id": 1418631351,
      "id": 1188619638,
      "node_id": "PRRC_kwDOABII585G2OV2",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 186,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed: Maybe move the `CanServeBlocks(*peer)` check out of this loop (and check `< MAX_BLOCKS_IN_TRANSIT_PER_PEER` first) to make the `if` statement more readable.\r\n\r\nYou should also clarify that `|| !chainstate->IsInitialBlockDownload()` is always true for the background validation chainstate, so we never use a pruned peer for this.\r\n\r\nI'm somewhat inclined with @ryanofsky's [observation](https://github.com/bitcoin/bitcoin/pull/24008/commits/ac00102e4712af7b04fb59b0035df32d6d662d13#r1021014794) that this abstraction is a bit overkill. You could consider dropping ac00102e4712af7b04fb59b0035df32d6d662d13 and just explicitly handling the background and tip behavior here.\r\n",
      "created_at": "2023-05-09T13:41:09Z",
      "updated_at": "2023-05-09T14:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188619638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188619638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188628966",
      "pull_request_review_id": 1418631351,
      "id": 1188628966,
      "node_id": "PRRC_kwDOABII585G2Qnm",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&\n+                    ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer))\n+                     || !chainstate->IsInitialBlockDownload())\n+                    && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                std::vector<const CBlockIndex*> vToDownload;\n+                NodeId staller = -1;\n+                FindNextBlocksToDownload(*chainstate, *peer, requests_available, vToDownload, staller);\n+\n+                for (const CBlockIndex *pindex : vToDownload) {\n+                    uint32_t nFetchFlags = GetFetchFlags(*peer);\n+                    vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n+                    BlockRequested(pto->GetId(), *pindex);\n+                    LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n+                        pindex->nHeight, pto->GetId());\n+                }\n+\n+                requests_available -= vToDownload.size();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed: light preference for `--requests_available` in the for loop above.",
      "created_at": "2023-05-09T13:47:08Z",
      "updated_at": "2023-05-09T14:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188628966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188628966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188629628",
      "pull_request_review_id": 1418631351,
      "id": 1188629628,
      "node_id": "PRRC_kwDOABII585G2Qx8",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&\n+                    ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer))\n+                     || !chainstate->IsInitialBlockDownload())\n+                    && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                std::vector<const CBlockIndex*> vToDownload;\n+                NodeId staller = -1;\n+                FindNextBlocksToDownload(*chainstate, *peer, requests_available, vToDownload, staller);",
      "path": "src/net_processing.cpp",
      "position": 280,
      "original_position": 192,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`assert(requests_available >= vToDownload.size())`  ? `FindNextBlocksToDownload` itself doesn't guarantee that, because its `vBlocks` param doesn't have to be empty.",
      "created_at": "2023-05-09T13:47:36Z",
      "updated_at": "2023-05-09T14:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188629628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188629628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5889,
      "original_line": 5889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188647774",
      "pull_request_review_id": 1418631351,
      "id": 1188647774,
      "node_id": "PRRC_kwDOABII585G2VNe",
      "diff_hunk": "@@ -1312,31 +1332,44 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(peer.m_id);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n+    const CChain& our_chain = chainstate.m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {",
      "path": "src/net_processing.cpp",
      "position": 76,
      "original_position": 64,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could add a TODO here to relax this for background validation. And/or explain that we expect a node with less than the minimum chainwork to still be in IBD and not willing to serve us blocks? Or that it's too much hassle to figure out which blocks they have in common with us (e.g. it's a fork-coin)?",
      "created_at": "2023-05-09T13:59:34Z",
      "updated_at": "2023-05-09T14:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1188647774",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1188647774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1341,
      "original_line": 1341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189036219",
      "pull_request_review_id": 1419307024,
      "id": 1189036219,
      "node_id": "PRRC_kwDOABII585G30C7",
      "diff_hunk": "@@ -1312,31 +1332,44 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(peer.m_id);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n+    const CChain& our_chain = chainstate.m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {",
      "path": "src/net_processing.cpp",
      "position": 76,
      "original_position": 64,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188647774,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, would we relax this for background validation? I don't really see why. Recall that \"our_tip\" is referring to the tip of the chainstate we're working on (could be background) and not our network tip.",
      "created_at": "2023-05-09T19:14:56Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189036219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189036219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1341,
      "original_line": 1341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189036653",
      "pull_request_review_id": 1419307024,
      "id": 1189036653,
      "node_id": "PRRC_kwDOABII585G30Jt",
      "diff_hunk": "@@ -2777,7 +2781,7 @@ void PeerManagerImpl::UpdatePeerStateForReceivedHeaders(CNode& pfrom, Peer& peer\n \n     // If we're in IBD, we want outbound peers that will serve us a useful\n     // chain. Disconnect peers that are on chains with insufficient work.\n-    if (m_chainman.ActiveChainstate().IsInitialBlockDownload() && !may_have_more_headers) {\n+    if (m_chainman.IsAnyChainInIBD() && !may_have_more_headers) {",
      "path": "src/net_processing.cpp",
      "position": 182,
      "original_position": 16,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c7cdc7ca833ce1b5ce9a696fb4ef633c55528023",
      "in_reply_to_id": 1188522463,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks. Though I haven't updated the comment; having trouble figuring out what to say there.",
      "created_at": "2023-05-09T19:15:23Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189036653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189036653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2785,
      "original_line": 2785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039131",
      "pull_request_review_id": 1419307024,
      "id": 1189039131,
      "node_id": "PRRC_kwDOABII585G30wb",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 178,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188597311,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-05-09T19:18:08Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189039131",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5851,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039290",
      "pull_request_review_id": 1419307024,
      "id": 1189039290,
      "node_id": "PRRC_kwDOABII585G30y6",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 186,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188619638,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, and I've dropped the commit in question.",
      "created_at": "2023-05-09T19:18:19Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189039290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039363",
      "pull_request_review_id": 1419307024,
      "id": 1189039363,
      "node_id": "PRRC_kwDOABII585G300D",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&\n+                    ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer))\n+                     || !chainstate->IsInitialBlockDownload())\n+                    && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                std::vector<const CBlockIndex*> vToDownload;\n+                NodeId staller = -1;\n+                FindNextBlocksToDownload(*chainstate, *peer, requests_available, vToDownload, staller);\n+\n+                for (const CBlockIndex *pindex : vToDownload) {\n+                    uint32_t nFetchFlags = GetFetchFlags(*peer);\n+                    vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n+                    BlockRequested(pto->GetId(), *pindex);\n+                    LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n+                        pindex->nHeight, pto->GetId());\n+                }\n+\n+                requests_available -= vToDownload.size();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188628966,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.\r\n",
      "created_at": "2023-05-09T19:18:26Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189039363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039493",
      "pull_request_review_id": 1419307024,
      "id": 1189039493,
      "node_id": "PRRC_kwDOABII585G302F",
      "diff_hunk": "@@ -5802,21 +5843,41 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight > MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        // GetAllForBlockDownload() ensures we get blocks for the snapshot\n+        // chainstate first. It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAllForBlockDownload()) {\n+            if (CanServeBlocks(*peer) &&\n+                    ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer))\n+                     || !chainstate->IsInitialBlockDownload())\n+                    && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                std::vector<const CBlockIndex*> vToDownload;\n+                NodeId staller = -1;\n+                FindNextBlocksToDownload(*chainstate, *peer, requests_available, vToDownload, staller);",
      "path": "src/net_processing.cpp",
      "position": 280,
      "original_position": 192,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188629628,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, but using `Assume()` because that seems safer.",
      "created_at": "2023-05-09T19:18:36Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189039493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189039493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5889,
      "original_line": 5889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189040133",
      "pull_request_review_id": 1419307024,
      "id": 1189040133,
      "node_id": "PRRC_kwDOABII585G31AF",
      "diff_hunk": "@@ -5515,6 +5520,29 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    // Early return to avoid unnecessary blockindex lookup when assumeutxo is not in use.\n+    if (!m_snapshot_chainstate) {\n+        return *Assert(m_ibd_chainstate);\n+    }\n+\n+    const auto* pblock{m_blockman.LookupBlockIndex(blockhash)};\n+    // If pblock is null, we haven't seen the header for this block.\n+    // Because we expect to have received the headers for the IBD chain\n+    // contents before receiving blocks, this means that any block for\n+    // which we don't have headers should go in the snapshot chain.\n+    //\n+    // Note that searching the snapshot chain (as below) implicitly searches the ibd\n+    // chain, since the former includes the latter.\n+    if (m_snapshot_chainstate &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "426ebe830b3bb076182505b60233e8c8f6d35069",
      "in_reply_to_id": 1188458662,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-05-09T19:19:16Z",
      "updated_at": "2023-05-09T19:21:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189040133",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189040133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189596088",
      "pull_request_review_id": 1420147873,
      "id": 1189596088,
      "node_id": "PRRC_kwDOABII585G58u4",
      "diff_hunk": "@@ -1312,31 +1332,44 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(peer.m_id);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < m_chainman.ActiveChain().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {\n+    const CChain& our_chain = chainstate.m_chain;\n+    const CBlockIndex* our_tip = our_chain.Tip();\n+\n+    if (state->pindexBestKnownBlock == nullptr\n+            || state->pindexBestKnownBlock->nChainWork < our_tip->nChainWork\n+            || state->pindexBestKnownBlock->nChainWork < m_chainman.MinimumChainWork()) {",
      "path": "src/net_processing.cpp",
      "position": 76,
      "original_position": 64,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "8e1d9a4bedc73b1ce2124a8583df8ed78d0c48ed",
      "in_reply_to_id": 1188647774,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I only meant the comparison to `MinimumChainWork()`. Though in practice the assume UTXO height and minimum chainwork are probably not that far apart. ",
      "created_at": "2023-05-10T09:11:09Z",
      "updated_at": "2023-05-10T09:12:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1189596088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1189596088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1341,
      "original_line": 1341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194862228",
      "pull_request_review_id": 1428107827,
      "id": 1194862228,
      "node_id": "PRRC_kwDOABII585HOCaU",
      "diff_hunk": "@@ -5543,6 +5548,28 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    // Early return to avoid unnecessary blockindex lookup when assumeutxo is not in use.\n+    if (!m_snapshot_chainstate) {\n+        return *Assert(m_ibd_chainstate);",
      "path": "src/validation.cpp",
      "position": 61,
      "original_position": 43,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c14ae132c5a5204a9a755c84c6de05fb30459221",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "somewhat nit: Why not use `ActiveChainstate()` here? From my understanding, it doesn't functionally make a difference but it makes this a cleaner review since the result of this is replacing `ActiveChainstate()`.",
      "created_at": "2023-05-16T09:11:22Z",
      "updated_at": "2023-05-16T12:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1194862228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194862228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5559,
      "original_line": 5556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194913264",
      "pull_request_review_id": 1428107827,
      "id": 1194913264,
      "node_id": "PRRC_kwDOABII585HOO3w",
      "diff_hunk": "@@ -4998,12 +4998,15 @@ std::optional<uint256> ChainstateManager::SnapshotBlockhash() const\n     return std::nullopt;\n }\n \n-std::vector<Chainstate*> ChainstateManager::GetAll()\n+std::vector<Chainstate*> ChainstateManager::GetAll(bool assumed_first)\n {\n     LOCK(::cs_main);\n     std::vector<Chainstate*> out;\n+    const auto chainstates = assumed_first ?",
      "path": "src/validation.cpp",
      "position": 43,
      "original_position": 9,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This parameter/api seems kind of unnecessary. Do we actually need/want assumed_first=false anywhere explicitly? Otherwise, I would suggest always returning assumed first and adding a comment that this specific ordering is important.\r\n\r\nAlternatively, if it is better to have a default behavior of assumed_first=false then I would still find it simpler to `reverse` the order in the one place where it's needed rather than adding the param.",
      "created_at": "2023-05-16T09:50:56Z",
      "updated_at": "2023-05-16T12:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1194913264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194913264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5005,
      "original_line": 5005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195081071",
      "pull_request_review_id": 1428107827,
      "id": 1195081071,
      "node_id": "PRRC_kwDOABII585HO31v",
      "diff_hunk": "@@ -5224,9 +5224,10 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, Peer& peer, std::chrono::micros\n     if (!peer.m_addr_relay_enabled) return;\n \n     LOCK(peer.m_addr_send_times_mutex);\n+    const bool is_ibd{WITH_LOCK(::cs_main, return m_chainman.IsAnyChainInIBD())};",
      "path": "src/net_processing.cpp",
      "position": 221,
      "original_position": 13,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "46a6fe7f42fea0dbc99d44a2c01162062a0c8a57",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I would prefer `in_ibd` here",
      "created_at": "2023-05-16T12:21:40Z",
      "updated_at": "2023-05-16T12:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1195081071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195081071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5239,
      "original_line": 5227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195472070",
      "pull_request_review_id": 1429052571,
      "id": 1195472070,
      "node_id": "PRRC_kwDOABII585HQXTG",
      "diff_hunk": "@@ -5808,21 +5849,44 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Message: getdata (blocks)\n         //\n         std::vector<CInv> vGetData;\n-        if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.ActiveChainstate().IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-            std::vector<const CBlockIndex*> vToDownload;\n-            NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n-            for (const CBlockIndex *pindex : vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(*peer);\n-                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                BlockRequested(pto->GetId(), *pindex);\n-                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->GetId());\n-            }\n-            if (state.nBlocksInFlight == 0 && staller != -1) {\n-                if (State(staller)->m_stalling_since == 0us) {\n-                    State(staller)->m_stalling_since = current_time;\n-                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n+\n+        // The first chainstate in line for processing will likely exhaust this\n+        // during IBD, but once it hits a tip capacity will trickle into subsequent\n+        // chainstates.\n+        unsigned int requests_available{\n+            state.nBlocksInFlight >= MAX_BLOCKS_IN_TRANSIT_PER_PEER ?\n+                0U :\n+                static_cast<unsigned int>(MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight)};\n+\n+        const bool can_serve = CanServeBlocks(*peer);\n+        const bool is_limited = IsLimitedPeer(*peer);\n+\n+        // It is more important to get to the network's tip\n+        // quickly than do the background validation on the snapshot.\n+        for (const auto* const chainstate : m_chainman.GetAll(/*assumed_first=*/true)) {\n+            if (can_serve &&",
      "path": "src/net_processing.cpp",
      "position": 274,
      "original_position": 188,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "058fecdc7d: could still move `if (can_serve` out of the loop to reduce brackets.",
      "created_at": "2023-05-16T17:17:16Z",
      "updated_at": "2023-05-16T17:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1195472070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195472070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5883,
      "original_line": 5867,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195482361",
      "pull_request_review_id": 1429052571,
      "id": 1195482361,
      "node_id": "PRRC_kwDOABII585HQZz5",
      "diff_hunk": "@@ -4998,12 +4998,15 @@ std::optional<uint256> ChainstateManager::SnapshotBlockhash() const\n     return std::nullopt;\n }\n \n-std::vector<Chainstate*> ChainstateManager::GetAll()\n+std::vector<Chainstate*> ChainstateManager::GetAll(bool assumed_first)\n {\n     LOCK(::cs_main);\n     std::vector<Chainstate*> out;\n+    const auto chainstates = assumed_first ?",
      "path": "src/validation.cpp",
      "position": 43,
      "original_position": 9,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "in_reply_to_id": 1194913264,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems fairly easy to refactor later.",
      "created_at": "2023-05-16T17:27:41Z",
      "updated_at": "2023-05-16T17:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1195482361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195482361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5005,
      "original_line": 5005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200585547",
      "pull_request_review_id": 1436750098,
      "id": 1200585547,
      "node_id": "PRRC_kwDOABII585Hj3tL",
      "diff_hunk": "@@ -5543,6 +5548,28 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n     return SnapshotCompletionResult::SUCCESS;\n }\n \n+Chainstate& ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    AssertLockHeld(::cs_main);\n+    // Early return to avoid unnecessary blockindex lookup when assumeutxo is not in use.\n+    if (!m_snapshot_chainstate) {",
      "path": "src/validation.cpp",
      "position": 60,
      "original_position": 42,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "c14ae132c5a5204a9a755c84c6de05fb30459221",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In c14ae132c5a5204a9a755c84c6de05fb30459221, is there a reason for not using `IsSnapshotActive()` here?",
      "created_at": "2023-05-22T14:19:52Z",
      "updated_at": "2023-05-22T14:19:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1200585547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200585547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5558,
      "original_line": 5555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200653417",
      "pull_request_review_id": 1436854309,
      "id": 1200653417,
      "node_id": "PRRC_kwDOABII585HkIRp",
      "diff_hunk": "@@ -1301,7 +1316,12 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\n     }\n }\n \n-void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller)\n+void PeerManagerImpl::FindNextBlocksToDownload(",
      "path": "src/net_processing.cpp",
      "position": 57,
      "original_position": 45,
      "commit_id": "ac9adf012925c770dfe523c5b57451f313cc8be5",
      "original_commit_id": "058fecdc7d2c99af9ae6aedc68c3600321e7c565",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 058fecdc7d2c99af9ae6aedc68c3600321e7c565: just a suggestion but I'd change `FindNextBlocksToDownload` to return `std::vector<const CBlockIndex*>` instead of passing it in the parameters. \r\n",
      "created_at": "2023-05-22T15:09:35Z",
      "updated_at": "2023-05-22T15:09:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24008#discussion_r1200653417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200653417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24008"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1319,
      "original_line": 1319,
      "side": "RIGHT"
    }
  ]
}