{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932",
    "id": 49513693,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDk1MTM2OTM=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6932",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/6932.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/6932.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1cf3dd80a614fddbafac387e446fd83d118e0c25",
    "number": 6932,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "ModifyNewCoins saves database lookups",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "When processing a new transaction, in addition to spending the Coins of its txin's, it creates a new Coins for its outputs.  The existing ModifyCoins function will first make sure this Coins does not already exist.  It can not exist due to BIP 30, but because of that, the lookup can't be cached and always has to go to the database.  Since we are creating the Coins to match the new tx anyway, there is no point in checking if it exists first anyway.  However this should not be used for coinbase tx's in order to preserve the historical behavior of overwriting the two existing duplicate tx pairs.\n\nIn conjunction with #6931 this will help ConnectBlock be much more efficient with caching access to the database.\n\nThis still needs unit tests which exercise the new functionality.\n",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/19",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19/labels",
      "id": 1092458,
      "node_id": "MDk6TWlsZXN0b25lMTA5MjQ1OA==",
      "number": 19,
      "state": "closed",
      "title": "0.12.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 78,
      "created_at": "2015-05-01T12:31:35Z",
      "updated_at": "2016-09-26T14:08:41Z",
      "closed_at": "2016-08-16T10:17:40Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2015-11-03T02:33:38Z",
    "updated_at": "2021-09-08T10:57:18Z",
    "closed_at": "2015-11-18T16:53:42Z",
    "mergeable_state": "unknown",
    "merged_at": "2015-11-18T16:53:42Z",
    "merge_commit_sha": "2de5836e13fade51a1a635239933cb114cebd975",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "morcos:newCoinsThinAir",
      "ref": "newCoinsThinAir",
      "sha": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 21699686,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTY5OTY4Ng==",
        "name": "bitcoin",
        "full_name": "morcos/bitcoin",
        "owner": {
          "login": "morcos",
          "id": 4360349,
          "node_id": "MDQ6VXNlcjQzNjAzNDk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/morcos",
          "html_url": "https://github.com/morcos",
          "followers_url": "https://api.github.com/users/morcos/followers",
          "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
          "organizations_url": "https://api.github.com/users/morcos/orgs",
          "repos_url": "https://api.github.com/users/morcos/repos",
          "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/morcos/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/morcos/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/morcos/bitcoin",
        "archive_url": "https://api.github.com/repos/morcos/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/morcos/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/morcos/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/morcos/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/morcos/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/morcos/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/morcos/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/morcos/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/morcos/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/morcos/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/morcos/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/morcos/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/morcos/bitcoin/events",
        "forks_url": "https://api.github.com/repos/morcos/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/morcos/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/morcos/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/morcos/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/morcos/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/morcos/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/morcos/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/morcos/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/morcos/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/morcos/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/morcos/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/morcos/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/morcos/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/morcos/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/morcos/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/morcos/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:morcos/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/morcos/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/morcos/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/morcos/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/morcos/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/morcos/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/morcos/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/morcos/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/morcos/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/morcos/bitcoin/hooks",
        "svn_url": "https://github.com/morcos/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 119327,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2019-05-22T19:49:00Z",
        "created_at": "2014-07-10T15:39:10Z",
        "updated_at": "2022-02-11T23:59:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 170,
    "deletions": 9,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 5,
    "comments": 9
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDQ3MGY5YWE2YmFmMDJjYTcxNjI1NjRmMzk3MTUzYTJkYTBjNTky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14470f9aa6baf02ca7162564f397153a2da0c592",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14470f9aa6baf02ca7162564f397153a2da0c592",
      "tree": {
        "sha": "7fb16312c72044614b80f243347ee1cb1ac0b390",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fb16312c72044614b80f243347ee1cb1ac0b390"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
          "sha": "8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e"
        }
      ],
      "message": "ModifyNewCoins saves database lookups\n\nWhen processing a new transaction, in addition to spending the Coins of its txin's it creates a new Coins for its outputs.  The existing ModifyCoins function will first make sure this Coins does not already exist.  It can not exist due to BIP 30, but because of that the lookup can't be cached and always has to go to the database.  Since we are creating the coins to match the new tx anyway, there is no point in checking if they exist first anyway.  However this should not be used for coinbase tx's in order to preserve the historical behavior of overwriting the two existing duplicate tx pairs.",
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-03T02:27:15Z"
      },
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-03T02:27:15Z"
      },
      "sha": "14470f9aa6baf02ca7162564f397153a2da0c592"
    },
    {
      "event": "commented",
      "id": 153505158,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzUwNTE1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/153505158",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-03T22:09:48Z",
      "updated_at": "2015-11-03T22:09:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "ConceptACK, will review further and test.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-153505158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "milestoned",
      "id": 456161388,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ1NjE2MTM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/456161388",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T20:08:01Z",
      "milestone": {
        "title": "0.12.0"
      }
    },
    {
      "event": "labeled",
      "id": 460215668,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2MDIxNTY2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460215668",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T15:37:47Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "commented",
      "id": 155697633,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTY5NzYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155697633",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T07:59:01Z",
      "updated_at": "2015-11-11T07:59:01Z",
      "author_association": "MEMBER",
      "body": "Untested, code review ACK. Needs a unit test, though.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155697633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "commented",
      "id": 155701630,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTcwMTYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155701630",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T08:22:34Z",
      "updated_at": "2015-11-11T08:22:34Z",
      "author_association": "MEMBER",
      "body": "Together with #5967 it should be possible to also avoid the db read that's still done for coinbase transactions.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155701630",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2M4MjgyNmY5N2FmOThjOWM5MGIzNTAwOTQ1NjU0NjA2MTI5YmMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03c82826f97af98c9c90b3500945654606129bc1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/03c82826f97af98c9c90b3500945654606129bc1",
      "tree": {
        "sha": "2a1e697ace349dc33e9fe7c87022e46c43551d9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a1e697ace349dc33e9fe7c87022e46c43551d9e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14470f9aa6baf02ca7162564f397153a2da0c592",
          "sha": "14470f9aa6baf02ca7162564f397153a2da0c592",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/14470f9aa6baf02ca7162564f397153a2da0c592"
        }
      ],
      "message": "Make CCoinsViewTest behave like CCoinsViewDB",
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-12T02:19:19Z"
      },
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-11T18:02:02Z"
      },
      "sha": "03c82826f97af98c9c90b3500945654606129bc1"
    },
    {
      "event": "commented",
      "id": 155978638,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTk3ODYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155978638",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T02:34:16Z",
      "updated_at": "2015-11-12T02:34:16Z",
      "author_association": "MEMBER",
      "body": "@sipa I'm not sure if this was the kind of unit test that you had in mind?  I thought it was important to actually test UpdateCoins instead of modifyNewCoins directly because it's how it is used that matters.\n\nThis test passes on master, passes on this PR, but fails when UpdateCoins is changed to just mark coinbases as un-FRESH but still skip the lookup (assuming the assert is commented out to permit this).\n\nHowever if #5967 is merged then the test passes once again.\n",
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155978638",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "mentioned",
      "id": 462002095,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYyMDAyMDk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/462002095",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T02:34:16Z"
    },
    {
      "event": "subscribed",
      "id": 462002096,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MjAwMjA5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/462002096",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T02:34:16Z"
    },
    {
      "event": "commented",
      "id": 156113106,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjExMzEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156113106",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T14:16:29Z",
      "updated_at": "2015-11-12T14:16:29Z",
      "author_association": "MEMBER",
      "body": "@morcos Awesome test.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156113106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "mentioned",
      "id": 462467780,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYyNDY3Nzgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/462467780",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T14:16:29Z"
    },
    {
      "event": "subscribed",
      "id": 462467782,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MjQ2Nzc4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/462467782",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T14:16:29Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2YzZGQ4MGE2MTRmZGRiYWZhYzM4N2U0NDZmZDgzZDExOGUwYzI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "tree": {
        "sha": "7de6dd453b7c62b0d98098e38ef051210fa192e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7de6dd453b7c62b0d98098e38ef051210fa192e0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03c82826f97af98c9c90b3500945654606129bc1",
          "sha": "03c82826f97af98c9c90b3500945654606129bc1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/03c82826f97af98c9c90b3500945654606129bc1"
        }
      ],
      "message": "Add unit test for UpdateCoins",
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-12T14:55:12Z"
      },
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-12T01:36:16Z"
      },
      "sha": "1cf3dd80a614fddbafac387e446fd83d118e0c25"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 462514225,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYyNTE0MjI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/462514225",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T14:57:30Z"
    },
    {
      "event": "commented",
      "id": 156128886,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjEyODg4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156128886",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T14:57:54Z",
      "updated_at": "2015-11-12T14:57:54Z",
      "author_association": "MEMBER",
      "body": "ok fixed the mess with the random nValue.\n",
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156128886",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "commented",
      "id": 156132015,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjEzMjAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156132015",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T15:04:42Z",
      "updated_at": "2015-11-12T15:04:42Z",
      "author_association": "MEMBER",
      "body": "ACK\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156132015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "commented",
      "id": 156137582,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjEzNzU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156137582",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T15:26:18Z",
      "updated_at": "2015-11-12T15:26:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "lightly tested ACK\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156137582",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDc5MjY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDc5Mjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 156426767,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQyNjc2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156426767",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T13:05:04Z",
      "updated_at": "2015-11-13T13:05:04Z",
      "author_association": "MEMBER",
      "body": "Code review ACK\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156426767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6932"
    },
    {
      "event": "merged",
      "id": 468167665,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDY4MTY3NjY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468167665",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "created_at": "2015-11-18T16:53:42Z"
    },
    {
      "event": "closed",
      "id": 468167667,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDY4MTY3NjY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468167667",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T16:53:42Z"
    },
    {
      "event": "referenced",
      "id": 468167751,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2ODE2Nzc1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468167751",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "73fa5e604356ab4182971376fd758b4680737b5a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73fa5e604356ab4182971376fd758b4680737b5a",
      "created_at": "2015-11-18T16:53:44Z"
    },
    {
      "event": "referenced",
      "id": 1623937231,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2MjM5MzcyMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623937231",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9217c8e09347bf3d17fb8443c5fd07dc45a20d1e",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/9217c8e09347bf3d17fb8443c5fd07dc45a20d1e",
      "created_at": "2018-05-14T04:55:33Z"
    },
    {
      "event": "referenced",
      "id": 1624043821,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2MjQwNDM4MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1624043821",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ce4bc14255b080428f1fa9e8da09aeba4aec1ba",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/8ce4bc14255b080428f1fa9e8da09aeba4aec1ba",
      "created_at": "2018-05-14T06:46:37Z"
    },
    {
      "event": "referenced",
      "id": 1655092343,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NTUwOTIzNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1655092343",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "03532b173cb0f66e04f6aadbb3b66af184eb9557",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/03532b173cb0f66e04f6aadbb3b66af184eb9557",
      "created_at": "2018-05-31T04:17:34Z"
    },
    {
      "event": "referenced",
      "id": 1999161741,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5OTkxNjE3NDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1999161741",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9cd74866c72857145952bb9e3aa8e0c04a99b711",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/9cd74866c72857145952bb9e3aa8e0c04a99b711",
      "created_at": "2018-11-30T23:25:36Z"
    },
    {
      "event": "referenced",
      "id": 2180891690,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxODA4OTE2OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2180891690",
      "actor": {
        "login": "milesmanley",
        "id": 35818597,
        "node_id": "MDQ6VXNlcjM1ODE4NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35818597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/milesmanley",
        "html_url": "https://github.com/milesmanley",
        "followers_url": "https://api.github.com/users/milesmanley/followers",
        "following_url": "https://api.github.com/users/milesmanley/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/milesmanley/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/milesmanley/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/milesmanley/subscriptions",
        "organizations_url": "https://api.github.com/users/milesmanley/orgs",
        "repos_url": "https://api.github.com/users/milesmanley/repos",
        "events_url": "https://api.github.com/users/milesmanley/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/milesmanley/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "67d2fb18d28f05fea1fea95afb4fe100e8a414ae",
      "commit_url": "https://api.github.com/repos/RunOnFlux/fluxd/commits/67d2fb18d28f05fea1fea95afb4fe100e8a414ae",
      "created_at": "2019-03-05T12:59:19Z"
    },
    {
      "event": "referenced",
      "id": 3635756939,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MzU3NTY5Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3635756939",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3c767c46b54d9aa12a4e9105fb1cffa06317cca1",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/3c767c46b54d9aa12a4e9105fb1cffa06317cca1",
      "created_at": "2020-08-08T14:48:13Z"
    },
    {
      "event": "locked",
      "id": 5271522584,
      "node_id": "LOE_lADOABII584G1qIKzwAAAAE6NQ0Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271522584",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:57:18Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44777833",
      "pull_request_review_id": null,
      "id": 44777833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3ODMz",
      "diff_hunk": "@@ -197,4 +202,133 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     BOOST_CHECK(missed_an_entry);\n }\n \n+// This test is similar to the previous test\n+// except the emphasis is on testing the functionality of UpdateCoins\n+// random txs are created and UpdateCoins is used to update the cache stack\n+// In particular it is tested that spending a duplicate coinbase tx\n+// has the expected effect (the other duplicate is overwitten at all cache levels)\n+BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n+{\n+    bool spent_a_duplicate_coinbase = false;\n+    // A simple map to track what we expect the cache stack to represent.\n+    std::map<uint256, CCoins> result;\n+\n+    // The cache stack.\n+    CCoinsViewTest base; // A CCoinsViewTest at the bottom.\n+    std::vector<CCoinsViewCacheTest*> stack; // A stack of CCoinsViewCaches on top.\n+    stack.push_back(new CCoinsViewCacheTest(&base)); // Start with one cache.\n+\n+    // Track the txids we've used and whether they have been spent or not\n+    std::map<uint256, CAmount> coinbaseids;\n+    std::set<uint256> alltxids;\n+    std::set<uint256> duplicateids;\n+\n+    for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n+        {\n+            CMutableTransaction tx;\n+            tx.vin.resize(1);\n+            tx.vout.resize(1);\n+            tx.vout[0].nValue = i; //Keep txs unique unless intended to duplicate\n+            unsigned int height = insecure_rand();\n+\n+            // 1/10 times create a coinbase\n+            if (insecure_rand() % 10 == 0 || coinbaseids.size() < 10) {\n+                // 1/100 times create a duplicate coinbase\n+                if (insecure_rand() % 10 == 0 && coinbaseids.size()) {\n+                    std::map<uint256, CAmount>::iterator coinbaseIt = coinbaseids.lower_bound(GetRandHash());\n+                    if (coinbaseIt == coinbaseids.end()) {\n+                        coinbaseIt = coinbaseids.begin();\n+                    }\n+                    //Use same random value to have same hash and be a true duplicate\n+                    tx.vout[0].nValue = coinbaseIt->second;\n+                    assert(tx.GetHash() == coinbaseIt->first);\n+                    duplicateids.insert(coinbaseIt->first);\n+                }\n+                else {\n+                    coinbaseids[tx.GetHash()] = tx.vout[0].nValue;\n+                }\n+                assert(CTransaction(tx).IsCoinBase());\n+            }\n+            // 9/10 times create a regular tx\n+            else {\n+                uint256 prevouthash;\n+                // equally likely to spend coinbase or non coinbase\n+                std::set<uint256>::iterator txIt = alltxids.lower_bound(GetRandHash());\n+                if (txIt == alltxids.end()) {\n+                    txIt = alltxids.begin();\n+                }\n+                prevouthash = *txIt;\n+\n+                // Construct the tx to spend the coins of prevouthash\n+                tx.vin[0].prevout.hash = prevouthash;\n+                tx.vin[0].prevout.n = 0;\n+\n+                // Update the expected result of prevouthash to know these coins are spent\n+                CCoins& oldcoins = result[prevouthash];\n+                oldcoins.Clear();\n+\n+                // It is of particular importance here that once we spend a coinbase tx hash\n+                // it is no longer available to be duplicated (or spent again)\n+                // BIP 34 in conjunction with enforcing BIP 30 (at least until BIP 34 was active)\n+                // results in the fact that no coinbases were duplicated after they were already spent\n+                alltxids.erase(prevouthash);\n+                coinbaseids.erase(prevouthash);\n+\n+                // The test is designed to ensure spending a duplicate coinbase will work properly\n+                // if that ever happens and not resurrect the previously overwritten coinbase\n+                if (duplicateids.count(prevouthash))\n+                    spent_a_duplicate_coinbase = true;\n+\n+                assert(!CTransaction(tx).IsCoinBase());\n+            }\n+            // Track this tx to possibly spend later\n+            alltxids.insert(tx.GetHash());\n+\n+            // Update the expected result to know about the new output coins\n+            CCoins &coins = result[tx.GetHash()];\n+            coins.FromTx(tx, height);\n+\n+            CValidationState dummy;\n+            UpdateCoins(tx, dummy, *(stack.back()), height);\n+        }\n+\n+        // Once every 1000 iterations and at the end, verify the full cache.\n+        if (insecure_rand() % 1000 == 1 || i == NUM_SIMULATION_ITERATIONS - 1) {\n+            for (std::map<uint256, CCoins>::iterator it = result.begin(); it != result.end(); it++) {\n+                const CCoins* coins = stack.back()->AccessCoins(it->first);\n+                if (coins) {\n+                    BOOST_CHECK(*coins == it->second);\n+                 } else {\n+                    BOOST_CHECK(it->second.IsPruned());\n+                 }\n+            }\n+        }\n+\n+        if (insecure_rand() % 100 == 0) {\n+            // Every 100 iterations, change the cache stack.",
      "path": "src/test/coins_tests.cpp",
      "position": 141,
      "original_position": 141,
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "original_commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If the purpose is to do this every 100 iterations, why use random?\nEither the comment or the code is wrong :)\n",
      "created_at": "2015-11-13T12:39:37Z",
      "updated_at": "2015-11-13T12:39:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44777833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44777833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 308,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44778108",
      "pull_request_review_id": null,
      "id": 44778108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc4MTA4",
      "diff_hunk": "@@ -197,4 +202,133 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     BOOST_CHECK(missed_an_entry);\n }\n \n+// This test is similar to the previous test\n+// except the emphasis is on testing the functionality of UpdateCoins\n+// random txs are created and UpdateCoins is used to update the cache stack\n+// In particular it is tested that spending a duplicate coinbase tx\n+// has the expected effect (the other duplicate is overwitten at all cache levels)\n+BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n+{\n+    bool spent_a_duplicate_coinbase = false;\n+    // A simple map to track what we expect the cache stack to represent.\n+    std::map<uint256, CCoins> result;\n+\n+    // The cache stack.\n+    CCoinsViewTest base; // A CCoinsViewTest at the bottom.\n+    std::vector<CCoinsViewCacheTest*> stack; // A stack of CCoinsViewCaches on top.\n+    stack.push_back(new CCoinsViewCacheTest(&base)); // Start with one cache.\n+\n+    // Track the txids we've used and whether they have been spent or not\n+    std::map<uint256, CAmount> coinbaseids;\n+    std::set<uint256> alltxids;\n+    std::set<uint256> duplicateids;\n+\n+    for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n+        {\n+            CMutableTransaction tx;\n+            tx.vin.resize(1);\n+            tx.vout.resize(1);\n+            tx.vout[0].nValue = i; //Keep txs unique unless intended to duplicate\n+            unsigned int height = insecure_rand();\n+\n+            // 1/10 times create a coinbase\n+            if (insecure_rand() % 10 == 0 || coinbaseids.size() < 10) {\n+                // 1/100 times create a duplicate coinbase\n+                if (insecure_rand() % 10 == 0 && coinbaseids.size()) {\n+                    std::map<uint256, CAmount>::iterator coinbaseIt = coinbaseids.lower_bound(GetRandHash());\n+                    if (coinbaseIt == coinbaseids.end()) {\n+                        coinbaseIt = coinbaseids.begin();\n+                    }\n+                    //Use same random value to have same hash and be a true duplicate\n+                    tx.vout[0].nValue = coinbaseIt->second;\n+                    assert(tx.GetHash() == coinbaseIt->first);\n+                    duplicateids.insert(coinbaseIt->first);\n+                }\n+                else {\n+                    coinbaseids[tx.GetHash()] = tx.vout[0].nValue;\n+                }\n+                assert(CTransaction(tx).IsCoinBase());\n+            }\n+            // 9/10 times create a regular tx\n+            else {\n+                uint256 prevouthash;\n+                // equally likely to spend coinbase or non coinbase\n+                std::set<uint256>::iterator txIt = alltxids.lower_bound(GetRandHash());\n+                if (txIt == alltxids.end()) {\n+                    txIt = alltxids.begin();\n+                }\n+                prevouthash = *txIt;\n+\n+                // Construct the tx to spend the coins of prevouthash\n+                tx.vin[0].prevout.hash = prevouthash;\n+                tx.vin[0].prevout.n = 0;\n+\n+                // Update the expected result of prevouthash to know these coins are spent\n+                CCoins& oldcoins = result[prevouthash];\n+                oldcoins.Clear();\n+\n+                // It is of particular importance here that once we spend a coinbase tx hash\n+                // it is no longer available to be duplicated (or spent again)\n+                // BIP 34 in conjunction with enforcing BIP 30 (at least until BIP 34 was active)\n+                // results in the fact that no coinbases were duplicated after they were already spent\n+                alltxids.erase(prevouthash);\n+                coinbaseids.erase(prevouthash);\n+\n+                // The test is designed to ensure spending a duplicate coinbase will work properly\n+                // if that ever happens and not resurrect the previously overwritten coinbase\n+                if (duplicateids.count(prevouthash))\n+                    spent_a_duplicate_coinbase = true;\n+\n+                assert(!CTransaction(tx).IsCoinBase());\n+            }\n+            // Track this tx to possibly spend later\n+            alltxids.insert(tx.GetHash());\n+\n+            // Update the expected result to know about the new output coins\n+            CCoins &coins = result[tx.GetHash()];\n+            coins.FromTx(tx, height);\n+\n+            CValidationState dummy;\n+            UpdateCoins(tx, dummy, *(stack.back()), height);\n+        }\n+\n+        // Once every 1000 iterations and at the end, verify the full cache.\n+        if (insecure_rand() % 1000 == 1 || i == NUM_SIMULATION_ITERATIONS - 1) {\n+            for (std::map<uint256, CCoins>::iterator it = result.begin(); it != result.end(); it++) {\n+                const CCoins* coins = stack.back()->AccessCoins(it->first);\n+                if (coins) {\n+                    BOOST_CHECK(*coins == it->second);\n+                 } else {\n+                    BOOST_CHECK(it->second.IsPruned());\n+                 }\n+            }\n+        }\n+\n+        if (insecure_rand() % 100 == 0) {\n+            // Every 100 iterations, change the cache stack.",
      "path": "src/test/coins_tests.cpp",
      "position": 141,
      "original_position": 141,
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "original_commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's copied from the test above that I wrote. It's intended to be random, so the comment is wrong :)\n",
      "created_at": "2015-11-13T12:43:07Z",
      "updated_at": "2015-11-13T12:43:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44778108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44778108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 308,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44779703",
      "pull_request_review_id": null,
      "id": 44779703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NzAz",
      "diff_hunk": "@@ -197,4 +202,133 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     BOOST_CHECK(missed_an_entry);\n }\n \n+// This test is similar to the previous test\n+// except the emphasis is on testing the functionality of UpdateCoins\n+// random txs are created and UpdateCoins is used to update the cache stack\n+// In particular it is tested that spending a duplicate coinbase tx\n+// has the expected effect (the other duplicate is overwitten at all cache levels)\n+BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n+{\n+    bool spent_a_duplicate_coinbase = false;\n+    // A simple map to track what we expect the cache stack to represent.\n+    std::map<uint256, CCoins> result;\n+\n+    // The cache stack.\n+    CCoinsViewTest base; // A CCoinsViewTest at the bottom.\n+    std::vector<CCoinsViewCacheTest*> stack; // A stack of CCoinsViewCaches on top.\n+    stack.push_back(new CCoinsViewCacheTest(&base)); // Start with one cache.\n+\n+    // Track the txids we've used and whether they have been spent or not\n+    std::map<uint256, CAmount> coinbaseids;\n+    std::set<uint256> alltxids;\n+    std::set<uint256> duplicateids;\n+\n+    for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n+        {\n+            CMutableTransaction tx;\n+            tx.vin.resize(1);\n+            tx.vout.resize(1);\n+            tx.vout[0].nValue = i; //Keep txs unique unless intended to duplicate\n+            unsigned int height = insecure_rand();\n+\n+            // 1/10 times create a coinbase\n+            if (insecure_rand() % 10 == 0 || coinbaseids.size() < 10) {\n+                // 1/100 times create a duplicate coinbase\n+                if (insecure_rand() % 10 == 0 && coinbaseids.size()) {\n+                    std::map<uint256, CAmount>::iterator coinbaseIt = coinbaseids.lower_bound(GetRandHash());\n+                    if (coinbaseIt == coinbaseids.end()) {\n+                        coinbaseIt = coinbaseids.begin();\n+                    }\n+                    //Use same random value to have same hash and be a true duplicate\n+                    tx.vout[0].nValue = coinbaseIt->second;\n+                    assert(tx.GetHash() == coinbaseIt->first);\n+                    duplicateids.insert(coinbaseIt->first);\n+                }\n+                else {\n+                    coinbaseids[tx.GetHash()] = tx.vout[0].nValue;\n+                }\n+                assert(CTransaction(tx).IsCoinBase());\n+            }\n+            // 9/10 times create a regular tx\n+            else {\n+                uint256 prevouthash;\n+                // equally likely to spend coinbase or non coinbase\n+                std::set<uint256>::iterator txIt = alltxids.lower_bound(GetRandHash());\n+                if (txIt == alltxids.end()) {\n+                    txIt = alltxids.begin();\n+                }\n+                prevouthash = *txIt;\n+\n+                // Construct the tx to spend the coins of prevouthash\n+                tx.vin[0].prevout.hash = prevouthash;\n+                tx.vin[0].prevout.n = 0;\n+\n+                // Update the expected result of prevouthash to know these coins are spent\n+                CCoins& oldcoins = result[prevouthash];\n+                oldcoins.Clear();\n+\n+                // It is of particular importance here that once we spend a coinbase tx hash\n+                // it is no longer available to be duplicated (or spent again)\n+                // BIP 34 in conjunction with enforcing BIP 30 (at least until BIP 34 was active)\n+                // results in the fact that no coinbases were duplicated after they were already spent\n+                alltxids.erase(prevouthash);\n+                coinbaseids.erase(prevouthash);\n+\n+                // The test is designed to ensure spending a duplicate coinbase will work properly\n+                // if that ever happens and not resurrect the previously overwritten coinbase\n+                if (duplicateids.count(prevouthash))\n+                    spent_a_duplicate_coinbase = true;\n+\n+                assert(!CTransaction(tx).IsCoinBase());\n+            }\n+            // Track this tx to possibly spend later\n+            alltxids.insert(tx.GetHash());\n+\n+            // Update the expected result to know about the new output coins\n+            CCoins &coins = result[tx.GetHash()];\n+            coins.FromTx(tx, height);\n+\n+            CValidationState dummy;\n+            UpdateCoins(tx, dummy, *(stack.back()), height);\n+        }\n+\n+        // Once every 1000 iterations and at the end, verify the full cache.\n+        if (insecure_rand() % 1000 == 1 || i == NUM_SIMULATION_ITERATIONS - 1) {\n+            for (std::map<uint256, CCoins>::iterator it = result.begin(); it != result.end(); it++) {\n+                const CCoins* coins = stack.back()->AccessCoins(it->first);\n+                if (coins) {\n+                    BOOST_CHECK(*coins == it->second);\n+                 } else {\n+                    BOOST_CHECK(it->second.IsPruned());\n+                 }\n+            }\n+        }\n+\n+        if (insecure_rand() % 100 == 0) {\n+            // Every 100 iterations, change the cache stack.\n+            if (stack.size() > 0 && insecure_rand() % 2 == 0) {\n+                stack.back()->Flush();\n+                delete stack.back();",
      "path": "src/test/coins_tests.cpp",
      "position": 144,
      "original_position": 144,
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "original_commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this was in production code I'd prefer to use a RAII pointer type (such as boost::shared_ptr) inside stack instead of explicit delete, because of exception safety and memory leaks.\nAs it is just the tests, mehh.\n",
      "created_at": "2015-11-13T13:04:37Z",
      "updated_at": "2015-11-13T13:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44779703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44779703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44779920",
      "pull_request_review_id": null,
      "id": 44779920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5OTIw",
      "diff_hunk": "@@ -197,4 +202,133 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     BOOST_CHECK(missed_an_entry);\n }\n \n+// This test is similar to the previous test\n+// except the emphasis is on testing the functionality of UpdateCoins\n+// random txs are created and UpdateCoins is used to update the cache stack\n+// In particular it is tested that spending a duplicate coinbase tx\n+// has the expected effect (the other duplicate is overwitten at all cache levels)\n+BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n+{\n+    bool spent_a_duplicate_coinbase = false;\n+    // A simple map to track what we expect the cache stack to represent.\n+    std::map<uint256, CCoins> result;\n+\n+    // The cache stack.\n+    CCoinsViewTest base; // A CCoinsViewTest at the bottom.\n+    std::vector<CCoinsViewCacheTest*> stack; // A stack of CCoinsViewCaches on top.\n+    stack.push_back(new CCoinsViewCacheTest(&base)); // Start with one cache.\n+\n+    // Track the txids we've used and whether they have been spent or not\n+    std::map<uint256, CAmount> coinbaseids;\n+    std::set<uint256> alltxids;\n+    std::set<uint256> duplicateids;\n+\n+    for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n+        {\n+            CMutableTransaction tx;\n+            tx.vin.resize(1);\n+            tx.vout.resize(1);\n+            tx.vout[0].nValue = i; //Keep txs unique unless intended to duplicate\n+            unsigned int height = insecure_rand();\n+\n+            // 1/10 times create a coinbase\n+            if (insecure_rand() % 10 == 0 || coinbaseids.size() < 10) {\n+                // 1/100 times create a duplicate coinbase\n+                if (insecure_rand() % 10 == 0 && coinbaseids.size()) {\n+                    std::map<uint256, CAmount>::iterator coinbaseIt = coinbaseids.lower_bound(GetRandHash());\n+                    if (coinbaseIt == coinbaseids.end()) {\n+                        coinbaseIt = coinbaseids.begin();\n+                    }\n+                    //Use same random value to have same hash and be a true duplicate\n+                    tx.vout[0].nValue = coinbaseIt->second;\n+                    assert(tx.GetHash() == coinbaseIt->first);\n+                    duplicateids.insert(coinbaseIt->first);\n+                }\n+                else {\n+                    coinbaseids[tx.GetHash()] = tx.vout[0].nValue;\n+                }\n+                assert(CTransaction(tx).IsCoinBase());\n+            }\n+            // 9/10 times create a regular tx\n+            else {\n+                uint256 prevouthash;\n+                // equally likely to spend coinbase or non coinbase\n+                std::set<uint256>::iterator txIt = alltxids.lower_bound(GetRandHash());\n+                if (txIt == alltxids.end()) {\n+                    txIt = alltxids.begin();\n+                }\n+                prevouthash = *txIt;\n+\n+                // Construct the tx to spend the coins of prevouthash\n+                tx.vin[0].prevout.hash = prevouthash;\n+                tx.vin[0].prevout.n = 0;\n+\n+                // Update the expected result of prevouthash to know these coins are spent\n+                CCoins& oldcoins = result[prevouthash];\n+                oldcoins.Clear();\n+\n+                // It is of particular importance here that once we spend a coinbase tx hash\n+                // it is no longer available to be duplicated (or spent again)\n+                // BIP 34 in conjunction with enforcing BIP 30 (at least until BIP 34 was active)\n+                // results in the fact that no coinbases were duplicated after they were already spent\n+                alltxids.erase(prevouthash);\n+                coinbaseids.erase(prevouthash);\n+\n+                // The test is designed to ensure spending a duplicate coinbase will work properly\n+                // if that ever happens and not resurrect the previously overwritten coinbase\n+                if (duplicateids.count(prevouthash))\n+                    spent_a_duplicate_coinbase = true;\n+\n+                assert(!CTransaction(tx).IsCoinBase());\n+            }\n+            // Track this tx to possibly spend later\n+            alltxids.insert(tx.GetHash());\n+\n+            // Update the expected result to know about the new output coins\n+            CCoins &coins = result[tx.GetHash()];\n+            coins.FromTx(tx, height);\n+\n+            CValidationState dummy;\n+            UpdateCoins(tx, dummy, *(stack.back()), height);\n+        }\n+\n+        // Once every 1000 iterations and at the end, verify the full cache.\n+        if (insecure_rand() % 1000 == 1 || i == NUM_SIMULATION_ITERATIONS - 1) {\n+            for (std::map<uint256, CCoins>::iterator it = result.begin(); it != result.end(); it++) {\n+                const CCoins* coins = stack.back()->AccessCoins(it->first);\n+                if (coins) {\n+                    BOOST_CHECK(*coins == it->second);\n+                 } else {\n+                    BOOST_CHECK(it->second.IsPruned());\n+                 }\n+            }\n+        }\n+\n+        if (insecure_rand() % 100 == 0) {\n+            // Every 100 iterations, change the cache stack.\n+            if (stack.size() > 0 && insecure_rand() % 2 == 0) {\n+                stack.back()->Flush();\n+                delete stack.back();",
      "path": "src/test/coins_tests.cpp",
      "position": 144,
      "original_position": 144,
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "original_commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe I originally tried using boost::unique_ptr, but you can't use\nthat inside stl containers.\n",
      "created_at": "2015-11-13T13:06:47Z",
      "updated_at": "2015-11-13T13:06:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44779920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44779920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44780905",
      "pull_request_review_id": null,
      "id": 44780905,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwOTA1",
      "diff_hunk": "@@ -197,4 +202,133 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     BOOST_CHECK(missed_an_entry);\n }\n \n+// This test is similar to the previous test\n+// except the emphasis is on testing the functionality of UpdateCoins\n+// random txs are created and UpdateCoins is used to update the cache stack\n+// In particular it is tested that spending a duplicate coinbase tx\n+// has the expected effect (the other duplicate is overwitten at all cache levels)\n+BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n+{\n+    bool spent_a_duplicate_coinbase = false;\n+    // A simple map to track what we expect the cache stack to represent.\n+    std::map<uint256, CCoins> result;\n+\n+    // The cache stack.\n+    CCoinsViewTest base; // A CCoinsViewTest at the bottom.\n+    std::vector<CCoinsViewCacheTest*> stack; // A stack of CCoinsViewCaches on top.\n+    stack.push_back(new CCoinsViewCacheTest(&base)); // Start with one cache.\n+\n+    // Track the txids we've used and whether they have been spent or not\n+    std::map<uint256, CAmount> coinbaseids;\n+    std::set<uint256> alltxids;\n+    std::set<uint256> duplicateids;\n+\n+    for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n+        {\n+            CMutableTransaction tx;\n+            tx.vin.resize(1);\n+            tx.vout.resize(1);\n+            tx.vout[0].nValue = i; //Keep txs unique unless intended to duplicate\n+            unsigned int height = insecure_rand();\n+\n+            // 1/10 times create a coinbase\n+            if (insecure_rand() % 10 == 0 || coinbaseids.size() < 10) {\n+                // 1/100 times create a duplicate coinbase\n+                if (insecure_rand() % 10 == 0 && coinbaseids.size()) {\n+                    std::map<uint256, CAmount>::iterator coinbaseIt = coinbaseids.lower_bound(GetRandHash());\n+                    if (coinbaseIt == coinbaseids.end()) {\n+                        coinbaseIt = coinbaseids.begin();\n+                    }\n+                    //Use same random value to have same hash and be a true duplicate\n+                    tx.vout[0].nValue = coinbaseIt->second;\n+                    assert(tx.GetHash() == coinbaseIt->first);\n+                    duplicateids.insert(coinbaseIt->first);\n+                }\n+                else {\n+                    coinbaseids[tx.GetHash()] = tx.vout[0].nValue;\n+                }\n+                assert(CTransaction(tx).IsCoinBase());\n+            }\n+            // 9/10 times create a regular tx\n+            else {\n+                uint256 prevouthash;\n+                // equally likely to spend coinbase or non coinbase\n+                std::set<uint256>::iterator txIt = alltxids.lower_bound(GetRandHash());\n+                if (txIt == alltxids.end()) {\n+                    txIt = alltxids.begin();\n+                }\n+                prevouthash = *txIt;\n+\n+                // Construct the tx to spend the coins of prevouthash\n+                tx.vin[0].prevout.hash = prevouthash;\n+                tx.vin[0].prevout.n = 0;\n+\n+                // Update the expected result of prevouthash to know these coins are spent\n+                CCoins& oldcoins = result[prevouthash];\n+                oldcoins.Clear();\n+\n+                // It is of particular importance here that once we spend a coinbase tx hash\n+                // it is no longer available to be duplicated (or spent again)\n+                // BIP 34 in conjunction with enforcing BIP 30 (at least until BIP 34 was active)\n+                // results in the fact that no coinbases were duplicated after they were already spent\n+                alltxids.erase(prevouthash);\n+                coinbaseids.erase(prevouthash);\n+\n+                // The test is designed to ensure spending a duplicate coinbase will work properly\n+                // if that ever happens and not resurrect the previously overwritten coinbase\n+                if (duplicateids.count(prevouthash))\n+                    spent_a_duplicate_coinbase = true;\n+\n+                assert(!CTransaction(tx).IsCoinBase());\n+            }\n+            // Track this tx to possibly spend later\n+            alltxids.insert(tx.GetHash());\n+\n+            // Update the expected result to know about the new output coins\n+            CCoins &coins = result[tx.GetHash()];\n+            coins.FromTx(tx, height);\n+\n+            CValidationState dummy;\n+            UpdateCoins(tx, dummy, *(stack.back()), height);\n+        }\n+\n+        // Once every 1000 iterations and at the end, verify the full cache.\n+        if (insecure_rand() % 1000 == 1 || i == NUM_SIMULATION_ITERATIONS - 1) {\n+            for (std::map<uint256, CCoins>::iterator it = result.begin(); it != result.end(); it++) {\n+                const CCoins* coins = stack.back()->AccessCoins(it->first);\n+                if (coins) {\n+                    BOOST_CHECK(*coins == it->second);\n+                 } else {\n+                    BOOST_CHECK(it->second.IsPruned());\n+                 }\n+            }\n+        }\n+\n+        if (insecure_rand() % 100 == 0) {\n+            // Every 100 iterations, change the cache stack.\n+            if (stack.size() > 0 && insecure_rand() % 2 == 0) {\n+                stack.back()->Flush();\n+                delete stack.back();",
      "path": "src/test/coins_tests.cpp",
      "position": 144,
      "original_position": 144,
      "commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "original_commit_id": "1cf3dd80a614fddbafac387e446fd83d118e0c25",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right - I think shared_ptr is the only boost pointer you can use inside containers.\n\nEdit: with **c++11** unique_ptr it should be possible, though, I guess we can change it by then :)\n",
      "created_at": "2015-11-13T13:19:09Z",
      "updated_at": "2015-11-13T13:29:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44780905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44780905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6932"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}