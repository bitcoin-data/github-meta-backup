{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881",
    "id": 236400111,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2NDAwMTEx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14881",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14881.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14881.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14881",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14881/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/407e25564670b6c216f3c088965c930642ec85f0",
    "number": 14881,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Tests: Contract testing for the procedure AddTimeData",
    "user": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Objective: Make the contract  for AddTimeData testable.\r\n\r\nThe procedure AddTimeData is stateful, so any testing beyond trivialities requires some modification in the code:\r\n\r\n- Separation between orchestration (lock/unlock) and algorithm\r\n- Pushing static (stateful) variables out of the procedure body \r\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-12-06T03:55:05Z",
    "updated_at": "2021-09-08T12:00:42Z",
    "closed_at": "2018-12-28T17:43:34Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "9cb917bb41515b55b83c4fb7d9f441b3bc48cc31",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "mmachicao:timedata_contract_test",
      "ref": "timedata_contract_test",
      "sha": "407e25564670b6c216f3c088965c930642ec85f0",
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "86e0a33f5c382513d5179e3fdf158baf952d7e2f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 332,
    "deletions": 67,
    "changed_files": 6,
    "commits": 15,
    "review_comments": 14,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODg5ODUxMjVmNzJiNTY4ZmNlMzJhMDkwNzE1YjRhYmUxOGJmODEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/088985125f72b568fce32a090715b4abe18bf810",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/088985125f72b568fce32a090715b4abe18bf810",
      "tree": {
        "sha": "8f5b8ddea02c7c40a83d6a05339ea7a285ac22cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f5b8ddea02c7c40a83d6a05339ea7a285ac22cf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
          "sha": "60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77"
        }
      ],
      "message": "Unit testing of procedure AddTimeData",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T02:18:41Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T01:50:43Z"
      },
      "sha": "088985125f72b568fce32a090715b4abe18bf810"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzRkZDkzZmYxMmJmY2FhNWZiYzRjZmYxMzNjNjVjZTNlNzA2ZGMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3",
      "tree": {
        "sha": "4e4e740fd3aba7d291a9e1203d49d85b3464ae3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e4e740fd3aba7d291a9e1203d49d85b3464ae3a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/088985125f72b568fce32a090715b4abe18bf810",
          "sha": "088985125f72b568fce32a090715b4abe18bf810",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/088985125f72b568fce32a090715b4abe18bf810"
        }
      ],
      "message": "Test AddTimeDataAlgorithm",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T03:21:34Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T03:21:34Z"
      },
      "sha": "b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTg0OTgwMzNlMjJmZmRmNzA3Y2JkYTc3NTA3Y2MxMjk2ZTY4YzBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a8498033e22ffdf707cbda77507cc1296e68c0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a8498033e22ffdf707cbda77507cc1296e68c0e",
      "tree": {
        "sha": "4e4e740fd3aba7d291a9e1203d49d85b3464ae3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e4e740fd3aba7d291a9e1203d49d85b3464ae3a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
          "sha": "60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77"
        }
      ],
      "message": "Unit testing of procedure AddTimeData\n\nPushed static variables ouf of the procedure to remove statefulness\nIntroduced procedure AddTimeDataAlgorithm to test the contract",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T03:27:28Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T01:50:43Z"
      },
      "sha": "7a8498033e22ffdf707cbda77507cc1296e68c0e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGNkNmRhYmRlODY1NTU4Yzk4ZGM1MGRlNjRkYmFmNjIyOGVmZjA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4cd6dabde865558c98dc50de64dbaf6228eff09",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4cd6dabde865558c98dc50de64dbaf6228eff09",
      "tree": {
        "sha": "4e4e740fd3aba7d291a9e1203d49d85b3464ae3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e4e740fd3aba7d291a9e1203d49d85b3464ae3a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a8498033e22ffdf707cbda77507cc1296e68c0e",
          "sha": "7a8498033e22ffdf707cbda77507cc1296e68c0e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a8498033e22ffdf707cbda77507cc1296e68c0e"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3",
          "sha": "b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b34dd93ff12bfcaa5fbc4cff133c65ce3e706dc3"
        }
      ],
      "message": "Merge remote-tracking branch 'origin/timedata_contract_test' into timedata_contract_test",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T03:39:27Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T03:39:27Z"
      },
      "sha": "c4cd6dabde865558c98dc50de64dbaf6228eff09"
    },
    {
      "event": "labeled",
      "id": 2008899470,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMDg4OTk0NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2008899470",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-06T04:26:27Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "labeled",
      "id": 2008899471,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMDg4OTk0NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2008899471",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-06T04:26:27Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 182134528,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyMTM0NTI4",
      "url": null,
      "actor": null,
      "commit_id": "c4cd6dabde865558c98dc50de64dbaf6228eff09",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182134528",
      "submitted_at": "2018-12-06T08:56:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDVlYmQyNWRiNGRmYmU3NDJjYTY5M2U0MTYwZGFmYWZmMmU4YWNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "tree": {
        "sha": "d58d6a4374d09fde93ef5a0bc7f144d0a29a8497",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d58d6a4374d09fde93ef5a0bc7f144d0a29a8497"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4cd6dabde865558c98dc50de64dbaf6228eff09",
          "sha": "c4cd6dabde865558c98dc50de64dbaf6228eff09",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c4cd6dabde865558c98dc50de64dbaf6228eff09"
        }
      ],
      "message": "function inet_pton requires inet.h on windows",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T21:09:03Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-06T21:09:03Z"
      },
      "sha": "305ebd25db4dfbe742ca693e4160dafaff2e8acd"
    },
    {
      "event": "reviewed",
      "id": 182703446,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyNzAzNDQ2",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182703446",
      "submitted_at": "2018-12-07T13:59:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182858668,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODU4NjY4",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182858668",
      "submitted_at": "2018-12-07T20:19:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182859059,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODU5MDU5",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182859059",
      "submitted_at": "2018-12-07T20:21:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182859203,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODU5MjAz",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182859203",
      "submitted_at": "2018-12-07T20:21:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182860029,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODYwMDI5",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182860029",
      "submitted_at": "2018-12-07T20:24:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182860178,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODYwMTc4",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182860178",
      "submitted_at": "2018-12-07T20:24:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "reviewed",
      "id": 182860468,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgyODYwNDY4",
      "url": null,
      "actor": null,
      "commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-182860468",
      "submitted_at": "2018-12-07T20:25:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "mentioned",
      "id": 2013351219,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjAxMzM1MTIxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2013351219",
      "actor": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-07T20:29:13Z"
    },
    {
      "event": "subscribed",
      "id": 2013351221,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwMTMzNTEyMjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2013351221",
      "actor": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-07T20:29:13Z"
    },
    {
      "event": "commented",
      "id": 445663998,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTY2Mzk5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445663998",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-10T03:57:31Z",
      "updated_at": "2018-12-28T13:53:52Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14336](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14336.html) (net: implement poll by pstratem)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#issuecomment-445663998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14881"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDc4ZGFkMzM5ZjQ0YjU0NDUxNWQ5ZTQ3MDg0MGM5NzM3YzExY2Y0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8078dad339f44b544515d9e470840c9737c11cf4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8078dad339f44b544515d9e470840c9737c11cf4",
      "tree": {
        "sha": "406155e558645bca81ccaf98daaee709323be126",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/406155e558645bca81ccaf98daaee709323be126"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/305ebd25db4dfbe742ca693e4160dafaff2e8acd",
          "sha": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/305ebd25db4dfbe742ca693e4160dafaff2e8acd"
        }
      ],
      "message": "enforced code conventions and added compat.h since arpa/inet.h not available on windows",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-10T23:11:03Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-10T23:11:03Z"
      },
      "sha": "8078dad339f44b544515d9e470840c9737c11cf4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzU2OTkzZmZjMjdjZTdlMmEwODlhYWZlYTIwMmExZjRjMTdmYTRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c56993ffc27ce7e2a089aafea202a1f4c17fa4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c56993ffc27ce7e2a089aafea202a1f4c17fa4a",
      "tree": {
        "sha": "3016a8eae353c848cde53b0f26e30474c7050e30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3016a8eae353c848cde53b0f26e30474c7050e30"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8078dad339f44b544515d9e470840c9737c11cf4",
          "sha": "8078dad339f44b544515d9e470840c9737c11cf4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8078dad339f44b544515d9e470840c9737c11cf4"
        }
      ],
      "message": "compat.already included in netaddress.h shall support windows vista",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-11T20:55:13Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-11T20:55:13Z"
      },
      "sha": "0c56993ffc27ce7e2a089aafea202a1f4c17fa4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2NkOTVlOTM2NmJlZDc0MDc4ZWE5YmEzYTc2Y2M4MWEyN2I4ZmE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27cd95e9366bed74078ea9ba3a76cc81a27b8fa7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27cd95e9366bed74078ea9ba3a76cc81a27b8fa7",
      "tree": {
        "sha": "e70490fca844e68377c640d74239a031df217619",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e70490fca844e68377c640d74239a031df217619"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c56993ffc27ce7e2a089aafea202a1f4c17fa4a",
          "sha": "0c56993ffc27ce7e2a089aafea202a1f4c17fa4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c56993ffc27ce7e2a089aafea202a1f4c17fa4a"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86e0a33f5c382513d5179e3fdf158baf952d7e2f",
          "sha": "86e0a33f5c382513d5179e3fdf158baf952d7e2f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86e0a33f5c382513d5179e3fdf158baf952d7e2f"
        }
      ],
      "message": "Merge branch 'master' into timedata_contract_test",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-20T17:47:19Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-20T17:47:19Z"
      },
      "sha": "27cd95e9366bed74078ea9ba3a76cc81a27b8fa7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWRkODhiOTY0M2U2Y2Q4MjZjZTk1YzI0MjU0NTNmZDJlNmFiNjUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89dd88b9643e6cd826ce95c2425453fd2e6ab651",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/89dd88b9643e6cd826ce95c2425453fd2e6ab651",
      "tree": {
        "sha": "116ad40ccd63c4a8756ebdf6a02e89527917ac35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/116ad40ccd63c4a8756ebdf6a02e89527917ac35"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27cd95e9366bed74078ea9ba3a76cc81a27b8fa7",
          "sha": "27cd95e9366bed74078ea9ba3a76cc81a27b8fa7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27cd95e9366bed74078ea9ba3a76cc81a27b8fa7"
        }
      ],
      "message": "Tests for ComputeTimeSmart falsely assumed that time offset is zero",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-23T22:14:05Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-23T22:14:05Z"
      },
      "sha": "89dd88b9643e6cd826ce95c2425453fd2e6ab651"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjQxZTc3ZGJiN2ZkNzkxOWE0YTY3MDU5MTE5NGYxMWJlN2JjZDI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf41e77dbb7fd7919a4a670591194f11be7bcd28",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bf41e77dbb7fd7919a4a670591194f11be7bcd28",
      "tree": {
        "sha": "f064ca0c4a693b4a7b2f8b764454d2a2a3ca3548",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f064ca0c4a693b4a7b2f8b764454d2a2a3ca3548"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89dd88b9643e6cd826ce95c2425453fd2e6ab651",
          "sha": "89dd88b9643e6cd826ce95c2425453fd2e6ab651",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89dd88b9643e6cd826ce95c2425453fd2e6ab651"
        }
      ],
      "message": "Initialize sockaddr_in with zero before use. Use sizeof in comparison operators for CNetAddr",
      "committer": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-25T16:07:54Z"
      },
      "author": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-25T16:07:54Z"
      },
      "sha": "bf41e77dbb7fd7919a4a670591194f11be7bcd28"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmY4ZjVhZTdiMTY2MzEzZDA4OWU1ZDYyYTM4N2M4MDdlNzhlYzky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6f8f5ae7b166313d089e5d62a387c807e78ec92",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f8f5ae7b166313d089e5d62a387c807e78ec92",
      "tree": {
        "sha": "7e8b826abee6920df8746da364c4e1875dd5c35d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e8b826abee6920df8746da364c4e1875dd5c35d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf41e77dbb7fd7919a4a670591194f11be7bcd28",
          "sha": "bf41e77dbb7fd7919a4a670591194f11be7bcd28",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bf41e77dbb7fd7919a4a670591194f11be7bcd28"
        }
      ],
      "message": "util_AddTimeDataIgnoreSampleWithDuplicateIP is using ip out of range",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-25T17:07:40Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-25T17:07:40Z"
      },
      "sha": "b6f8f5ae7b166313d089e5d62a387c807e78ec92"
    },
    {
      "event": "reviewed",
      "id": 187824490,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg3ODI0NDkw",
      "url": null,
      "actor": null,
      "commit_id": "b6f8f5ae7b166313d089e5d62a387c807e78ec92",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "markaw67",
        "id": 29698193,
        "node_id": "MDQ6VXNlcjI5Njk4MTkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29698193?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markaw67",
        "html_url": "https://github.com/markaw67",
        "followers_url": "https://api.github.com/users/markaw67/followers",
        "following_url": "https://api.github.com/users/markaw67/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/markaw67/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/markaw67/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/markaw67/subscriptions",
        "organizations_url": "https://api.github.com/users/markaw67/orgs",
        "repos_url": "https://api.github.com/users/markaw67/repos",
        "events_url": "https://api.github.com/users/markaw67/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/markaw67/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#pullrequestreview-187824490",
      "submitted_at": "2018-12-26T04:14:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
    },
    {
      "event": "comment_deleted",
      "id": 2044133763,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDQ0MTMzNzYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2044133763",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-26T04:31:45Z"
    },
    {
      "event": "comment_deleted",
      "id": 2044133874,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDQ0MTMzODc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2044133874",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-26T04:31:57Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWE2NTg1MGViNzQ3MGRiN2Y3OGQ2YzczMzQ1YjE0YWNkMzJmNmUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51a65850eb7470db7f78d6c73345b14acd32f6e0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51a65850eb7470db7f78d6c73345b14acd32f6e0",
      "tree": {
        "sha": "de205e73e4f00b6d1df79cbdfcf80b83ede10478",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de205e73e4f00b6d1df79cbdfcf80b83ede10478"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6f8f5ae7b166313d089e5d62a387c807e78ec92",
          "sha": "b6f8f5ae7b166313d089e5d62a387c807e78ec92",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f8f5ae7b166313d089e5d62a387c807e78ec92"
        }
      ],
      "message": "Using memcpy to build sockaddr_in because\n compat.h does not support inet_pton with current #define _WIN32_WINNT 0x0501 and\n #define _WIN32_WINNT 0x0600 has other integration issues",
      "committer": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T07:51:11Z"
      },
      "author": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T07:51:11Z"
      },
      "sha": "51a65850eb7470db7f78d6c73345b14acd32f6e0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWQ5YjkyMjc0ZmIxYTRmYjdjYjM1NGJmZWNmZmQ0YTQ5ZjU2YWJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09d9b92274fb1a4fb7cb354bfecffd4a49f56abb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09d9b92274fb1a4fb7cb354bfecffd4a49f56abb",
      "tree": {
        "sha": "602e47d8c2326fa19f04691332a1a1a12b8a5f4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/602e47d8c2326fa19f04691332a1a1a12b8a5f4e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51a65850eb7470db7f78d6c73345b14acd32f6e0",
          "sha": "51a65850eb7470db7f78d6c73345b14acd32f6e0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51a65850eb7470db7f78d6c73345b14acd32f6e0"
        }
      ],
      "message": "applied clang formatter",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T08:11:03Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T08:11:03Z"
      },
      "sha": "09d9b92274fb1a4fb7cb354bfecffd4a49f56abb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzYyMTVmMzU0Y2I2MzEwZjVjMjA5ZDQzY2IxOGUwOTNiNzQ4ZjUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/176215f354cb6310f5c209d43cb18e093b748f53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/176215f354cb6310f5c209d43cb18e093b748f53",
      "tree": {
        "sha": "101c3defd98afef013aaebf2a4f62b9b6dec56c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/101c3defd98afef013aaebf2a4f62b9b6dec56c3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09d9b92274fb1a4fb7cb354bfecffd4a49f56abb",
          "sha": "09d9b92274fb1a4fb7cb354bfecffd4a49f56abb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09d9b92274fb1a4fb7cb354bfecffd4a49f56abb"
        }
      ],
      "message": "Moved statefull tests for AddTimeData to stateless AddTimeDataAlgorithm",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T10:12:14Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T10:12:14Z"
      },
      "sha": "176215f354cb6310f5c209d43cb18e093b748f53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDdlMjU1NjQ2NzBiNmMyMTZmM2MwODg5NjVjOTMwNjQyZWM4NWYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/407e25564670b6c216f3c088965c930642ec85f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/407e25564670b6c216f3c088965c930642ec85f0",
      "tree": {
        "sha": "2ea9428f5d5cc1ab94c095d336354e61bfc01c29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ea9428f5d5cc1ab94c095d336354e61bfc01c29"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/176215f354cb6310f5c209d43cb18e093b748f53",
          "sha": "176215f354cb6310f5c209d43cb18e093b748f53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/176215f354cb6310f5c209d43cb18e093b748f53"
        }
      ],
      "message": "improve test descriptions",
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T14:24:02Z"
      },
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-26T14:24:02Z"
      },
      "sha": "407e25564670b6c216f3c088965c930642ec85f0"
    },
    {
      "event": "commented",
      "id": 450398599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM5ODU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450398599",
      "actor": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-28T17:43:34Z",
      "updated_at": "2018-12-28T17:43:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "This has become illegible. \r\n\r\nAm replacing with: https://github.com/bitcoin/bitcoin/pull/15052\r\n",
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#issuecomment-450398599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14881"
    },
    {
      "event": "closed",
      "id": 2047530790,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjA0NzUzMDc5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2047530790",
      "actor": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-28T17:43:34Z"
    },
    {
      "event": "commented",
      "id": 450402743,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDQwMjc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450402743",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-28T18:10:06Z",
      "updated_at": "2018-12-28T18:10:06Z",
      "author_association": "MEMBER",
      "body": "Instead of closing/reopening pull request you can force push (and squash) your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#issuecomment-450402743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14881"
    },
    {
      "event": "locked",
      "id": 5271834962,
      "node_id": "LOE_lADOABII584XIR2nzwAAAAE6OdFS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271834962",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:00:42Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239370263",
      "pull_request_review_id": 182134528,
      "id": 239370263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTM3MDI2Mw==",
      "diff_hunk": "@@ -75,4 +76,8 @@ int64_t GetTimeOffset();\n int64_t GetAdjustedTime();\n void AddTimeData(const CNetAddr& ip, int64_t nTime);\n \n+/** Functions to enable testing the contract for AddTimeData */\n+int CountOffsetSamples();\n+void AddTimeDataAlgorithm(const CNetAddr& ip, const int64_t nOffsetSample, std::set<CNetAddr>& knownSet, CMedianFilter<int64_t>& offsetFilter, int64_t& offset);",
      "path": "src/timedata.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "c4cd6dabde865558c98dc50de64dbaf6228eff09",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could move these declarations to the test file, so that production code does not have access to the declarations.\r\n\r\nWould benefit from `EXCLUSIVE_LOCKS_REQUIRED` on `AddTimeDataAlgorithm` - which if I'm not mistaken could be applied to the body of the method rather than the declaration.",
      "created_at": "2018-12-06T08:56:23Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239370263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239370263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239602774",
      "pull_request_review_id": 182433176,
      "id": 239602774,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTYwMjc3NA==",
      "diff_hunk": "@@ -75,4 +76,8 @@ int64_t GetTimeOffset();\n int64_t GetAdjustedTime();\n void AddTimeData(const CNetAddr& ip, int64_t nTime);\n \n+/** Functions to enable testing the contract for AddTimeData */\n+int CountOffsetSamples();\n+void AddTimeDataAlgorithm(const CNetAddr& ip, const int64_t nOffsetSample, std::set<CNetAddr>& knownSet, CMedianFilter<int64_t>& offsetFilter, int64_t& offset);",
      "path": "src/timedata.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "c4cd6dabde865558c98dc50de64dbaf6228eff09",
      "in_reply_to_id": 239370263,
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hi Empact.\r\n\r\nThank you for the feedback, but I prefer to keep modifications to a minimum. Apart from this, I am a newbie with this code and not really proficient with C/C++, which is actually why I am focusing on unit testing in the first place. Functions added are either read only or do not modify the runtime data. That is why I did this in the first place. \r\n\r\nFirst priority here is to dig out the contract and make it testable the way it is now. I consider this as a prerequisite for any subsequent changes.\r\n\r\nIf you have any hints, then please be more explicit, as I partly understand your approach, but do not really know how to implement it in a safe manner.",
      "created_at": "2018-12-06T20:28:34Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239602774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239602774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239816019",
      "pull_request_review_id": 182703446,
      "id": 239816019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTgxNjAxOQ==",
      "diff_hunk": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n //\n #include <netaddress.h>\n+#include <arpa/inet.h>",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could include `compat.h` instead.",
      "created_at": "2018-12-07T13:59:23Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239816019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239816019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935051",
      "pull_request_review_id": 182858668,
      "id": 239935051,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNTA1MQ==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue);\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataComputeOffsetWhenSampleCountIsUneven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 200); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    if ((CountOffsetSamples() % 2) == 1) { // precondition 2: start with an even number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.210\"), 210);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 0);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.211\"), 211);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK(GetTimeOffset() != offset);               // and new offset was computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataDoNotComputeOffsetWhenSampleCountIsEven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 100); // precondition 1: at least 5 entries required to compute any offset\n+\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+    if (CountOffsetSamples() % 2 == 0) { // precondition 2: start with an uneven number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.110\"), 110);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 1);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.111\"), 111);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);           //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataIgnoreSampleWithDuplicateIP)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 300); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 310);\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 311);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples); // sample was ignored\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);       //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsWithinBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : 10 , init value: 0\n+\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all within bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, offsetFilter.median());\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 5);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsOutsideBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all outside bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << 1 + sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset);\n+    } // sorted filter: 0 x x x  -- x is outside the boundaries\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    // offset is computed only when number of entries is uneven\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.5\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 (x) x x  -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.6\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 x x x\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.7\"), 1, knownSet, offsetFilter, offset);                               // sorted filter : 0 1 1 (1) x x x x -- median (1)\n+    BOOST_CHECK_EQUAL(offset, 1);                                                                                       // flip to 1\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.8\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 x x x x x\n+    BOOST_CHECK_EQUAL(offset, 1);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.9\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 (x) x x x x x -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);                                                                                       // flip back to zero\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 9);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmAtLeastFiveSamplesToComputeOffset)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.1\"), 1, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.2\"), 2, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.3\"), 3, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.4\"), 4, knownSet, offsetFilter, offset); // this is the fifth entry\n+    BOOST_CHECK_EQUAL(offset, 2);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmIgnoresSamplesBeyondInternalLimit)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+\n+    for (int sample = 1; sample < limit; sample++) { // precondition: limit samples\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), limit);\n+\n+    int64_t pre = offset;\n+    int size = offsetFilter.size();\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, pre);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), size);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address)",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 201,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`address` should be const ref?",
      "created_at": "2018-12-07T20:19:56Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239935051",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935388",
      "pull_request_review_id": 182859059,
      "id": 239935388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNTM4OA==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue);\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataComputeOffsetWhenSampleCountIsUneven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 200); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    if ((CountOffsetSamples() % 2) == 1) { // precondition 2: start with an even number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.210\"), 210);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 0);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.211\"), 211);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK(GetTimeOffset() != offset);               // and new offset was computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataDoNotComputeOffsetWhenSampleCountIsEven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 100); // precondition 1: at least 5 entries required to compute any offset\n+\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+    if (CountOffsetSamples() % 2 == 0) { // precondition 2: start with an uneven number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.110\"), 110);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 1);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.111\"), 111);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);           //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataIgnoreSampleWithDuplicateIP)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 300); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 310);\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 311);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples); // sample was ignored\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);       //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsWithinBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : 10 , init value: 0\n+\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all within bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, offsetFilter.median());\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 5);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsOutsideBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all outside bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << 1 + sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset);\n+    } // sorted filter: 0 x x x  -- x is outside the boundaries\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    // offset is computed only when number of entries is uneven\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.5\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 (x) x x  -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.6\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 x x x\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.7\"), 1, knownSet, offsetFilter, offset);                               // sorted filter : 0 1 1 (1) x x x x -- median (1)\n+    BOOST_CHECK_EQUAL(offset, 1);                                                                                       // flip to 1\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.8\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 x x x x x\n+    BOOST_CHECK_EQUAL(offset, 1);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.9\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 (x) x x x x x -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);                                                                                       // flip back to zero\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 9);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmAtLeastFiveSamplesToComputeOffset)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.1\"), 1, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.2\"), 2, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.3\"), 3, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.4\"), 4, knownSet, offsetFilter, offset); // this is the fifth entry\n+    BOOST_CHECK_EQUAL(offset, 2);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmIgnoresSamplesBeyondInternalLimit)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+\n+    for (int sample = 1; sample < limit; sample++) { // precondition: limit samples\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), limit);\n+\n+    int64_t pre = offset;\n+    int size = offsetFilter.size();\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, pre);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), size);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address)\n+{\n+    struct sockaddr_in sa;\n+    inet_pton(AF_INET, address.c_str(), &(sa.sin_addr));\n+    CNetAddr addr = CNetAddr(sa.sin_addr);\n+    return addr;\n+}\n+\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue)",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 210,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here: `baseip` should be const ref?",
      "created_at": "2018-12-07T20:21:10Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239935388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935482",
      "pull_request_review_id": 182859203,
      "id": 239935482,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNTQ4Mg==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue);\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataComputeOffsetWhenSampleCountIsUneven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 200); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    if ((CountOffsetSamples() % 2) == 1) { // precondition 2: start with an even number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.210\"), 210);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 0);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.211\"), 211);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK(GetTimeOffset() != offset);               // and new offset was computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataDoNotComputeOffsetWhenSampleCountIsEven)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 100); // precondition 1: at least 5 entries required to compute any offset\n+\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+    if (CountOffsetSamples() % 2 == 0) { // precondition 2: start with an uneven number of samples\n+        AddTimeData(utilBuildAddress(\"1.1.1.110\"), 110);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 1);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.111\"), 111);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);           //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataIgnoreSampleWithDuplicateIP)\n+{\n+    utilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 300); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 310);\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(utilBuildAddress(\"1.1.1.310\"), 311);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples); // sample was ignored\n+    BOOST_CHECK_EQUAL(GetTimeOffset(), offset);       //new offset was not computed\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsWithinBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : 10 , init value: 0\n+\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all within bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, offsetFilter.median());\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 5);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmMedianIsOutsideBounds)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    for (int sample = 1; sample < 4; sample++) { // precondition: 4 samples, all outside bounds\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << 1 + sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset);\n+    } // sorted filter: 0 x x x  -- x is outside the boundaries\n+\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 4);\n+\n+    // offset is computed only when number of entries is uneven\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.5\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 (x) x x  -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.6\"), 1, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 x x x\n+    BOOST_CHECK_EQUAL(offset, 0);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.7\"), 1, knownSet, offsetFilter, offset);                               // sorted filter : 0 1 1 (1) x x x x -- median (1)\n+    BOOST_CHECK_EQUAL(offset, 1);                                                                                       // flip to 1\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.8\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 x x x x x\n+    BOOST_CHECK_EQUAL(offset, 1);\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.9\"), 2 * DEFAULT_MAX_TIME_ADJUSTMENT, knownSet, offsetFilter, offset); // sorted filter : 0 1 1 1 (x) x x x x x -- median (x)\n+    BOOST_CHECK_EQUAL(offset, 0);                                                                                       // flip back to zero\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), 9);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmAtLeastFiveSamplesToComputeOffset)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.1\"), 1, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.2\"), 2, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.3\"), 3, knownSet, offsetFilter, offset);\n+    BOOST_CHECK_EQUAL(offset, 0);\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.4\"), 4, knownSet, offsetFilter, offset); // this is the fifth entry\n+    BOOST_CHECK_EQUAL(offset, 2);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataAlgorithmIgnoresSamplesBeyondInternalLimit)\n+{\n+    int limit = 10;\n+    int64_t offset = 0;\n+    std::set<CNetAddr> knownSet;\n+    CMedianFilter<int64_t> offsetFilter(limit, 0); // max size : limit , init value: 0\n+\n+\n+    for (int sample = 1; sample < limit; sample++) { // precondition: limit samples\n+        std::stringstream stream;\n+        stream << \"1.1.1.\" << sample;\n+        std::string ip = stream.str();\n+        AddTimeDataAlgorithm(utilBuildAddress(ip), sample, knownSet, offsetFilter, offset);\n+    }\n+\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), limit);\n+\n+    int64_t pre = offset;\n+    int size = offsetFilter.size();\n+\n+    AddTimeDataAlgorithm(utilBuildAddress(\"1.1.1.200\"), 200, knownSet, offsetFilter, offset);\n+\n+    BOOST_CHECK_EQUAL(offset, pre);\n+    BOOST_CHECK_EQUAL(offsetFilter.size(), size);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address)\n+{\n+    struct sockaddr_in sa;\n+    inet_pton(AF_INET, address.c_str(), &(sa.sin_addr));\n+    CNetAddr addr = CNetAddr(sa.sin_addr);\n+    return addr;\n+}\n+\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue)\n+{\n+    for (int i = CountOffsetSamples(); i < 5; i++) { // precondition 1: at least 5 entries required to compute any offset\n+        int val = basevalue + i;\n+        std::stringstream stream;\n+        stream << baseip << val;\n+        std::string ip = stream.str();\n+        AddTimeData(utilBuildAddress(ip.c_str()), val);",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 217,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The call to `c_str` is not needed here. The function takes `std::string`.",
      "created_at": "2018-12-07T20:21:33Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239935482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239935482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 240,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936121",
      "pull_request_review_id": 182860029,
      "id": 239936121,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNjEyMQ==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be dropped if `utilBuildAddress` was defined up here instead?",
      "created_at": "2018-12-07T20:24:21Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239936121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936239",
      "pull_request_review_id": 182860178,
      "id": 239936239,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNjIzOQ==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);\n+\n+void utilPreconditionIsAtLeastFiveEntriesRequired(std::string baseip, int basevalue);",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here. Move definition of `utilPreconditionIsAtLeastFiveEntriesRequired` here instead.",
      "created_at": "2018-12-07T20:24:52Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239936239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936426",
      "pull_request_review_id": 182860468,
      "id": 239936426,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNjQyNg==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See style guide for the function naming guidelines. Apply to all functions in this PR.",
      "created_at": "2018-12-07T20:25:45Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r239936426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239936426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240419779",
      "pull_request_review_id": 183447276,
      "id": 240419779,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQxOTc3OQ==",
      "diff_hunk": "@@ -34,4 +36,209 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr utilBuildAddress(std::string address);",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": 239936426,
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for the feeback. All suggestions are done.",
      "created_at": "2018-12-10T23:19:43Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r240419779",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240419779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240432700",
      "pull_request_review_id": 183462627,
      "id": 240432700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQzMjcwMA==",
      "diff_hunk": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n //\n #include <netaddress.h>\n+#include <arpa/inet.h>",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": 239816019,
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hi. Appveyor still fails with the same message. Any other suggestion?",
      "created_at": "2018-12-11T00:22:19Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r240432700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240432700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240440753",
      "pull_request_review_id": 183472092,
      "id": 240440753,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQ0MDc1Mw==",
      "diff_hunk": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n //\n #include <netaddress.h>\n+#include <arpa/inet.h>",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": 239816019,
      "user": {
        "login": "mmachicao",
        "id": 1525975,
        "node_id": "MDQ6VXNlcjE1MjU5NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmachicao",
        "html_url": "https://github.com/mmachicao",
        "followers_url": "https://api.github.com/users/mmachicao/followers",
        "following_url": "https://api.github.com/users/mmachicao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmachicao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmachicao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
        "organizations_url": "https://api.github.com/users/mmachicao/orgs",
        "repos_url": "https://api.github.com/users/mmachicao/repos",
        "events_url": "https://api.github.com/users/mmachicao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmachicao/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hi. A quick update. \r\n\r\ncompat.h includes the appropriate include files for windows. Unfortunately inet_pton has a slightly differen signature in win32. Any hints how to handle this without having a windows machine at hand?. Any suggestions are welcome, since this keeps me from completing the contract tests.\r\n\r\nThx. ",
      "created_at": "2018-12-11T01:05:13Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r240440753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240440753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240587702",
      "pull_request_review_id": 183648166,
      "id": 240587702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDU4NzcwMg==",
      "diff_hunk": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n //\n #include <netaddress.h>\n+#include <arpa/inet.h>",
      "path": "src/test/timedata_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "305ebd25db4dfbe742ca693e4160dafaff2e8acd",
      "in_reply_to_id": 239816019,
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can rebase your PR on #14922. That PR can fix the problem.\r\n\r\nThe minimum required Windows version for `inet_pton` is Vista, but `_WIN32_WINNT` was set to  0x0501 (Windows XP)",
      "created_at": "2018-12-11T12:22:19Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r240587702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240587702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243939071",
      "pull_request_review_id": 187824490,
      "id": 243939071,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzkzOTA3MQ==",
      "diff_hunk": "@@ -34,4 +35,205 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n     BOOST_CHECK_EQUAL(filter.median(), 7);\n }\n \n+BOOST_AUTO_TEST_CASE(util_MedianFilterShallNotGrowBeyondSize)\n+{\n+    CMedianFilter<int> filter(2, 15);\n+\n+    BOOST_CHECK_EQUAL(filter.size(), 1); // 15\n+\n+    filter.input(100); // 15 100\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+\n+    filter.input(10); // 100 10\n+    BOOST_CHECK_EQUAL(filter.size(), 2);\n+    BOOST_CHECK_EQUAL(filter.sorted()[0], 10);\n+    BOOST_CHECK_EQUAL(filter.sorted()[1], 100);\n+}\n+\n+\n+CNetAddr UtilBuildAddress(const std::string& address)\n+{\n+    struct sockaddr_in sa;\n+    memset(&sa, 0, sizeof(sockaddr_in));\n+    inet_pton(AF_INET, address.c_str(), &(sa.sin_addr));\n+    CNetAddr addr = CNetAddr(sa.sin_addr);\n+    return addr;\n+}\n+\n+\n+void UtilPreconditionIsAtLeastFiveEntriesRequired(const std::string& baseip, int basevalue)\n+{\n+    for (int i = CountOffsetSamples(); i < 5; i++) { // precondition 1: at least 5 entries required to compute any offset\n+        int val = basevalue + i;\n+        std::stringstream stream;\n+        stream << baseip << val;\n+        std::string ip = stream.str();\n+        AddTimeData(UtilBuildAddress(ip), val);\n+    }\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(util_AddTimeDataComputeOffsetWhenSampleCountIsUneven)\n+{\n+    UtilPreconditionIsAtLeastFiveEntriesRequired(\"1.1.1.\", 200); // precondition 1: at least 5 entries required to compute any offset\n+    BOOST_CHECK(CountOffsetSamples() >= 5);\n+\n+\n+    if ((CountOffsetSamples() % 2) == 1) { // precondition 2: start with an even number of samples\n+        AddTimeData(UtilBuildAddress(\"1.1.1.210\"), 210);\n+    }\n+\n+    BOOST_CHECK(CountOffsetSamples() % 2 == 0);\n+\n+\n+    int64_t offset = GetTimeOffset();\n+    int samples = CountOffsetSamples();\n+    AddTimeData(UtilBuildAddress(\"1.1.1.211\"), 211);\n+\n+    BOOST_CHECK_EQUAL(CountOffsetSamples(), samples + 1); // sample was added\n+    BOOST_CHECK(GetTimeOffset() != offset);               // and new offset was computed\n+}\n+",
      "path": "src/test/timedata_tests.cpp",
      "position": 65,
      "original_position": 73,
      "commit_id": "407e25564670b6c216f3c088965c930642ec85f0",
      "original_commit_id": "b6f8f5ae7b166313d089e5d62a387c807e78ec92",
      "in_reply_to_id": null,
      "user": {
        "login": "markaw67",
        "id": 29698193,
        "node_id": "MDQ6VXNlcjI5Njk4MTkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29698193?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markaw67",
        "html_url": "https://github.com/markaw67",
        "followers_url": "https://api.github.com/users/markaw67/followers",
        "following_url": "https://api.github.com/users/markaw67/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/markaw67/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/markaw67/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/markaw67/subscriptions",
        "organizations_url": "https://api.github.com/users/markaw67/orgs",
        "repos_url": "https://api.github.com/users/markaw67/repos",
        "events_url": "https://api.github.com/users/markaw67/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/markaw67/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this the correct address?",
      "created_at": "2018-12-26T04:10:22Z",
      "updated_at": "2018-12-26T14:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14881#discussion_r243939071",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243939071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14881"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 96,
      "side": "RIGHT"
    }
  ]
}