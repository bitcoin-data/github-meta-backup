{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183",
    "id": 834025185,
    "node_id": "PR_kwDOABII584xtjbh",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24183",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24183.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24183.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/72ad8add4c9523b6946e7fac5b45c5746c288e21",
    "number": 24183,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "test: use MiniWallet for mempool_updatefromblock.py",
    "user": {
      "login": "pg156",
      "id": 91135419,
      "node_id": "MDQ6VXNlcjkxMTM1NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pg156",
      "html_url": "https://github.com/pg156",
      "followers_url": "https://api.github.com/users/pg156/followers",
      "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
      "organizations_url": "https://api.github.com/users/pg156/orgs",
      "repos_url": "https://api.github.com/users/pg156/repos",
      "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pg156/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR enables a non-wallet functional test `mempool_updatefromblock.py` to be run without wallet compiled, by using the MiniWallet proposed in #20078. This picks up from where #21999 left off.\r\n\r\nCommit 1 of 2: MiniWallet changes only to minimize diffs for easier reviewing\r\nCommit 2 of 2: Refactor (renaming a function and variables)\r\n\r\nThe test run time decreases from 16.5s to 4.3s.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2022-01-28T01:32:37Z",
    "updated_at": "2022-07-07T11:57:59Z",
    "closed_at": "2022-07-07T11:57:59Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "c2ed2fb4cf7646f242ba814b062feb70c24a4671",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "pg156:mempool-updatefromblock-miniwallet",
      "ref": "mempool-updatefromblock-miniwallet",
      "sha": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 452900116,
        "node_id": "R_kgDOGv61FA",
        "name": "bitcoin",
        "full_name": "pg156/bitcoin",
        "owner": {
          "login": "pg156",
          "id": 91135419,
          "node_id": "MDQ6VXNlcjkxMTM1NDE5",
          "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pg156",
          "html_url": "https://github.com/pg156",
          "followers_url": "https://api.github.com/users/pg156/followers",
          "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
          "organizations_url": "https://api.github.com/users/pg156/orgs",
          "repos_url": "https://api.github.com/users/pg156/repos",
          "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pg156/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pg156/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pg156/bitcoin",
        "archive_url": "https://api.github.com/repos/pg156/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pg156/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pg156/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pg156/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pg156/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pg156/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pg156/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pg156/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pg156/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pg156/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pg156/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pg156/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pg156/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pg156/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pg156/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pg156/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pg156/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pg156/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pg156/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pg156/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pg156/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pg156/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pg156/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pg156/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pg156/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pg156/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pg156/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pg156/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pg156/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pg156/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pg156/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pg156/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pg156/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pg156/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pg156/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pg156/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pg156/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pg156/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pg156/bitcoin/hooks",
        "svn_url": "https://github.com/pg156/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 197248,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-03-25T16:06:04Z",
        "created_at": "2022-01-28T01:19:19Z",
        "updated_at": "2022-03-30T15:03:03Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9745e180515077f10499f425f9ce49a5c02231ef",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 24,
    "deletions": 55,
    "changed_files": 1,
    "commits": 2,
    "review_comments": 12,
    "comments": 9
  },
  "events": [
    {
      "event": "labeled",
      "id": 5967761911,
      "node_id": "LE_lADOABII585Ckq5MzwAAAAFjtNH3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5967761911",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T01:34:58Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 866050227,
      "node_id": "PRR_kwDOABII584znuCz",
      "url": null,
      "actor": null,
      "commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#pullrequestreview-866050227",
      "submitted_at": "2022-01-28T11:54:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5975596740,
      "node_id": "HRFPE_lADOABII585Ckq5MzwAAAAFkLF7E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5975596740",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T22:32:25Z"
    },
    {
      "event": "commented",
      "id": 1047717086,
      "node_id": "IC_kwDOABII584-cuTe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047717086",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:50:35Z",
      "updated_at": "2022-02-22T11:50:35Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1047717086",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "commented",
      "id": 1053567859,
      "node_id": "IC_kwDOABII584-zCtz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053567859",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-27T14:12:11Z",
      "updated_at": "2022-02-27T14:12:11Z",
      "author_association": "NONE",
      "body": "> Are you still working on this?\r\n\r\nYes. Read mzumsande's comment too quickly and didn't realize it was a request to change. Will fix soon.",
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1053567859",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "comment_deleted",
      "id": 6150391038,
      "node_id": "CDE_lADOABII585Ckq5MzwAAAAFul4T-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6150391038",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-27T14:17:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6150638562,
      "node_id": "HRFPE_lADOABII585Ckq5MzwAAAAFum0vi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6150638562",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-27T17:16:39Z"
    },
    {
      "event": "commented",
      "id": 1053817255,
      "node_id": "IC_kwDOABII584-z_mn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053817255",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-28T02:40:26Z",
      "updated_at": "2022-02-28T02:40:26Z",
      "author_association": "NONE",
      "body": "The linter problem is fixed.",
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1053817255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "reviewed",
      "id": 916595131,
      "node_id": "PRR_kwDOABII5842oiG7",
      "url": null,
      "actor": null,
      "commit_id": "4b8eb3c7faaf6d1bf10aa55b0abe6f02c3b2e6ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7.\r\nTested on NixOS 22.05 64 bits with `--disable-wallet`.\r\n\r\nI verified that the migration to MiniWallet does not alter what is being tested.\r\nIt takes 3s to run on my machine 🚀",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#pullrequestreview-916595131",
      "submitted_at": "2022-03-22T02:42:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
    },
    {
      "event": "reviewed",
      "id": 916851273,
      "node_id": "PRR_kwDOABII5842pgpJ",
      "url": null,
      "actor": null,
      "commit_id": "4b8eb3c7faaf6d1bf10aa55b0abe6f02c3b2e6ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#pullrequestreview-916851273",
      "submitted_at": "2022-03-22T08:50:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6287844045,
      "node_id": "HRFPE_lADOABII585Ckq5MzwAAAAF2yOLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6287844045",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T01:42:28Z"
    },
    {
      "event": "commented",
      "id": 1076093176,
      "node_id": "IC_kwDOABII585AI-D4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076093176",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T08:42:04Z",
      "updated_at": "2022-03-23T08:42:04Z",
      "author_association": "MEMBER",
      "body": "You'll need to do the changes from yesterday in the first commit, not in the second.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1076093176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5M2I3MzkwMjE2YTE4NzdiZDhhMDhhZWMzNWQ4NTNhNTY1MDY1ZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f93b7390216a1877bd8a08aec35d853a565065e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f93b7390216a1877bd8a08aec35d853a565065e7",
      "tree": {
        "sha": "e7ea15f8c9232754b5400bfe533cc6a45c270cd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7ea15f8c9232754b5400bfe533cc6a45c270cd0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/196b4599201dbce3e0317e9b98753fa6a244b82d",
          "sha": "196b4599201dbce3e0317e9b98753fa6a244b82d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/196b4599201dbce3e0317e9b98753fa6a244b82d"
        }
      ],
      "message": "test: use MiniWallet for mempool_updatefromblock.py",
      "committer": {
        "name": "pg156",
        "email": "pg156@users.noreply.github.com",
        "date": "2022-03-25T15:58:35Z"
      },
      "author": {
        "name": "pg156",
        "email": "pg156@users.noreply.github.com",
        "date": "2022-01-29T22:28:56Z"
      },
      "sha": "f93b7390216a1877bd8a08aec35d853a565065e7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyYWQ4YWRkNGM5NTIzYjY5NDZlN2ZhYzViNDVjNTc0NmMyODhlMjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "tree": {
        "sha": "c2137d28c9c53c93d8145447f9825119e6f805c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2137d28c9c53c93d8145447f9825119e6f805c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f93b7390216a1877bd8a08aec35d853a565065e7",
          "sha": "f93b7390216a1877bd8a08aec35d853a565065e7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f93b7390216a1877bd8a08aec35d853a565065e7"
        }
      ],
      "message": "refactor: rename a function and variables",
      "committer": {
        "name": "pg156",
        "email": "pg156@users.noreply.github.com",
        "date": "2022-03-25T15:59:18Z"
      },
      "author": {
        "name": "pg156",
        "email": "pg156@users.noreply.github.com",
        "date": "2022-01-29T22:30:11Z"
      },
      "sha": "72ad8add4c9523b6946e7fac5b45c5746c288e21"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6308389166,
      "node_id": "HRFPE_lADOABII585Ckq5MzwAAAAF4AmEu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308389166",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T16:06:14Z"
    },
    {
      "event": "commented",
      "id": 1079178425,
      "node_id": "IC_kwDOABII585AUvS5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079178425",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T16:10:17Z",
      "updated_at": "2022-03-25T16:10:17Z",
      "author_association": "NONE",
      "body": "Fixed. Thank you @MarcoFalke.",
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1079178425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "mentioned",
      "id": 6308416405,
      "node_id": "MEE_lADOABII585Ckq5MzwAAAAF4AsuV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308416405",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T16:10:18Z"
    },
    {
      "event": "subscribed",
      "id": 6308416414,
      "node_id": "SE_lADOABII585Ckq5MzwAAAAF4Asue",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308416414",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T16:10:18Z"
    },
    {
      "event": "commented",
      "id": 1083215664,
      "node_id": "IC_kwDOABII585AkI8w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083215664",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-30T14:32:22Z",
      "updated_at": "2022-03-30T14:32:22Z",
      "author_association": "MEMBER",
      "body": "Can you explain why it is ok to \"flatten\" the tournament into a linked list?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1083215664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "reviewed",
      "id": 929733165,
      "node_id": "PRR_kwDOABII5843apot",
      "url": null,
      "actor": null,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think this PR introduces an unwanted behavior change. It looks like now you have a simple straight line of spends tx0->tx1->...->txN.\r\n\r\nBefore this test created a huge, complicated \"cyclic tournament\" graph of transactions where:\r\n- Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1\r\n- Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\r\n\r\nThat's kind of hard to visualize. But the first transaction `tx0` has 99 outputs, and tx1, ... tx100 all spend one of tx0's outputs. And tx100 has 99 inputs, an input from tx1, ... tx99. Looking at L51-L80 (before this PRs changes) you can try to imagine what tx4 looks like and that's kinda hard!\r\n\r\nIt's easy to see by the runtime of this test. Before this PR running this test in our CI took ~5 minutes. Now this test runs in ~1s.\r\n\r\n---\r\n\r\nI've found this test to be extremely valuable bc it highlights a possible denial of service attack vector. Imagine someone creates a graph of transactions like this and gets them all mined into a single block (let's just say they mine the block or collude w/ a miner). Even though the mempool has `DEFAULT_ANCESTOR_LIMIT` and `DEFAULT_DESCENDANT_LIMIT` of 25, this test just shows how large and complicated a web of dependent transactions you can make within those limits.\r\n\r\nNow imagine that huge graph takes up a single block that's mined. And then somehow (maybe on purpose) that block gets reorged. All of a sudden this entire block of transactions enters the mempool again. And all the nodes need to validate every single transaction in this graph before adding them back to their mempool. Imagine if we did something stupid (or a lot of extra looping work) in the mempool validation logic. When that block gets reorged it could potentially crash or stall a bunch of nodes.\r\n\r\nSo I think this test is a really good stress test as-is. If you do any looping or weird stuff in the mempool validation logic this test can very easily timeout. I learned this the hard way when trying out some RBF changes, where I saw this test timing out. And I started to really appreciate the value of this specific test at that point",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#pullrequestreview-929733165",
      "submitted_at": "2022-04-03T23:43:58Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
    },
    {
      "event": "commented",
      "id": 1086976669,
      "node_id": "IC_kwDOABII585AyfKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086976669",
      "actor": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T23:47:40Z",
      "updated_at": "2022-04-03T23:47:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK - I think this is a valuable test and it'll be good to update it so that it's not skipped when the wallet isn't compiled. My suggestion would be to minimize changes as much as possible to make it work w/ MiniWallet - and implementing this test as-is w/ MiniWallet will probably be difficult! But I think it'll be a good exercise, and I think MiniWallet can probably support what this test needs without any internal code changes to it (although I'm not totally sure bc I haven't looked at that code in a while)",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1086976669",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "commented",
      "id": 1090970825,
      "node_id": "IC_kwDOABII585BBuTJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090970825",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T00:57:02Z",
      "updated_at": "2022-04-07T00:57:02Z",
      "author_association": "NONE",
      "body": "Thank you so much @mjdietzx for the review with the context and insights. I am changing this to draft status, to explore how to keep the graph structure.",
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1090970825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "mentioned",
      "id": 6384443139,
      "node_id": "MEE_lADOABII585Ckq5MzwAAAAF8it8D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6384443139",
      "actor": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T00:57:02Z"
    },
    {
      "event": "subscribed",
      "id": 6384443142,
      "node_id": "SE_lADOABII585Ckq5MzwAAAAF8it8G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6384443142",
      "actor": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T00:57:02Z"
    },
    {
      "event": "convert_to_draft",
      "id": 6384444141,
      "node_id": "CTDE_lADOABII585Ckq5MzwAAAAF8iuLt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6384444141",
      "actor": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T00:57:22Z"
    },
    {
      "event": "commented",
      "id": 1172834156,
      "node_id": "IC_kwDOABII585F6Ads",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1172834156",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-02T04:50:01Z",
      "updated_at": "2022-07-02T04:50:01Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25525](https://github.com/bitcoin/bitcoin/pull/25525) (test: remove wallet dependency  from mempool_updatefromblock.py by ayush933)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#issuecomment-1172834156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24183"
    },
    {
      "event": "closed",
      "id": 6951056961,
      "node_id": "CE_lADOABII585Ckq5MzwAAAAGeULZB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6951056961",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-07T11:57:59Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794440465",
      "pull_request_review_id": 866050227,
      "id": 794440465,
      "node_id": "PRRC_kwDOABII584vWjMR",
      "diff_hunk": "@@ -52,73 +48,49 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n+            tx = miniwallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n-\n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n-\n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = node.getrawmempool(True)[tx['txid']]['vsize']\n+            tx_size.append(vsize)\n \n+            tx_count = i + 1\n             if tx_count in n_tx_to_mine:\n                 # The created transactions are mined into blocks by batches.\n-                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n-                block_hash = self.generate(self.nodes[0], 1)[0]\n+                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n+                block_hash = self.generate(node, 1)[0]\n                 if not first_block_hash:\n                     first_block_hash = block_hash\n-                assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+                assert_equal(len(node.getrawmempool()), 0)\n                 self.log.info('All of the transactions from the current batch have been mined into a block.')\n             elif tx_count == size:\n                 # At the end all of the mined blocks are invalidated, and all of the created\n                 # transactions should be re-added from disconnected blocks to the mempool.\n-                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n+                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n                 start = time.time()\n-                self.nodes[0].invalidateblock(first_block_hash)\n+                node.invalidateblock(first_block_hash)\n                 end = time.time()\n-                assert_equal(len(self.nodes[0].getrawmempool()), size)\n+                assert_equal(len(node.getrawmempool()), size)\n                 self.log.info('All of the recently mined transactions have been re-added into the mempool in {} seconds.'.format(end - start))\n \n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = node.getrawmempool(True)[tx['txid']]\n             assert_equal(entry['descendantcount'], size - k)\n             assert_equal(entry['descendantsize'], sum(tx_size[k:size]))\n             assert_equal(entry['ancestorcount'], k + 1)\n             assert_equal(entry['ancestorsize'], sum(tx_size[0:(k + 1)]))\n \n     def run_test(self):\n         # Use batch size limited by DEFAULT_ANCESTOR_LIMIT = 25 to not fire \"too many unconfirmed parents\" error.\n-        self.transaction_graph_test(size=100, n_tx_to_mine=[25, 50, 75])\n+        self.transaction_list_test(size=100, n_tx_to_mine=[25, 50, 75])\n \n \n if __name__ == '__main__':\n     MempoolUpdateFromBlockTest().main()\n+    ",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 138,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is a whitespace here, you have to remove it to pass the linter.",
      "created_at": "2022-01-28T11:54:22Z",
      "updated_at": "2022-01-28T11:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r794440465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794440465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794919813",
      "pull_request_review_id": 866751751,
      "id": 794919813,
      "node_id": "PRRC_kwDOABII584vYYOF",
      "diff_hunk": "@@ -52,73 +48,49 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n+            tx = miniwallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n-\n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n-\n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = node.getrawmempool(True)[tx['txid']]['vsize']\n+            tx_size.append(vsize)\n \n+            tx_count = i + 1\n             if tx_count in n_tx_to_mine:\n                 # The created transactions are mined into blocks by batches.\n-                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n-                block_hash = self.generate(self.nodes[0], 1)[0]\n+                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n+                block_hash = self.generate(node, 1)[0]\n                 if not first_block_hash:\n                     first_block_hash = block_hash\n-                assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+                assert_equal(len(node.getrawmempool()), 0)\n                 self.log.info('All of the transactions from the current batch have been mined into a block.')\n             elif tx_count == size:\n                 # At the end all of the mined blocks are invalidated, and all of the created\n                 # transactions should be re-added from disconnected blocks to the mempool.\n-                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n+                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n                 start = time.time()\n-                self.nodes[0].invalidateblock(first_block_hash)\n+                node.invalidateblock(first_block_hash)\n                 end = time.time()\n-                assert_equal(len(self.nodes[0].getrawmempool()), size)\n+                assert_equal(len(node.getrawmempool()), size)\n                 self.log.info('All of the recently mined transactions have been re-added into the mempool in {} seconds.'.format(end - start))\n \n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = node.getrawmempool(True)[tx['txid']]\n             assert_equal(entry['descendantcount'], size - k)\n             assert_equal(entry['descendantsize'], sum(tx_size[k:size]))\n             assert_equal(entry['ancestorcount'], k + 1)\n             assert_equal(entry['ancestorsize'], sum(tx_size[0:(k + 1)]))\n \n     def run_test(self):\n         # Use batch size limited by DEFAULT_ANCESTOR_LIMIT = 25 to not fire \"too many unconfirmed parents\" error.\n-        self.transaction_graph_test(size=100, n_tx_to_mine=[25, 50, 75])\n+        self.transaction_list_test(size=100, n_tx_to_mine=[25, 50, 75])\n \n \n if __name__ == '__main__':\n     MempoolUpdateFromBlockTest().main()\n+    ",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 138,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "in_reply_to_id": 794440465,
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Fixed. Don't know why the linter now complains about the spelling errors in unchanged files.\r\n\r\n^---- failure generated from test/lint/lint-python.sh\r\nsrc/random.h:92: occuring ==> occurring\r\nsrc/rpc/blockchain.cpp:794: nWe ==> new\r\nsrc/util/syscall_sandbox.cpp:128: creat ==> create\r\ntest/functional/data/rpc_decodescript.json:81: ba ==> by, be\r\ntest/functional/data/rpc_decodescript.json:84: ba ==> by, be\r\n^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/lint-spelling.ignore-words.txt",
      "created_at": "2022-01-28T22:06:20Z",
      "updated_at": "2022-01-28T22:06:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r794919813",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794919813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794921510",
      "pull_request_review_id": 866754135,
      "id": 794921510,
      "node_id": "PRRC_kwDOABII584vYYom",
      "diff_hunk": "@@ -52,73 +48,49 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n+            tx = miniwallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n-\n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n-\n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = node.getrawmempool(True)[tx['txid']]['vsize']\n+            tx_size.append(vsize)\n \n+            tx_count = i + 1\n             if tx_count in n_tx_to_mine:\n                 # The created transactions are mined into blocks by batches.\n-                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n-                block_hash = self.generate(self.nodes[0], 1)[0]\n+                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n+                block_hash = self.generate(node, 1)[0]\n                 if not first_block_hash:\n                     first_block_hash = block_hash\n-                assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+                assert_equal(len(node.getrawmempool()), 0)\n                 self.log.info('All of the transactions from the current batch have been mined into a block.')\n             elif tx_count == size:\n                 # At the end all of the mined blocks are invalidated, and all of the created\n                 # transactions should be re-added from disconnected blocks to the mempool.\n-                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n+                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n                 start = time.time()\n-                self.nodes[0].invalidateblock(first_block_hash)\n+                node.invalidateblock(first_block_hash)\n                 end = time.time()\n-                assert_equal(len(self.nodes[0].getrawmempool()), size)\n+                assert_equal(len(node.getrawmempool()), size)\n                 self.log.info('All of the recently mined transactions have been re-added into the mempool in {} seconds.'.format(end - start))\n \n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = node.getrawmempool(True)[tx['txid']]\n             assert_equal(entry['descendantcount'], size - k)\n             assert_equal(entry['descendantsize'], sum(tx_size[k:size]))\n             assert_equal(entry['ancestorcount'], k + 1)\n             assert_equal(entry['ancestorsize'], sum(tx_size[0:(k + 1)]))\n \n     def run_test(self):\n         # Use batch size limited by DEFAULT_ANCESTOR_LIMIT = 25 to not fire \"too many unconfirmed parents\" error.\n-        self.transaction_graph_test(size=100, n_tx_to_mine=[25, 50, 75])\n+        self.transaction_list_test(size=100, n_tx_to_mine=[25, 50, 75])\n \n \n if __name__ == '__main__':\n     MempoolUpdateFromBlockTest().main()\n+    ",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 138,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "in_reply_to_id": 794440465,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Cool, now you should squash the commits. See: https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",
      "created_at": "2022-01-28T22:10:07Z",
      "updated_at": "2022-01-28T22:10:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r794921510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794921510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795100376",
      "pull_request_review_id": 867015360,
      "id": 795100376,
      "node_id": "PRRC_kwDOABII584vZETY",
      "diff_hunk": "@@ -52,73 +48,49 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n+            tx = miniwallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n-\n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n-\n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = node.getrawmempool(True)[tx['txid']]['vsize']\n+            tx_size.append(vsize)\n \n+            tx_count = i + 1\n             if tx_count in n_tx_to_mine:\n                 # The created transactions are mined into blocks by batches.\n-                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n-                block_hash = self.generate(self.nodes[0], 1)[0]\n+                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n+                block_hash = self.generate(node, 1)[0]\n                 if not first_block_hash:\n                     first_block_hash = block_hash\n-                assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+                assert_equal(len(node.getrawmempool()), 0)\n                 self.log.info('All of the transactions from the current batch have been mined into a block.')\n             elif tx_count == size:\n                 # At the end all of the mined blocks are invalidated, and all of the created\n                 # transactions should be re-added from disconnected blocks to the mempool.\n-                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n+                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n                 start = time.time()\n-                self.nodes[0].invalidateblock(first_block_hash)\n+                node.invalidateblock(first_block_hash)\n                 end = time.time()\n-                assert_equal(len(self.nodes[0].getrawmempool()), size)\n+                assert_equal(len(node.getrawmempool()), size)\n                 self.log.info('All of the recently mined transactions have been re-added into the mempool in {} seconds.'.format(end - start))\n \n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = node.getrawmempool(True)[tx['txid']]\n             assert_equal(entry['descendantcount'], size - k)\n             assert_equal(entry['descendantsize'], sum(tx_size[k:size]))\n             assert_equal(entry['ancestorcount'], k + 1)\n             assert_equal(entry['ancestorsize'], sum(tx_size[0:(k + 1)]))\n \n     def run_test(self):\n         # Use batch size limited by DEFAULT_ANCESTOR_LIMIT = 25 to not fire \"too many unconfirmed parents\" error.\n-        self.transaction_graph_test(size=100, n_tx_to_mine=[25, 50, 75])\n+        self.transaction_list_test(size=100, n_tx_to_mine=[25, 50, 75])\n \n \n if __name__ == '__main__':\n     MempoolUpdateFromBlockTest().main()\n+    ",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 138,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "in_reply_to_id": 794440465,
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Done.",
      "created_at": "2022-01-29T22:36:30Z",
      "updated_at": "2022-01-29T22:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r795100376",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795100376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795104848",
      "pull_request_review_id": 867018676,
      "id": 795104848,
      "node_id": "PRRC_kwDOABII584vZFZQ",
      "diff_hunk": "@@ -52,73 +48,49 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n+            tx = miniwallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n-\n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n-\n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = node.getrawmempool(True)[tx['txid']]['vsize']\n+            tx_size.append(vsize)\n \n+            tx_count = i + 1\n             if tx_count in n_tx_to_mine:\n                 # The created transactions are mined into blocks by batches.\n-                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n-                block_hash = self.generate(self.nodes[0], 1)[0]\n+                self.log.info('The batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n+                block_hash = self.generate(node, 1)[0]\n                 if not first_block_hash:\n                     first_block_hash = block_hash\n-                assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+                assert_equal(len(node.getrawmempool()), 0)\n                 self.log.info('All of the transactions from the current batch have been mined into a block.')\n             elif tx_count == size:\n                 # At the end all of the mined blocks are invalidated, and all of the created\n                 # transactions should be re-added from disconnected blocks to the mempool.\n-                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(self.nodes[0].getrawmempool())))\n+                self.log.info('The last batch of {} transactions has been accepted into the mempool.'.format(len(node.getrawmempool())))\n                 start = time.time()\n-                self.nodes[0].invalidateblock(first_block_hash)\n+                node.invalidateblock(first_block_hash)\n                 end = time.time()\n-                assert_equal(len(self.nodes[0].getrawmempool()), size)\n+                assert_equal(len(node.getrawmempool()), size)\n                 self.log.info('All of the recently mined transactions have been re-added into the mempool in {} seconds.'.format(end - start))\n \n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = node.getrawmempool(True)[tx['txid']]\n             assert_equal(entry['descendantcount'], size - k)\n             assert_equal(entry['descendantsize'], sum(tx_size[k:size]))\n             assert_equal(entry['ancestorcount'], k + 1)\n             assert_equal(entry['ancestorsize'], sum(tx_size[0:(k + 1)]))\n \n     def run_test(self):\n         # Use batch size limited by DEFAULT_ANCESTOR_LIMIT = 25 to not fire \"too many unconfirmed parents\" error.\n-        self.transaction_graph_test(size=100, n_tx_to_mine=[25, 50, 75])\n+        self.transaction_list_test(size=100, n_tx_to_mine=[25, 50, 75])\n \n \n if __name__ == '__main__':\n     MempoolUpdateFromBlockTest().main()\n+    ",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 138,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "f2d7c82abff5185b0f3883559ae9002e31b128bf",
      "in_reply_to_id": 794440465,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The problem of the linter now is \"test/functional/mempool_updatefromblock.py:12:1: F401 'decimal.Decimal' imported but unused\" - this PR removes all uses.",
      "created_at": "2022-01-29T23:39:24Z",
      "updated_at": "2022-01-29T23:39:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r795104848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795104848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831907570",
      "pull_request_review_id": 916851273,
      "id": 831907570,
      "node_id": "PRRC_kwDOABII584xleby",
      "diff_hunk": "@@ -109,7 +81,7 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = self.nodes[0].getrawmempool(True)[tx['txid']]",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 93,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this changed?",
      "created_at": "2022-03-22T08:47:57Z",
      "updated_at": "2022-03-22T08:50:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r831907570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831907570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831907865",
      "pull_request_review_id": 916851273,
      "id": 831907865,
      "node_id": "PRRC_kwDOABII584xlegZ",
      "diff_hunk": "@@ -52,42 +49,17 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n-\n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n-\n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n+            tx = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 73,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why does this need `SEQUENCE_FINAL`?",
      "created_at": "2022-03-22T08:48:16Z",
      "updated_at": "2022-03-22T08:50:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r831907865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831907865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831908872",
      "pull_request_review_id": 916851273,
      "id": 831908872,
      "node_id": "PRRC_kwDOABII584xlewI",
      "diff_hunk": "@@ -52,42 +49,17 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n-\n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n-\n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n+            tx = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = self.nodes[0].getrawmempool(True)[tx['txid']]['vsize']",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 81,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this changed? (from getmempoolentry to getrawmempool)?",
      "created_at": "2022-03-22T08:49:19Z",
      "updated_at": "2022-03-22T09:06:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r831908872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831908872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832769942",
      "pull_request_review_id": 918080227,
      "id": 832769942,
      "node_id": "PRRC_kwDOABII584xow-W",
      "diff_hunk": "@@ -109,7 +81,7 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n         self.log.info('Checking descendants/ancestors properties of all of the in-mempool transactions...')\n         for k, tx in enumerate(tx_id):\n             self.log.debug('Check transaction #{}.'.format(k))\n-            entry = self.nodes[0].getmempoolentry(tx)\n+            entry = self.nodes[0].getrawmempool(True)[tx['txid']]",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 93,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": 831907570,
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed back to `getmempoolentry`.\r\n\r\nI chose `getrawmempool` over `getmempoolentry` to follow some existing functional test files. After a closer look at those two RPCs, I agree the existing `getmempoolentry` here is better as it indicates the \"query using a transaction id\" intention.",
      "created_at": "2022-03-23T01:54:42Z",
      "updated_at": "2022-03-23T01:54:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r832769942",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832769942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832771023",
      "pull_request_review_id": 918081557,
      "id": 832771023,
      "node_id": "PRRC_kwDOABII584xoxPP",
      "diff_hunk": "@@ -52,42 +49,17 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n-\n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n-\n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n+            tx = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)\n+            tx_id.append(tx)\n \n-            # Create a new transaction.\n-            unsigned_raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-            signed_raw_tx = self.nodes[0].signrawtransactionwithwallet(unsigned_raw_tx)\n-            tx_id.append(self.nodes[0].sendrawtransaction(signed_raw_tx['hex']))\n-            tx_size.append(self.nodes[0].getmempoolentry(tx_id[-1])['vsize'])\n+            vsize = self.nodes[0].getrawmempool(True)[tx['txid']]['vsize']",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 81,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": 831908872,
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed back to `getmempoolentry`.",
      "created_at": "2022-03-23T01:57:07Z",
      "updated_at": "2022-03-23T01:57:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r832771023",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832771023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832789291",
      "pull_request_review_id": 918106401,
      "id": 832789291,
      "node_id": "PRRC_kwDOABII584xo1sr",
      "diff_hunk": "@@ -52,42 +49,17 @@ def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', e\n             self.log.debug('Preparing transaction #{}...'.format(i))\n             # Prepare inputs.\n             if i == 0:\n-                inputs = [{'txid': start_input_txid, 'vout': 0}]\n-                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+                parent_utxo = miniwallet.get_utxo()\n             else:\n-                inputs = []\n-                inputs_value = 0\n-                for j, tx in enumerate(tx_id[0:i]):\n-                    # Transaction tx[K] is a child of each of previous transactions tx[0]..tx[K-1] at their output K-1.\n-                    vout = i - j - 1\n-                    inputs.append({'txid': tx_id[j], 'vout': vout})\n-                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n-\n-            self.log.debug('inputs={}'.format(inputs))\n-            self.log.debug('inputs_value={}'.format(inputs_value))\n-\n-            # Prepare outputs.\n-            tx_count = i + 1\n-            if tx_count < size:\n-                # Transaction tx[K] is an ancestor of each of subsequent transactions tx[K+1]..tx[N-1].\n-                n_outputs = size - tx_count\n-                output_value = ((inputs_value - fee) / Decimal(n_outputs)).quantize(Decimal('0.00000001'))\n-                outputs = {}\n-                for _ in range(n_outputs):\n-                    outputs[self.nodes[0].getnewaddress()] = output_value\n-            else:\n-                output_value = (inputs_value - fee).quantize(Decimal('0.00000001'))\n-                outputs = {end_address: output_value}\n+                parent_utxo = miniwallet.get_utxo(txid=tx_id[i-1]['txid'])\n \n-            self.log.debug('output_value={}'.format(output_value))\n-            self.log.debug('outputs={}'.format(outputs))\n+            tx = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=parent_utxo, sequence=SEQUENCE_FINAL)",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 73,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "203a3e065ecd0ec8a9fb84f4deb512ef2b66cdf7",
      "in_reply_to_id": 831907865,
      "user": {
        "login": "pg156",
        "id": 91135419,
        "node_id": "MDQ6VXNlcjkxMTM1NDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/91135419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pg156",
        "html_url": "https://github.com/pg156",
        "followers_url": "https://api.github.com/users/pg156/followers",
        "following_url": "https://api.github.com/users/pg156/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pg156/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pg156/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pg156/subscriptions",
        "organizations_url": "https://api.github.com/users/pg156/orgs",
        "repos_url": "https://api.github.com/users/pg156/repos",
        "events_url": "https://api.github.com/users/pg156/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pg156/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Without `SEQUENCE_FINAL`, the test broke at `assert_equal(len(node.getrawmempool()), size)` after the first block is invalidated, as the mempool has 26 transactions instead of the expected 100.\r\n\r\nIn a simpler example with fewer transactions without `SEQUENCE_FINAL`, I can see after the block is invalidated, transactions are removed from the mempool because of this place: https://github.com/bitcoin/bitcoin/blob/f05cf59d91eb03857dd9bdcc77607764da0349d2/src/consensus/tx_verify.cpp#L53",
      "created_at": "2022-03-23T02:26:51Z",
      "updated_at": "2022-03-23T02:26:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r832789291",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832789291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841291638",
      "pull_request_review_id": 929733165,
      "id": 841291638,
      "node_id": "PRRC_kwDOABII584yJRd2",
      "diff_hunk": "@@ -9,41 +9,36 @@\n \"\"\"\n import time\n \n-from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.messages import (\n+    SEQUENCE_FINAL,\n+)\n \n \n class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000', '-limitancestorcount=100']]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n-    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n-        \"\"\"Create an acyclic tournament (a type of directed graph) of transactions and use it for testing.\n+    def transaction_list_test(self, size, n_tx_to_mine=None):\n+        \"\"\"Create a singly linked list of transactions and use it for testing.\n \n         Keyword arguments:\n-        size -- the order N of the tournament which is equal to the number of the created transactions\n+        size -- the number of the created transactions\n         n_tx_to_mine -- the number of transaction that should be mined into a block\n \n         If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n         the following holds:\n             the tx[K] transaction:\n             - has N-K descendants (including this one), and\n             - has K+1 ancestors (including this one)",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": 35,
      "original_position": 35,
      "commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "original_commit_id": "72ad8add4c9523b6946e7fac5b45c5746c288e21",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think these conditions hold true after this PR",
      "created_at": "2022-04-03T23:11:17Z",
      "updated_at": "2022-04-03T23:43:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24183#discussion_r841291638",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841291638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24183"
        }
      },
      "start_line": 32,
      "original_start_line": 32,
      "start_side": "RIGHT",
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    }
  ]
}