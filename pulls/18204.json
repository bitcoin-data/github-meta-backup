{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "id": 379298849,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc5Mjk4ODQ5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18204.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18204.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "number": 18204,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "descriptors: improve descriptor cache and cache xpubs",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Improves the descriptor cache by changing it from a `std::vector<unsigned char>` to a newly introduced `DescriptorCache` class. Instead of serializing pubkeys and whatever else we would want to cache in a way that may not be backwards compatible, we instead create a `DescriptorCache` object and populate it. This object contains only an xpub cache. Since the only `PubkeyProvider` that used the cache is the `BIP32PubkeyProvider` we just have it store the xpubs instead of the pubkeys. This allows us to have both the parent xpub and the child xpubs in the same container. The map is keyed by `KeyOriginInfo`.\r\n\r\nSine we are caching `CExtPubKey`s in `DescriptorCache`, `BIP32PubKeyProviders` can use the cached parent xpubs to derive the children if unhardened derivation is used in the last step. This also means that we can still derive the keys for a `BIP32PubkeyProvider` that has hardened derivation steps. When combined with descriptor wallets, this should allow us to be able to import a descriptor with an `xprv` and hardened steps and still be able to derive from it. In that sense, this is an alternative to #18163\r\n\r\nTo test that this works, the tests have been updated to do an additional `Expand` at the `i + 1` position. This expansion is not cached. We then do an `ExpandFromCache` at `i + 1` and use the cache that was produced by the expansion at `i`. This way, we won't have the child xpubs for `i + 1` but we will have the parent xpubs. So this checks whether the parent xpubs are being stored and can be used to derive the child keys. Descriptors that have a hardened last step are skipped for this part of the test because that will always require private keys.",
    "labels": [
      {
        "id": 1482182044,
        "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
        "name": "Descriptors",
        "description": "",
        "color": "e9f76c",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-02-25T00:20:41Z",
    "updated_at": "2022-02-15T10:42:06Z",
    "closed_at": "2020-03-13T21:45:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-13T21:45:30Z",
    "merge_commit_sha": "7f8176a1ebd00679596971fd01012cf61743b826",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "achow101:desc-xpub-cache",
      "ref": "desc-xpub-cache",
      "sha": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 238743,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T17:43:24Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-05-16T00:18:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3d28c886f077ce22fb7755fe9ec1f4e08d3d4a62",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 285,
    "deletions": 91,
    "changed_files": 3,
    "commits": 7,
    "review_comments": 125,
    "comments": 16
  },
  "events": [
    {
      "event": "labeled",
      "id": 3067493827,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNjc0OTM4Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3067493827",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T00:21:24Z",
      "label": {
        "name": "Descriptors",
        "color": "e9f76c"
      }
    },
    {
      "event": "commented",
      "id": 590647940,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDY0Nzk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590647940",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T02:20:47Z",
      "updated_at": "2020-03-08T18:56:04Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16710 (build: Enable -Wsuggest-override if available by hebasto)\n* #16116 (Avoid unnecessary signing provider copies on descriptor expansion by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-590647940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 364014093,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDE0MDkz",
      "url": null,
      "actor": null,
      "commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nI'm seeing errors on Travis and locally:\r\n\r\n```\r\nAssertionError: Unexpected stderr Assertion failed: (fValid), function GetPubKey, file key.cpp, line 185.\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-364014093",
      "submitted_at": "2020-02-25T10:48:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "reviewed",
      "id": 364156739,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTU2NzM5",
      "url": null,
      "actor": null,
      "commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "this is getting importmulti test failures",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-364156739",
      "submitted_at": "2020-02-25T16:01:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3070469272,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MDQ2OTI3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070469272",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T18:22:07Z"
    },
    {
      "event": "commented",
      "id": 591045213,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTA0NTIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591045213",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T20:10:07Z",
      "updated_at": "2020-02-25T20:10:07Z",
      "author_association": "MEMBER",
      "body": "Fixed the assertion. Travis seems to be seeing a memory leak but I'm having trouble figuring out where that is.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591045213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3071734077,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MTczNDA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3071734077",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T01:14:10Z"
    },
    {
      "event": "commented",
      "id": 591184682,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTE4NDY4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591184682",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T01:17:15Z",
      "updated_at": "2020-02-26T01:17:15Z",
      "author_association": "MEMBER",
      "body": "I've reworked how the caching works to get rid of the `global_pos` and `internal_pos` stuff.\r\n\r\nInstead of having `ExpandHelper` go through the cache and find the pubkeys, we pass the cache into the `PubkeyProvider`s and let them do the cache lookups. Since really only `BIP32PubkeyProvider` uses the cache, we can get rid of the position stuff by having it store only xpubs in a map. So for all derived keys, we store their `KeyOriginInfo` and xpub so that later the `BIP32PubkeyProvider` can look them up. The last parent is still being stored so that additional derivation can occur.\r\n\r\nThis consolidates cache reads and writes and encapsulates them in the classes that actually use the cache.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591184682",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 364952572,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTUyNTcy",
      "url": null,
      "actor": null,
      "commit_id": "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "a544f0e7459f346a1bf129c9dc978fe46c6abf73 looks correct. Much clearer than before, but still some confusing bits.\r\n\r\nI find the separation of 4f24907f4007b2786ee39dcb8d6f86e52494db10 a6feb5d1aee6ae08b87029561873471cdd62a36a confusing, with the `ExpandFromCache` signature changing in two steps. \r\n\r\nSwitching from pubkeys to xpubs plus origin info increases the cache size by ~40 bytes per key, or 240 KB for a typical descriptor wallet with change & receive for three output types, with the first 1000 keys expanded. That's probably acceptable, though maybe the serialization could be optimized to leave out the chain code for \"leaf\" keys (meh, complexity).\r\n\r\nThis could be a good time to rename `m_derive` to `m_range_derive` to make it clear that this refers to whether a given (final?) path element is (hardened) ranged or not.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-364952572",
      "submitted_at": "2020-02-26T15:49:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3074800535,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3NDgwMDUzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3074800535",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T17:56:17Z"
    },
    {
      "event": "commented",
      "id": 591559861,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTU1OTg2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591559861",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T17:59:24Z",
      "updated_at": "2020-02-26T17:59:24Z",
      "author_association": "MEMBER",
      "body": "I've squashed the middle three commits together (the ones that just changed to using DescriptorCache) so that the signature of `Expand` and `ExpandHelper` don't change so many times.\r\n\r\n> Switching from pubkeys to xpubs plus origin info increases the cache size by ~40 bytes per key, or 240 KB for a typical descriptor wallet with change & receive for three output types, with the first 1000 keys expanded. That's probably acceptable, though maybe the serialization could be optimized to leave out the chain code for \"leaf\" keys (meh, complexity).\r\n\r\nWe could do what I did originally and have a pubkey cache, but I felt that to be unnecessary. We would still be storing `KeyOriginInfo`.\r\n\r\n> This could be a good time to rename `m_derive` to `m_range_derive` to make it clear that this refers to whether a given (final?) path element is (hardened) ranged or not.\r\n\r\nWhy? I find it to be clear.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591559861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 365297033,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Mjk3MDMz",
      "url": null,
      "actor": null,
      "commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-365297033",
      "submitted_at": "2020-02-26T22:46:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3076113256,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3NjExMzI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3076113256",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T02:05:05Z"
    },
    {
      "event": "reviewed",
      "id": 365505343,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTA1MzQz",
      "url": null,
      "actor": null,
      "commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-365505343",
      "submitted_at": "2020-02-27T08:57:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "reviewed",
      "id": 365687424,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Njg3NDI0",
      "url": null,
      "actor": null,
      "commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> We could do what I did originally and have a pubkey cache, but I felt that to be unnecessary.\r\n\r\nThat's fine. Unless future benchmarks show that `DescriptorScriptPubKeyMan::TopUp()` is particularly slow (https://github.com/bitcoin/bitcoin/pull/16528/commits/76a355eff5b55df6951d21e66f4558ee26f244f4), compared to the other work that happens when loading a wallet.\r\n\r\nCan you move 568a90f908313466f5a57c46dc3a16cc01117f70 and 23aef1932c7f8f580928eac595ad3928f306ae35 from #15528 to here? 568a90f908313466f5a57c46dc3a16cc01117f70 could use a test to show that nothing is added to cache.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-365687424",
      "submitted_at": "2020-02-27T13:58:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "commented",
      "id": 592081988,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA4MTk4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592081988",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T17:31:02Z",
      "updated_at": "2020-02-27T17:31:02Z",
      "author_association": "MEMBER",
      "body": "Unable to \"review\" at the moment due to github issues, but https://github.com/bitcoin/bitcoin/pull/18204/commits/d90075e586b2a4b1fbc1c511d662c0b918023595 looks logically correct (will swing back here when back up and drop comments)",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592081988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 365701767,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NzAxNzY3",
      "url": null,
      "actor": null,
      "commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-365701767",
      "submitted_at": "2020-02-27T17:32:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3078942915,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3ODk0MjkxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3078942915",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T18:18:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3078966683,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3ODk2NjY4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3078966683",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T18:25:27Z"
    },
    {
      "event": "commented",
      "id": 592107250,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjEwNzI1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592107250",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T18:26:48Z",
      "updated_at": "2020-02-27T18:26:48Z",
      "author_association": "MEMBER",
      "body": "> Can you move 568a90f and 23aef19 from #16528 to here? 568a90f could use a test to show that nothing is added to cache.\r\n\r\nDone. Also squashed a bit and added tests.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592107250",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "commented",
      "id": 592482741,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjQ4Mjc0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592482741",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-28T11:58:30Z",
      "updated_at": "2020-02-28T11:59:09Z",
      "author_association": "MEMBER",
      "body": "Travis and AppVeyor didn't run. Probably because of the Github problems yesterday. It might help to force push some trivial change.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592482741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 366367050,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzY3MDUw",
      "url": null,
      "actor": null,
      "commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Keeping you busy :-)\r\n\r\nI like the progression in the commits now: b434a8769956573b2ee8eaa2b4826f0e82d39f1f maintains the existing behaviour of caching individual pub keys, except that it switches to xpubs. The next commits then reduce the amount of stuff cached.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-366367050",
      "submitted_at": "2020-02-28T13:05:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3083259596,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA4MzI1OTU5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3083259596",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-28T19:34:02Z"
    },
    {
      "event": "commented",
      "id": 592748507,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjc0ODUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592748507",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-28T21:59:49Z",
      "updated_at": "2020-02-28T21:59:49Z",
      "author_association": "MEMBER",
      "body": "I've added another commit to internally cache that parent xpub inside of `BIP32PubkeyProvider` so the `Expand` doesn't constantly re-derive the same xpub.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592748507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 366785407,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Nzg1NDA3",
      "url": null,
      "actor": null,
      "commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "~That last commit may not be necessary if `Topup()` tries `ExpandFromCache` first: https://github.com/bitcoin/bitcoin/pull/16528#discussion_r386015063 (but if I'm wrong about that, then it's fine to keep it).~  _(nvm, there are plenty of other places where Expand() is used, e.g. `importdescriptors`, `deriveaddresses`)_",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-366785407",
      "submitted_at": "2020-02-29T10:20:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "reviewed",
      "id": 366807278,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODA3Mjc4",
      "url": null,
      "actor": null,
      "commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 384562930a48474f337224b0355b6fd08784c375 modulo assert side effects. Above and below some last suggestions to improve readability.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-366807278",
      "submitted_at": "2020-02-29T17:23:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3089207247,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA4OTIwNzI0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3089207247",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T18:51:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3093471116,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5MzQ3MTExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3093471116",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T19:01:48Z"
    },
    {
      "event": "commented",
      "id": 594120140,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDEyMDE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594120140",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T19:16:36Z",
      "updated_at": "2020-03-03T19:16:36Z",
      "author_association": "MEMBER",
      "body": "Code review re-ACK 1373d9d885fdc671a7538f9ea6410582bcaee1d5",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594120140",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "commented",
      "id": 594177852,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDE3Nzg1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594177852",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T21:27:20Z",
      "updated_at": "2020-03-03T21:27:20Z",
      "author_association": "MEMBER",
      "body": "The logic seems correct, but only once I did my own little refactorings to make it more understandable what everything was doing: https://github.com/instagibbs/bitcoin/commit/9c169165cbfb1565c28b8969733351e5611db6ac\r\n\r\nI'm willing to ACK the logic as-is, but I find it extremely opaque and would immediately open up a PR with these changes.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594177852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3094220098,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5NDIyMDA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094220098",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T22:53:00Z"
    },
    {
      "event": "commented",
      "id": 594213072,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIxMzA3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594213072",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T22:53:18Z",
      "updated_at": "2020-03-03T22:53:18Z",
      "author_association": "MEMBER",
      "body": "I've pulled in @instagibbs suggested changes with only one small modification.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594213072",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "mentioned",
      "id": 3094220862,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA5NDIyMDg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094220862",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T22:53:18Z"
    },
    {
      "event": "subscribed",
      "id": 3094220864,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwOTQyMjA4NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094220864",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T22:53:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3094272871,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5NDI3Mjg3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094272871",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T23:13:48Z"
    },
    {
      "event": "commented",
      "id": 594243308,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDI0MzMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594243308",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T00:32:46Z",
      "updated_at": "2020-03-04T00:32:46Z",
      "author_association": "MEMBER",
      "body": "code review ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/1c20f259cf8f406254989d4ecca1c52d858209ae\r\n\r\nthanks for pulling in most the suggestions!\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594243308",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "review_requested",
      "id": 3094439450,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50MzA5NDQzOTQ1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094439450",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T00:34:16Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 368462180,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDYyMTgw",
      "url": null,
      "actor": null,
      "commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-368462180",
      "submitted_at": "2020-03-04T02:50:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3094822846,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5NDgyMjg0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3094822846",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T03:20:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3097304864,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5NzMwNDg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3097304864",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T16:16:06Z"
    },
    {
      "event": "mentioned",
      "id": 3097586797,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA5NzU4Njc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3097586797",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T17:20:28Z"
    },
    {
      "event": "subscribed",
      "id": 3097586803,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwOTc1ODY4MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3097586803",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T17:20:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3098513044,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5ODUxMzA0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3098513044",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T21:01:42Z"
    },
    {
      "event": "commented",
      "id": 594839723,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDgzOTcyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594839723",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T21:03:37Z",
      "updated_at": "2020-03-04T21:04:39Z",
      "author_association": "MEMBER",
      "body": "I've changed the cache back to using position, but this time with `unordered_map`s instead of a vector. This requires using two maps, one for the derived keys, and one for the parent xpubs.\r\n\r\nTo facilitate this, `PubkeyProvider`s will now store their position in the descriptor. This position is established during parsing.\r\n\r\nAlso dropped the commit for `GetNotCached`.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594839723",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 369469826,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDY5ODI2",
      "url": null,
      "actor": null,
      "commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "New approach-ACK.\r\n\r\nNit: \"clariiesy\" in 26f8ddf3183843d6e8a9ec62378010aaecf8edfe commit description\r\n\r\nYou might be able to avoid the complexity of e7e8333 `Cache parent xpub inside of BIP32PubkeyProvider`, by unifying `Expand()` and `ExpandFromCache()`. They could take single `read_write_cache` argument. You could then move the cache update code from https://github.com/bitcoin/bitcoin/pull/16528/files?file-filters%5B%5D=.cpp#diff-5462ceb8a760a507152ab8b76bd48774R1690-R1719 to `Expand()`. When no cache argument is provided, fall back to an internal cache.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-369469826",
      "submitted_at": "2020-03-05T11:13:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "mentioned",
      "id": 3101452861,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEwMTQ1Mjg2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3101452861",
      "actor": {
        "login": "par-zz-am",
        "id": 34549228,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0NTQ5MjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/34549228?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/par-zz-am",
        "html_url": "https://github.com/par-zz-am",
        "followers_url": "https://api.github.com/users/par-zz-am/followers",
        "following_url": "https://api.github.com/users/par-zz-am/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/par-zz-am/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/par-zz-am/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/par-zz-am/subscriptions",
        "organizations_url": "https://api.github.com/users/par-zz-am/orgs",
        "repos_url": "https://api.github.com/users/par-zz-am/repos",
        "events_url": "https://api.github.com/users/par-zz-am/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/par-zz-am/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T14:34:50Z"
    },
    {
      "event": "reviewed",
      "id": 369616045,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjE2MDQ1",
      "url": null,
      "actor": null,
      "commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "new approach ACK, changes make sense",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-369616045",
      "submitted_at": "2020-03-05T15:08:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3102038128,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMjAzODEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102038128",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T16:50:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3102121163,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMjEyMTE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102121163",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T17:10:54Z"
    },
    {
      "event": "reviewed",
      "id": 369788886,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzg4ODg2",
      "url": null,
      "actor": null,
      "commit_id": "196c9765eaa88120964cfb1a81362f37a24ced9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/196c9765eaa88120964cfb1a81362f37a24ced9b",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-369788886",
      "submitted_at": "2020-03-05T17:57:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3102366725,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMjM2NjcyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102366725",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T18:21:58Z"
    },
    {
      "event": "commented",
      "id": 595376100,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTM3NjEwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595376100",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T18:23:53Z",
      "updated_at": "2020-03-05T18:23:53Z",
      "author_association": "MEMBER",
      "body": "code review re-ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/d7b241109f74b3c1c407929930e7d035cdcf60c9",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-595376100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "reviewed",
      "id": 370251656,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjUxNjU2",
      "url": null,
      "actor": null,
      "commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK d7b241109f74b3c1c407929930e7d035cdcf60c9 modulo intermediate commit compile issue.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-370251656",
      "submitted_at": "2020-03-06T13:27:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3107755864,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwNzc1NTg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3107755864",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T14:44:30Z"
    },
    {
      "event": "commented",
      "id": 596096561,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA5NjU2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596096561",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T14:54:08Z",
      "updated_at": "2020-03-10T13:29:10Z",
      "author_association": "MEMBER",
      "body": "re-ACK 31304fc4f8f0d7870794d8c675831d8c73c959cb",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-596096561",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzRlYTNiOTI3ZGRjNjdlNjRhZTc4ZTA4YzIwYzkyNjQ4MTdlODRk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/474ea3b927ddc67e64ae78e08c20c9264817e84d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/474ea3b927ddc67e64ae78e08c20c9264817e84d",
      "tree": {
        "sha": "9df5a282c1556c87a807c389b811fbc83867bdf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9df5a282c1556c87a807c389b811fbc83867bdf5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3b471592346b98ae9aedf7cbc2a4058061b1ad8",
          "sha": "c3b471592346b98ae9aedf7cbc2a4058061b1ad8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c3b471592346b98ae9aedf7cbc2a4058061b1ad8"
        }
      ],
      "message": "Introduce DescriptorCache struct which caches xpubs",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:43Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-24T20:09:15Z"
      },
      "sha": "474ea3b927ddc67e64ae78e08c20c9264817e84d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjU1ZDQ0ZDBkZTIxNzRiYTc0ZWQzYTI4YmVmNWU4M2IwYTUxYjQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df55d44d0de2174ba74ed3a28bef5e83b0a51b47",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df55d44d0de2174ba74ed3a28bef5e83b0a51b47",
      "tree": {
        "sha": "3cb851b30f5ed8c867bf847ed643425b97df0805",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cb851b30f5ed8c867bf847ed643425b97df0805"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/474ea3b927ddc67e64ae78e08c20c9264817e84d",
          "sha": "474ea3b927ddc67e64ae78e08c20c9264817e84d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/474ea3b927ddc67e64ae78e08c20c9264817e84d"
        }
      ],
      "message": "Track the index of the key expression in PubkeyProvider",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-04T18:20:21Z"
      },
      "sha": "df55d44d0de2174ba74ed3a28bef5e83b0a51b47"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmMyY2FkYzkxZDI2MDc0Yjg5ZTVhZGE2ODM1MGI1Yzg2NzZlZmFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66c2cadc91d26074b89e5ada68350b5c8676efac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/66c2cadc91d26074b89e5ada68350b5c8676efac",
      "tree": {
        "sha": "2dd25a3e423ee68a50ee40474ad9f3867f9d8b20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dd25a3e423ee68a50ee40474ad9f3867f9d8b20"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df55d44d0de2174ba74ed3a28bef5e83b0a51b47",
          "sha": "df55d44d0de2174ba74ed3a28bef5e83b0a51b47",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df55d44d0de2174ba74ed3a28bef5e83b0a51b47"
        }
      ],
      "message": "Rename BIP32PubkeyProvider.m_extkey to m_root_extkey\n\nRenaming clarifies that m_extkey is actually the root\nextkey that keys are derived from.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-03T22:16:40Z"
      },
      "sha": "66c2cadc91d26074b89e5ada68350b5c8676efac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGY1NGI2ODZmNjYzZTRjNDZhMmNmN2E2NDU2MDQwOTAwN2M3ZWIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58f54b686f663e4c46a2cf7a64560409007c7eb3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58f54b686f663e4c46a2cf7a64560409007c7eb3",
      "tree": {
        "sha": "51b1604332b9a8f589041a61e06be1df3ce759c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51b1604332b9a8f589041a61e06be1df3ce759c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66c2cadc91d26074b89e5ada68350b5c8676efac",
          "sha": "66c2cadc91d26074b89e5ada68350b5c8676efac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/66c2cadc91d26074b89e5ada68350b5c8676efac"
        }
      ],
      "message": "Add DescriptorCache* read_cache and DescriptorCache* write_cache to Expand and GetPubKey\n\nHave Expand, ExpandFromCache, and ExpandHelper take additional DescriptorCache\nparameters. These are then passed into PubkeyProvider::GetPubKey which\nalso takes them as arguments.\n\nReading and writing to the cache is pushed down into GetPubKey. The old cache where\npubkeys are serialized to a vector is completely removed and instead xpubs are being\ncached in DescriptorCache.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-25T21:01:58Z"
      },
      "sha": "58f54b686f663e4c46a2cf7a64560409007c7eb3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNzY3MzNlZGE1ZjRjMTYxZTllYjQ3Yzc0Yjk0OTU4MmFiOGY0NDhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f76733eda5f4c161e9eb47c74b949582ab8f448a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f76733eda5f4c161e9eb47c74b949582ab8f448a",
      "tree": {
        "sha": "ca3ff2eb6bc4496b7d61d2d3a87f752f099fc85a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca3ff2eb6bc4496b7d61d2d3a87f752f099fc85a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58f54b686f663e4c46a2cf7a64560409007c7eb3",
          "sha": "58f54b686f663e4c46a2cf7a64560409007c7eb3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58f54b686f663e4c46a2cf7a64560409007c7eb3"
        }
      ],
      "message": "Cache the immediate derivation parent xpub\n\nIf unhardened derivation is used, cache the immediate derivation\nparent xpub and use it for unhardened derivation",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-25T23:28:05Z"
      },
      "sha": "f76733eda5f4c161e9eb47c74b949582ab8f448a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWI3OTFjN2JhMDU3YTM3NjVkMDliMTJiZjNlNTU1NDdhNTI5OGU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/deb791c7ba057a3765d09b12bf3e55547a5298e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/deb791c7ba057a3765d09b12bf3e55547a5298e4",
      "tree": {
        "sha": "8ed217eb7166a4a171b55ba4c1ebe90bfc736442",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ed217eb7166a4a171b55ba4c1ebe90bfc736442"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f76733eda5f4c161e9eb47c74b949582ab8f448a",
          "sha": "f76733eda5f4c161e9eb47c74b949582ab8f448a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f76733eda5f4c161e9eb47c74b949582ab8f448a"
        }
      ],
      "message": "Only cache xpubs that have a hardened last step\n\nAlso adds tests for this:\nFor ranged descriptors with unhardened derivation, we expect to\nfind parent keys in the cache but no child keys.\n\nFor descriptors containing an xpub but do not have unhardened derivation\n(i.e. hardened derivation or single xpub with or without derivation),\nwe expect to find all of the keys in the cache, and the same\nnumber of keys in the cache as in the SigningProvider.\n\nFor everything else (no xpub), nothing should be cached at all.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-26T21:52:03Z"
      },
      "sha": "deb791c7ba057a3765d09b12bf3e55547a5298e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWUyNTA3MWY0MGM1NjRhZjA4YTEzODZjMzljNGYyZDhlYjQ4NGI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "tree": {
        "sha": "6469e968a89929f5d3d1859544c07e9c45d834c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6469e968a89929f5d3d1859544c07e9c45d834c6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/deb791c7ba057a3765d09b12bf3e55547a5298e4",
          "sha": "deb791c7ba057a3765d09b12bf3e55547a5298e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/deb791c7ba057a3765d09b12bf3e55547a5298e4"
        }
      ],
      "message": "Cache parent xpub inside of BIP32PubkeyProvider\n\nOptimize Expand by having BIP32PubkeyProvider also cache the parent\n(or only) xpub within itself. Since Expand does not provide a read\ncache, it is useful to internally cache this xpub to avoid re-deriving\nthe same xpub.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-07T15:13:47Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-28T21:55:24Z"
      },
      "sha": "09e25071f40c564af08a1386c39c4f2d8eb484b6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3107773527,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwNzc3MzUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3107773527",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T15:14:11Z"
    },
    {
      "event": "commented",
      "id": 596773416,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njc3MzQxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596773416",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T20:52:27Z",
      "updated_at": "2020-03-09T20:52:27Z",
      "author_association": "MEMBER",
      "body": "code review re-re-ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-596773416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204"
    },
    {
      "event": "review_requested",
      "id": 3112961968,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50MzExMjk2MTk2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112961968",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T01:47:54Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 371949606,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTQ5NjA2",
      "url": null,
      "actor": null,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#pullrequestreview-371949606",
      "submitted_at": "2020-03-10T13:29:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
    },
    {
      "event": "review_requested",
      "id": 3116840928,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50MzExNjg0MDkyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3116840928",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T23:49:14Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "merged",
      "id": 3128321509,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzEyODMyMTUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3128321509",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7f8176a1ebd00679596971fd01012cf61743b826",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f8176a1ebd00679596971fd01012cf61743b826",
      "created_at": "2020-03-13T21:45:30Z"
    },
    {
      "event": "closed",
      "id": 3128321526,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzEyODMyMTUyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3128321526",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T21:45:30Z"
    },
    {
      "event": "referenced",
      "id": 3129020619,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMjkwMjA2MTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3129020619",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9ac84dd1a149e766bf842374dbdefd4db89da0e3",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9ac84dd1a149e766bf842374dbdefd4db89da0e3",
      "created_at": "2020-03-14T06:15:40Z"
    },
    {
      "event": "referenced",
      "id": 3980859181,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTkxODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980859181",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2f115a38a841b61da12fd6fd5bfb094acda9a789",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/2f115a38a841b61da12fd6fd5bfb094acda9a789",
      "created_at": "2020-11-10T20:39:55Z"
    },
    {
      "event": "referenced",
      "id": 3993423438,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0MjM0Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993423438",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4edde519407be149c821b37ec53a67a0732e6792",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/4edde519407be149c821b37ec53a67a0732e6792",
      "created_at": "2020-11-13T13:14:39Z"
    },
    {
      "event": "referenced",
      "id": 3993435715,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0MzU3MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993435715",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "74509ddd8a623a7c8a10dff02f2c55319236a891",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/74509ddd8a623a7c8a10dff02f2c55319236a891",
      "created_at": "2020-11-13T13:18:02Z"
    },
    {
      "event": "referenced",
      "id": 3993460147,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0NjAxNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993460147",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ca0a03351c0dd1caff57c45a56addf90b34bc544",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/ca0a03351c0dd1caff57c45a56addf90b34bc544",
      "created_at": "2020-11-13T13:24:21Z"
    },
    {
      "event": "referenced",
      "id": 3993489723,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0ODk3MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993489723",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "06534944000e7be7eddc3aab296312a164638191",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/06534944000e7be7eddc3aab296312a164638191",
      "created_at": "2020-11-13T13:32:31Z"
    },
    {
      "event": "referenced",
      "id": 3993489735,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0ODk3MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993489735",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f0c918349526320d5c6649644afad1835817752b",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/f0c918349526320d5c6649644afad1835817752b",
      "created_at": "2020-11-13T13:32:31Z"
    },
    {
      "event": "referenced",
      "id": 3993499227,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0OTkyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993499227",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a378ee5ce2a857faaa6246ca8add40c19f807ab",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/3a378ee5ce2a857faaa6246ca8add40c19f807ab",
      "created_at": "2020-11-13T13:35:08Z"
    },
    {
      "event": "referenced",
      "id": 3993499229,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTM0OTkyMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993499229",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ec5a073bd022d09d8db818b446aa16f6071543a4",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/ec5a073bd022d09d8db818b446aa16f6071543a4",
      "created_at": "2020-11-13T13:35:08Z"
    },
    {
      "event": "locked",
      "id": 6073864367,
      "node_id": "LOE_lADOABII584h_P-jzwAAAAFqB9Cv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073864367",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:42:06Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842",
      "pull_request_review_id": 364014093,
      "id": 383778842,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODg0Mg==",
      "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);\n+    bool GetCachedPubKey(unsigned int global_pos, unsigned int internal_pos, CPubKey& pubkey) const;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 14,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`global_pos` and `internal_pos` could use documentation. Would it make sense to cache all pubkeys (for a given position) in one operation?",
      "created_at": "2020-02-25T10:08:02Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841",
      "pull_request_review_id": 364156739,
      "id": 383891841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MTg0MQ==",
      "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 13,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it's named `global_pos` in the definition which lines up with `GetCachedPubKey`",
      "created_at": "2020-02-25T13:54:47Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053",
      "pull_request_review_id": 364156739,
      "id": 383892053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MjA1Mw==",
      "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this needs a description as well",
      "created_at": "2020-02-25T13:55:10Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021",
      "pull_request_review_id": 364952572,
      "id": 384534021,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNDAyMQ==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We should compare path elements first (`max(a.path.size(), b.path.size())`) and size after.\r\n\r\nSince `std::map<KeyOriginInfo, CExtPubKey> m_xpubs` is serialised, I'd prefer to tidy up the ordering. Whether this matters depends on how you rebase https://github.com/bitcoin/bitcoin/pull/16528/commits/35bb585b28e5de43553bfd52d2257db9400199be, if it remains a blob or becomes multiple entries keyed by origin.",
      "created_at": "2020-02-26T14:40:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045",
      "pull_request_review_id": 364952572,
      "id": 384554045,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDA0NQ==",
      "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: maybe rename `spks_cached1` to `spks1_from_cache`",
      "created_at": "2020-02-26T15:09:57Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695",
      "pull_request_review_id": 364952572,
      "id": 384555695,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NTY5NQ==",
      "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`but use the cache generated while expanding i. This cache won't have the pubkeys for i + 1, but`",
      "created_at": "2020-02-26T15:12:26Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821",
      "pull_request_review_id": 364952572,
      "id": 384560821,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MDgyMQ==",
      "diff_hunk": "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`xpub or xpriv`, unless you neuter it at the end and have it return a `CExtPubKey&`",
      "created_at": "2020-02-26T15:19:36Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514",
      "pull_request_review_id": 364952572,
      "id": 384579514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTUxNA==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it worth skipping the parent `write` once it's done?",
      "created_at": "2020-02-26T15:45:35Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169",
      "pull_request_review_id": 365105969,
      "id": 384655169,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY1NTE2OQ==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": 384579514,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A lookup is just as expensive as an insertion, so I don't think so.",
      "created_at": "2020-02-26T17:41:37Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400",
      "pull_request_review_id": 365116244,
      "id": 384663400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQwMA==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "in_reply_to_id": 384534021,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-02-26T17:56:20Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446",
      "pull_request_review_id": 365116296,
      "id": 384663446,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQ0Ng==",
      "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": 384554045,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-02-26T17:56:24Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507",
      "pull_request_review_id": 365116377,
      "id": 384663507,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzUwNw==",
      "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": 384555695,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-02-26T17:56:31Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663507",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587",
      "pull_request_review_id": 365116491,
      "id": 384663587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzU4Nw==",
      "diff_hunk": "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "in_reply_to_id": 384560821,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to xprv",
      "created_at": "2020-02-26T17:56:41Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070",
      "pull_request_review_id": 365297033,
      "id": 384811070,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMTA3MA==",
      "diff_hunk": "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 16,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be removed.",
      "created_at": "2020-02-26T22:39:04Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384811070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839",
      "pull_request_review_id": 365297033,
      "id": 384812839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgzOQ==",
      "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will this return false in a follow up change?",
      "created_at": "2020-02-26T22:43:17Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384812839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316",
      "pull_request_review_id": 365371087,
      "id": 384875316,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTMxNg==",
      "diff_hunk": "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 16,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "in_reply_to_id": 384811070,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-02-27T02:05:12Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354",
      "pull_request_review_id": 365371134,
      "id": 384875354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTM1NA==",
      "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "in_reply_to_id": 384812839,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No. I've made it `void`",
      "created_at": "2020-02-27T02:05:20Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867",
      "pull_request_review_id": 365505343,
      "id": 384987867,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Nzg2Nw==",
      "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does it make sense to `assert(m_xpubs.count(origin_info) == 0)`?",
      "created_at": "2020-02-27T08:57:05Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384987867",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1094,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549",
      "pull_request_review_id": 365665103,
      "id": 385114549,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNDU0OQ==",
      "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 384987867,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not at the moment: https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
      "created_at": "2020-02-27T13:08:52Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385114549",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1094,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791",
      "pull_request_review_id": 365687424,
      "id": 385131791,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMTc5MQ==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This `CExtPubKey` juggling still confuses me :-)\r\n\r\nI added some comments for my own sanity. Will probably need to read this again later.\r\n\r\n```\r\nCExtPubKey extkey_out = m_extkey;    // to hold extended key for *key (m/.../k)\r\nCExtPubKey extkey_parent = m_extkey; // to hold extended key for the parent of *key (m/.../k/pos)\r\n```\r\n",
      "created_at": "2020-02-27T13:41:22Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385131791",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821",
      "pull_request_review_id": 365687424,
      "id": 385134821,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDgyMQ==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// Check if the parent at m/.../k is cached\r\n```",
      "created_at": "2020-02-27T13:46:43Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647",
      "pull_request_review_id": 365687424,
      "id": 385135647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTY0Nw==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// Get the extended private key at m/.../k\r\n```",
      "created_at": "2020-02-27T13:48:10Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385135647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236",
      "pull_request_review_id": 365687424,
      "id": 385137236,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNzIzNg==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// Get the extended public key at m/.../k/i or m/.../k/i'\r\n```",
      "created_at": "2020-02-27T13:50:53Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385137236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315",
      "pull_request_review_id": 365687424,
      "id": 385139315,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzOTMxNQ==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(one line up)\r\n```\r\n// Set parent to the extended public key at m/.../k\r\n```",
      "created_at": "2020-02-27T13:54:23Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385139315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 320,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390",
      "pull_request_review_id": 365687424,
      "id": 385140390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MDM5MA==",
      "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(above)\r\n```\r\n// If this is not a ranged descriptor, we return the public key at `m/.../k`, otherwise at `m/.../k/i\r\n```",
      "created_at": "2020-02-27T13:56:18Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385140390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659",
      "pull_request_review_id": 365701767,
      "id": 385142659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MjY1OQ==",
      "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    void CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);\n+    bool GetCachedExtPubKey(const KeyOriginInfo& origin_info, CExtPubKey& xpub) const;\n+};",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 12,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "much clearer now :+1: ",
      "created_at": "2020-02-27T14:00:07Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385142659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331",
      "pull_request_review_id": 365701767,
      "id": 385154331,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDMzMQ==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I made this complaint long ago but I'd really prefer some constant for `4` being littered everywhere.",
      "created_at": "2020-02-27T14:18:43Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385154331",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902",
      "pull_request_review_id": 365701767,
      "id": 385155902,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NTkwMg==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 4,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "future work: Noticed there are no unit tests for `KeyOriginInfo`, would be nice to have",
      "created_at": "2020-02-27T14:21:08Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385155902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281",
      "pull_request_review_id": 365701767,
      "id": 385161281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MTI4MQ==",
      "diff_hunk": "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "db007ea44f90befcad8fe0b3d089c273deecc89c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A few words on the new optional args?",
      "created_at": "2020-02-27T14:29:12Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385161281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": 155,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274",
      "pull_request_review_id": 365701767,
      "id": 385180274,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4MDI3NA==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any? The whole path has to be unhardened right?",
      "created_at": "2020-02-27T15:20:43Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385180274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770",
      "pull_request_review_id": 365891599,
      "id": 385287770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4Nzc3MA==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 385180274,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just the last range step. The range derivation type has to be unhardened or none. This means it either ends with `*` or with an absolute path. There can be hardened steps in between, and even have the last step be hardened if it is not a range.\r\n\r\nThis thing about a non-ranged path is kind of a hack to make sure that we cache the pubkey for descriptors that have keys like `xprv../1'`. We have some examples of this in the tests.",
      "created_at": "2020-02-27T18:21:21Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385287770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029",
      "pull_request_review_id": 365894431,
      "id": 385290029,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5MDAyOQ==",
      "diff_hunk": "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "db007ea44f90befcad8fe0b3d089c273deecc89c",
      "in_reply_to_id": 385161281,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added some comments.",
      "created_at": "2020-02-27T18:25:30Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385290029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": 155,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764",
      "pull_request_review_id": 365897948,
      "id": 385292764,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5Mjc2NA==",
      "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 384987867,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Performance penalty aside, makes sense to assert it's the same xpub if already cached?",
      "created_at": "2020-02-27T18:30:33Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385292764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1094,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363",
      "pull_request_review_id": 365906201,
      "id": 385299363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5OTM2Mw==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 385180274,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?",
      "created_at": "2020-02-27T18:42:54Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385299363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764",
      "pull_request_review_id": 365918191,
      "id": 385308764,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwODc2NA==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 385180274,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.",
      "created_at": "2020-02-27T19:00:07Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385308764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318",
      "pull_request_review_id": 365921550,
      "id": 385311318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMTMxOA==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 385180274,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?\r\n\r\nYes. Maybe we should add a `CheckUnparsable` for that.\r\n\r\n> I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.\r\n\r\nActually no. We always cache if there are xpubs. If the descriptor has just an xpub, e.g. `wpkh(xpub...)`, we actually would cache that xpub. If it were `wpkh(xpub.../0)`, we would cache the derived xpub. Same if it is hardened.",
      "created_at": "2020-02-27T19:05:06Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385311318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609",
      "pull_request_review_id": 365924341,
      "id": 385313609,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMzYwOQ==",
      "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "in_reply_to_id": 385180274,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I'm agreeing with you here.",
      "created_at": "2020-02-27T19:09:30Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385313609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434",
      "pull_request_review_id": 366367050,
      "id": 385672434,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3MjQzNA==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\r\n```",
      "created_at": "2020-02-28T12:37:13Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385672434",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713",
      "pull_request_review_id": 366367050,
      "id": 385676713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjcxMw==",
      "diff_hunk": "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
      "path": "src/script/descriptor.cpp",
      "position": 88,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: assert `Derive()` succeeds",
      "created_at": "2020-02-28T12:47:05Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836",
      "pull_request_review_id": 366367050,
      "id": 385676836,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjgzNg==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: assert `Derive()` succeeds",
      "created_at": "2020-02-28T12:47:21Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014",
      "pull_request_review_id": 366367050,
      "id": 385679014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3OTAxNA==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't need this temporary variable anymore, suggest renaming `info` to `info_out` instead. ",
      "created_at": "2020-02-28T12:52:48Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385679014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704",
      "pull_request_review_id": 366367050,
      "id": 385683704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MzcwNA==",
      "diff_hunk": "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CPubKey* key` can be a reference now, and you can drop `if(key)` in a few places. The `nullptr` was only used for caching individual pubkeys.",
      "created_at": "2020-02-28T13:04:17Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385683704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377",
      "pull_request_review_id": 366593569,
      "id": 385849377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg0OTM3Nw==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385679014,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We want to avoid modifying `info` in case later steps fail.",
      "created_at": "2020-02-28T18:21:11Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385849377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709",
      "pull_request_review_id": 366596472,
      "id": 385851709,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTcwOQ==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385679014,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "might be worth a comment(took me a bit to convince myself what it was doing)",
      "created_at": "2020-02-28T18:26:03Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385851709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672",
      "pull_request_review_id": 366611544,
      "id": 385863672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MzY3Mg==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385679014,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Then we need another test, because everything passed when I changed that.",
      "created_at": "2020-02-28T18:51:57Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385863672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261",
      "pull_request_review_id": 366636525,
      "id": 385883261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzI2MQ==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385679014,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added a comment. I don't think a test is useful. Everything still passes because `ExpandHelper` does the same thing. Just keeping it for belt-and-suspenders.",
      "created_at": "2020-02-28T19:34:46Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883261",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435",
      "pull_request_review_id": 366636764,
      "id": 385883435,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQzNQ==",
      "diff_hunk": "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
      "path": "src/script/descriptor.cpp",
      "position": 88,
      "original_position": 44,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385676713,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done here and elsewhere.",
      "created_at": "2020-02-28T19:35:12Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484",
      "pull_request_review_id": 366636816,
      "id": 385883484,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ4NA==",
      "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385672434,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added",
      "created_at": "2020-02-28T19:35:19Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549",
      "pull_request_review_id": 366636884,
      "id": 385883549,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzU0OQ==",
      "diff_hunk": "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "in_reply_to_id": 385683704,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-02-28T19:35:27Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883549",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800",
      "pull_request_review_id": 366785407,
      "id": 386011800,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMTgwMA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 104,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for adding the asserts, but now they violate \"Assertions should not have side-effects\": https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#general-c",
      "created_at": "2020-02-29T08:21:22Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386011800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519",
      "pull_request_review_id": 366785407,
      "id": 386012519,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjUxOQ==",
      "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;",
      "path": "src/script/descriptor.cpp",
      "position": 138,
      "original_position": 21,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7 : maybe change to `m_derive != DeriveType:: UNHARDENED` for readability, since there's no point in calling `GetCachedExtPubKey(parent_info` for `DeriveType:: NONE`, because `parent_info == info_out` in that case.",
      "created_at": "2020-02-29T08:35:43Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 323,
      "original_line": 323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626",
      "pull_request_review_id": 366785407,
      "id": 386012626,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjYyNg==",
      "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With my previous suggestion this `assert` would go away.",
      "created_at": "2020-02-29T08:37:11Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834",
      "pull_request_review_id": 366807278,
      "id": 386039834,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzOTgzNA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The exclusive use of either `read_cache` or `write_cache` trips me up. A reminder like `assert(!(read_cache && write_cache));` may be helpful.",
      "created_at": "2020-02-29T16:43:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386039834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461",
      "pull_request_review_id": 366807278,
      "id": 386040461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MDQ2MQ==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }\n+        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n+            parent = extkey = m_cached_xpub;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+        } else if (IsHardened()) {\n+            CExtKey xprv;\n+            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            parent = xprv.Neuter();\n+            if (m_derive == DeriveType::UNHARDENED) assert(xprv.Derive(xprv, pos));\n+            if (m_derive == DeriveType::HARDENED) assert(xprv.Derive(xprv, pos | 0x80000000UL));\n+            extkey = xprv.Neuter();\n+        } else {\n+            for (auto entry : m_path) {\n+                assert(parent.Derive(parent, entry));\n             }\n+            extkey = parent;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+            assert(m_derive != DeriveType::HARDENED);\n         }\n-        CKeyID keyid = m_extkey.pubkey.GetID();\n-        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n-        info.path = m_path;\n-        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n-        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n+        key = extkey.pubkey;\n+        if (!m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) m_cached_xpub = parent;\n+        if (write_cache && !read_cache) {\n+            write_cache->CacheExtPubKey(info_out, extkey, true);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `skip_unhardened` argument of `CacheExtPubKey` is a nett confusion increase for me, try:\r\n```cpp\r\n// Cache parent instead of child if there is any unhardened derivation\r\nif (m_derive != DeriveType::HARDENED) {\r\n  write_cache->CacheExtPubKey(parent_info, parent);\r\n} else if (info_out.path.size() > 0) {\r\n  write_cache->CacheExtPubKey(info_out, extkey);\r\n}\r\n```",
      "created_at": "2020-02-29T16:54:31Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386040461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610",
      "pull_request_review_id": 366807278,
      "id": 386041610,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MTYxMA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }",
      "path": "src/script/descriptor.cpp",
      "position": 143,
      "original_position": 105,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// If we don't have a read_cache, we have a write_cache\r\n```",
      "created_at": "2020-02-29T17:13:00Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386041610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 328,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386549347",
      "pull_request_review_id": 367400340,
      "id": 386549347,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0OTM0Nw==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think exclusive use is really needed or enforced.",
      "created_at": "2020-03-02T17:50:32Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386549347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386549347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386575643",
      "pull_request_review_id": 367433468,
      "id": 386575643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NTY0Mw==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All tests pass if I put the assert there. That implies we're not testing mixed use. ",
      "created_at": "2020-03-02T18:40:35Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386575643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386575643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386577777",
      "pull_request_review_id": 367436172,
      "id": 386577777,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3Nzc3Nw==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, it is currently not possible to have mixed use, but I don't think we should enforce non-mixed use. This should work regardless of mixed use and I don't want to make it such that mixed use is not an intended use case.",
      "created_at": "2020-03-02T18:44:35Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386577777",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386577777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581770",
      "pull_request_review_id": 367440882,
      "id": 386581770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTc3MA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 104,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386011800,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the asserts then.",
      "created_at": "2020-03-02T18:51:43Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581840",
      "pull_request_review_id": 367440958,
      "id": 386581840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTg0MA==",
      "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;",
      "path": "src/script/descriptor.cpp",
      "position": 138,
      "original_position": 21,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "in_reply_to_id": 386012519,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-02T18:51:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 323,
      "original_line": 323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581946",
      "pull_request_review_id": 367441089,
      "id": 386581946,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTk0Ng==",
      "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "in_reply_to_id": 386012626,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-02T18:52:00Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386582085",
      "pull_request_review_id": 367441254,
      "id": 386582085,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MjA4NQ==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }\n+        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n+            parent = extkey = m_cached_xpub;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+        } else if (IsHardened()) {\n+            CExtKey xprv;\n+            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            parent = xprv.Neuter();\n+            if (m_derive == DeriveType::UNHARDENED) assert(xprv.Derive(xprv, pos));\n+            if (m_derive == DeriveType::HARDENED) assert(xprv.Derive(xprv, pos | 0x80000000UL));\n+            extkey = xprv.Neuter();\n+        } else {\n+            for (auto entry : m_path) {\n+                assert(parent.Derive(parent, entry));\n             }\n+            extkey = parent;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+            assert(m_derive != DeriveType::HARDENED);\n         }\n-        CKeyID keyid = m_extkey.pubkey.GetID();\n-        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n-        info.path = m_path;\n-        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n-        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n+        key = extkey.pubkey;\n+        if (!m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) m_cached_xpub = parent;\n+        if (write_cache && !read_cache) {\n+            write_cache->CacheExtPubKey(info_out, extkey, true);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386040461,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done. Removed `skip_unhardened`.",
      "created_at": "2020-03-02T18:52:14Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386582085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386582085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387193334",
      "pull_request_review_id": 368198111,
      "id": 387193334,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE5MzMzNA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add the assert, with a comment above it along the lines of `// Mixed use of read_cache and write_cache should be possible, but is currently untested`? (or just the comment)",
      "created_at": "2020-03-03T17:56:08Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387193334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387193334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387217912",
      "pull_request_review_id": 368229027,
      "id": 387217912,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxNzkxMg==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I really don't think it is necessary to have an assert here.",
      "created_at": "2020-03-03T18:42:00Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387217912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387217912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387229455",
      "pull_request_review_id": 368243286,
      "id": 387229455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyOTQ1NQ==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 104,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386011800,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added asserts in that shouldn't have side effects.",
      "created_at": "2020-03-03T19:02:31Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387229455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387229455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387301667",
      "pull_request_review_id": 368334535,
      "id": 387301667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTY2Nw==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's gotta be documented at least.",
      "created_at": "2020-03-03T21:23:40Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387301667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387301667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387351840",
      "pull_request_review_id": 368395418,
      "id": 387351840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTg0MA==",
      "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
      "in_reply_to_id": 386039834,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've mentioned it in the comment for `GetPubKey` in `PubkeyProvider`.",
      "created_at": "2020-03-03T23:14:15Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387351840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387351840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413284",
      "pull_request_review_id": 368462180,
      "id": 387413284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMzI4NA==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can probably write this more readably as:\r\n\r\n```\r\nif (std::lexicographic_compare(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint), std::end(b.fingerprint)) return true;\r\nif (std::lexicographic_compare(std::begin(b.fingerprint), std::end(b.fingerprint), std::begin(a.fingerprint), std::end(a.fingerprint)) return false;\r\n```\r\n\r\netc., which also avoids the magic 4 number.\r\n",
      "created_at": "2020-03-04T02:18:53Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413876",
      "pull_request_review_id": 368462180,
      "id": 387413876,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMzg3Ng==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here:\r\n\r\n```\r\nif (std::lexicographic_compare(std::begin(a.path), std::end(a.path), std::begin(b.path), std::end(b.path)) return true;\r\nif (std::lexicographic_compare(std::begin(b.path), std::end(b.path), std::begin(a.path), std::end(a.path)) return false;\r\n```\r\n\r\nWhich also avoids manually comparing lengths.",
      "created_at": "2020-03-04T02:21:33Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413876",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387416099",
      "pull_request_review_id": 368462180,
      "id": 387416099,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxNjA5OQ==",
      "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": 59,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not necessarily the root, right? For example in `[012345678/0']xpub.../0/1` this variable would correspond to the 2nd level intermediary node.",
      "created_at": "2020-03-04T02:29:58Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387416099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387416099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387420972",
      "pull_request_review_id": 368462180,
      "id": 387420972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyMDk3Mg==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this be a multimap? There can be collisions in the fingerprint + all subsequent path elements.",
      "created_at": "2020-03-04T02:48:08Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387420972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387420972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387421686",
      "pull_request_review_id": 368462180,
      "id": 387421686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyMTY4Ng==",
      "diff_hunk": "@@ -183,9 +187,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n \n public:\n     OriginPubkeyProvider(KeyOriginInfo info, std::unique_ptr<PubkeyProvider> provider) : m_origin(std::move(info)), m_provider(std::move(provider)) {}\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n+        if (!m_provider->GetPubKey(pos, arg, key, info, read_cache, write_cache)) return false;",
      "path": "src/script/descriptor.cpp",
      "position": 35,
      "original_position": 23,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "c0dcb535372236a4ef0108a953a1ee175c0714f2",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't the entry with overridden origin info be stored in the write cache here?",
      "created_at": "2020-03-04T02:49:48Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387421686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387421686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426672",
      "pull_request_review_id": 368478266,
      "id": 387426672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNjY3Mg==",
      "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": 59,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
      "in_reply_to_id": 387416099,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but it's easier to just call this the root and it's the root key that we do all our later derivation from.",
      "created_at": "2020-03-04T03:08:03Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387426672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387427656",
      "pull_request_review_id": 368479302,
      "id": 387427656,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNzY1Ng==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's extremely unlikely. It would require several thousand xpubs in the descriptor itself. I think we have a few other places where we assume origin info don't colide.",
      "created_at": "2020-03-04T03:12:08Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387427656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387427656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387428849",
      "pull_request_review_id": 368480691,
      "id": 387428849,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyODg0OQ==",
      "diff_hunk": "@@ -183,9 +187,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n \n public:\n     OriginPubkeyProvider(KeyOriginInfo info, std::unique_ptr<PubkeyProvider> provider) : m_origin(std::move(info)), m_provider(std::move(provider)) {}\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n+        if (!m_provider->GetPubKey(pos, arg, key, info, read_cache, write_cache)) return false;",
      "path": "src/script/descriptor.cpp",
      "position": 35,
      "original_position": 23,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "c0dcb535372236a4ef0108a953a1ee175c0714f2",
      "in_reply_to_id": 387421686,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it would be useful to do that since we aren't reading from the cache here.",
      "created_at": "2020-03-04T03:17:29Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387428849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387428849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429413",
      "pull_request_review_id": 368481460,
      "id": 387429413,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyOTQxMw==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387413284,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-04T03:20:10Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429433",
      "pull_request_review_id": 368481486,
      "id": 387429433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyOTQzMw==",
      "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());",
      "path": "src/script/keyorigin.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387413876,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-04T03:20:15Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387463282",
      "pull_request_review_id": 368522007,
      "id": 387463282,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2MzI4Mg==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With 93 entries there is a 1 in a million chance for a collision... I agree it's low, but it's not so low that it is negligible, and certainly not so low that one couldn't grind a descriptor to intentionally cause a collision.\r\n\r\nThis makes me wonder if using KeyOriginInfo as key is the right approach. In theory, it should be sufficient to just key by the index of the key expression in the descriptor, right? As the descriptor is constant, and the cache is specific to one descriptor, that would uniquely identify what the entry is for.",
      "created_at": "2020-03-04T06:01:30Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387463282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387463282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387686744",
      "pull_request_review_id": 368803505,
      "id": 387686744,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4Njc0NA==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">index of the key expression in the descriptor\r\n\r\nthe what?",
      "created_at": "2020-03-04T14:06:02Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387686744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387686744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387761668",
      "pull_request_review_id": 368901814,
      "id": 387761668,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2MTY2OA==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Every descriptor consists of some functions that combine the output of key expressions (pubkeys, xpubs, origin info, derivation paths, ...). We can assign the successive key expressions numbers 0, 1, 2, ... and use those index positions as key in the map (which would then become a std::map<int, CExtPubKey>).",
      "created_at": "2020-03-04T15:57:05Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387761668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387761668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387799544",
      "pull_request_review_id": 368950757,
      "id": 387799544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5OTU0NA==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't really like using the position to index into the cache. It requires the `PubkeyProviders` to know their position within the descriptor when it really doesn't matter to them.\r\n\r\nIf this was changed to a multimap, how would we decide which xpub to use in the event that there is a collision?",
      "created_at": "2020-03-04T16:53:37Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387799544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387799544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387814756",
      "pull_request_review_id": 368970489,
      "id": 387814756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDc1Ng==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's not a useful argument. If the current way the code works makes it hard to implement the right solution, the code should be changed. It seems to me that using position is the more concise, exact, and efficient way of doing it, and ignoring current code architecture it also seems the simplest, so I think it would be preferable.\n\nYou're right that a multimap wouldn't work. Using a KeyOriginInfo to identify the record is inherently lossy - a better solution is just not throwing it away at all.",
      "created_at": "2020-03-04T17:19:32Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387814756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387814756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387815296",
      "pull_request_review_id": 368971181,
      "id": 387815296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTI5Ng==",
      "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
      "in_reply_to_id": 387420972,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@achow101 well it requires the *user/builder* of the cache to know each pubkey position, at least, right?",
      "created_at": "2020-03-04T17:20:28Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387815296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387815296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388217325",
      "pull_request_review_id": 369469826,
      "id": 388217325,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNzMyNQ==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be more readable to map this the other way around:\r\n```cpp\r\n// Map key expression index to xpub\r\nusing ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\r\n\r\n// Map derivation index to ExtPubKeyMap\r\nstd::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs;\r\n```",
      "created_at": "2020-03-05T10:51:48Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388217325",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388217325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388330036",
      "pull_request_review_id": 369616045,
      "id": 388330036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMDAzNg==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggested reword:\r\n\r\n// Cache for a single descriptor's derived extended pubkeys",
      "created_at": "2020-03-05T14:32:29Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388330036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388330036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331268",
      "pull_request_review_id": 369616045,
      "id": 388331268,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMTI2OA==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 22,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this doesn't appear to exist",
      "created_at": "2020-03-05T14:34:22Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331268",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331595",
      "pull_request_review_id": 369616045,
      "id": 388331595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMTU5NQ==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 23,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@param[out] xpub The CExtPubKey to get from cache",
      "created_at": "2020-03-05T14:34:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388333320",
      "pull_request_review_id": 369616045,
      "id": 388333320,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMzMyMA==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 37,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`@param[out] xpub The CExtPubKey to get from cache`",
      "created_at": "2020-03-05T14:37:32Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388333320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388333320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388334656",
      "pull_request_review_id": 369616045,
      "id": 388334656,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzNDY1Ng==",
      "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor",
      "path": "src/script/descriptor.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A quick example wouldn't hurt(I was confused), which would also show what index it starts at :)",
      "created_at": "2020-03-05T14:39:39Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388334656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388334656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388338598",
      "pull_request_review_id": 369616045,
      "id": 388338598,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzODU5OA==",
      "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor\n+    uint32_t m_exp_index;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bikeshed: `m_expr_index` disallows my brain from guessing random words like `expect`, `expub`(??? thanks brain)",
      "created_at": "2020-03-05T14:45:41Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388338598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388338598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388348343",
      "pull_request_review_id": 369616045,
      "id": 388348343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0ODM0Mw==",
      "diff_hunk": "@@ -272,37 +297,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& child_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo child_info_out_tmp = parent_info;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "apologies for re-litigating variable naming after making you change it once: it's either child or \"parent\" depending on the derivation, same with `child_extkey` and `child_info_out`, maybe just rename everything `final_*`?\r\n\r\nReviewing the latest changes made me realize my folly of naming it this way.",
      "created_at": "2020-03-05T15:00:07Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388348343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388348343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388354155",
      "pull_request_review_id": 369616045,
      "id": 388354155,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1NDE1NQ==",
      "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
      "path": "src/script/descriptor.cpp",
      "position": 330,
      "original_position": 329,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In what situations would you like to start with non-0 index?",
      "created_at": "2020-03-05T15:08:12Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388354155",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388354155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 845,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388399524",
      "pull_request_review_id": 369707778,
      "id": 388399524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM5OTUyNA==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "in_reply_to_id": 388217325,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's really inefficient. In most cases, that would mean a map for every single derived xpub, and that map just has one element. In the current mapping, it's only two maps.",
      "created_at": "2020-03-05T16:13:28Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388399524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388399524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388400687",
      "pull_request_review_id": 369709341,
      "id": 388400687,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMDY4Nw==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "in_reply_to_id": 388217325,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I found the code as-is completely understandable fwiw. Maybe suggest a renaming/rewording somewhere?",
      "created_at": "2020-03-05T16:15:14Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388400687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388400687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401264",
      "pull_request_review_id": 369710119,
      "id": 388401264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMTI2NA==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "in_reply_to_id": 388217325,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe just make it more visual: `map: key expression index -> key derivation index -> xpub`",
      "created_at": "2020-03-05T16:16:06Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388401264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388405043",
      "pull_request_review_id": 369715072,
      "id": 388405043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNTA0Mw==",
      "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
      "path": "src/script/descriptor.cpp",
      "position": 330,
      "original_position": 329,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388354155,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "None, but this is recursive.",
      "created_at": "2020-03-05T16:21:52Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388405043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388405043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 845,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388406669",
      "pull_request_review_id": 369717151,
      "id": 388406669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNjY2OQ==",
      "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
      "path": "src/script/descriptor.cpp",
      "position": 330,
      "original_position": 329,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388354155,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah! Duh.",
      "created_at": "2020-03-05T16:24:19Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388406669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388406669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 845,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423855",
      "pull_request_review_id": 369738919,
      "id": 388423855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzg1NQ==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
      "in_reply_to_id": 388217325,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've clarified the comment.",
      "created_at": "2020-03-05T16:50:27Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423908",
      "pull_request_review_id": 369738993,
      "id": 388423908,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzkwOA==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388330036,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T16:50:32Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423977",
      "pull_request_review_id": 369739076,
      "id": 388423977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzk3Nw==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 22,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388331268,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2020-03-05T16:50:38Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424066",
      "pull_request_review_id": 369739177,
      "id": 388424066,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDA2Ng==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 23,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388331595,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T16:50:45Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424132",
      "pull_request_review_id": 369739248,
      "id": 388424132,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDEzMg==",
      "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 37,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388333320,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T16:50:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424254",
      "pull_request_review_id": 369739402,
      "id": 388424254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDI1NA==",
      "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor",
      "path": "src/script/descriptor.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388334656,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added an example to the comment.",
      "created_at": "2020-03-05T16:51:00Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424314",
      "pull_request_review_id": 369739492,
      "id": 388424314,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDMxNA==",
      "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor\n+    uint32_t m_exp_index;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388338598,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T16:51:06Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424370",
      "pull_request_review_id": 369739564,
      "id": 388424370,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDM3MA==",
      "diff_hunk": "@@ -272,37 +297,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& child_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo child_info_out_tmp = parent_info;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388348343,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T16:51:12Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388462936",
      "pull_request_review_id": 369788886,
      "id": 388462936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MjkzNg==",
      "diff_hunk": "@@ -272,37 +298,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& final_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo final_info_out_tmp = parent_info;\n+        if (m_derive == DeriveType::UNHARDENED) final_info_out_tmp.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) final_info_out_tmp.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey child_extkey = m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 133,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "196c9765eaa88120964cfb1a81362f37a24ced9b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Was also thinking changing this to `final_extkey` as well for same reason.",
      "created_at": "2020-03-05T17:56:53Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388462936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388462936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388476524",
      "pull_request_review_id": 369806127,
      "id": 388476524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3NjUyNA==",
      "diff_hunk": "@@ -272,37 +298,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& final_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo final_info_out_tmp = parent_info;\n+        if (m_derive == DeriveType::UNHARDENED) final_info_out_tmp.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) final_info_out_tmp.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey child_extkey = m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 133,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "196c9765eaa88120964cfb1a81362f37a24ced9b",
      "in_reply_to_id": 388462936,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-05T18:21:56Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388476524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388476524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848544",
      "pull_request_review_id": 370251656,
      "id": 388848544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0ODU0NA==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, to get doxygen to pick this up:\r\n```cpp\r\n/** Cache for single descriptor's derived extended pubkeys */\r\n```",
      "created_at": "2020-03-06T11:19:02Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848732",
      "pull_request_review_id": 370251656,
      "id": 388848732,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0ODczMg==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\n/** Map key expression index -> map of (key derivation index -> xpub) */\r\n```",
      "created_at": "2020-03-06T11:19:29Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388849029",
      "pull_request_review_id": 370251656,
      "id": 388849029,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0OTAyOQ==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\n/** Map key expression index -> parent xpub */\r\n```",
      "created_at": "2020-03-06T11:20:08Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388849029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388849029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850443",
      "pull_request_review_id": 370251656,
      "id": 388850443,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDQ0Mw==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;",
      "path": "src/script/descriptor.h",
      "position": 43,
      "original_position": 40,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\n    /** Retrieve all cached parent xpubs */\r\n```",
      "created_at": "2020-03-06T11:23:27Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850544",
      "pull_request_review_id": 370251656,
      "id": 388850544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDU0NA==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;\n+    const std::unordered_map<uint32_t, ExtPubKeyMap> GetCachedDerivedExtPubKeys() const;",
      "path": "src/script/descriptor.h",
      "position": 45,
      "original_position": 41,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\n    /** Retrieve all cached final xpubs */\r\n```",
      "created_at": "2020-03-06T11:23:40Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388865999",
      "pull_request_review_id": 370251656,
      "id": 388865999,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NTk5OQ==",
      "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
      "path": "src/script/descriptor.cpp",
      "position": 330,
      "original_position": 329,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388354155,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Only `multi` and `sortedmulti` can cause `key_exp_index` to be non-zero, and those don't recurse. You could make `uint32_t key_exp_index` local to just that if branch, and hardcode `0` in all other calls to `ParsePubkey(0`.\r\n\r\nHowever with an eye on miniscript, we do expect to support scripts inside `threshold`, so might as well be ready for that. ",
      "created_at": "2020-03-06T12:03:24Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388865999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388865999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 845,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388867305",
      "pull_request_review_id": 370251656,
      "id": 388867305,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NzMwNQ==",
      "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": 59,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
      "in_reply_to_id": 387416099,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_base_extkey ` could be a nice alternative",
      "created_at": "2020-03-06T12:06:53Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388867305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388867305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388900093",
      "pull_request_review_id": 370251656,
      "id": 388900093,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkwMDA5Mw==",
      "diff_hunk": "@@ -345,10 +345,11 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         key_out = final_extkey.pubkey;\n \n         if (write_cache) {\n-            write_cache->CacheDerivedExtPubKey(m_expr_index, pos, final_extkey);\n             // Only cache parent if there is any unhardened derivation\n             if (m_derive != DeriveType::HARDENED) {\n                 write_cache->CacheParentExtPubKey(m_expr_index, parent_extkey);\n+            } else if (child_info_out.path.size() > 0) {",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e4262c45655b4f79ddfd9905db66dc44b8f5148c",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e4262c45655b4f79ddfd9905db66dc44b8f5148c doesn't compile (`child_info_out`  is  renamed in In d7b241109f74b3c1c407929930e7d035cdcf60c9 `to `child_info_out`)",
      "created_at": "2020-03-06T13:25:16Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388900093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388900093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389193895",
      "pull_request_review_id": 370687757,
      "id": 389193895,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5Mzg5NQ==",
      "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
      "path": "src/script/descriptor.cpp",
      "position": 59,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
      "in_reply_to_id": 387416099,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there's enough bikeshedding in this pr :/",
      "created_at": "2020-03-06T23:36:01Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389193895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389193895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389194107",
      "pull_request_review_id": 370688015,
      "id": 389194107,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NDEwNw==",
      "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
      "path": "src/script/descriptor.cpp",
      "position": 330,
      "original_position": 329,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
      "in_reply_to_id": 388354155,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was intending for this to be generic so that it would work with future changes to descriptors, including miniscript. So I think I will leave it as is.",
      "created_at": "2020-03-06T23:37:02Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389194107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389194107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 845,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259344",
      "pull_request_review_id": 370747495,
      "id": 389259344,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM0NA==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388848544,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-07T14:44:34Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259344",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259351",
      "pull_request_review_id": 370747502,
      "id": 389259351,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM1MQ==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388848732,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-07T14:44:41Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259357",
      "pull_request_review_id": 370747509,
      "id": 389259357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM1Nw==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 10,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388849029,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-07T14:44:47Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259363",
      "pull_request_review_id": 370747515,
      "id": 389259363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM2Mw==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;",
      "path": "src/script/descriptor.h",
      "position": 43,
      "original_position": 40,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388850443,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-07T14:44:52Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259367",
      "pull_request_review_id": 370747522,
      "id": 389259367,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM2Nw==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;\n+    const std::unordered_map<uint32_t, ExtPubKeyMap> GetCachedDerivedExtPubKeys() const;",
      "path": "src/script/descriptor.h",
      "position": 45,
      "original_position": 41,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388850544,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-07T14:44:58Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259375",
      "pull_request_review_id": 370747527,
      "id": 389259375,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM3NQ==",
      "diff_hunk": "@@ -345,10 +345,11 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         key_out = final_extkey.pubkey;\n \n         if (write_cache) {\n-            write_cache->CacheDerivedExtPubKey(m_expr_index, pos, final_extkey);\n             // Only cache parent if there is any unhardened derivation\n             if (m_derive != DeriveType::HARDENED) {\n                 write_cache->CacheParentExtPubKey(m_expr_index, parent_extkey);\n+            } else if (child_info_out.path.size() > 0) {",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "e4262c45655b4f79ddfd9905db66dc44b8f5148c",
      "in_reply_to_id": 388900093,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2020-03-07T14:45:06Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259898",
      "pull_request_review_id": 370747887,
      "id": 389259898,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTg5OA==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388848732,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It needs to be on the line above, otherwise this happens:\r\n<img width=\"808\" alt=\"Schermafbeelding 2020-03-07 om 15 53 36\" src=\"https://user-images.githubusercontent.com/10217/76145663-d47e7780-608b-11ea-8f09-8d4399a0d315.png\">\r\n",
      "created_at": "2020-03-07T14:53:50Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389261149",
      "pull_request_review_id": 370748815,
      "id": 389261149,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MTE0OQ==",
      "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 9,
      "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
      "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
      "in_reply_to_id": 388848732,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2020-03-07T15:13:59Z",
      "updated_at": "2020-03-07T15:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389261149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389261149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    }
  ]
}