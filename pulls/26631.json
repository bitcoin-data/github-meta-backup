{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631",
    "id": 1144583356,
    "node_id": "PR_kwDOABII585EOPS8",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26631",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26631.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26631.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d6fc1d6a3393c571a1691a6bda60433216643616",
    "number": 26631,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "test: add coverage for dust mempool policy (`-dustrelayfee` setting)",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds missing test coverage for the `-dustrelayfee` setting, which specifies the fee-rate used to define dust. Output scripts for all common types that are treated as standard by default (P2PK, P2(W)PKH, P2(W)SH, P2TR, bare multisig, null data, unknown witness versions v2+) are created and then checked for dust-mempool-policy each via the `testmempoolaccept` RPC: a tx with an output's nValue equal to the dust threshold should be accepted, one with an nValue of just one 1 satoshi below that should be rejected with reason `dust`. This is repeatedly done for a fixed (but obviously somewhat arbitrary) list of different `-dustrelayfee` settings on a single node, including the default and zero (i.e. no dust limit) settings.\r\n\r\nNote that the first commit introduces a necessary `CScript` helper method `IsWitnessProgram` (using PascalCase in Python is likely controversial; in this case the style for the already existing method `GetSigOpCount` was followed, which also refers to a method in the core `CScript` class).\r\n\r\nSome historical information about dust, contributed by pablomartin4btc:\r\n\"The concept of dust was first introduced in https://github.com/bitcoin/bitcoin/pull/2577. This [commit](https://github.com/bitcoin/bitcoin/pull/9380/commits/eb30d1a5b215c6dd3763d7f7948f2dd8cb61f6bf) from https://github.com/bitcoin/bitcoin/pull/9380 introduced the -dustrelayfee option. Previous to that PR, the dust feerate was whatever -minrelaytxfee was set to.\"",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 1648013533,
        "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
        "name": "Review club",
        "description": "",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2022-12-04T02:46:02Z",
    "updated_at": "2023-01-17T18:08:20Z",
    "closed_at": "2023-01-16T10:38:59Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-01-16T10:38:59Z",
    "merge_commit_sha": "2182149dc58fda0750ad92eba9e653a01000a51b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "theStack:202212-test-add_dustrelayfee_coverage",
      "ref": "202212-test-add_dustrelayfee_coverage",
      "sha": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 204970720,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDQ5NzA3MjA=",
        "name": "bitcoin",
        "full_name": "theStack/bitcoin",
        "owner": {
          "login": "theStack",
          "id": 91535,
          "node_id": "MDQ6VXNlcjkxNTM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theStack",
          "html_url": "https://github.com/theStack",
          "followers_url": "https://api.github.com/users/theStack/followers",
          "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
          "organizations_url": "https://api.github.com/users/theStack/orgs",
          "repos_url": "https://api.github.com/users/theStack/repos",
          "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theStack/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theStack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theStack/bitcoin",
        "archive_url": "https://api.github.com/repos/theStack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theStack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theStack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theStack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theStack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theStack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theStack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theStack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theStack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theStack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theStack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theStack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theStack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theStack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theStack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theStack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theStack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theStack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theStack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theStack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theStack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theStack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theStack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theStack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theStack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theStack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theStack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theStack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theStack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theStack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theStack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theStack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theStack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theStack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theStack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theStack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theStack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theStack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theStack/bitcoin/hooks",
        "svn_url": "https://github.com/theStack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 217436,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:15:21Z",
        "created_at": "2019-08-28T15:59:29Z",
        "updated_at": "2022-12-07T18:05:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5055d07edf4625d23c36d548d3598d7b578c05fb",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 124,
    "deletions": 0,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 13,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhhNWRiZTI4NzkzZDJlMmFkODUyNDJmMjE5MWE2ZTE5NTZiOTgwZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a5dbe28793d2e2ad85242f2191a6e1956b980dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8a5dbe28793d2e2ad85242f2191a6e1956b980dc",
      "tree": {
        "sha": "c701dbe31c9758007f6c16d4f212b805df04facb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c701dbe31c9758007f6c16d4f212b805df04facb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac29f5cd66f005ce65edd697990d495a904a1f1",
          "sha": "cac29f5cd66f005ce65edd697990d495a904a1f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cac29f5cd66f005ce65edd697990d495a904a1f1"
        }
      ],
      "message": "test: add `CScript` method for checking for witness program\n\nThis is needed in the next commit to calculate the dust threshold\nfor a given output script and min feerate for defining dust.",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-12-04T02:07:42Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-12-04T02:04:39Z"
      },
      "sha": "8a5dbe28793d2e2ad85242f2191a6e1956b980dc"
    },
    {
      "event": "commented",
      "id": 1336306841,
      "node_id": "IC_kwDOABII585PpmyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1336306841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-04T02:46:04Z",
      "updated_at": "2023-01-13T18:06:05Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1247686689), [kouloumos](https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1245154873), [LarryRuane](https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1382205604) |\n| Concept ACK | [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1216608530), [rserranon](https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1351729027), [instagibbs](https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1247801283) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 26631](https://drahtbot.space/host_reports/DrahtBot/reports/coverage/bitcoin/bitcoin/26631/total.coverage/index.html), 8147f7f7ec5dcfe5295ed2697942b410554b4117) | Reference ([master](https://drahtbot.space/host_reports/DrahtBot/reports/coverage/bitcoin/bitcoin/5055d07edf4625d2/total.coverage/index.html), 5055d07edf4625d2)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0036 %            | 83.9288 %        |\n| Functions | +0.0000 %            | 80.9329 %        |\n| Branches  | +0.0040 %            | 51.4098 %        |\n\n<sup>Updated at: 2022-12-16T12:29:44.053355.</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1336306841",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631"
    },
    {
      "event": "labeled",
      "id": 7947423863,
      "node_id": "LE_lADOABII585X4RoPzwAAAAHZtBB3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947423863",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-04T02:46:06Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7947440291,
      "node_id": "HRFPE_lADOABII585X4RoPzwAAAAHZtFCj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947440291",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-04T02:59:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7947442273,
      "node_id": "HRFPE_lADOABII585X4RoPzwAAAAHZtFhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947442273",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-04T03:00:56Z"
    },
    {
      "event": "subscribed",
      "id": 7947828216,
      "node_id": "SE_lADOABII585X4RoPzwAAAAHZujv4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947828216",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-04T08:02:20Z"
    },
    {
      "event": "reviewed",
      "id": 1204958287,
      "node_id": "PRR_kwDOABII585H0jRP",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1204958287",
      "submitted_at": "2022-12-05T17:22:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1212767725,
      "node_id": "PRR_kwDOABII585ISV3t",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 2c697ddcb1fa4d04f55b024c06116530d7e74598\r\nsuggestions are non-blocking",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1212767725",
      "submitted_at": "2022-12-12T18:06:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1216608530,
      "node_id": "PRR_kwDOABII585Ig_kS",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK.\r\n\r\n![image](https://user-images.githubusercontent.com/110166421/207473805-d7d8a927-9832-4ed3-8f3a-2a879e50794f.png)\r\n\r\nAll different output scripts ran over the `-dustrelayfee` list of settings as it's shown on the screenshot above.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1216608530",
      "submitted_at": "2022-12-14T00:25:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1216798111,
      "node_id": "PRR_kwDOABII585Iht2f",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1216798111",
      "submitted_at": "2022-12-14T05:11:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "commented",
      "id": 1351729027,
      "node_id": "IC_kwDOABII585Qkb-D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1351729027",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T16:27:16Z",
      "updated_at": "2022-12-14T16:27:16Z",
      "author_association": "NONE",
      "body": "Tested ACK",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1351729027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631"
    },
    {
      "event": "reviewed",
      "id": 1217866759,
      "node_id": "PRR_kwDOABII585IlywH",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1217866759",
      "submitted_at": "2022-12-14T16:53:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1219500672,
      "node_id": "PRR_kwDOABII585IsBqA",
      "url": null,
      "actor": null,
      "commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think this statement is very useful as a context for the review:\r\n\r\nThe concept of dust was first introduced in [PR #2577](https://github.com/bitcoin/bitcoin/pull/2577). This [commit](https://github.com/bitcoin/bitcoin/pull/9380/commits/eb30d1a5b215c6dd3763d7f7948f2dd8cb61f6bf) from [PR #9380](https://github.com/bitcoin/bitcoin/pull/9380) introduced the `-dustrelayfee` option. Previous to that PR, the dust feerate was whatever `-minrelaytxfee` was set to.\r\n\r\nTaken from the notes of the [review club](https://bitcoincore.reviews/26631). Is it possible to add the label \"Review club\" to this PR please?",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1219500672",
      "submitted_at": "2022-12-15T15:59:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2ZmMxZDZhMzM5M2M1NzFhMTY5MWE2YmRhNjA0MzMyMTY2NDM2MTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6fc1d6a3393c571a1691a6bda60433216643616",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6fc1d6a3393c571a1691a6bda60433216643616",
      "tree": {
        "sha": "496972ea5bb3e10039a6c2caf5f479863fd73ca9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/496972ea5bb3e10039a6c2caf5f479863fd73ca9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a5dbe28793d2e2ad85242f2191a6e1956b980dc",
          "sha": "8a5dbe28793d2e2ad85242f2191a6e1956b980dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8a5dbe28793d2e2ad85242f2191a6e1956b980dc"
        }
      ],
      "message": "test: add coverage for dust mempool policy (`-dustrelayfee` setting)",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-12-16T14:03:22Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-12-04T02:09:37Z"
      },
      "sha": "d6fc1d6a3393c571a1691a6bda60433216643616"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8056935804,
      "node_id": "HRFPE_lADOABII585X4RoPzwAAAAHgOxV8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8056935804",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:04:13Z"
    },
    {
      "event": "commented",
      "id": 1354940477,
      "node_id": "IC_kwDOABII585QwsA9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354940477",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:29:35Z",
      "updated_at": "2022-12-16T14:29:35Z",
      "author_association": "MEMBER",
      "body": "Force-pushed with most suggestions taken, and another few changes:\r\n* add both smallest and largest possible (non-nulldata) output scripts that are considered standard to the list  (i.e. segwitv2+ with 2-byte witness program, m-of-3 bare multisig with uncompressed pubkeys)\r\n* extended the dust fee-rate list to test with 333333, to also have one case covering the \"~hundreds of sats/vbyte\" range\r\n* add comments about program witness sizes and chosen dust fee-rates to reduce confusion about magic numbers\r\n* for tx creation: adjust first output with the dust threshold amount, to keep the total output value constant and not risk underpaying fees (or even worse, exceeding the input amount)\r\n\r\n> I think this statement is very useful as a context for the review:\r\n> \r\n> The concept of dust was first introduced in [PR #2577](https://github.com/bitcoin/bitcoin/pull/2577). This [commit](https://github.com/bitcoin/bitcoin/pull/9380/commits/eb30d1a5b215c6dd3763d7f7948f2dd8cb61f6bf) from [PR #9380](https://github.com/bitcoin/bitcoin/pull/9380) introduced the `-dustrelayfee` option. Previous to that PR, the dust feerate was whatever `-minrelaytxfee` was set to.\r\n\r\nThanks for researching! 👍  I added this paragraph to the PR description, as it is very helpful for reviewers getting deeper into the topic of dust with some historical context.\r\n\r\n> \r\n> Taken from the notes of the [review club](https://bitcoincore.reviews/26631). Is it possible to add the label \"Review club\" to this PR please?\r\n\r\n+1",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1354940477",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631"
    },
    {
      "event": "labeled",
      "id": 8063782092,
      "node_id": "LE_lADOABII585X4RoPzwAAAAHgo4zM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8063782092",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-18T11:15:19Z",
      "label": {
        "name": "Review club",
        "color": "0052cc"
      }
    },
    {
      "event": "referenced",
      "id": 8213217848,
      "node_id": "REFE_lADOABII585X4RoPzwAAAAHpi8I4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8213217848",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3bb557f6620aeba0eafdac21f28d65cbb691ad76",
      "commit_url": "https://api.github.com/repos/kouloumos/review-club-summaries/commits/3bb557f6620aeba0eafdac21f28d65cbb691ad76",
      "created_at": "2023-01-12T16:33:14Z"
    },
    {
      "event": "reviewed",
      "id": 1247686689,
      "node_id": "PRR_kwDOABII585KXjAh",
      "url": null,
      "actor": null,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK d6fc1d6a3393c571a1691a6bda60433216643616\r\ndust calculation seems to match `GetDustThreshold()`, `IsWitnessProgram()` looks correct, don't see any off-by-ones, coverage looks good",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1247686689",
      "submitted_at": "2023-01-13T14:01:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1247801283,
      "node_id": "PRR_kwDOABII585KX-_D",
      "url": null,
      "actor": null,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1247801283",
      "submitted_at": "2023-01-13T15:16:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "reviewed",
      "id": 1245154873,
      "node_id": "PRR_kwDOABII585KN445",
      "url": null,
      "actor": null,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK d6fc1d6a3393c571a1691a6bda60433216643616\r\nwith a few non-blocking comments",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#pullrequestreview-1245154873",
      "submitted_at": "2023-01-13T16:11:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
    },
    {
      "event": "commented",
      "id": 1382205604,
      "node_id": "IC_kwDOABII585SYsik",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1382205604",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-13T18:06:02Z",
      "updated_at": "2023-01-13T18:06:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK d6fc1d6a3393c571a1691a6bda60433216643616",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#issuecomment-1382205604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26631"
    },
    {
      "event": "merged",
      "id": 8234279755,
      "node_id": "ME_lADOABII585X4RoPzwAAAAHqzSNL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8234279755",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2182149dc58fda0750ad92eba9e653a01000a51b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2182149dc58fda0750ad92eba9e653a01000a51b",
      "created_at": "2023-01-16T10:38:59Z"
    },
    {
      "event": "closed",
      "id": 8234279800,
      "node_id": "CE_lADOABII585X4RoPzwAAAAHqzSN4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8234279800",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-16T10:38:59Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 8234298533,
      "node_id": "HRDE_lADOABII585X4RoPzwAAAAHqzWyl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8234298533",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-16T10:41:16Z"
    },
    {
      "event": "referenced",
      "id": 8237989543,
      "node_id": "REFE_lADOABII585X4RoPzwAAAAHrBb6n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8237989543",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "07930b5e95f17a909a4cc55ad7ae4eaa26556db1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/07930b5e95f17a909a4cc55ad7ae4eaa26556db1",
      "created_at": "2023-01-16T15:50:46Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045310388",
      "pull_request_review_id": 1212767725,
      "id": 1045310388,
      "node_id": "PRRC_kwDOABII584-Tiu0",
      "diff_hunk": "@@ -597,6 +597,13 @@ def GetSigOpCount(self, fAccurate):\n             lastOpcode = opcode\n         return n\n \n+    def IsWitnessProgram(self):",
      "path": "test/functional/test_framework/script.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe add a comment before this definition:\r\n```python\r\n# Equivalent to: CScript::IsWitnessProgram()\r\n```",
      "created_at": "2022-12-11T22:49:44Z",
      "updated_at": "2022-12-12T18:06:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1045310388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045310388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 600,
      "original_line": 600,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045445426",
      "pull_request_review_id": 1212767725,
      "id": 1045445426,
      "node_id": "PRRC_kwDOABII584-UDsy",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),\n+            (keys_to_multisig_script([pubkey]*3),         \"bare multisig (3-of-3)\"),\n+            (CScript([OP_RETURN, b'superimportanthash']), \"null data (OP_RETURN)\"),\n+        ]\n+\n+        for dustfee_sat_kvb in [DUST_RELAY_TX_FEE, 0, 1, 66, 500, 1337, 12345, 21212]:",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 97,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\n        for dustfee_sat_kvb in (DUST_RELAY_TX_FEE, 0, 1, 66, 500, 1337, 12345, 21212):\r\n```",
      "created_at": "2022-12-12T06:31:39Z",
      "updated_at": "2022-12-12T18:06:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1045445426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045445426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1046197993",
      "pull_request_review_id": 1212767725,
      "id": 1046197993,
      "node_id": "PRRC_kwDOABII584-W7bp",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]",
      "path": "test/functional/mempool_dust.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not actually needed, but just to make sure ...\r\n```suggestion\r\n        tx = self.wallet.create_self_transfer()[\"tx\"]\r\n        # make sure there's enough value available for the new output we're creating\r\n        tx.vout[0].nValue -= dust_threshold\r\n```\r\nNote that since this tx is spending coinbase, there's almost 50BTC available in the first output, and also spending coinbase doesn't require a signature here in the functional tests, so we can make this adjustment without having to re-signing the transaction.",
      "created_at": "2022-12-12T18:04:01Z",
      "updated_at": "2022-12-12T18:06:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1046197993",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1046197993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1048023149",
      "pull_request_review_id": 1216798111,
      "id": 1048023149,
      "node_id": "PRRC_kwDOABII584-d5Bt",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),\n+            (keys_to_multisig_script([pubkey]*3),         \"bare multisig (3-of-3)\"),\n+            (CScript([OP_RETURN, b'superimportanthash']), \"null data (OP_RETURN)\"),\n+        ]\n+\n+        for dustfee_sat_kvb in [DUST_RELAY_TX_FEE, 0, 1, 66, 500, 1337, 12345, 21212]:",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 97,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": null,
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should a comment be added with a note that `-dustrelayfee` list elements are somewhat arbitrary?, or is there a rationale that should be mentioned?",
      "created_at": "2022-12-14T05:11:23Z",
      "updated_at": "2022-12-14T05:11:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1048023149",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1048023149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1048723133",
      "pull_request_review_id": 1217866759,
      "id": 1048723133,
      "node_id": "PRRC_kwDOABII584-gj69",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 92,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": null,
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain the rationale for using 21 bytes and 40 bytes for future witness versions 2 and 16 respectively? Maybe a comment with the standard size for each Script type could be useful for testers and people learning.\r\n",
      "created_at": "2022-12-14T16:53:19Z",
      "updated_at": "2022-12-14T16:53:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1048723133",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1048723133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": 91,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050793539",
      "pull_request_review_id": 1220902245,
      "id": 1050793539,
      "node_id": "PRRC_kwDOABII584-odZD",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),\n+            (keys_to_multisig_script([pubkey]*3),         \"bare multisig (3-of-3)\"),\n+            (CScript([OP_RETURN, b'superimportanthash']), \"null data (OP_RETURN)\"),\n+        ]\n+\n+        for dustfee_sat_kvb in [DUST_RELAY_TX_FEE, 0, 1, 66, 500, 1337, 12345, 21212]:",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 97,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": 1048023149,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, added a comment above that for-loop in the latest force-push (\"# test default (no parameter), disabled (=0) and a bunch of arbitrary dust fee rates [sat/kvB]\").",
      "created_at": "2022-12-16T14:06:29Z",
      "updated_at": "2022-12-16T14:06:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1050793539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050793539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050795795",
      "pull_request_review_id": 1220905842,
      "id": 1050795795,
      "node_id": "PRRC_kwDOABII584-od8T",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),\n+            (keys_to_multisig_script([pubkey]*3),         \"bare multisig (3-of-3)\"),\n+            (CScript([OP_RETURN, b'superimportanthash']), \"null data (OP_RETURN)\"),\n+        ]\n+\n+        for dustfee_sat_kvb in [DUST_RELAY_TX_FEE, 0, 1, 66, 500, 1337, 12345, 21212]:",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 97,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": 1045445426,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, also for the output scripts.",
      "created_at": "2022-12-16T14:09:14Z",
      "updated_at": "2022-12-16T14:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1050795795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050795795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050799849",
      "pull_request_review_id": 1220911888,
      "id": 1050799849,
      "node_id": "PRRC_kwDOABII584-oe7p",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = [\n+            (key_to_p2pk_script(uncompressed_pubkey),     \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                  \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                 \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),   \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),  \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),       \"P2TR\"),\n+            (program_to_witness_script(2,  b'\\x66' * 21), \"P2?? (future witness version 2)\"),\n+            (program_to_witness_script(16, b'\\x77' * 40), \"P2?? (future witness version 16)\"),",
      "path": "test/functional/mempool_dust.py",
      "position": null,
      "original_position": 92,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": 1048723133,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It could be any size between 2 and 40 bytes. Added a corresponding comment in latest force-push (\"# witness programs for segwitv2+ can be between 2 and 40 bytes\") and adapted the values accordingly. I prefer now having one with 2 bytes instead of 21 bytes (which was indeed completely arbitrary) as it is the smallest possible output script that is considered standard.",
      "created_at": "2022-12-16T14:13:39Z",
      "updated_at": "2022-12-16T14:13:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1050799849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050799849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": 91,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050810659",
      "pull_request_review_id": 1220930440,
      "id": 1050810659,
      "node_id": "PRRC_kwDOABII584-ohkj",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]",
      "path": "test/functional/mempool_dust.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "2c697ddcb1fa4d04f55b024c06116530d7e74598",
      "in_reply_to_id": 1046197993,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done. In fact after extending the dust fee-rate test list with a larger value (333333), the test would fail without this change, so it was very helpful. Note that not requiring a signature is not only true for the coinbase outputs we spend here, but also to outputs created by MiniWallet going to the exact same address.",
      "created_at": "2022-12-16T14:23:46Z",
      "updated_at": "2022-12-16T14:23:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1050810659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050810659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1067831033",
      "pull_request_review_id": 1245154873,
      "id": 1067831033,
      "node_id": "PRRC_kwDOABII584_pc75",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,",
      "path": "test/functional/mempool_dust.py",
      "position": 44,
      "original_position": 44,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the `node` argument may be residue from when the PR used multiple nodes to test different configurations?",
      "created_at": "2023-01-12T08:29:44Z",
      "updated_at": "2023-01-13T16:11:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1067831033",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1067831033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1069542020",
      "pull_request_review_id": 1245154873,
      "id": 1069542020,
      "node_id": "PRRC_kwDOABII584_v-qE",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")",
      "path": "test/functional/mempool_dust.py",
      "position": 53,
      "original_position": 53,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I've been thinking about ways to formalize the way logging is done in the testing framework and indentation of subcases is in there. The ideal scenario would be for those things to happen automatically, but working with what we have... \r\nI would like to make a minor suggestion that I believe makes the logging more readable:\r\n```suggestion\r\n        self.log.info(f\" - Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\r\n```\r\nside by side comparison\r\n![imgonline-com-ua-twotoone-KxmOPSAP8O](https://user-images.githubusercontent.com/18506343/212340600-75319cc3-7545-41d7-a560-1dc5b7da4ec8.jpg)\r\n\r\nand to remove even more noise:\r\n```suggestion\r\n        self.log.info(f\"- output (size {len(output_script)}, limit {dust_threshold})\")\r\n```\r\n![icon3](https://user-images.githubusercontent.com/18506343/212341569-17abd259-feb2-4285-86ca-b1b13347c61c.png)\r\n\r\nI've noticed that this is a format that you have previously used in `wallet_fast_rescan.py`, but \"- ...\" is currently used in more place, such as `rpc_decodescript.py` and `rpc_psbt.py` and I believe that following the same format across the testing framework is for the better.\r\n",
      "created_at": "2023-01-13T14:43:33Z",
      "updated_at": "2023-01-13T16:11:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1069542020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1069542020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1069576798",
      "pull_request_review_id": 1247801283,
      "id": 1069576798,
      "node_id": "PRRC_kwDOABII584_wHJe",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test dust limit mempool policy (`-dustrelayfee` parameter)\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.key import ECKey\n+from test_framework.messages import (\n+    COIN,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+from test_framework.script_util import (\n+    key_to_p2pk_script,\n+    key_to_p2pkh_script,\n+    key_to_p2wpkh_script,\n+    keys_to_multisig_script,\n+    output_key_to_p2tr_script,\n+    program_to_witness_script,\n+    script_to_p2sh_script,\n+    script_to_p2wsh_script,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import TestNode\n+from test_framework.util import (\n+    assert_equal,\n+    get_fee,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+DUST_RELAY_TX_FEE = 3000  # default setting [sat/kvB]\n+\n+\n+class DustRelayFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_dust_output(self, node: TestNode, dust_relay_fee: Decimal,\n+                         output_script: CScript, type_desc: str) -> None:\n+        # determine dust threshold (see `GetDustThreshold`)\n+        if output_script[0] == OP_RETURN:\n+            dust_threshold = 0\n+        else:\n+            tx_size = len(CTxOut(nValue=0, scriptPubKey=output_script).serialize())\n+            tx_size += 67 if output_script.IsWitnessProgram() else 148\n+            dust_threshold = int(get_fee(tx_size, dust_relay_fee) * COIN)\n+        self.log.info(f\"-> Test {type_desc} output (size {len(output_script)}, limit {dust_threshold})\")\n+\n+        # amount right on the dust threshold should pass\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\n+        tx.vout.append(CTxOut(nValue=dust_threshold, scriptPubKey=output_script))\n+        tx.vout[0].nValue -= dust_threshold  # keep total output value constant\n+        tx_good_hex = tx.serialize().hex()\n+        res = node.testmempoolaccept([tx_good_hex])[0]\n+        assert_equal(res['allowed'], True)\n+\n+        # amount just below the dust threshold should fail\n+        if dust_threshold > 0:\n+            tx.vout[1].nValue -= 1\n+            res = node.testmempoolaccept([tx.serialize().hex()])[0]\n+            assert_equal(res['allowed'], False)\n+            assert_equal(res['reject-reason'], 'dust')\n+\n+        # finally send the transaction to avoid running out of MiniWallet UTXOs\n+        self.wallet.sendrawtransaction(from_node=node, tx_hex=tx_good_hex)\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # prepare output scripts of each standard type\n+        key = ECKey()\n+        key.generate(compressed=False)\n+        uncompressed_pubkey = key.get_pubkey().get_bytes()\n+        key.generate(compressed=True)\n+        pubkey = key.get_pubkey().get_bytes()\n+\n+        output_scripts = (\n+            (key_to_p2pk_script(uncompressed_pubkey),          \"P2PK (uncompressed)\"),\n+            (key_to_p2pk_script(pubkey),                       \"P2PK (compressed)\"),\n+            (key_to_p2pkh_script(pubkey),                      \"P2PKH\"),\n+            (script_to_p2sh_script(CScript([OP_TRUE])),        \"P2SH\"),\n+            (key_to_p2wpkh_script(pubkey),                     \"P2WPKH\"),\n+            (script_to_p2wsh_script(CScript([OP_TRUE])),       \"P2WSH\"),\n+            (output_key_to_p2tr_script(pubkey[1:]),            \"P2TR\"),\n+            # witness programs for segwitv2+ can be between 2 and 40 bytes\n+            (program_to_witness_script(2,  b'\\x66' * 2),       \"P2?? (future witness version 2)\"),",
      "path": "test/functional/mempool_dust.py",
      "position": 93,
      "original_position": 93,
      "commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "original_commit_id": "d6fc1d6a3393c571a1691a6bda60433216643616",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As I do in https://github.com/bitcoin/bitcoin/pull/26875 could check v1 at non-32-byte-push lengths as well to make sure they're treated as UNKNOWN ",
      "created_at": "2023-01-13T15:15:00Z",
      "updated_at": "2023-01-13T15:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26631#discussion_r1069576798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1069576798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    }
  ]
}