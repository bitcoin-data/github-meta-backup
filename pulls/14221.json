{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221",
    "id": 215653499,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NjUzNDk5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14221",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14221.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14221.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14221",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14221/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9d5eef951345e309d4e2d55e254c193cc59d88f1",
    "number": 14221,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wip: net: Implement poll",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This builds on #14147 \r\n\r\nCurrently this is failing a test, still investigating why (seems to generally work).",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-09-14T16:53:32Z",
    "updated_at": "2021-09-08T11:58:15Z",
    "closed_at": "2018-09-26T23:06:29Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "b8031563c53966ee488045b32d00d8692e5422f2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "pstratem:2018-09-11-net-poll",
      "ref": "2018-09-11-net-poll",
      "sha": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 51982177,
        "node_id": "MDEwOlJlcG9zaXRvcnk1MTk4MjE3Nw==",
        "name": "bitcoin",
        "full_name": "pstratem/bitcoin",
        "owner": {
          "login": "pstratem",
          "id": 620611,
          "node_id": "MDQ6VXNlcjYyMDYxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pstratem",
          "html_url": "https://github.com/pstratem",
          "followers_url": "https://api.github.com/users/pstratem/followers",
          "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
          "organizations_url": "https://api.github.com/users/pstratem/orgs",
          "repos_url": "https://api.github.com/users/pstratem/repos",
          "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pstratem/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pstratem/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pstratem/bitcoin",
        "archive_url": "https://api.github.com/repos/pstratem/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pstratem/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pstratem/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pstratem/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pstratem/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pstratem/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pstratem/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pstratem/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pstratem/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pstratem/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pstratem/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pstratem/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pstratem/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pstratem/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pstratem/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pstratem/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pstratem/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pstratem/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pstratem/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pstratem/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pstratem/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pstratem/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pstratem/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pstratem/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pstratem/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pstratem/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pstratem/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pstratem/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pstratem/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pstratem/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pstratem/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pstratem/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pstratem/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pstratem/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pstratem/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pstratem/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pstratem/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pstratem/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pstratem/bitcoin/hooks",
        "svn_url": "https://github.com/pstratem/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 197422,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-02T15:00:04Z",
        "created_at": "2016-02-18T05:39:22Z",
        "updated_at": "2023-01-17T08:20:22Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f09bc7ec9859bba6d1df765adb1030d276b8f626",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 360,
    "deletions": 238,
    "changed_files": 2,
    "commits": 10,
    "review_comments": 3,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDVjMzQ1NTA3MjA4ZDIxNWMwNjIxMTgwMzA1YTlmMWQzNjMwMTJh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d5c345507208d215c0621180305a9f1d363012a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d5c345507208d215c0621180305a9f1d363012a",
      "tree": {
        "sha": "2458c2ac8dc07b61653915b5933e3993346c95b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2458c2ac8dc07b61653915b5933e3993346c95b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f7ae35ce8cf5d681de8e41a2f7c0f623fa71fc5",
          "sha": "2f7ae35ce8cf5d681de8e41a2f7c0f623fa71fc5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2f7ae35ce8cf5d681de8e41a2f7c0f623fa71fc5"
        }
      ],
      "message": "Move DisconnectNodes logic to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:22:55Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-04T15:07:15Z"
      },
      "sha": "2d5c345507208d215c0621180305a9f1d363012a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MWM2MzQxOTQ0M2ZmZjUzZjdhYjY1ZDY5MWUwYWZjMTY5ZGU3MDg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71c63419443fff53f7ab65d691e0afc169de7087",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/71c63419443fff53f7ab65d691e0afc169de7087",
      "tree": {
        "sha": "57c7b1ea1fa3aa942e168e7696b300dbb0008470",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57c7b1ea1fa3aa942e168e7696b300dbb0008470"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d5c345507208d215c0621180305a9f1d363012a",
          "sha": "2d5c345507208d215c0621180305a9f1d363012a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d5c345507208d215c0621180305a9f1d363012a"
        }
      ],
      "message": "Move InactivityCheck to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:22:59Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-04T17:42:49Z"
      },
      "sha": "71c63419443fff53f7ab65d691e0afc169de7087"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzYyMTA5NzkyNmVmOWVkZWVhZWI1MzRhMGIzZmU2Mjk4NzRhNTNj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c621097926ef9edeeaeb534a0b3fe629874a53c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c621097926ef9edeeaeb534a0b3fe629874a53c",
      "tree": {
        "sha": "77908b56e327f196acef3c234731d5a7f730a3da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77908b56e327f196acef3c234731d5a7f730a3da"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71c63419443fff53f7ab65d691e0afc169de7087",
          "sha": "71c63419443fff53f7ab65d691e0afc169de7087",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/71c63419443fff53f7ab65d691e0afc169de7087"
        }
      ],
      "message": "Reduce calls to GetMicroTime in InactivityCheck.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:22:59Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-04T18:20:16Z"
      },
      "sha": "8c621097926ef9edeeaeb534a0b3fe629874a53c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzIwNjljNGY1OGFhNmIzN2Y5ZjMxYmZiM2Q4MzYwZDU3MWU0NWQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9",
      "tree": {
        "sha": "433e85def22210684dce38dae4914362adda9269",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/433e85def22210684dce38dae4914362adda9269"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c621097926ef9edeeaeb534a0b3fe629874a53c",
          "sha": "8c621097926ef9edeeaeb534a0b3fe629874a53c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c621097926ef9edeeaeb534a0b3fe629874a53c"
        }
      ],
      "message": "Move InactivityChecks logic to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:22:59Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-04T18:43:06Z"
      },
      "sha": "8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjdlMjFiNmQ0MzRhNDUxODI1NmYyZDcwMTNkYmNkOWU4MjNkZWEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c27e21b6d434a4518256f2d7013dbcd9e823dea0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c27e21b6d434a4518256f2d7013dbcd9e823dea0",
      "tree": {
        "sha": "3aab30173dc7c1dad66afc0a3c50d004831b3e0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3aab30173dc7c1dad66afc0a3c50d004831b3e0e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9",
          "sha": "8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c2069c4f58aa6b37f9f31bfb3d8360d571e45d9"
        }
      ],
      "message": "Merge InactivityCheck into InactivityChecks.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:22:59Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-04T18:49:56Z"
      },
      "sha": "c27e21b6d434a4518256f2d7013dbcd9e823dea0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDkxZGZiYWRjZWI4MDUyZjg1MmViZjAwMjBhNjIyMTk0ZGI1MjVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8491dfbadceb8052f852ebf0020a622194db525f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8491dfbadceb8052f852ebf0020a622194db525f",
      "tree": {
        "sha": "250c4d8a0e86efef47b28a496474db9a41f40a74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/250c4d8a0e86efef47b28a496474db9a41f40a74"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c27e21b6d434a4518256f2d7013dbcd9e823dea0",
          "sha": "c27e21b6d434a4518256f2d7013dbcd9e823dea0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c27e21b6d434a4518256f2d7013dbcd9e823dea0"
        }
      ],
      "message": "Run InactivityChecks before other socket handling logic.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:36:18Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-10T22:36:18Z"
      },
      "sha": "8491dfbadceb8052f852ebf0020a622194db525f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODE3Y2UzMDkwZmE3MWM2MTE3MDIxNjA5MDY4NWVlMTQyZDBmMWQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e817ce3090fa71c61170216090685ee142d0f1d5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e817ce3090fa71c61170216090685ee142d0f1d5",
      "tree": {
        "sha": "e90aa3297a7462d6c46d6a029b5fc7e462ff6063",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e90aa3297a7462d6c46d6a029b5fc7e462ff6063"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8491dfbadceb8052f852ebf0020a622194db525f",
          "sha": "8491dfbadceb8052f852ebf0020a622194db525f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8491dfbadceb8052f852ebf0020a622194db525f"
        }
      ],
      "message": "Move NotifyNumConnectionsChanged logic to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-12T20:19:09Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-12T20:19:09Z"
      },
      "sha": "e817ce3090fa71c61170216090685ee142d0f1d5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDMyMzJkMmRlYTg0ODFhMTViOWYyMWNjYjE0ZDhlYzQ4MzRlNmYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1",
      "tree": {
        "sha": "463289e863de19f72a373416027d49fe70a9a5f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/463289e863de19f72a373416027d49fe70a9a5f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e817ce3090fa71c61170216090685ee142d0f1d5",
          "sha": "e817ce3090fa71c61170216090685ee142d0f1d5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e817ce3090fa71c61170216090685ee142d0f1d5"
        }
      ],
      "message": "Move SocketHandler logic to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-12T20:29:49Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-12T20:29:49Z"
      },
      "sha": "5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGNmNmFlNzc3ZDI5NGRhYjQwMjRlMGUzMDkxNTU5NDA3NzQyMDM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54cf6ae777d294dab4024e0e3091559407742037",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54cf6ae777d294dab4024e0e3091559407742037",
      "tree": {
        "sha": "d667a3cefa784da64758e34b6c5300deac740625",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d667a3cefa784da64758e34b6c5300deac740625"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1",
          "sha": "5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d3232d2dea8481a15b9f21ccb14d8ec4834e6f1"
        }
      ],
      "message": "Move SocketEvents logic to private method.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-13T22:11:59Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-13T18:59:17Z"
      },
      "sha": "54cf6ae777d294dab4024e0e3091559407742037"
    },
    {
      "event": "commented",
      "id": 421443093,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ0MzA5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421443093",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T18:19:44Z",
      "updated_at": "2018-09-26T22:49:57Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14335 (net: refactor: cleanup ThreadSocketHandler by pstratem)\n* #14147 (net: Refactor ThreadSocketHandler by pstratem)\n* #14046 (net: Refactor message parsing (CNetMessage), adds flexibility by jonasschnelli)\n* #14032 (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#issuecomment-421443093",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14221"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDVlZWY5NTEzNDVlMzA5ZDRlMmQ1NWUyNTRjMTkzY2M1OWQ4OGYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "tree": {
        "sha": "0ece2877149de1ed00ab6e5e0ea1e3e618157412",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ece2877149de1ed00ab6e5e0ea1e3e618157412"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54cf6ae777d294dab4024e0e3091559407742037",
          "sha": "54cf6ae777d294dab4024e0e3091559407742037",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54cf6ae777d294dab4024e0e3091559407742037"
        }
      ],
      "message": "Implement poll() on systems which support it properly.",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-14T23:09:53Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-09-14T02:04:09Z"
      },
      "sha": "9d5eef951345e309d4e2d55e254c193cc59d88f1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1847194908,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg0NzE5NDkwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1847194908",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T23:10:06Z"
    },
    {
      "event": "labeled",
      "id": 1847248226,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDcyNDgyMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1847248226",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-15T00:21:16Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 155731903,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1NzMxOTAz",
      "url": null,
      "actor": null,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#pullrequestreview-155731903",
      "submitted_at": "2018-09-16T04:52:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
    },
    {
      "event": "reviewed",
      "id": 155854229,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1ODU0MjI5",
      "url": null,
      "actor": null,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#pullrequestreview-155854229",
      "submitted_at": "2018-09-17T10:02:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
    },
    {
      "event": "reviewed",
      "id": 155854427,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1ODU0NDI3",
      "url": null,
      "actor": null,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#pullrequestreview-155854427",
      "submitted_at": "2018-09-17T10:03:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
    },
    {
      "event": "closed",
      "id": 1869718876,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTg2OTcxODg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1869718876",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-26T23:06:29Z"
    },
    {
      "event": "locked",
      "id": 5271822691,
      "node_id": "LOE_lADOABII584VevhNzwAAAAE6OaFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271822691",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:58:15Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217902052",
      "pull_request_review_id": 155731903,
      "id": 217902052,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkwMjA1Mg==",
      "diff_hunk": "@@ -1269,6 +1269,7 @@ void CConnman::NotifyNumConnectionsChanged()\n     }\n }\n \n+#ifdef WIN32",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "original_commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "in_reply_to_id": null,
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IMO you could include this [m4](https://www.gnu.org/software/autoconf-archive/ax_have_poll.html) to detect if the system has poll.",
      "created_at": "2018-09-16T04:52:48Z",
      "updated_at": "2018-09-16T04:52:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#discussion_r217902052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217902052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218012147",
      "pull_request_review_id": 155854229,
      "id": 218012147,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAxMjE0Nw==",
      "diff_hunk": "@@ -1153,311 +1153,425 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n }\n \n-void CConnman::ThreadSocketHandler()\n+void CConnman::DisconnectNodes()\n {\n-    unsigned int nPrevNodeCount = 0;\n-    while (!interruptNet)\n     {\n-        //\n-        // Disconnect nodes\n-        //\n-        {\n-            LOCK(cs_vNodes);\n+        LOCK(cs_vNodes);\n \n-            if (!fNetworkActive) {\n-                // Disconnect any connected nodes\n-                for (CNode* pnode : vNodes) {\n-                    if (!pnode->fDisconnect) {\n-                        LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n-                        pnode->fDisconnect = true;\n-                    }\n+        if (!fNetworkActive) {\n+            // Disconnect any connected nodes\n+            for (CNode* pnode : vNodes) {\n+                if (!pnode->fDisconnect) {\n+                    LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n+                    pnode->fDisconnect = true;\n                 }\n             }\n+        }\n \n-            // Disconnect unused nodes\n-            std::vector<CNode*> vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy)\n+        // Disconnect unused nodes\n+        std::vector<CNode*> vNodesCopy = vNodes;\n+        for (CNode* pnode : vNodesCopy)\n+        {\n+            if (pnode->fDisconnect)\n             {\n-                if (pnode->fDisconnect)\n-                {\n-                    // remove from vNodes\n-                    vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n+                // remove from vNodes\n+                vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n \n-                    // release outbound grant (if any)\n-                    pnode->grantOutbound.Release();\n+                // release outbound grant (if any)\n+                pnode->grantOutbound.Release();\n \n-                    // close socket and cleanup\n-                    pnode->CloseSocketDisconnect();\n+                // close socket and cleanup\n+                pnode->CloseSocketDisconnect();\n \n-                    // hold in disconnected pool until all refs are released\n-                    pnode->Release();\n-                    vNodesDisconnected.push_back(pnode);\n-                }\n+                // hold in disconnected pool until all refs are released\n+                pnode->Release();\n+                vNodesDisconnected.push_back(pnode);\n             }\n         }\n+    }\n+    {\n+        // Delete disconnected nodes\n+        std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n+        for (CNode* pnode : vNodesDisconnectedCopy)\n         {\n-            // Delete disconnected nodes\n-            std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n-            for (CNode* pnode : vNodesDisconnectedCopy)\n-            {\n-                // wait until threads are done using it\n-                if (pnode->GetRefCount() <= 0) {\n-                    bool fDelete = false;\n-                    {\n-                        TRY_LOCK(pnode->cs_inventory, lockInv);\n-                        if (lockInv) {\n-                            TRY_LOCK(pnode->cs_vSend, lockSend);\n-                            if (lockSend) {\n-                                fDelete = true;\n-                            }\n+            // wait until threads are done using it\n+            if (pnode->GetRefCount() <= 0) {\n+                bool fDelete = false;\n+                {\n+                    TRY_LOCK(pnode->cs_inventory, lockInv);\n+                    if (lockInv) {\n+                        TRY_LOCK(pnode->cs_vSend, lockSend);\n+                        if (lockSend) {\n+                            fDelete = true;\n                         }\n                     }\n-                    if (fDelete) {\n-                        vNodesDisconnected.remove(pnode);\n-                        DeleteNode(pnode);\n-                    }\n+                }\n+                if (fDelete) {\n+                    vNodesDisconnected.remove(pnode);\n+                    DeleteNode(pnode);\n                 }\n             }\n         }\n-        size_t vNodesSize;\n-        {\n-            LOCK(cs_vNodes);\n-            vNodesSize = vNodes.size();\n-        }\n-        if(vNodesSize != nPrevNodeCount) {\n-            nPrevNodeCount = vNodesSize;\n-            if(clientInterface)\n-                clientInterface->NotifyNumConnectionsChanged(vNodesSize);\n+    }\n+}\n+\n+void CConnman::InactivityChecks()\n+{\n+    int64_t micro_time, nTime;\n+    {\n+        LOCK(cs_vNodes);\n+        micro_time = GetTimeMicros();\n+        nTime = micro_time / 1000000;\n+        for (CNode* pnode : vNodes) {\n+            if (nTime - pnode->nTimeConnected > 60)\n+            {\n+                if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n+                {\n+                    LogPrint(BCLog::NET, \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->GetId());\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n+                {\n+                    LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n+                {\n+                    LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (pnode->nPingNonceSent && pnode->nPingUsecStart + TIMEOUT_INTERVAL * 1000000 < micro_time)\n+                {\n+                    LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (micro_time - pnode->nPingUsecStart));\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (!pnode->fSuccessfullyConnected)\n+                {\n+                    LogPrint(BCLog::NET, \"version handshake timeout from %d\\n\", pnode->GetId());\n+                    pnode->fDisconnect = true;\n+                }\n+            }\n         }\n+    }\n+}\n \n-        //\n-        // Find which sockets have data to receive\n-        //\n-        struct timeval timeout;\n-        timeout.tv_sec  = 0;\n-        timeout.tv_usec = 50000; // frequency to poll pnode->vSend\n-\n-        fd_set fdsetRecv;\n-        fd_set fdsetSend;\n-        fd_set fdsetError;\n-        FD_ZERO(&fdsetRecv);\n-        FD_ZERO(&fdsetSend);\n-        FD_ZERO(&fdsetError);\n-        SOCKET hSocketMax = 0;\n-        bool have_fds = false;\n+void CConnman::NotifyNumConnectionsChanged()\n+{\n+    size_t vNodesSize;\n+    {\n+        LOCK(cs_vNodes);\n+        vNodesSize = vNodes.size();\n+    }\n+    if(vNodesSize != nPrevNodeCount) {\n+        nPrevNodeCount = vNodesSize;\n+        if(clientInterface)\n+            clientInterface->NotifyNumConnectionsChanged(vNodesSize);\n+    }\n+}\n \n-        for (const ListenSocket& hListenSocket : vhListenSocket) {\n-            FD_SET(hListenSocket.socket, &fdsetRecv);\n-            hSocketMax = std::max(hSocketMax, hListenSocket.socket);\n-            have_fds = true;\n-        }\n+#ifdef WIN32\n+void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_set, std::set<SOCKET> &error_set)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = 0;\n+    timeout.tv_usec = 50000; // frequency to poll pnode->vSend\n+\n+    fd_set fdsetRecv;\n+    fd_set fdsetSend;\n+    fd_set fdsetError;\n+    FD_ZERO(&fdsetRecv);\n+    FD_ZERO(&fdsetSend);\n+    FD_ZERO(&fdsetError);\n+    SOCKET hSocketMax = 0;\n+    bool have_fds = false;\n+\n+    for (const ListenSocket& hListenSocket : vhListenSocket) {\n+        FD_SET(hListenSocket.socket, &fdsetRecv);\n+        hSocketMax = std::max(hSocketMax, hListenSocket.socket);\n+        have_fds = true;\n+    }\n \n+    {\n+        LOCK(cs_vNodes);\n+        for (CNode* pnode : vNodes)\n         {\n-            LOCK(cs_vNodes);\n-            for (CNode* pnode : vNodes)\n+            // Implement the following logic:\n+            // * If there is data to send, select() for sending data. As this only\n+            //   happens when optimistic write failed, we choose to first drain the\n+            //   write buffer in this case before receiving more. This avoids\n+            //   needlessly queueing received data, if the remote peer is not themselves\n+            //   receiving data. This means properly utilizing TCP flow control signalling.\n+            // * Otherwise, if there is space left in the receive buffer, select() for\n+            //   receiving data.\n+            // * Hand off all complete messages to the processor, to be handled without\n+            //   blocking here.\n+\n+            bool select_recv = !pnode->fPauseRecv;\n+            bool select_send;\n             {\n-                // Implement the following logic:\n-                // * If there is data to send, select() for sending data. As this only\n-                //   happens when optimistic write failed, we choose to first drain the\n-                //   write buffer in this case before receiving more. This avoids\n-                //   needlessly queueing received data, if the remote peer is not themselves\n-                //   receiving data. This means properly utilizing TCP flow control signalling.\n-                // * Otherwise, if there is space left in the receive buffer, select() for\n-                //   receiving data.\n-                // * Hand off all complete messages to the processor, to be handled without\n-                //   blocking here.\n-\n-                bool select_recv = !pnode->fPauseRecv;\n-                bool select_send;\n-                {\n-                    LOCK(pnode->cs_vSend);\n-                    select_send = !pnode->vSendMsg.empty();\n-                }\n+                LOCK(pnode->cs_vSend);\n+                select_send = !pnode->vSendMsg.empty();\n+            }\n \n-                LOCK(pnode->cs_hSocket);\n-                if (pnode->hSocket == INVALID_SOCKET)\n-                    continue;\n+            LOCK(pnode->cs_hSocket);\n+            if (pnode->hSocket == INVALID_SOCKET)\n+                continue;\n \n-                FD_SET(pnode->hSocket, &fdsetError);\n-                hSocketMax = std::max(hSocketMax, pnode->hSocket);\n-                have_fds = true;\n+            FD_SET(pnode->hSocket, &fdsetError);\n+            hSocketMax = std::max(hSocketMax, pnode->hSocket);\n+            have_fds = true;\n \n-                if (select_send) {\n-                    FD_SET(pnode->hSocket, &fdsetSend);\n-                    continue;\n-                }\n-                if (select_recv) {\n-                    FD_SET(pnode->hSocket, &fdsetRecv);\n-                }\n+            if (select_send) {\n+                FD_SET(pnode->hSocket, &fdsetSend);\n+                continue;\n+            }\n+            if (select_recv) {\n+                FD_SET(pnode->hSocket, &fdsetRecv);\n             }\n         }\n+    }\n \n-        int nSelect = select(have_fds ? hSocketMax + 1 : 0,\n-                             &fdsetRecv, &fdsetSend, &fdsetError, &timeout);\n-        if (interruptNet)\n+    int nSelect = select(have_fds ? hSocketMax + 1 : 0,\n+                         &fdsetRecv, &fdsetSend, &fdsetError, &timeout);\n+    if (interruptNet)\n+        return;\n+\n+    if (nSelect == SOCKET_ERROR)\n+    {\n+        if (have_fds)\n+        {\n+            int nErr = WSAGetLastError();\n+            LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n+            for (unsigned int i = 0; i <= hSocketMax; i++)\n+                FD_SET(i, &fdsetRecv);\n+        }\n+        FD_ZERO(&fdsetSend);\n+        FD_ZERO(&fdsetError);\n+        if (!interruptNet.sleep_for(std::chrono::milliseconds(timeout.tv_usec/1000)))\n             return;\n+    }\n+\n+\n+    for (const ListenSocket& hListenSocket : vhListenSocket)\n+    {\n+        if (hListenSocket.socket == INVALID_SOCKET) continue;\n+        if (FD_ISSET(hListenSocket.socket, &fdsetRecv)) recv_set.insert(hListenSocket.socket);\n+    }\n \n-        if (nSelect == SOCKET_ERROR)\n+    {\n+        LOCK(cs_vNodes);\n+        for (CNode* pnode : vNodes)\n         {\n-            if (have_fds)\n-            {\n-                int nErr = WSAGetLastError();\n-                LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n-                for (unsigned int i = 0; i <= hSocketMax; i++)\n-                    FD_SET(i, &fdsetRecv);\n-            }\n-            FD_ZERO(&fdsetSend);\n-            FD_ZERO(&fdsetError);\n-            if (!interruptNet.sleep_for(std::chrono::milliseconds(timeout.tv_usec/1000)))\n-                return;\n+            if (pnode->hSocket == INVALID_SOCKET) continue;\n+            if (FD_ISSET(pnode->hSocket, &fdsetRecv)) recv_set.insert(pnode->hSocket);\n+            if (FD_ISSET(pnode->hSocket, &fdsetSend)) send_set.insert(pnode->hSocket);\n+            if (FD_ISSET(pnode->hSocket, &fdsetError)) error_set.insert(pnode->hSocket);\n         }\n+    }\n+}\n+#else\n+void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_set, std::set<SOCKET> &error_set)\n+{\n+    std::vector<struct pollfd> pollfds;\n \n-        //\n-        // Accept new connections\n-        //\n-        for (const ListenSocket& hListenSocket : vhListenSocket)\n+    for (const ListenSocket& hListenSocket : vhListenSocket) {\n+        if (hListenSocket.socket == INVALID_SOCKET) continue;\n+\n+        struct pollfd pollfd;\n+        memset(&pollfd, 0, sizeof(struct pollfd));\n+        pollfd.fd = hListenSocket.socket;\n+        pollfd.events = POLLIN;\n+        pollfds.push_back(pollfd);\n+    }\n+\n+    {\n+        LOCK(cs_vNodes);\n+        for (CNode* pnode : vNodes)\n         {\n-            if (hListenSocket.socket != INVALID_SOCKET && FD_ISSET(hListenSocket.socket, &fdsetRecv))\n+            // Implement the following logic:\n+            // * If there is data to send, select() for sending data. As this only\n+            //   happens when optimistic write failed, we choose to first drain the\n+            //   write buffer in this case before receiving more. This avoids\n+            //   needlessly queueing received data, if the remote peer is not themselves\n+            //   receiving data. This means properly utilizing TCP flow control signalling.\n+            // * Otherwise, if there is space left in the receive buffer, select() for\n+            //   receiving data.\n+            // * Hand off all complete messages to the processor, to be handled without\n+            //   blocking here.\n+\n+            bool select_recv = !pnode->fPauseRecv;\n+            bool select_send;\n             {\n-                AcceptConnection(hListenSocket);\n+                LOCK(pnode->cs_vSend);\n+                select_send = !pnode->vSendMsg.empty();\n+            }\n+\n+            LOCK(pnode->cs_hSocket);\n+            if (pnode->hSocket == INVALID_SOCKET)\n+                continue;\n+\n+            struct pollfd pollfd;\n+            memset(&pollfd, 0, sizeof(struct pollfd));\n+            pollfd.fd = pnode->hSocket;\n+\n+            if (select_send) {\n+                pollfd.events = POLLOUT;\n+                continue;\n             }\n+            if (select_recv) {\n+                pollfd.events = POLLIN;\n+            }\n+            pollfds.push_back(pollfd);\n+        }\n+    }\n+\n+    int nPoll = poll(&pollfds[0], pollfds.size(), 50);\n+\n+    if (nPoll < 0) {\n+        if (errno == EINTR) return;\n+        LogPrint(BCLog::NET, \"poll errno %s\\n\", strerror(errno));\n+    }\n+\n+    if (interruptNet) return;\n+\n+    for (struct pollfd pollfd : pollfds) {\n+        if (pollfd.revents & POLLIN) recv_set.insert(pollfd.fd);\n+        if (pollfd.revents & POLLOUT) send_set.insert(pollfd.fd);\n+        if (pollfd.revents & (POLLERR|POLLHUP)) error_set.insert(pollfd.fd);\n+    }\n+}\n+#endif\n+\n+void CConnman::SocketHandler()\n+{\n+    std::set<SOCKET> recv_set, send_set, error_set;\n+    SocketEvents(recv_set, send_set, error_set);\n+\n+    if (interruptNet) return;\n+\n+    //\n+    // Accept new connections\n+    //\n+    for (const ListenSocket& hListenSocket : vhListenSocket)\n+    {\n+        if (hListenSocket.socket != INVALID_SOCKET && recv_set.count(hListenSocket.socket))",
      "path": "src/net.cpp",
      "position": 435,
      "original_position": 435,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "original_commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-16 23:09:35 clang-tidy(pr=14221): src/net.cpp:1457:55: warning: implicit conversion 'std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >::size_type' (aka 'unsigned long') -> bool [readability-implicit-bool-conversion]\r\n```\r\n\r\nSame below. Please fix throughout :-)",
      "created_at": "2018-09-17T10:02:31Z",
      "updated_at": "2018-09-17T10:02:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#discussion_r218012147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218012147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1457,
      "original_line": 1457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218012313",
      "pull_request_review_id": 155854427,
      "id": 218012313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAxMjMxMw==",
      "diff_hunk": "@@ -1153,311 +1153,425 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n }\n \n-void CConnman::ThreadSocketHandler()\n+void CConnman::DisconnectNodes()\n {\n-    unsigned int nPrevNodeCount = 0;\n-    while (!interruptNet)\n     {\n-        //\n-        // Disconnect nodes\n-        //\n-        {\n-            LOCK(cs_vNodes);\n+        LOCK(cs_vNodes);\n \n-            if (!fNetworkActive) {\n-                // Disconnect any connected nodes\n-                for (CNode* pnode : vNodes) {\n-                    if (!pnode->fDisconnect) {\n-                        LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n-                        pnode->fDisconnect = true;\n-                    }\n+        if (!fNetworkActive) {\n+            // Disconnect any connected nodes\n+            for (CNode* pnode : vNodes) {\n+                if (!pnode->fDisconnect) {\n+                    LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n+                    pnode->fDisconnect = true;\n                 }\n             }\n+        }\n \n-            // Disconnect unused nodes\n-            std::vector<CNode*> vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy)\n+        // Disconnect unused nodes\n+        std::vector<CNode*> vNodesCopy = vNodes;\n+        for (CNode* pnode : vNodesCopy)\n+        {\n+            if (pnode->fDisconnect)\n             {\n-                if (pnode->fDisconnect)\n-                {\n-                    // remove from vNodes\n-                    vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n+                // remove from vNodes\n+                vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n \n-                    // release outbound grant (if any)\n-                    pnode->grantOutbound.Release();\n+                // release outbound grant (if any)\n+                pnode->grantOutbound.Release();\n \n-                    // close socket and cleanup\n-                    pnode->CloseSocketDisconnect();\n+                // close socket and cleanup\n+                pnode->CloseSocketDisconnect();\n \n-                    // hold in disconnected pool until all refs are released\n-                    pnode->Release();\n-                    vNodesDisconnected.push_back(pnode);\n-                }\n+                // hold in disconnected pool until all refs are released\n+                pnode->Release();\n+                vNodesDisconnected.push_back(pnode);\n             }\n         }\n+    }\n+    {\n+        // Delete disconnected nodes\n+        std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n+        for (CNode* pnode : vNodesDisconnectedCopy)\n         {\n-            // Delete disconnected nodes\n-            std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n-            for (CNode* pnode : vNodesDisconnectedCopy)\n-            {\n-                // wait until threads are done using it\n-                if (pnode->GetRefCount() <= 0) {\n-                    bool fDelete = false;\n-                    {\n-                        TRY_LOCK(pnode->cs_inventory, lockInv);\n-                        if (lockInv) {\n-                            TRY_LOCK(pnode->cs_vSend, lockSend);\n-                            if (lockSend) {\n-                                fDelete = true;\n-                            }\n+            // wait until threads are done using it\n+            if (pnode->GetRefCount() <= 0) {\n+                bool fDelete = false;\n+                {\n+                    TRY_LOCK(pnode->cs_inventory, lockInv);\n+                    if (lockInv) {\n+                        TRY_LOCK(pnode->cs_vSend, lockSend);\n+                        if (lockSend) {\n+                            fDelete = true;\n                         }\n                     }\n-                    if (fDelete) {\n-                        vNodesDisconnected.remove(pnode);\n-                        DeleteNode(pnode);\n-                    }\n+                }\n+                if (fDelete) {\n+                    vNodesDisconnected.remove(pnode);\n+                    DeleteNode(pnode);\n                 }\n             }\n         }\n-        size_t vNodesSize;\n-        {\n-            LOCK(cs_vNodes);\n-            vNodesSize = vNodes.size();\n-        }\n-        if(vNodesSize != nPrevNodeCount) {\n-            nPrevNodeCount = vNodesSize;\n-            if(clientInterface)\n-                clientInterface->NotifyNumConnectionsChanged(vNodesSize);\n+    }\n+}\n+\n+void CConnman::InactivityChecks()\n+{\n+    int64_t micro_time, nTime;",
      "path": "src/net.cpp",
      "position": 125,
      "original_position": 125,
      "commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "original_commit_id": "9d5eef951345e309d4e2d55e254c193cc59d88f1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-16 23:34:30 cppcheck(pr=14221): [src/net.cpp:1220]: (style) The scope of the variable 'micro_time' can be reduced.\r\n2018-09-16 23:34:30 cppcheck(pr=14221): [src/net.cpp:1220]: (style) The scope of the variable 'nTime' can be reduced.\r\n```",
      "created_at": "2018-09-17T10:03:08Z",
      "updated_at": "2018-09-17T10:03:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14221#discussion_r218012313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218012313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14221"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1220,
      "original_line": 1220,
      "side": "RIGHT"
    }
  ]
}