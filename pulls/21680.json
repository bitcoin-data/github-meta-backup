{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680",
    "id": 615282562,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE1MjgyNTYy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21680",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21680.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21680.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/83507dd1729cdc10c5f57725c544a462614c2568",
    "number": 21680,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Use called_from_lib to point uninstrumented libs to TSan",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "From [docs](https://github.com/google/sanitizers/wiki/ThreadSanitizerSuppressions):\r\n> `called_from_lib` suppresses all interceptors in a particular library\r\n\r\nCould be an alternative to #20558.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-04-14T14:18:47Z",
    "updated_at": "2022-08-16T17:20:23Z",
    "closed_at": "2021-04-15T06:06:30Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "9566d390512a40b160060007fae274dcbaffc9b3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:210414-tsan",
      "ref": "210414-tsan",
      "sha": "83507dd1729cdc10c5f57725c544a462614c2568",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 248693,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:20:02Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2023-03-29T06:21:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "773f8c1a7d568012768e16d2ede65b5d4d62aced",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 2,
    "deletions": 8,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 9,
    "comments": 8
  },
  "events": [
    {
      "event": "reviewed",
      "id": 635693071,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NjkzMDcx",
      "url": null,
      "actor": null,
      "commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#pullrequestreview-635693071",
      "submitted_at": "2021-04-14T14:31:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
    },
    {
      "event": "labeled",
      "id": 4594083839,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1OTQwODM4Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4594083839",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T14:44:05Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 819578341,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTU3ODM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819578341",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T14:50:08Z",
      "updated_at": "2021-04-14T14:50:08Z",
      "author_association": "MEMBER",
      "body": "cr ACK 89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca if CI is green\r\n\r\n\r\nLocally I am trying to reproduce the libevent race, but I fail to do so on clang-12. Maybe this fixed itself?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-819578341",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "commented",
      "id": 819608999,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTYwODk5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819608999",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T15:29:14Z",
      "updated_at": "2021-04-14T15:29:14Z",
      "author_association": "MEMBER",
      "body": "> Locally I am trying to reproduce the libevent race, but I fail to do so on clang-12. Maybe this fixed itself?\r\n\r\nThe same for me. Looking into https://github.com/llvm/llvm-project/blob/main/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp does not reveal obvious changes that could fix this issue. The changes that directly touch `epoll` parts are years old.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-819608999",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "ready_for_review",
      "id": 4594366984,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQ0NTk0MzY2OTg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4594366984",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T15:31:42Z"
    },
    {
      "event": "reviewed",
      "id": 635774653,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1Nzc0NjUz",
      "url": null,
      "actor": null,
      "commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#pullrequestreview-635774653",
      "submitted_at": "2021-04-14T15:40:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
    },
    {
      "event": "commented",
      "id": 819820047,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgyMDA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819820047",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T20:45:10Z",
      "updated_at": "2021-04-14T20:45:10Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #15719 (Wallet passive startup by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-819820047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "convert_to_draft",
      "id": 4596009400,
      "node_id": "MDE5OkNvbnZlcnRUb0RyYWZ0RXZlbnQ0NTk2MDA5NDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4596009400",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T21:50:10Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzUwN2RkMTcyOWNkYzEwYzVmNTc3MjVjNTQ0YTQ2MjYxNGMyNTY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83507dd1729cdc10c5f57725c544a462614c2568",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/83507dd1729cdc10c5f57725c544a462614c2568",
      "tree": {
        "sha": "6ad82799fa186a4af9af04b741746e4db1ef8a30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ad82799fa186a4af9af04b741746e4db1ef8a30"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6ad82799fa186a4af9af04b741746e4db1ef8a30\nparent a12962ca894075ae203ab808db4ba5dab23346d1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618409589 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618437237 +0300\n\ntest: Use called_from_lib to point uninstrumented libs to TSan\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmB3ZHUACgkQQQEIES5+\nqB9gMg//eEsScMlfcza7jj6zJLwgblcE1rbrn8G1h2s8aChbZljkQeK62gck9RfL\nnHjW9Wn5wPvrBTAul1KYCrGPAXqe5jy63ocfUvn6+NLidE35BDTrE5SnKnSWbN7X\nkN+HYunsiu5IZ3By9VdCS0zx4oIAyaNaMFYuw9eIX3JXHeqPeluxLstnvSwGqjGX\nD6KaqB2dwGiWNy/fAclRj9LfNWaJbOisFdRUuo9sIOgHupMAuyPkGUoiKrRuFrBv\n9/4Fx1ymnLKB9ecilMt6POya7nD5bcoWBbbOJDa9IszZm12pSGIk1XKuzKmtnAWW\nkNwXsBiLYIWtXBfxD8vkArLOrDDaaNpe4lsI2Axg3GvKNwQE0TWPlreG/mmluQfz\nEJx25TREEhm/3XudmLZC98ed3SR4TumcXjWqdI9M4vTy7diZ/tdhAl55vDi+m0u2\nK2gD+CdS7xgQwNMBmOl0u7xu0FYvOwiitYFjhENIKpPDPw6YTS36AjhVnnIpSrlr\nnXbOa7G8R6z27cX3PjAL2vhwYniOyDIgBr9O+yLCwLiywLqZXJl+3ATgNs2RDgUg\nlPOpYyrW8HKXDTuHvYjzErSu2nD+dF+KHJHvX3jT66RWhnSpbGHNzDzVv++GMZY8\nxGDIcxk8JOuOyA3WcjCO2/WPw/mFvWNxyvmmhxW9Eifj/4JD7sQ=\n=SBDr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a12962ca894075ae203ab808db4ba5dab23346d1",
          "sha": "a12962ca894075ae203ab808db4ba5dab23346d1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a12962ca894075ae203ab808db4ba5dab23346d1"
        }
      ],
      "message": "test: Use called_from_lib to point uninstrumented libs to TSan",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-14T21:53:57Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-14T14:13:09Z"
      },
      "sha": "83507dd1729cdc10c5f57725c544a462614c2568"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4596024641,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDU5NjAyNDY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4596024641",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T21:55:06Z"
    },
    {
      "event": "commented",
      "id": 820128364,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDEyODM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820128364",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T05:37:28Z",
      "updated_at": "2021-04-15T05:37:28Z",
      "author_association": "MEMBER",
      "body": "cr ACK 83507dd1729cdc10c5f57725c544a462614c2568 ci is green\r\n\r\nwill run locally a bit",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-820128364",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "commented",
      "id": 820137854,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDEzNzg1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820137854",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T05:59:18Z",
      "updated_at": "2021-04-15T05:59:18Z",
      "author_association": "MEMBER",
      "body": "Sorry, still doesn't pass locally:\r\n\r\n:man_shrugging: \r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=469770)\r\n  Write of size 8 at 0x7b20004eaa60 by thread T13 (mutexes: write M131785, write M131813):\r\n    #0 memcpy <null> (bitcoind+0x9554e)\r\n    #1 __lock_getobj <null> (bitcoind+0x9e14b4)\r\n    #2 bool DatabaseBatch::Exists<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./wallet/db.h:90:16 (bitcoind+0x6c4f28)\r\n    #3 BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, bool, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/bdb.cpp:314:10 (bitcoind+0x6be027)\r\n    #4 std::__1::__unique_if<BerkeleyBatch>::__unique_single std::__1::make_unique<BerkeleyBatch, BerkeleyDatabase&, bool, bool&>(BerkeleyDatabase&, bool&&, bool&) /usr/lib/llvm-12/bin/../include/c++/v1/memory:2068:32 (bitcoind+0x6c435a)\r\n    #5 BerkeleyDatabase::MakeBatch(bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/bdb.cpp:822:12 (bitcoind+0x6c435a)\r\n    #6 WalletBatch::WalletBatch(WalletDatabase&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./wallet/walletdb.h:207:26 (bitcoind+0x60c26a)\r\n    #7 LegacyScriptPubKeyMan::TopUp(unsigned int) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/scriptpubkeyman.cpp:1262:21 (bitcoind+0x60c26a)\r\n    #8 CWallet::GetNewDestination(OutputType, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:3360:18 (bitcoind+0x65bcaa)\r\n    #9 getnewaddress()::$_2::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/rpcwallet.cpp:275:19 (bitcoind+0x5c5414)\r\n    #10 decltype(std::__1::forward<getnewaddress()::$_2&>(fp)(std::__1::forward<RPCHelpMan const&>(fp0), std::__1::forward<JSONRPCRequest const&>(fp0))) std::__1::__invoke<getnewaddress()::$_2&, RPCHelpMan const&, JSONRPCRequest const&>(getnewaddress()::$_2&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x5c5414)\r\n    #11 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<getnewaddress()::$_2&, RPCHelpMan const&, JSONRPCRequest const&>(getnewaddress()::$_2&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x5c5414)\r\n    #12 std::__1::__function::__alloc_func<getnewaddress()::$_2, std::__1::allocator<getnewaddress()::$_2>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x5c5414)\r\n    #13 std::__1::__function::__func<getnewaddress()::$_2, std::__1::allocator<getnewaddress()::$_2>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x5c5414)\r\n    #14 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x77abb5)\r\n    #15 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x77abb5)\r\n    #16 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/util.cpp:538:26 (bitcoind+0x77abb5)\r\n    #17 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./rpc/server.h:110:91 (bitcoind+0x2f94ce)\r\n    #18 decltype(std::__1::forward<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2f94ce)\r\n    #19 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2f94ce)\r\n    #20 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2f94ce)\r\n    #21 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2f94ce)\r\n    #22 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x529592)\r\n    #23 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x529592)\r\n    #24 wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/interfaces.cpp:518:24 (bitcoind+0x529592)\r\n    #25 decltype(std::__1::forward<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x529592)\r\n    #26 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x529592)\r\n    #27 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x529592)\r\n    #28 std::__1::__function::__func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x529592)\r\n    #29 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x2389f6)\r\n    #30 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x2389f6)\r\n    #31 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/node/interfaces.cpp:398:24 (bitcoind+0x2389f6)\r\n    #32 decltype(std::__1::forward<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2389f6)\r\n    #33 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2389f6)\r\n    #34 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2389f6)\r\n    #35 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2389f6)\r\n    #36 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x3c14d8)\r\n    #37 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x3c14d8)\r\n    #38 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:478:20 (bitcoind+0x3c14d8)\r\n    #39 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:444:13 (bitcoind+0x3c14d8)\r\n    #40 CRPCTable::execute(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:464:13 (bitcoind+0x3c0a80)\r\n    #41 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:202:40 (bitcoind+0x4d6cf3)\r\n    #42 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:298:80 (bitcoind+0x4d6cf3)\r\n    #43 decltype(std::__1::forward<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(std::__1::forward<HTTPRequest*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4d6cf3)\r\n    #44 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x4d6cf3)\r\n    #45 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x4d6cf3)\r\n    #46 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x4d6cf3)\r\n    #47 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x4e5510)\r\n    #48 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x4e5510)\r\n    #49 HTTPWorkItem::operator()() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:49:9 (bitcoind+0x4e5510)\r\n    #50 WorkQueue<HTTPClosure>::Run() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:108:13 (bitcoind+0x4e8048)\r\n    #51 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:336:12 (bitcoind+0x4df7c0)\r\n    #52 decltype(std::__1::forward<void (*)(WorkQueue<HTTPClosure>*, int)>(fp)(std::__1::forward<WorkQueue<HTTPClosure>*>(fp0), std::__1::forward<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4e89af)\r\n    #53 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-12/bin/../include/c++/v1/thread:280:5 (bitcoind+0x4e89af)\r\n    #54 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-12/bin/../include/c++/v1/thread:291:5 (bitcoind+0x4e89af)\r\n\r\n  Previous write of size 8 at 0x7b20004eaa60 by thread T8:\r\n    #0 memcpy <null> (bitcoind+0x9554e)\r\n    #1 __lock_getobj <null> (bitcoind+0x9e14b4)\r\n    #2 bool DatabaseBatch::Write<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CBlockLocator>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, CBlockLocator const&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./wallet/db.h:70:16 (bitcoind+0x6a393a)\r\n    #3 bool WalletBatch::WriteIC<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CBlockLocator>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, CBlockLocator const&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./wallet/walletdb.h:182:23 (bitcoind+0x68e62f)\r\n    #4 WalletBatch::WriteBestBlock(CBlockLocator const&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/walletdb.cpp:172:12 (bitcoind+0x68e62f)\r\n    #5 CWallet::chainStateFlushed(CBlockLocator const&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:453:11 (bitcoind+0x63a459)\r\n    #6 non-virtual thunk to CWallet::chainStateFlushed(CBlockLocator const&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp (bitcoind+0x63a459)\r\n    #7 node::(anonymous namespace)::NotificationsProxy::ChainStateFlushed(CBlockLocator const&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/node/interfaces.cpp:367:86 (bitcoind+0x238238)\r\n    #8 CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_12::operator()() const::'lambda'(CValidationInterface&)::operator()(CValidationInterface&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:241:79 (bitcoind+0x499b4f)\r\n    #9 void MainSignalsInstance::Iterate<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_12::operator()() const::'lambda'(CValidationInterface&)>(CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_12::operator()() const::'lambda'(CValidationInterface&)&&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:83:17 (bitcoind+0x499b4f)\r\n    #10 CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_12::operator()() const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:241:22 (bitcoind+0x499b4f)\r\n    #11 CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13::operator()() const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:243:5 (bitcoind+0x499b4f)\r\n    #12 decltype(std::__1::forward<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13&>(fp)()) std::__1::__invoke<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13&>(CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x499b4f)\r\n    #13 void std::__1::__invoke_void_return_wrapper<void, true>::__call<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13&>(CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:348:9 (bitcoind+0x499b4f)\r\n    #14 std::__1::__function::__alloc_func<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13, std::__1::allocator<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13>, void ()>::operator()() /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x499b4f)\r\n    #15 std::__1::__function::__func<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13, std::__1::allocator<CMainSignals::ChainStateFlushed(CBlockLocator const&)::$_13>, void ()>::operator()() /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x499b4f)\r\n    #16 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x787177)\r\n    #17 std::__1::function<void ()>::operator()() const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x787177)\r\n    #18 SingleThreadedSchedulerClient::ProcessQueue() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/scheduler.cpp:174:5 (bitcoind+0x787177)\r\n    #19 decltype(*(std::__1::forward<SingleThreadedSchedulerClient*&>(fp0)).*fp()) std::__1::__invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient*&, void>(void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient*&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3635:1 (bitcoind+0x78932a)\r\n    #20 std::__1::__bind_return<void (SingleThreadedSchedulerClient::*)(), std::__1::tuple<SingleThreadedSchedulerClient*>, std::__1::tuple<>, __is_valid_bind_return<void (SingleThreadedSchedulerClient::*)(), std::__1::tuple<SingleThreadedSchedulerClient*>, std::__1::tuple<> >::value>::type std::__1::__apply_functor<void (SingleThreadedSchedulerClient::*)(), std::__1::tuple<SingleThreadedSchedulerClient*>, 0ul, std::__1::tuple<> >(void (SingleThreadedSchedulerClient::*&)(), std::__1::tuple<SingleThreadedSchedulerClient*>&, std::__1::__tuple_indices<0ul>, std::__1::tuple<>&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:2857:12 (bitcoind+0x78932a)\r\n    #21 std::__1::__bind_return<void (SingleThreadedSchedulerClient::*)(), std::__1::tuple<SingleThreadedSchedulerClient*>, std::__1::tuple<>, __is_valid_bind_return<void (SingleThreadedSchedulerClient::*)(), std::__1::tuple<SingleThreadedSchedulerClient*>, std::__1::tuple<> >::value>::type std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>::operator()<>() /usr/lib/llvm-12/bin/../include/c++/v1/functional:2890:20 (bitcoind+0x78932a)\r\n    #22 decltype(std::__1::forward<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>&>(fp)()) std::__1::__invoke<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>&>(std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x78932a)\r\n    #23 void std::__1::__invoke_void_return_wrapper<void, true>::__call<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>&>(std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:348:9 (bitcoind+0x78932a)\r\n    #24 std::__1::__function::__alloc_func<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>, std::__1::allocator<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*> >, void ()>::operator()() /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x78932a)\r\n    #25 std::__1::__function::__func<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*>, std::__1::allocator<std::__1::__bind<void (SingleThreadedSchedulerClient::*)(), SingleThreadedSchedulerClient*> >, void ()>::operator()() /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x78932a)\r\n    #26 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x7860f3)\r\n    #27 std::__1::function<void ()>::operator()() const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x7860f3)\r\n    #28 CScheduler::serviceQueue() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/scheduler.cpp:61:17 (bitcoind+0x7860f3)\r\n    #29 AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5::operator()() const::'lambda'()::operator()() const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1269:105 (bitcoind+0x14c8cc)\r\n    #30 void TraceThread<AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5::operator()() const::'lambda'()>(char const*, AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5::operator()() const::'lambda'()) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./util/system.h:470:9 (bitcoind+0x14c8cc)\r\n    #31 AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5::operator()() const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1269:58 (bitcoind+0x14c8cc)\r\n    #32 decltype(std::__1::forward<AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5>(fp)()) std::__1::__invoke<AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5>(AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x14c8cc)\r\n    #33 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5>&, std::__1::__tuple_indices<>) /usr/lib/llvm-12/bin/../include/c++/v1/thread:280:5 (bitcoind+0x14c8cc)\r\n    #34 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5> >(void*) /usr/lib/llvm-12/bin/../include/c++/v1/thread:291:5 (bitcoind+0x14c8cc)\r\n\r\n  Location is heap block of size 128 at 0x7b20004eaa00 allocated by thread T12:\r\n    #0 malloc <null> (bitcoind+0x89c5b)\r\n    #1 __os_malloc <null> (bitcoind+0x97db68)\r\n    #2 BerkeleyDatabase::Verify(bilingual_str&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/bdb.cpp:266:15 (bitcoind+0x6bd28c)\r\n    #3 MakeBerkeleyDatabase(boost::filesystem::path const&, DatabaseOptions const&, DatabaseStatus&, bilingual_str&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/bdb.cpp:841:32 (bitcoind+0x6c475c)\r\n    #4 MakeDatabase(boost::filesystem::path const&, DatabaseOptions const&, DatabaseStatus&, bilingual_str&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/walletdb.cpp:1080:12 (bitcoind+0x69a421)\r\n    #5 MakeWalletDatabase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DatabaseOptions const&, DatabaseStatus&, bilingual_str&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:3841:12 (bitcoind+0x62f076)\r\n    #6 CreateWallet(interfaces::Chain&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, DatabaseOptions&, DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:280:48 (bitcoind+0x62d557)\r\n    #7 createwallet()::$_35::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/rpcwallet.cpp:2770:39 (bitcoind+0x5c211d)\r\n    #8 decltype(std::__1::forward<createwallet()::$_35&>(fp)(std::__1::forward<RPCHelpMan const&>(fp0), std::__1::forward<JSONRPCRequest const&>(fp0))) std::__1::__invoke<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x5c211d)\r\n    #9 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x5c211d)\r\n    #10 std::__1::__function::__alloc_func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x5c211d)\r\n    #11 std::__1::__function::__func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x5c211d)\r\n    #12 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x77abb5)\r\n    #13 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x77abb5)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/util.cpp:538:26 (bitcoind+0x77abb5)\r\n    #15 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./rpc/server.h:110:91 (bitcoind+0x2f94ce)\r\n    #16 decltype(std::__1::forward<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2f94ce)\r\n    #17 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2f94ce)\r\n    #18 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2f94ce)\r\n    #19 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2f94ce)\r\n    #20 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x529592)\r\n    #21 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x529592)\r\n    #22 wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/interfaces.cpp:518:24 (bitcoind+0x529592)\r\n    #23 decltype(std::__1::forward<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x529592)\r\n    #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x529592)\r\n    #25 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x529592)\r\n    #26 std::__1::__function::__func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x529592)\r\n    #27 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x2389f6)\r\n    #28 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x2389f6)\r\n    #29 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/node/interfaces.cpp:398:24 (bitcoind+0x2389f6)\r\n    #30 decltype(std::__1::forward<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2389f6)\r\n    #31 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2389f6)\r\n    #32 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2389f6)\r\n    #33 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2389f6)\r\n    #34 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x3c0f51)\r\n    #35 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x3c0f51)\r\n    #36 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:480:20 (bitcoind+0x3c0f51)\r\n    #37 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:444:13 (bitcoind+0x3c0f51)\r\n    #38 CRPCTable::execute(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:464:13 (bitcoind+0x3c0a80)\r\n    #39 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:202:40 (bitcoind+0x4d6cf3)\r\n    #40 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:298:80 (bitcoind+0x4d6cf3)\r\n    #41 decltype(std::__1::forward<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(std::__1::forward<HTTPRequest*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4d6cf3)\r\n    #42 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x4d6cf3)\r\n    #43 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x4d6cf3)\r\n    #44 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x4d6cf3)\r\n    #45 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x4e5510)\r\n    #46 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x4e5510)\r\n    #47 HTTPWorkItem::operator()() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:49:9 (bitcoind+0x4e5510)\r\n    #48 WorkQueue<HTTPClosure>::Run() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:108:13 (bitcoind+0x4e8048)\r\n    #49 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:336:12 (bitcoind+0x4df7c0)\r\n    #50 decltype(std::__1::forward<void (*)(WorkQueue<HTTPClosure>*, int)>(fp)(std::__1::forward<WorkQueue<HTTPClosure>*>(fp0), std::__1::forward<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4e89af)\r\n    #51 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-12/bin/../include/c++/v1/thread:280:5 (bitcoind+0x4e89af)\r\n    #52 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-12/bin/../include/c++/v1/thread:291:5 (bitcoind+0x4e89af)\r\n\r\n  Mutex M131785 (0x7b58000dff18) created at:\r\n    #0 pthread_mutex_init <null> (bitcoind+0x8ccbd)\r\n    #1 std::__1::recursive_mutex::recursive_mutex() <null> (libc++.so.1+0x48a93)\r\n    #2 CWallet::Create(interfaces::Chain&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<WalletDatabase, std::__1::default_delete<WalletDatabase> >, unsigned long, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:3854:49 (bitcoind+0x62f501)\r\n    #3 CreateWallet(interfaces::Chain&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, DatabaseOptions&, DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:295:39 (bitcoind+0x62d8de)\r\n    #4 createwallet()::$_35::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/rpcwallet.cpp:2770:39 (bitcoind+0x5c211d)\r\n    #5 decltype(std::__1::forward<createwallet()::$_35&>(fp)(std::__1::forward<RPCHelpMan const&>(fp0), std::__1::forward<JSONRPCRequest const&>(fp0))) std::__1::__invoke<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x5c211d)\r\n    #6 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x5c211d)\r\n    #7 std::__1::__function::__alloc_func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x5c211d)\r\n    #8 std::__1::__function::__func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x5c211d)\r\n    #9 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x77abb5)\r\n    #10 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x77abb5)\r\n    #11 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/util.cpp:538:26 (bitcoind+0x77abb5)\r\n    #12 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./rpc/server.h:110:91 (bitcoind+0x2f94ce)\r\n    #13 decltype(std::__1::forward<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2f94ce)\r\n    #14 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2f94ce)\r\n    #15 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2f94ce)\r\n    #16 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2f94ce)\r\n    #17 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x529592)\r\n    #18 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x529592)\r\n    #19 wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/interfaces.cpp:518:24 (bitcoind+0x529592)\r\n    #20 decltype(std::__1::forward<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x529592)\r\n    #21 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x529592)\r\n    #22 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x529592)\r\n    #23 std::__1::__function::__func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x529592)\r\n    #24 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x2389f6)\r\n    #25 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x2389f6)\r\n    #26 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/node/interfaces.cpp:398:24 (bitcoind+0x2389f6)\r\n    #27 decltype(std::__1::forward<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2389f6)\r\n    #28 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2389f6)\r\n    #29 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2389f6)\r\n    #30 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2389f6)\r\n    #31 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x3c0f51)\r\n    #32 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x3c0f51)\r\n    #33 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:480:20 (bitcoind+0x3c0f51)\r\n    #34 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:444:13 (bitcoind+0x3c0f51)\r\n    #35 CRPCTable::execute(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:464:13 (bitcoind+0x3c0a80)\r\n    #36 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:202:40 (bitcoind+0x4d6cf3)\r\n    #37 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:298:80 (bitcoind+0x4d6cf3)\r\n    #38 decltype(std::__1::forward<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(std::__1::forward<HTTPRequest*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4d6cf3)\r\n    #39 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x4d6cf3)\r\n    #40 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x4d6cf3)\r\n    #41 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x4d6cf3)\r\n    #42 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x4e5510)\r\n    #43 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x4e5510)\r\n    #44 HTTPWorkItem::operator()() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:49:9 (bitcoind+0x4e5510)\r\n    #45 WorkQueue<HTTPClosure>::Run() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:108:13 (bitcoind+0x4e8048)\r\n    #46 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:336:12 (bitcoind+0x4df7c0)\r\n    #47 decltype(std::__1::forward<void (*)(WorkQueue<HTTPClosure>*, int)>(fp)(std::__1::forward<WorkQueue<HTTPClosure>*>(fp0), std::__1::forward<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4e89af)\r\n    #48 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-12/bin/../include/c++/v1/thread:280:5 (bitcoind+0x4e89af)\r\n    #49 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-12/bin/../include/c++/v1/thread:291:5 (bitcoind+0x4e89af)\r\n\r\n  Mutex M131813 (0x7b5400031178) created at:\r\n    #0 pthread_mutex_init <null> (bitcoind+0x8ccbd)\r\n    #1 std::__1::recursive_mutex::recursive_mutex() <null> (libc++.so.1+0x48a93)\r\n    #2 CWallet::SetupLegacyScriptPubKeyMan() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:4473:61 (bitcoind+0x660432)\r\n    #3 CWallet::Create(interfaces::Chain&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<WalletDatabase, std::__1::default_delete<WalletDatabase> >, unsigned long, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:3891:29 (bitcoind+0x62f942)\r\n    #4 CreateWallet(interfaces::Chain&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, DatabaseOptions&, DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/wallet.cpp:295:39 (bitcoind+0x62d8de)\r\n    #5 createwallet()::$_35::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/rpcwallet.cpp:2770:39 (bitcoind+0x5c211d)\r\n    #6 decltype(std::__1::forward<createwallet()::$_35&>(fp)(std::__1::forward<RPCHelpMan const&>(fp0), std::__1::forward<JSONRPCRequest const&>(fp0))) std::__1::__invoke<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x5c211d)\r\n    #7 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&>(createwallet()::$_35&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x5c211d)\r\n    #8 std::__1::__function::__alloc_func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x5c211d)\r\n    #9 std::__1::__function::__func<createwallet()::$_35, std::__1::allocator<createwallet()::$_35>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x5c211d)\r\n    #10 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x77abb5)\r\n    #11 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x77abb5)\r\n    #12 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/util.cpp:538:26 (bitcoind+0x77abb5)\r\n    #13 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./rpc/server.h:110:91 (bitcoind+0x2f94ce)\r\n    #14 decltype(std::__1::forward<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2f94ce)\r\n    #15 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2f94ce)\r\n    #16 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2f94ce)\r\n    #17 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2f94ce)\r\n    #18 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x529592)\r\n    #19 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x529592)\r\n    #20 wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/interfaces.cpp:518:24 (bitcoind+0x529592)\r\n    #21 decltype(std::__1::forward<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x529592)\r\n    #22 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x529592)\r\n    #23 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x529592)\r\n    #24 std::__1::__function::__func<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x529592)\r\n    #25 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x2389f6)\r\n    #26 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x2389f6)\r\n    #27 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/node/interfaces.cpp:398:24 (bitcoind+0x2389f6)\r\n    #28 decltype(std::__1::forward<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(std::__1::forward<JSONRPCRequest const&>(fp0), std::__1::forward<UniValue&>(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x2389f6)\r\n    #29 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x2389f6)\r\n    #30 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x2389f6)\r\n    #31 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x2389f6)\r\n    #32 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x3c0f51)\r\n    #33 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x3c0f51)\r\n    #34 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:480:20 (bitcoind+0x3c0f51)\r\n    #35 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:444:13 (bitcoind+0x3c0f51)\r\n    #36 CRPCTable::execute(JSONRPCRequest const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:464:13 (bitcoind+0x3c0a80)\r\n    #37 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:202:40 (bitcoind+0x4d6cf3)\r\n    #38 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:298:80 (bitcoind+0x4d6cf3)\r\n    #39 decltype(std::__1::forward<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(std::__1::forward<HTTPRequest*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4d6cf3)\r\n    #40 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:317:16 (bitcoind+0x4d6cf3)\r\n    #41 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16 (bitcoind+0x4d6cf3)\r\n    #42 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12 (bitcoind+0x4d6cf3)\r\n    #43 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16 (bitcoind+0x4e5510)\r\n    #44 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12 (bitcoind+0x4e5510)\r\n    #45 HTTPWorkItem::operator()() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:49:9 (bitcoind+0x4e5510)\r\n    #46 WorkQueue<HTTPClosure>::Run() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:108:13 (bitcoind+0x4e8048)\r\n    #47 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:336:12 (bitcoind+0x4df7c0)\r\n    #48 decltype(std::__1::forward<void (*)(WorkQueue<HTTPClosure>*, int)>(fp)(std::__1::forward<WorkQueue<HTTPClosure>*>(fp0), std::__1::forward<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1 (bitcoind+0x4e89af)\r\n    #49 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-12/bin/../include/c++/v1/thread:280:5 (bitcoind+0x4e89af)\r\n    #50 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-12/bin/../include/c++/v1/thread:291:5 (bitcoind+0x4e89af)\r\n\r\n  Thread T13 'b-httpworker.3' (tid=469811, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x8b48b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-12/bin/../include/c++/v1/__threading_support:509:10 (bitcoind+0x4e8867)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&, void>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/thread:307:16 (bitcoind+0x4e8867)\r\n    #3 void std::__1::allocator<std::__1::thread>::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/memory:886:28 (bitcoind+0x4df49a)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread> >::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&, void>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/__memory/allocator_traits.h:288:13 (bitcoind+0x4df49a)\r\n    #5 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::__construct_one_at_end<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/vector:926:5 (bitcoind+0x4df49a)\r\n    #6 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/vector:1684:9 (bitcoind+0x4df49a)\r\n    #7 StartHTTPServer() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:428:31 (bitcoind+0x4df49a)\r\n    #8 AppInitServers(NodeContext&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:714:5 (bitcoind+0x13b6fb)\r\n    #9 AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1296:14 (bitcoind+0x13b6fb)\r\n    #10 AppInit(int, char**) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:227:43 (bitcoind+0x11f68e)\r\n    #11 main /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:262:13 (bitcoind+0x11f68e)\r\n\r\n  Thread T8 'b-scheduler' (tid=469801, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x8b48b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-12/bin/../include/c++/v1/__threading_support:509:10 (bitcoind+0x13b0f0)\r\n    #2 std::__1::thread::thread<AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5, void>(AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_5&&) /usr/lib/llvm-12/bin/../include/c++/v1/thread:307:16 (bitcoind+0x13b0f0)\r\n    #3 AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1269:40 (bitcoind+0x13b0f0)\r\n    #4 AppInit(int, char**) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:227:43 (bitcoind+0x11f68e)\r\n    #5 main /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:262:13 (bitcoind+0x11f68e)\r\n\r\n  Thread T12 'b-httpworker.2' (tid=469810, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x8b48b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-12/bin/../include/c++/v1/__threading_support:509:10 (bitcoind+0x4e8867)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&, void>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/thread:307:16 (bitcoind+0x4e8867)\r\n    #3 void std::__1::allocator<std::__1::thread>::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/memory:886:28 (bitcoind+0x4e834e)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread> >::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&, void>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/__memory/allocator_traits.h:288:13 (bitcoind+0x4e834e)\r\n    #5 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::__emplace_back_slow_path<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/vector:1667:5 (bitcoind+0x4e834e)\r\n    #6 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/lib/llvm-12/bin/../include/c++/v1/vector:1687:9 (bitcoind+0x4df438)\r\n    #7 StartHTTPServer() /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:428:31 (bitcoind+0x4df438)\r\n    #8 AppInitServers(NodeContext&) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:714:5 (bitcoind+0x13b6fb)\r\n    #9 AppInitMain(NodeContext&, interfaces::BlockAndHeaderTipInfo*) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1296:14 (bitcoind+0x13b6fb)\r\n    #10 AppInit(int, char**) /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:227:43 (bitcoind+0x11f68e)\r\n    #11 main /bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind.cpp:262:13 (bitcoind+0x11f68e)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0x9554e) in memcpy\r\n==================\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-820137854",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "commented",
      "id": 820141285,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDE0MTI4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820141285",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T06:06:30Z",
      "updated_at": "2021-04-15T06:06:30Z",
      "author_association": "MEMBER",
      "body": "Thanks @MarcoFalke for testing!\r\n\r\nClosing.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-820141285",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "closed",
      "id": 4597257236,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDU5NzI1NzIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4597257236",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T06:06:30Z"
    },
    {
      "event": "mentioned",
      "id": 4597257245,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDU5NzI1NzI0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4597257245",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T06:06:31Z"
    },
    {
      "event": "subscribed",
      "id": 4597257246,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1OTcyNTcyNDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4597257246",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T06:06:31Z"
    },
    {
      "event": "commented",
      "id": 820217548,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDIxNzU0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820217548",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T08:10:16Z",
      "updated_at": "2021-04-15T08:10:16Z",
      "author_association": "MEMBER",
      "body": "Maybe I was doing something wrong, because the ci did seem to pass on all commits",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-820217548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "commented",
      "id": 820218513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDIxODUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820218513",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-15T08:11:42Z",
      "updated_at": "2021-04-15T08:11:42Z",
      "author_association": "MEMBER",
      "body": "Ah, nvm. It failed on epoll_ctl https://cirrus-ci.com/task/6612431473475584?logs=ci#L3559",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#issuecomment-820218513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21680"
    },
    {
      "event": "locked",
      "id": 7199120806,
      "node_id": "LOE_lADOABII584zIzuYzwAAAAGtGd2m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199120806",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:20:23Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613301084",
      "pull_request_review_id": 635693071,
      "id": 613301084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzMwMTA4NA==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 29,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it help to build depends with instrumentation?",
      "created_at": "2021-04-14T14:31:14Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613301084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613301084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613302755",
      "pull_request_review_id": 635695393,
      "id": 613302755,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzMwMjc1NQ==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 29,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613301084,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good question. Did not try it yet.",
      "created_at": "2021-04-14T14:33:09Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613302755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613302755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613307171",
      "pull_request_review_id": 635701297,
      "id": 613307171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzMwNzE3MQ==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 29,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613301084,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Would it help to build depends with instrumentation?\r\n\r\nWe could end with suppressions in that libraries. It is very plausible for the old Berkeley DB.\r\nI don't think we really want it, no?",
      "created_at": "2021-04-14T14:38:09Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613307171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613307171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613315501",
      "pull_request_review_id": 635712580,
      "id": 613315501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzMxNTUwMQ==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 29,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613301084,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think eventually we don't want libraries that are broken, but we can look into this after bdb is removed",
      "created_at": "2021-04-14T14:47:27Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613315501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613315501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613361675",
      "pull_request_review_id": 635774653,
      "id": 613361675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM2MTY3NQ==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.\n+called_from_lib:libdb\n+called_from_lib:libevent",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 31,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe still remove if it is not needed?",
      "created_at": "2021-04-14T15:40:14Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613361675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613361675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613364048",
      "pull_request_review_id": 635777799,
      "id": 613364048,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM2NDA0OA==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.\n+called_from_lib:libdb\n+called_from_lib:libevent",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 31,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613361675,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok. I'll push an updated branch after the current one finishes its CI jobs (to be sure in it).",
      "created_at": "2021-04-14T15:43:01Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613364048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613364048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613398821",
      "pull_request_review_id": 635824282,
      "id": 613398821,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM5ODgyMQ==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.\n+called_from_lib:libdb\n+called_from_lib:libevent",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 31,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613361675,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It didn't pass locally, fyi",
      "created_at": "2021-04-14T16:27:52Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613398821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613398821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613400044",
      "pull_request_review_id": 635825961,
      "id": 613400044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzQwMDA0NA==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.\n+called_from_lib:libdb\n+called_from_lib:libevent",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 31,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613361675,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It didn't pass locally, fyi\r\n\r\nThe current branch or without `called_from_lib:libevent`?",
      "created_at": "2021-04-14T16:29:35Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613400044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613400044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613446572",
      "pull_request_review_id": 635888054,
      "id": 613446572,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzQ0NjU3Mg==",
      "diff_hunk": "@@ -39,5 +30,6 @@ race:libzmq\n # https://github.com/bitcoin/bitcoin/issues/20618\n race:CZMQAbstractPublishNotifier::SendZmqMessage\n \n-# https://github.com/bitcoin/bitcoin/pull/20218, https://github.com/bitcoin/bitcoin/pull/20745\n-race:epoll_ctl\n+# Uninstrumented external libraries.\n+called_from_lib:libdb\n+called_from_lib:libevent",
      "path": "test/sanitizer_suppressions/tsan",
      "position": null,
      "original_position": 31,
      "commit_id": "83507dd1729cdc10c5f57725c544a462614c2568",
      "original_commit_id": "89cfa592df3f8c27ee8c8ebd81afcaa45d3c60ca",
      "in_reply_to_id": 613361675,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The branch as is, IIRC",
      "created_at": "2021-04-14T17:37:20Z",
      "updated_at": "2021-04-14T21:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21680#discussion_r613446572",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613446572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21680"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    }
  ]
}