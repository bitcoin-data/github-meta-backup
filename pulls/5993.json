{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993",
    "id": 33034411,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMzQ0MTE=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5993",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/5993.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/5993.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5993",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5993/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
    "number": 5993,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Simplify mining code (rerun of #5957)",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This time without regtest mining slowdown.\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2015-04-10T10:17:51Z",
    "updated_at": "2021-09-08T12:01:03Z",
    "closed_at": "2015-05-06T10:40:55Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "93ae18f3a554ed9ad7200b62c19da0b42d07695b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "sipa:simplehash",
      "ref": "simplehash",
      "sha": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c8a13501196fc79a3f728683b74f9d586dda46c1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 83,
    "deletions": 101,
    "changed_files": 4,
    "commits": 1,
    "review_comments": 19,
    "comments": 1
  },
  "events": [
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NDE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NDU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NDk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NTU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTE5Y2ZhODgxZDdjNWZiMzBkZmVmMjI3OTZmZDEzYTdlZWUyYTlm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "tree": {
        "sha": "f747c50efb8bb5ea06f1d77a559e58a196b9d467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f747c50efb8bb5ea06f1d77a559e58a196b9d467"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8a13501196fc79a3f728683b74f9d586dda46c1",
          "sha": "c8a13501196fc79a3f728683b74f9d586dda46c1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8a13501196fc79a3f728683b74f9d586dda46c1"
        }
      ],
      "message": "Simplify mining code",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-04-10T10:50:35Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-04-10T09:10:04Z"
      },
      "sha": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 278001423,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc4MDAxNDIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/278001423",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-10T10:51:01Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE2MTc4NTg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "labeled",
      "id": 297975376,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5Nzk3NTM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/297975376",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-06T08:03:54Z",
      "label": {
        "name": "Improvement",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 99414601,
      "node_id": "MDEyOklzc3VlQ29tbWVudDk5NDE0NjAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99414601",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-06T10:40:55Z",
      "updated_at": "2015-05-06T10:40:55Z",
      "author_association": "MEMBER",
      "body": "Closing this until some other miner/wallet things are in.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#issuecomment-99414601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5993"
    },
    {
      "event": "closed",
      "id": 298092426,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mjk4MDkyNDI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/298092426",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-06T10:40:55Z"
    },
    {
      "event": "locked",
      "id": 5271837119,
      "node_id": "LOE_lADOABII584EBukJzwAAAAE6Odm_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271837119",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:01:03Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135098",
      "pull_request_review_id": null,
      "id": 28135098,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1MDk4",
      "diff_hunk": "@@ -81,13 +81,10 @@ class TxPriorityCompare\n void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n {\n     pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-\n-    // Updating time can change work required on testnet:\n-    if (Params().AllowMinDifficultyBlocks())\n-        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, Params().GetConsensus());\n+    pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, Params().GetConsensus());\n }\n \n-CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n+CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn, CBlockIndex*& pindexPrev)",
      "path": "src/miner.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Given that you're changing the function, can you also pass const CChainParams& params ? \n",
      "created_at": "2015-04-10T10:29:58Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135210",
      "pull_request_review_id": null,
      "id": 28135210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1MjEw",
      "diff_hunk": "@@ -435,6 +421,36 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool MineBlock(CReserveKey& reservekey, uint256& hash)\n+{\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev = NULL;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                CValidationState state;\n+                if (ProcessNewBlock(state, NULL, pblock)) {\n+                    hash = pblock->GetHash();",
      "path": "src/miner.cpp",
      "position": 127,
      "original_position": 118,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it really that important to pass uint256& hash ? Maybe better to pass CBlock *pblock directly is cleaner?\n",
      "created_at": "2015-04-10T10:32:34Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 443,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135321",
      "pull_request_review_id": null,
      "id": 28135321,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1MzIx",
      "diff_hunk": "@@ -435,6 +421,36 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool MineBlock(CReserveKey& reservekey, uint256& hash)\n+{\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev = NULL;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                CValidationState state;\n+                if (ProcessNewBlock(state, NULL, pblock)) {\n+                    hash = pblock->GetHash();",
      "path": "src/miner.cpp",
      "position": 127,
      "original_position": 118,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not worth copying a whole block, imho...\n",
      "created_at": "2015-04-10T10:35:14Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 443,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135398",
      "pull_request_review_id": null,
      "id": 28135398,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1Mzk4",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)",
      "path": "src/miner.cpp",
      "position": 198,
      "original_position": 189,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The problem wasn't accesing the nonce inside scanhash but outside of it, so passing `int64_t nMaxIter` doesn't solve it. It is this while (and the one inside mineblock that should turn in to fors). In the case of regtest, updating the extra nonce every time scanhash fails is probably good enough, as in https://github.com/bitcoin/bitcoin/pull/4793/files#diff-c2c990fee1c3381462640e80ae7db0d0R156\n",
      "created_at": "2015-04-10T10:37:34Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135436",
      "pull_request_review_id": null,
      "id": 28135436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1NDM2",
      "diff_hunk": "@@ -364,46 +360,36 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n //\n \n //\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// ScanHash iterates up to nMaxIter nonces in order to find a block with\n+// valid proof of work. It returns false after that.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, CBlockIndex *pindexPrev, int64_t nMaxIter)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n+    UpdateTime(pblock, pindexPrev);\n \n-    while (true) {\n-        nNonce++;\n+    uint256 hash;\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+    while (nMaxIter--) {\n+        pblock->nNonce++;\n+        hash = pblock->GetHash();\n \n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((uint16_t*)phash)[15] == 0)\n+        if (UintToArith256(hash) <= hashTarget)",
      "path": "src/miner.cpp",
      "position": 79,
      "original_position": 70,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you replace this with CheckProofOfWork directly?\nMaybe with `if (((uint16_t*)&hash)[15] == 0 && CheckProofOfWork(pblock->GetHash(), pblock->nBits, params))` as in https://github.com/bitcoin/bitcoin/pull/4793/files#diff-4a59b408ad3778278c3aeffa7da33c3cR384 ?\n",
      "created_at": "2015-04-10T10:38:38Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135459",
      "pull_request_review_id": null,
      "id": 28135459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1NDU5",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)\n                     break;\n                 if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n                     break;\n                 if (pindexPrev != chainActive.Tip())\n                     break;\n-\n-                // Update nTime every few seconds\n-                UpdateTime(pblock, pindexPrev);",
      "path": "src/miner.cpp",
      "position": 206,
      "original_position": 197,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems you're not moving update time anywhere, just removing it.\n",
      "created_at": "2015-04-10T10:39:16Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 519,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135746",
      "pull_request_review_id": null,
      "id": 28135746,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1NzQ2",
      "diff_hunk": "@@ -435,6 +421,36 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool MineBlock(CReserveKey& reservekey, uint256& hash)\n+{\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev = NULL;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                CValidationState state;\n+                if (ProcessNewBlock(state, NULL, pblock)) {\n+                    hash = pblock->GetHash();",
      "path": "src/miner.cpp",
      "position": 127,
      "original_position": 118,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not a whole block, it's a pointer, no?\n",
      "created_at": "2015-04-10T10:42:45Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 443,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135747",
      "pull_request_review_id": null,
      "id": 28135747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1NzQ3",
      "diff_hunk": "@@ -364,46 +360,36 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n //\n \n //\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// ScanHash iterates up to nMaxIter nonces in order to find a block with\n+// valid proof of work. It returns false after that.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, CBlockIndex *pindexPrev, int64_t nMaxIter)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n+    UpdateTime(pblock, pindexPrev);\n \n-    while (true) {\n-        nNonce++;\n+    uint256 hash;\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+    while (nMaxIter--) {\n+        pblock->nNonce++;\n+        hash = pblock->GetHash();\n \n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((uint16_t*)phash)[15] == 0)\n+        if (UintToArith256(hash) <= hashTarget)",
      "path": "src/miner.cpp",
      "position": 79,
      "original_position": 70,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No. The direct hash check makes regtest mining very slow, and calling checkproofofwork directly would cause 1000s of error lines in testnet mining.\n\nMy intent was eventually moving this function to pow.cpp, so it's fine to have it access details of the pow construction.\n",
      "created_at": "2015-04-10T10:42:46Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135957",
      "pull_request_review_id": null,
      "id": 28135957,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1OTU3",
      "diff_hunk": "@@ -364,46 +360,36 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n //\n \n //\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// ScanHash iterates up to nMaxIter nonces in order to find a block with\n+// valid proof of work. It returns false after that.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, CBlockIndex *pindexPrev, int64_t nMaxIter)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n+    UpdateTime(pblock, pindexPrev);\n \n-    while (true) {\n-        nNonce++;\n+    uint256 hash;\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+    while (nMaxIter--) {\n+        pblock->nNonce++;\n+        hash = pblock->GetHash();\n \n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((uint16_t*)phash)[15] == 0)\n+        if (UintToArith256(hash) <= hashTarget)",
      "path": "src/miner.cpp",
      "position": 79,
      "original_position": 70,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, it can be replaced once the error logs are removed...\nIn anycase, I was planning to move ScanHash/GenerateProof to pow too, but I've changed my mind since the other pow functions will move to consensus and this is not part of consensus.\nMy current plan is to remove pow, moving most of it to consensus, a logging version of GetNextWork to miner and getBlockProof to chain. Anyway, things for other place to discuss\n",
      "created_at": "2015-04-10T10:47:18Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135987",
      "pull_request_review_id": null,
      "id": 28135987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1OTg3",
      "diff_hunk": "@@ -435,6 +421,36 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool MineBlock(CReserveKey& reservekey, uint256& hash)\n+{\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev = NULL;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                CValidationState state;\n+                if (ProcessNewBlock(state, NULL, pblock)) {\n+                    hash = pblock->GetHash();",
      "path": "src/miner.cpp",
      "position": 127,
      "original_position": 118,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CreateNewBlock builds a new CBlock object. If we'd want to return it in a passed pointer, you'd have to copy it there.\n\nAlternatively, we could return a CBlock\\* variable in a CBlock*& argument, but why bother? All we need is the hash...\n",
      "created_at": "2015-04-10T10:47:57Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28135987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 443,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136031",
      "pull_request_review_id": null,
      "id": 28136031,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM2MDMx",
      "diff_hunk": "@@ -364,46 +360,36 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n //\n \n //\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// ScanHash iterates up to nMaxIter nonces in order to find a block with\n+// valid proof of work. It returns false after that.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, CBlockIndex *pindexPrev, int64_t nMaxIter)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n+    UpdateTime(pblock, pindexPrev);\n \n-    while (true) {\n-        nNonce++;\n+    uint256 hash;\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+    while (nMaxIter--) {\n+        pblock->nNonce++;\n+        hash = pblock->GetHash();\n \n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((uint16_t*)phash)[15] == 0)\n+        if (UintToArith256(hash) <= hashTarget)",
      "path": "src/miner.cpp",
      "position": 79,
      "original_position": 70,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still, can you pass a `const Consensus::Params& params` parameter for when CheckProofOfWork is ready?\n",
      "created_at": "2015-04-10T10:48:54Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136082",
      "pull_request_review_id": null,
      "id": 28136082,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM2MDgy",
      "diff_hunk": "@@ -364,46 +360,36 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n //\n \n //\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// ScanHash iterates up to nMaxIter nonces in order to find a block with\n+// valid proof of work. It returns false after that.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, CBlockIndex *pindexPrev, int64_t nMaxIter)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n+    UpdateTime(pblock, pindexPrev);\n \n-    while (true) {\n-        nNonce++;\n+    uint256 hash;\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+    while (nMaxIter--) {\n+        pblock->nNonce++;\n+        hash = pblock->GetHash();\n \n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((uint16_t*)phash)[15] == 0)\n+        if (UintToArith256(hash) <= hashTarget)",
      "path": "src/miner.cpp",
      "position": 79,
      "original_position": 70,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or maybe just remove the log errors of CheckProofOfWork in this PR\n",
      "created_at": "2015-04-10T10:49:47Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136082",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136101",
      "pull_request_review_id": null,
      "id": 28136101,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM2MTAx",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)",
      "path": "src/miner.cpp",
      "position": 198,
      "original_position": 189,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree it doesn't solve it. I've tried other strategies, but didn't find anything I could reasonably include in what this PR is trying to accomplish. Feel free to improve things in your PR.\n",
      "created_at": "2015-04-10T10:50:11Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136130",
      "pull_request_review_id": null,
      "id": 28136130,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM2MTMw",
      "diff_hunk": "@@ -81,13 +81,10 @@ class TxPriorityCompare\n void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n {\n     pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-\n-    // Updating time can change work required on testnet:\n-    if (Params().AllowMinDifficultyBlocks())\n-        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, Params().GetConsensus());\n+    pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, Params().GetConsensus());\n }\n \n-CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n+CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn, CBlockIndex*& pindexPrev)",
      "path": "src/miner.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.\n",
      "created_at": "2015-04-10T10:50:52Z",
      "updated_at": "2015-04-10T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136784",
      "pull_request_review_id": null,
      "id": 28136784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM2Nzg0",
      "diff_hunk": "@@ -435,6 +421,36 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool MineBlock(CReserveKey& reservekey, uint256& hash)\n+{\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev = NULL;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                CValidationState state;\n+                if (ProcessNewBlock(state, NULL, pblock)) {\n+                    hash = pblock->GetHash();",
      "path": "src/miner.cpp",
      "position": 127,
      "original_position": 118,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, can we pass ChainParams to the newly created MineBlock() as well (CreateNewBlockWithKey is taking it).\n",
      "created_at": "2015-04-10T11:04:31Z",
      "updated_at": "2015-04-10T11:06:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136784",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28136784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 443,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137017",
      "pull_request_review_id": null,
      "id": 28137017,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM3MDE3",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)",
      "path": "src/miner.cpp",
      "position": 198,
      "original_position": 189,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well, in any case I don't think the new int64_t nMaxIter param in ScanHash is worth it (as dicussed it will be useful for later that it takes Consensus::Params though).\n",
      "created_at": "2015-04-10T11:07:30Z",
      "updated_at": "2015-04-10T11:07:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137179",
      "pull_request_review_id": null,
      "id": 28137179,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM3MTc5",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)\n                     break;\n                 if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n                     break;\n                 if (pindexPrev != chainActive.Tip())\n                     break;\n-\n-                // Update nTime every few seconds\n-                UpdateTime(pblock, pindexPrev);",
      "path": "src/miner.cpp",
      "position": 206,
      "original_position": 197,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You have to keep it here and also put it on MineBlock I believe.\nMaybe this is too much to ask but it taking Consensus::Params and replacing `Params().AllowMinDifficultyBlocks()` with `params.fPowAllowMinDifficultyBlocks` as in https://github.com/bitcoin/bitcoin/pull/5968/files#diff-4a59b408ad3778278c3aeffa7da33c3cR80 would be very nice as well.\n",
      "created_at": "2015-04-10T11:10:55Z",
      "updated_at": "2015-04-10T11:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137179",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 519,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137399",
      "pull_request_review_id": null,
      "id": 28137399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM3Mzk5",
      "diff_hunk": "@@ -476,52 +492,28 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n+                if (ScanHash(pblock, pindexPrev, 0x1000)) {\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    LogPrintf(\"BitcoinMiner:\\n\");\n+                    LogPrintf(\"proof-of-work found  \\n\");\n+                    ProcessBlockFound(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                        break;\n-                    }\n+                    break;\n                 }\n-\n-                // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n+\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)\n                     break;\n                 if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n                     break;\n                 if (pindexPrev != chainActive.Tip())\n                     break;\n-\n-                // Update nTime every few seconds\n-                UpdateTime(pblock, pindexPrev);",
      "path": "src/miner.cpp",
      "position": 206,
      "original_position": 197,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "8ea15d0154c63b622c09d20dc2b3f6d517624f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, sorry, I didn't see that you moved it to ScanHash, that's actually better if regtest is going to use it as well.\nBut why are you getting rid of the `Params().AllowMinDifficultyBlocks()` check inside UpdateTime?\n",
      "created_at": "2015-04-10T11:16:44Z",
      "updated_at": "2015-04-10T11:17:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 519,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137558",
      "pull_request_review_id": null,
      "id": 28137558,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM3NTU4",
      "diff_hunk": "@@ -57,12 +57,13 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     CMutableTransaction tx,tx2;\n     CScript script;\n     uint256 hash;\n+    CBlockIndex *pindexPrev = NULL;\n \n     LOCK(cs_main);\n     Checkpoints::fEnabled = false;\n \n     // Simple block creation, nothing special yet:\n-    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey, pindexPrev, Params()));",
      "path": "src/test/miner_tests.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "original_commit_id": "a119cfa881d7c5fb30dfef22796fd13a7eee2a9f",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for doing this, but if you do it, you should do it right. That is, with \n\n```\nconst CChainParams& params = Params(CBaseChainParams::MAIN);\n```\n\nat the beginning of the test case as in https://github.com/bitcoin/bitcoin/pull/5970/files#diff-5c64500485fda76388a86c95c0059585R53 \n",
      "created_at": "2015-04-10T11:21:23Z",
      "updated_at": "2015-04-10T11:21:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137558",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28137558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}