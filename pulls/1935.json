{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935",
    "id": 2655311,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY1NTMxMQ==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1935",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/1935.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/1935.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1935",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1935/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
    "number": 1935,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add script to contrib/ that verifies authenticity of binaries hosted on SourceForge",
    "user": {
      "login": "runeksvendsen",
      "id": 1069247,
      "node_id": "MDQ6VXNlcjEwNjkyNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runeksvendsen",
      "html_url": "https://github.com/runeksvendsen",
      "followers_url": "https://api.github.com/users/runeksvendsen/followers",
      "following_url": "https://api.github.com/users/runeksvendsen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/runeksvendsen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/runeksvendsen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
      "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
      "repos_url": "https://api.github.com/users/runeksvendsen/repos",
      "events_url": "https://api.github.com/users/runeksvendsen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This script downloads the SHA256SUMS.asc file from SourceForge for a given release (version can be specified on the command line), which contains Gavin's signature of the hashes of the Bitcoin binaries. It verifies that the signature is valid, downloads the files specified in the signature file, and checks that the hashes of these files match with those signed by Gavin.\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2012-10-15T20:48:37Z",
    "updated_at": "2021-09-08T10:16:42Z",
    "closed_at": "2012-10-29T19:59:28Z",
    "mergeable_state": "unknown",
    "merged_at": "2012-10-29T19:59:28Z",
    "merge_commit_sha": "0dfde27c4d09a69561ac8f46390b7d4565067f09",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "runeksvendsen:master",
      "ref": "master",
      "sha": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "user": {
        "login": "runeksvendsen",
        "id": 1069247,
        "node_id": "MDQ6VXNlcjEwNjkyNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/runeksvendsen",
        "html_url": "https://github.com/runeksvendsen",
        "followers_url": "https://api.github.com/users/runeksvendsen/followers",
        "following_url": "https://api.github.com/users/runeksvendsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/runeksvendsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/runeksvendsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
        "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
        "repos_url": "https://api.github.com/users/runeksvendsen/repos",
        "events_url": "https://api.github.com/users/runeksvendsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 5093063,
        "node_id": "MDEwOlJlcG9zaXRvcnk1MDkzMDYz",
        "name": "bitcoin",
        "full_name": "runeksvendsen/bitcoin",
        "owner": {
          "login": "runeksvendsen",
          "id": 1069247,
          "node_id": "MDQ6VXNlcjEwNjkyNDc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/runeksvendsen",
          "html_url": "https://github.com/runeksvendsen",
          "followers_url": "https://api.github.com/users/runeksvendsen/followers",
          "following_url": "https://api.github.com/users/runeksvendsen/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/runeksvendsen/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/runeksvendsen/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
          "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
          "repos_url": "https://api.github.com/users/runeksvendsen/repos",
          "events_url": "https://api.github.com/users/runeksvendsen/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/runeksvendsen/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/runeksvendsen/bitcoin",
        "archive_url": "https://api.github.com/repos/runeksvendsen/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/runeksvendsen/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/runeksvendsen/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/runeksvendsen/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/runeksvendsen/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/runeksvendsen/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/runeksvendsen/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/runeksvendsen/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/runeksvendsen/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/runeksvendsen/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/runeksvendsen/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/runeksvendsen/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/runeksvendsen/bitcoin/events",
        "forks_url": "https://api.github.com/repos/runeksvendsen/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/runeksvendsen/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/runeksvendsen/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/runeksvendsen/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/runeksvendsen/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/runeksvendsen/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/runeksvendsen/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/runeksvendsen/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/runeksvendsen/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/runeksvendsen/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/runeksvendsen/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/runeksvendsen/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/runeksvendsen/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/runeksvendsen/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/runeksvendsen/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/runeksvendsen/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:runeksvendsen/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/runeksvendsen/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/runeksvendsen/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/runeksvendsen/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/runeksvendsen/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/runeksvendsen/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/runeksvendsen/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/runeksvendsen/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/runeksvendsen/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/runeksvendsen/bitcoin/hooks",
        "svn_url": "https://github.com/runeksvendsen/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 29323,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2014-06-25T12:07:38Z",
        "created_at": "2012-07-18T07:33:37Z",
        "updated_at": "2018-08-21T18:58:36Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "485d667748b776a1932e3e14dc1b9dfe2ba841d0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 119,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 6,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTkxZWEwYzBjMmZlYWQ2MGJmZTlhNTMxNTU4Y2JlMWM1NjIzNDZl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "tree": {
        "sha": "82903920a57b6eabd1a5097c2b66317efacf250b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82903920a57b6eabd1a5097c2b66317efacf250b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/485d667748b776a1932e3e14dc1b9dfe2ba841d0",
          "sha": "485d667748b776a1932e3e14dc1b9dfe2ba841d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/485d667748b776a1932e3e14dc1b9dfe2ba841d0"
        }
      ],
      "message": "Added script that verifies authenticity of binaries on SourceForge",
      "committer": {
        "name": "Rune K. Svendsen",
        "email": "runesvend@gmail.com",
        "date": "2012-10-15T20:44:39Z"
      },
      "author": {
        "name": "Rune K. Svendsen",
        "email": "runesvend@gmail.com",
        "date": "2012-10-15T20:44:39Z"
      },
      "sha": "de91ea0c0c2fead60bfe9a531558cbe1c562346e"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzYxMTk5MDp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "mentioned",
      "id": 26980150,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjY5ODAxNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26980150",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-15T23:44:35Z"
    },
    {
      "event": "subscribed",
      "id": 26980151,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2OTgwMTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26980151",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-15T23:44:35Z"
    },
    {
      "event": "commented",
      "id": 9589625,
      "node_id": "MDEyOklzc3VlQ29tbWVudDk1ODk2MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9589625",
      "actor": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-19T04:33:46Z",
      "updated_at": "2012-10-19T04:33:46Z",
      "author_association": "NONE",
      "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/de91ea0c0c2fead60bfe9a531558cbe1c562346e for binaries and test log.\n",
      "user": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#issuecomment-9589625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1935"
    },
    {
      "event": "referenced",
      "id": 28054964,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI4MDU0OTY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/28054964",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a77bcaddbfb251371ebb28b0cf17c858953e2276",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a77bcaddbfb251371ebb28b0cf17c858953e2276",
      "created_at": "2012-10-29T19:59:28Z"
    },
    {
      "event": "merged",
      "id": 28054966,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjgwNTQ5NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/28054966",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a77bcaddbfb251371ebb28b0cf17c858953e2276",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a77bcaddbfb251371ebb28b0cf17c858953e2276",
      "created_at": "2012-10-29T19:59:28Z"
    },
    {
      "event": "closed",
      "id": 28054967,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjgwNTQ5Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/28054967",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-29T19:59:28Z"
    },
    {
      "event": "referenced",
      "id": 103596537,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEwMzU5NjUzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/103596537",
      "actor": {
        "login": "laudney",
        "id": 106273,
        "node_id": "MDQ6VXNlcjEwNjI3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/106273?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laudney",
        "html_url": "https://github.com/laudney",
        "followers_url": "https://api.github.com/users/laudney/followers",
        "following_url": "https://api.github.com/users/laudney/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laudney/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laudney/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laudney/subscriptions",
        "organizations_url": "https://api.github.com/users/laudney/orgs",
        "repos_url": "https://api.github.com/users/laudney/repos",
        "events_url": "https://api.github.com/users/laudney/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laudney/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eb4a5c2cbd17da8266d9c79e560ddbb29a4e22db",
      "commit_url": "https://api.github.com/repos/reddcoin-project/reddcoin/commits/eb4a5c2cbd17da8266d9c79e560ddbb29a4e22db",
      "created_at": "2014-03-19T19:53:57Z"
    },
    {
      "event": "referenced",
      "id": 4076010002,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNzYwMTAwMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4076010002",
      "actor": {
        "login": "KolbyML",
        "id": 31669092,
        "node_id": "MDQ6VXNlcjMxNjY5MDky",
        "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KolbyML",
        "html_url": "https://github.com/KolbyML",
        "followers_url": "https://api.github.com/users/KolbyML/followers",
        "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
        "organizations_url": "https://api.github.com/users/KolbyML/orgs",
        "repos_url": "https://api.github.com/users/KolbyML/repos",
        "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KolbyML/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "47916129bc086f33a58d1628027faff464ca437c",
      "commit_url": "https://api.github.com/repos/KolbyML/bitcoin/commits/47916129bc086f33a58d1628027faff464ca437c",
      "created_at": "2020-12-05T20:50:52Z"
    },
    {
      "event": "locked",
      "id": 5271309350,
      "node_id": "LOE_lADOABII584AdAxizwAAAAE6Mcwm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271309350",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:16:42Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847335",
      "pull_request_review_id": null,
      "id": 1847335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDczMzU=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not all releases are signed by Gavin (notably stable/backport releases are not), and users probably shouldn't be expected to setup the key themselves anyway. There are a bunch of PGP keys in git already for verifying against - any way to use those easily?\n",
      "created_at": "2012-10-15T21:06:29Z",
      "updated_at": "2012-10-15T21:06:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1847335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1848136",
      "pull_request_review_id": null,
      "id": 1848136,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDgxMzY=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "runeksvendsen",
        "id": 1069247,
        "node_id": "MDQ6VXNlcjEwNjkyNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/runeksvendsen",
        "html_url": "https://github.com/runeksvendsen",
        "followers_url": "https://api.github.com/users/runeksvendsen/followers",
        "following_url": "https://api.github.com/users/runeksvendsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/runeksvendsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/runeksvendsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
        "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
        "repos_url": "https://api.github.com/users/runeksvendsen/repos",
        "events_url": "https://api.github.com/users/runeksvendsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0.7.0 is signed by Gavin. Is that not a stable release?\nI considered including installation of the key in the script, but I figured it was preferable to let the users install these by themselves. But now that you point it out, I'm not sure why the script shouldn't just install if it reaches the line above.\n\nWhere are those PGP keys in git that you mention? Also, I'd have to know who signs what with which keys in order to know how to use them.\n\nIt would be better if all the heavily involved developers sign the executables. That way it'd be even harder for an attacker to somehow get past this (by getting hold of Gavin's key, for example).\n",
      "created_at": "2012-10-15T22:10:28Z",
      "updated_at": "2012-10-15T22:10:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1848136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1848136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1848920",
      "pull_request_review_id": null,
      "id": 1848920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDg5MjA=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0.7.0 is a first-time stable release: it's built off master, not a stable branch.\n\nI wouldn't suggest touching the user's PGP setup, but verifying without touching it. If GPG really needs to keep keys somewhere, ~/.bitcoin/.gnupg or similar makes sense.\n\ncontrib/gitian-downloader contains PGP keys. There's also a git repository here on GitHub with signatures of multiple developers for most releases which would be better to use than the SHA256SUMS file (which can only have one signature).\n",
      "created_at": "2012-10-15T23:21:27Z",
      "updated_at": "2012-10-15T23:21:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1848920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1848920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849014",
      "pull_request_review_id": null,
      "id": 1849014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDkwMTQ=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "... but we don't want Runek to end up reinventing gitian-downloader, and I hate making 'perfect the enemy of the good'.\n\nSo I vote this gets pulled as-is, because it is much better than the nothing we have now.\n",
      "created_at": "2012-10-15T23:32:28Z",
      "updated_at": "2012-10-15T23:32:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1849014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849040",
      "pull_request_review_id": null,
      "id": 1849040,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDkwNDA=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "runeksvendsen",
        "id": 1069247,
        "node_id": "MDQ6VXNlcjEwNjkyNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/runeksvendsen",
        "html_url": "https://github.com/runeksvendsen",
        "followers_url": "https://api.github.com/users/runeksvendsen/followers",
        "following_url": "https://api.github.com/users/runeksvendsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/runeksvendsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/runeksvendsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
        "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
        "repos_url": "https://api.github.com/users/runeksvendsen/repos",
        "events_url": "https://api.github.com/users/runeksvendsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I wouldn't suggest touching the user's PGP setup, but verifying without touching it. If GPG really needs to keep keys somewhere, ~/.bitcoin/.gnupg or similar makes sense.\n\nOK. Then I misunderstood you. So you're saying the script should pull in a public key from a remote location and use that to verify? That makes sense.\nThis would create another point of attack though. I figured the best way was to let the users who run the script store the keys themselves, so these can't be modified easily by an adversary.\n\n> contrib/gitian-downloader contains PGP keys. There's also a git repository here on GitHub with signatures of multiple developers for most releases which would be better to use than the SHA256SUMS file (which can only have one signature).\n\nThe threat that this script tries to mitigate is that of an adversary replacing the binaries on SourceForge (I made it after reading this thread: https://bitcointalk.org/index.php?topic=113018.0). So the devs in question need to sign the binaries that are linked to on bitcoin.org. Is this the case wrt. to the git repo you're referencing?\nAs far as I can see, this is not what is signed in this repo at least: https://github.com/bitcoin/gitian.sigs/ - is this the repository you're talking about?\n",
      "created_at": "2012-10-15T23:35:09Z",
      "updated_at": "2012-10-15T23:35:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1849040",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849114",
      "pull_request_review_id": null,
      "id": 1849114,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDkxMTQ=",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"",
      "path": "contrib/verifysfbinaries/verify.sh",
      "position": 85,
      "original_position": 85,
      "commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "original_commit_id": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, since this script is going into the git repository, it should be able to assume it has the PGP keys in that directory already. I just mean touching the user's personal PGP key library is probably a bad idea.\n\nhttps://github.com/bitcoin/gitian.sigs should match the binaries on SF: the installers as-is, and the contents of the ZIP files and tarballs.\n\n@gavinandresen ACK, you're right this would probably end up equivalent and doesn't do any harm to pull as-is.\n",
      "created_at": "2012-10-15T23:44:35Z",
      "updated_at": "2012-10-15T23:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1935#discussion_r1849114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1849114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1935"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}