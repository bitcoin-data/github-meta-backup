{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203",
    "id": 430353809,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMwMzUzODA5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19203",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19203.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19203.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/366e3e1f89d99c62b548087384487b62fd602e17",
    "number": 19203,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket.",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add [regression fuzz harness](https://twitter.com/kayseesee/status/1205287895923212289) for CVE-2017-18350. This fuzzing harness would have found CVE-2017-18350 within a minute of fuzzing :)\r\n\r\nSee [`doc/fuzzing.md`](https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md) for information on how to fuzz Bitcoin Core. Don't forget to contribute any coverage increasing inputs you find to the [Bitcoin Core fuzzing corpus repo](https://github.com/bitcoin-core/qa-assets).\r\n\r\nHappy fuzzing :)",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-07T20:23:53Z",
    "updated_at": "2022-08-16T17:20:03Z",
    "closed_at": "2021-03-03T13:42:45Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-03-03T13:42:45Z",
    "merge_commit_sha": "ebd8d664540c776a35f4fab9cb867033dd8bef45",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "practicalswift:fuzzers-Socks5",
      "ref": "fuzzers-Socks5",
      "sha": "366e3e1f89d99c62b548087384487b62fd602e17",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 78569642,
        "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
        "name": "bitcoin",
        "full_name": "practicalswift/bitcoin",
        "owner": {
          "login": "practicalswift",
          "id": 7826565,
          "node_id": "MDQ6VXNlcjc4MjY1NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/practicalswift",
          "html_url": "https://github.com/practicalswift",
          "followers_url": "https://api.github.com/users/practicalswift/followers",
          "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
          "organizations_url": "https://api.github.com/users/practicalswift/orgs",
          "repos_url": "https://api.github.com/users/practicalswift/repos",
          "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/practicalswift/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/practicalswift/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/practicalswift/bitcoin",
        "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
        "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/practicalswift/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:practicalswift/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/practicalswift/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
        "svn_url": "https://github.com/practicalswift/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 164685,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-10-01T13:54:08Z",
        "created_at": "2017-01-10T20:09:24Z",
        "updated_at": "2022-08-28T15:39:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b9f41df1ead4b6a83a51fc41966b111c8459c313",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 188,
    "deletions": 17,
    "changed_files": 5,
    "commits": 2,
    "review_comments": 62,
    "comments": 34
  },
  "events": [
    {
      "event": "labeled",
      "id": 3417243070,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MTcyNDMwNzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417243070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T21:39:40Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3417243071,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MTcyNDMwNzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417243071",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T21:39:41Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 3417243072,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MTcyNDMwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417243072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T21:39:41Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 3417392799,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQxNzM5Mjc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417392799",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:29:18Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 3417392800,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQxNzM5MjgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417392800",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:29:18Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 640296153,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDI5NjE1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640296153",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:30:44Z",
      "updated_at": "2020-06-07T23:30:44Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-640296153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "renamed",
      "id": 3417395200,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzQxNzM5NTIwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3417395200",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:31:04Z",
      "rename": {
        "from": "tests/net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket. Add thin SOCKET wrapper.",
        "to": "net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket. Add thin SOCKET wrapper."
      }
    },
    {
      "event": "commented",
      "id": 640296575,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDI5NjU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640296575",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:34:29Z",
      "updated_at": "2021-03-02T16:17:40Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21328 (net, refactor: pass uint16 CService::port as uint16 by jonatack)\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #19259 (fuzz: Add fuzzing harness for LoadMempool(...) and DumpMempool(...) by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-640296575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3419591453,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQxOTU5MTQ1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3419591453",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T11:28:20Z"
    },
    {
      "event": "labeled",
      "id": 3435280373,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MzUyODAzNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3435280373",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T17:49:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3435701543,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzNTcwMTU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3435701543",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T19:50:20Z"
    },
    {
      "event": "unlabeled",
      "id": 3435713618,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQzNTcxMzYxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3435713618",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T19:54:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3530532387,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzA1MzIzODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3530532387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T16:32:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3531439631,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzMTQzOTYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3531439631",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T21:03:10Z"
    },
    {
      "event": "unlabeled",
      "id": 3531714867,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUzMTcxNDg2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3531714867",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T22:48:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3535426485,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNTQyNjQ4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3535426485",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T20:55:04Z"
    },
    {
      "event": "labeled",
      "id": 3536187378,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzYxODczNzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536187378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T10:39:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3536497109,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNjQ5NzEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536497109",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T18:28:24Z"
    },
    {
      "event": "unlabeled",
      "id": 3536516386,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUzNjUxNjM4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536516386",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T18:57:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3560759052,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1NjA3NTkwNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3560759052",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T07:45:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3560998602,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU2MDk5ODYwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3560998602",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T11:38:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3561003450,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU2MTAwMzQ1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3561003450",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T11:42:50Z"
    },
    {
      "event": "unlabeled",
      "id": 3561015879,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU2MTAxNTg3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3561015879",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T11:55:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 452077139,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDc3MTM5",
      "url": null,
      "actor": null,
      "commit_id": "5da912d7cbf86c697f65ec777f06c3e00c57e120",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Coverage from ~30 hours of libfuzzer fuzzing: https://crypt-iq.github.io/socks5_cov_outs/src/\r\nMissing about 4 lines of coverage, will try to hit those again on a different run. ",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-452077139",
      "submitted_at": "2020-07-21T11:30:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3657059375,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY1NzA1OTM3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3657059375",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-14T17:18:07Z"
    },
    {
      "event": "commented",
      "id": 684254689,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDI1NDY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684254689",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T05:04:04Z",
      "updated_at": "2020-09-01T05:05:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Builds on Ubuntu.\r\nFails to build on macOS with brew clang.\r\n<details>\r\n<summary>failure</summary>\r\n\r\n```\r\nMaking all in src\r\n  CXX      test/fuzz/addition_overflow-addition_overflow.o\r\nIn file included from test/fuzz/addition_overflow.cpp:7:\r\n./test/fuzz/util.h:335:13: error: no matching function for call to 'AdditionOverflow'\r\n        if (AdditionOverflow((uint64_t)fuzzed_file->m_offset, random_bytes.size())) {\r\n            ^~~~~~~~~~~~~~~~\r\n./test/fuzz/util.h:201:16: note: candidate template ignored: deduced conflicting types for parameter 'T' ('unsigned long long' vs. 'unsigned long')\r\nNODISCARD bool AdditionOverflow(const T i, const T j) noexcept\r\n               ^\r\n./test/fuzz/util.h:346:13: error: no matching function for call to 'AdditionOverflow'\r\n        if (AdditionOverflow(fuzzed_file->m_offset, n)) {\r\n            ^~~~~~~~~~~~~~~~\r\n./test/fuzz/util.h:201:16: note: candidate template ignored: deduced conflicting types for parameter 'T' ('long long' vs. 'long')\r\nNODISCARD bool AdditionOverflow(const T i, const T j) noexcept\r\n               ^\r\n2 errors generated.\r\nmake[2]: *** [test/fuzz/addition_overflow-addition_overflow.o] Error 1\r\nmake[1]: *** [all-recursive] Error 1\r\nmake: *** [all-recursive] Error 1\r\n```\r\n</details>",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-684254689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3715164654,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcxNTE2NDY1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3715164654",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T14:14:42Z"
    },
    {
      "event": "commented",
      "id": 684887029,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDg4NzAyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684887029",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T14:15:33Z",
      "updated_at": "2020-09-01T14:16:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Crypt-iQ Thanks for letting me know. Now rebased. Should compile on macOS now? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-684887029",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 3715168990,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcxNTE2ODk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3715168990",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T14:15:33Z"
    },
    {
      "event": "subscribed",
      "id": 3715168996,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MTUxNjg5OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3715168996",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T14:15:33Z"
    },
    {
      "event": "commented",
      "id": 685075098,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTA3NTA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685075098",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T19:08:50Z",
      "updated_at": "2020-09-01T19:08:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift Now compiles on macOS :). Will run the builds again and re-review.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-685075098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 3716428523,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcxNjQyODUyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3716428523",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T19:08:51Z"
    },
    {
      "event": "subscribed",
      "id": 3716428527,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MTY0Mjg1Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3716428527",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T19:08:51Z"
    },
    {
      "event": "reviewed",
      "id": 480497736,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNDk3NzM2",
      "url": null,
      "actor": null,
      "commit_id": "2d02f775fa36c59bca5d7ef1a0e702c1bc2de117",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-480497736",
      "submitted_at": "2020-09-02T05:43:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "commented",
      "id": 685889544,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTg4OTU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685889544",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T17:34:50Z",
      "updated_at": "2020-09-02T17:36:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 2d02f775fa36c59bca5d7ef1a0e702c1bc2de117\r\n\r\nCode change looks good to me. I did not try to reintroduce the CVE, but I did read up about it.\r\nUbuntu 18:\r\n- `./configure --enable-fuzz --with-sanitizers=address,undefined,integer,fuzzer` - no errors\r\n- valgrind - no errors\r\n\r\nmacOS 10.15.4:\r\n- `./configure --enable-fuzz --with-sanitizers=address,fuzzer --disable-asm` - no errors\r\n- `./configure --enable-fuzz --with-sanitizers=undefined,integer,fuzzer` - one complaint (suppressed by https://github.com/bitcoin/bitcoin/pull/19713)\r\n<details>\r\n<summary>implicit-integer-sign-change</summary>\r\n\r\n```\r\n/usr/local/opt/llvm/bin/../include/c++/v1/memory:1876:35: runtime error: implicit conversion from type 'char' of value -125 (8-bit, signed) to type 'unsigned char' changed the value to 131 (8-bit, unsigned)\r\n    #0 0x1072b4bd4 in void std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char, char const&>(std::__1::allocator<unsigned char>&, unsigned char*, char const&) memory:1595\r\n    #1 0x1072b49f9 in void std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<std::__1::__wrap_iter<char const*>, unsigned char*>(std::__1::allocator<unsigned char>&, std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, unsigned char*&) memory:1688\r\n    #2 0x1072b3598 in std::__1::enable_if<__is_cpp17_forward_iterator<std::__1::__wrap_iter<char const*> >::value, void>::type std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, unsigned long) vector:1076\r\n    #3 0x10728e2a2 in std::__1::enable_if<(__is_cpp17_forward_iterator<std::__1::__wrap_iter<char const*> >::value) && (is_constructible<unsigned char, std::__1::iterator_traits<std::__1::__wrap_iter<char const*> >::reference>::value), std::__1::__wrap_iter<unsigned char*> >::type std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::insert<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<unsigned char const*>, std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>) vector:1996\r\n    #4 0x10728b18c in Socks5(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, ProxyCredentials const*, Socket&) netbase.cpp:492\r\n    #5 0x10663a420 in test_one_input(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&) socks5.cpp:30\r\n    #6 0x107663b28 in LLVMFuzzerTestOneInput fuzz.cpp:45\r\n    #7 0x107862780 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) FuzzerLoop.cpp:556\r\n    #8 0x107861ec5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) FuzzerLoop.cpp:470\r\n    #9 0x107863f76 in fuzzer::Fuzzer::MutateAndTestOne() FuzzerLoop.cpp:698\r\n    #10 0x107864be5 in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) FuzzerLoop.cpp:830\r\n    #11 0x107851d8d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) FuzzerDriver.cpp:829\r\n    #12 0x10787da62 in main FuzzerMain.cpp:19\r\n    #13 0x7fff73778cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)\r\n```\r\n</details>",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-685889544",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3778022404,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc3ODAyMjQwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3778022404",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:36:33Z"
    },
    {
      "event": "mentioned",
      "id": 3778034032,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc3ODAzNDAzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3778034032",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:38:17Z"
    },
    {
      "event": "subscribed",
      "id": 3778034037,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NzgwMzQwMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3778034037",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:38:17Z"
    },
    {
      "event": "commented",
      "id": 694241213,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI0MTIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694241213",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:38:32Z",
      "updated_at": "2020-09-17T13:38:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Had to rebase also this one to make use of the new `$(FUZZ_SUITE_LDFLAGS_COMMON)`.\r\n\r\n@Crypt-iQ May I ask you to review and hopefully give your second ACK on this PR? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-694241213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 3778035697,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc3ODAzNTY5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3778035697",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:38:33Z"
    },
    {
      "event": "subscribed",
      "id": 3778035704,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NzgwMzU3MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3778035704",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T13:38:33Z"
    },
    {
      "event": "commented",
      "id": 695773087,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc3MzA4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695773087",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-20T10:54:29Z",
      "updated_at": "2020-09-20T10:54:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK ea6cd7b2cc6b070b2630457d75b396de555b31c7",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-695773087",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 708994095,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk5NDA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708994095",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T08:36:58Z",
      "updated_at": "2020-10-15T08:36:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Friendly review beg :)\r\n\r\nConcept NACK:s are totally fine too: that would allow me to move forward with other fuzzing stuff without having to keep this PR updated :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-708994095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 708994781,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk5NDc4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708994781",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T08:38:14Z",
      "updated_at": "2020-10-15T08:38:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke Thanks for your Concept ACK. Would you mind reviewing the code too? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-708994781",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 3880291819,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg4MDI5MTgxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880291819",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T08:38:15Z"
    },
    {
      "event": "subscribed",
      "id": 3880291826,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4ODAyOTE4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880291826",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T08:38:15Z"
    },
    {
      "event": "commented",
      "id": 724609080,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDYwOTA4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724609080",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T10:21:21Z",
      "updated_at": "2020-11-10T10:21:21Z",
      "author_association": "MEMBER",
      "body": "Sorry, I don't know enough about sockets to be able to review this.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-724609080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 724612684,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDYxMjY4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724612684",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T10:27:58Z",
      "updated_at": "2020-11-10T10:27:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke Ah, got it! Do you know who would be an appropriate reviewer? :)\r\n\r\nFWIW I think sipa wrote the `Socks5(...)` code originally in #1141.\r\n\r\nAny review help welcome! Concept NACK is obviously fine too: I just want to move forward towards close (due to NACK or close due to merge) :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-724612684",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 3978167963,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk3ODE2Nzk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3978167963",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T10:27:59Z"
    },
    {
      "event": "subscribed",
      "id": 3978167967,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5NzgxNjc5Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3978167967",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T10:27:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3992688732,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk5MjY4ODczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3992688732",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T09:46:16Z"
    },
    {
      "event": "commented",
      "id": 726673274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjY3MzI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726673274",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T10:07:12Z",
      "updated_at": "2020-11-13T10:07:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased. Now using the names `MockableSocket`, `Socket` and `FuzzedSocket`.\r\n\r\n`Socket` and `FuzzedSocket` both implement `MockableSocket`.\r\n\r\nThe introduced `src/test/fuzz/socks5` would have caught the [CVE-2017-18350](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017453.html) buffer overflow (which I caught via code review rather than fuzzing) within literally seconds of fuzzing :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-726673274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "added_to_project",
      "id": 3993442763,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzOTkzNDQyNzYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3993442763",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T13:20:03Z",
      "project_card": {
        "id": 49298331,
        "url": "https://api.github.com/projects/columns/cards/49298331",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "labeled",
      "id": 4116090848,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxMTYwOTA4NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4116090848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-15T18:41:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4119271614,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDExOTI3MTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4119271614",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T11:43:31Z"
    },
    {
      "event": "unlabeled",
      "id": 4119767238,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDExOTc2NzIzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4119767238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T13:46:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 556276078,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjc2MDc4",
      "url": null,
      "actor": null,
      "commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI am considering how to make a RAII socket class that would best fit in this PR, the rest of the code and in https://github.com/bitcoin/bitcoin/pull/20685, as you [suggested](https://github.com/bitcoin/bitcoin/pull/20685#issuecomment-748139978).\r\n\r\nSome minor comments below in the meantime.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-556276078",
      "submitted_at": "2020-12-21T10:51:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "reviewed",
      "id": 556532204,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTMyMjA0",
      "url": null,
      "actor": null,
      "commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-556532204",
      "submitted_at": "2020-12-21T17:08:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "commented",
      "id": 749089371,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTA4OTM3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749089371",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T17:08:42Z",
      "updated_at": "2020-12-21T17:08:42Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-749089371",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4137091135,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDEzNzA5MTEzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137091135",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T18:08:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4137167825,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDEzNzE2NzgyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137167825",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T18:32:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4137879464,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDEzNzg3OTQ2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137879464",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:38:44Z"
    },
    {
      "event": "commented",
      "id": 749237405,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTIzNzQwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749237405",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:39:37Z",
      "updated_at": "2020-12-21T22:39:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj @vasild \r\n\r\nThanks for very good review feedback!\r\n\r\nI believe I've addressed all the issues raised. Please re-review :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-749237405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4137881491,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEzNzg4MTQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137881491",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:39:37Z"
    },
    {
      "event": "subscribed",
      "id": 4137881493,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMzc4ODE0OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137881493",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:39:37Z"
    },
    {
      "event": "mentioned",
      "id": 4137881497,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEzNzg4MTQ5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137881497",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:39:38Z"
    },
    {
      "event": "subscribed",
      "id": 4137881499,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMzc4ODE0OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4137881499",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T22:39:38Z"
    },
    {
      "event": "commented",
      "id": 750359147,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDM1OTE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750359147",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-23T15:49:48Z",
      "updated_at": "2020-12-23T15:50:22Z",
      "author_association": "MEMBER",
      "body": "> I am considering how to make a RAII socket class...\r\n\r\nWhat about something like this: https://github.com/vasild/bitcoin/commit/bf3fa6a10a69f3d0dbd84188e3ba089a19248b20?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-750359147",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 751493896,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTQ5Mzg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751493896",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-27T17:24:45Z",
      "updated_at": "2020-12-27T17:24:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@vasild Great! Would you mind submitting that as a separate PR? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-751493896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4150453354,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE1MDQ1MzM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4150453354",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-27T17:24:45Z"
    },
    {
      "event": "subscribed",
      "id": 4150453355,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNTA0NTMzNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4150453355",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-27T17:24:45Z"
    },
    {
      "event": "commented",
      "id": 751771010,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTc3MTAxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751771010",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T16:19:41Z",
      "updated_at": "2020-12-28T16:19:41Z",
      "author_association": "MEMBER",
      "body": "> @vasild Great! Would you mind submitting that as a separate PR? :)\r\n\r\nHere it is: https://github.com/bitcoin/bitcoin/pull/20788. If it gets merged, then the first commit in this PR can be dropped.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-751771010",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4152460072,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE1MjQ2MDA3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4152460072",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T16:19:41Z"
    },
    {
      "event": "subscribed",
      "id": 4152460073,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNTI0NjAwNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4152460073",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T16:19:42Z"
    },
    {
      "event": "reviewed",
      "id": 563665038,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNjY1MDM4",
      "url": null,
      "actor": null,
      "commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-563665038",
      "submitted_at": "2021-01-07T17:09:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "commented",
      "id": 756254507,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjI1NDUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756254507",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T17:16:23Z",
      "updated_at": "2021-01-07T17:16:55Z",
      "author_association": "MEMBER",
      "body": "I still like the concept of this very much, but I just wondered if there isn't a general way to fuzz network applications that doesn't require wrapping every BSD socketsI call. I mean it *seem* like something people would want to commonly do.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-756254507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 760123106,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDEyMzEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760123106",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:00:42Z",
      "updated_at": "2021-01-14T11:00:42Z",
      "author_association": "MEMBER",
      "body": "@laanwj It is possible to override functions (e.g. `send(2)`) without modifying the source code with `LD_PRELOAD`. I think that is not supported by the current testing framework, out of the box? ",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-760123106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4205674183,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDIwNTY3NDE4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4205674183",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:00:42Z"
    },
    {
      "event": "subscribed",
      "id": 4205674189,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyMDU2NzQxODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4205674189",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:00:42Z"
    },
    {
      "event": "commented",
      "id": 760141077,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDE0MTA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760141077",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:35:18Z",
      "updated_at": "2021-01-14T11:36:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I still like the concept of this very much, but I just wondered if there isn't a general way to fuzz network applications that doesn't require wrapping every BSD socketsI call. I mean it _seem_ like something people would want to commonly do.\r\n\r\nEasy fuzzing of networking code is unfortunately an unsolved problem generally AFAIK.\r\n\r\nThere have been many attempts to solve this by using `LD_PRELOAD` hacks as @vasild mentions. One notable example is [`preeny`'s `desock`](https://github.com/zardus/preeny). My experience is that these `LD_PRELOAD` hacks are pretty fragile and while they might be good enough for short-term one-off fuzzing jobs (think targeted vulnerability research) they are not suitable for more long-term robustness testing needs like in our case.\r\n\r\nThe best \"off the shelf\" solution to this problem I've seen is what Honggfuzz is doing with its networking mode `libhfnetdriver` (see http://blog.swiecki.net/2018/01/fuzzing-tcp-servers.html). Unfortunately that solutions is limited to Honggfuzz and it is more suited for \"macro level\" networking code fuzzing than the more \"micro level\" networking code fuzzing this PR targets.\r\n\r\nThat said: Honggfuzz NetDriver is great too have in the toolbox too: I've tried documenting how to fuzz Bitcoin Core using Honggfuzz's networking mode. See the unmerged PR #20380 (\"doc: Add instructions on how to fuzz the P2P layer using Honggfuzz NetDriver\"). Review welcome! :)\r\n\r\ntl;dr -- Mocked networking functions driven by `FuzzedDataProvider` as suggested in this PR is AFAICT the most robust and appropriate way to solve our low-level network fuzzing needs. That said it would be interesting to know if anyone has any alternative approach which is both robust and fuzzer engine agnostic: automated robustness testing of networking code is an active area of research :)\r\n\r\n",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-760141077",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4205807243,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDIwNTgwNzI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4205807243",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:35:18Z"
    },
    {
      "event": "subscribed",
      "id": 4205807248,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyMDU4MDcyNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4205807248",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T11:35:18Z"
    },
    {
      "event": "commented",
      "id": 766439500,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjQzOTUwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/766439500",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-24T21:59:18Z",
      "updated_at": "2021-01-24T21:59:18Z",
      "author_association": "MEMBER",
      "body": "> tl;dr -- Mocked networking functions driven by FuzzedDataProvider as suggested in this PR is AFAICT the most robust and appropriate way to solve our low-level network fuzzing needs.\r\n\r\nSure. Fair enough. It's just that I'm in principle not a fan of wrapping and abstracting basic operating system APIs such as BSD Sockets because anyone contributing to the code has to learn a special interface instead of being up to speed quickly with what they already know. It's also another moving part that could have bugs itself.\r\n\r\nThat said, it seems this is useful for other things such as I2P support so that seems enough of a motivation to do it anyway. If we do it, it would be good to do so at a global level as #20788 does.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-766439500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 766701314,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjcwMTMxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/766701314",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T10:03:42Z",
      "updated_at": "2021-01-25T10:03:42Z",
      "author_association": "MEMBER",
      "body": "> anyone contributing to the code has to learn a special interface instead of being up to speed quickly with what they already know\r\n\r\nIndeed! This is why #20788 mimics the system interface:\r\n\r\n```cpp\r\nssize_t ret = recv(socket, data, len, 0);\r\n// vs (same arguments, return type and semantic)\r\nssize_t ret = sock.Recv(data, len, 0);\r\n```",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-766701314",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 767420285,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzQyMDI4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767420285",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:34:19Z",
      "updated_at": "2021-01-26T09:34:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj Good points. When/if @vasild's #20788 is merged I'll use that facility instead :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-767420285",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4249742043,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI0OTc0MjA0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4249742043",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:34:19Z"
    },
    {
      "event": "subscribed",
      "id": 4249742047,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNDk3NDIwNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4249742047",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:34:19Z"
    },
    {
      "event": "mentioned",
      "id": 4249742054,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI0OTc0MjA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4249742054",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:34:20Z"
    },
    {
      "event": "subscribed",
      "id": 4249742058,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNDk3NDIwNTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4249742058",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:34:20Z"
    },
    {
      "event": "commented",
      "id": 767542163,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzU0MjE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767542163",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T13:31:09Z",
      "updated_at": "2021-01-26T13:31:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj Another PR mocks calls to `getaddrinfo` (#19415). I think introducing `LD_PRELOAD` into fuzz builds quickly becomes complicated with more fuzz tests - where do these shared objects go and who maintains them? The tradeoff is more mocking code, so I favor the approach in this PR.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-767542163",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4250677147,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI1MDY3NzE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4250677147",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T13:31:10Z"
    },
    {
      "event": "subscribed",
      "id": 4250677150,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNTA2NzcxNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4250677150",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T13:31:10Z"
    },
    {
      "event": "reviewed",
      "id": 585086574,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDg2NTc0",
      "url": null,
      "actor": null,
      "commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase because of https://github.com/bitcoin/bitcoin/pull/20946",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-585086574",
      "submitted_at": "2021-02-07T21:56:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4304558140,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMwNDU1ODE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4304558140",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:00:28Z"
    },
    {
      "event": "commented",
      "id": 775293106,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTI5MzEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775293106",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:02:40Z",
      "updated_at": "2021-02-08T17:02:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj @Crypt-iQ Feedback addressed. Please re-review :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-775293106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4304570312,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMwNDU3MDMxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4304570312",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:02:40Z"
    },
    {
      "event": "subscribed",
      "id": 4304570316,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMDQ1NzAzMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4304570316",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:02:40Z"
    },
    {
      "event": "mentioned",
      "id": 4304570322,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMwNDU3MDMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4304570322",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:02:40Z"
    },
    {
      "event": "subscribed",
      "id": 4304570330,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMDQ1NzAzMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4304570330",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-08T17:02:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4318655081,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMxODY1NTA4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4318655081",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-11T08:42:00Z"
    },
    {
      "event": "commented",
      "id": 777445128,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzQ0NTEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777445128",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-11T13:10:47Z",
      "updated_at": "2021-02-11T13:11:56Z",
      "author_association": "MEMBER",
      "body": "Needs rebase after #20788 (should be a much smaller change now).",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-777445128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "labeled",
      "id": 4319758727,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQzMTk3NTg3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4319758727",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-11T13:12:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4335591201,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMzNTU5MTIwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4335591201",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T10:58:49Z"
    },
    {
      "event": "unlabeled",
      "id": 4335826445,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDMzNTgyNjQ0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4335826445",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T11:57:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 779917520,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTkxNzUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779917520",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T15:37:08Z",
      "updated_at": "2021-02-16T15:37:08Z",
      "author_association": "MEMBER",
      "body": "Code review ACK ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-779917520",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "renamed",
      "id": 4336842106,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDMzNjg0MjEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4336842106",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T15:37:39Z",
      "rename": {
        "from": "net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket. Add thin SOCKET wrapper.",
        "to": "net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket."
      }
    },
    {
      "event": "reviewed",
      "id": 591358974,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzU4OTc0",
      "url": null,
      "actor": null,
      "commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some style feedback",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-591358974",
      "submitted_at": "2021-02-16T15:56:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4337826110,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMzNzgyNjExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337826110",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:08:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4337850380,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMzNzg1MDM4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337850380",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:14:58Z"
    },
    {
      "event": "commented",
      "id": 780059549,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDA1OTU0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780059549",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:16:38Z",
      "updated_at": "2021-02-16T19:16:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj Thanks for the quick review! ❤️  Pushed an updated version addressing @MarcoFalke's feedback. Should hopefully be ready for final review.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-780059549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4337856710,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMzNzg1NjcxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337856710",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:16:38Z"
    },
    {
      "event": "subscribed",
      "id": 4337856716,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMzc4NTY3MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337856716",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:16:39Z"
    },
    {
      "event": "mentioned",
      "id": 4337856723,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMzNzg1NjcyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337856723",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:16:39Z"
    },
    {
      "event": "subscribed",
      "id": 4337856727,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMzc4NTY3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337856727",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:16:39Z"
    },
    {
      "event": "reviewed",
      "id": 591455472,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDU1NDcy",
      "url": null,
      "actor": null,
      "commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-591455472",
      "submitted_at": "2021-02-17T14:36:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "commented",
      "id": 780622048,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDYyMjA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780622048",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T15:11:01Z",
      "updated_at": "2021-02-17T15:11:47Z",
      "author_association": "MEMBER",
      "body": "Running the new fuzz test for a few tens of minutes produces no errors.\r\n\r\nReverting the fix for CVE-2017–18350 like this:\r\n\r\n```diff\r\n--- i/src/netbase.cpp\r\n+++ w/src/netbase.cpp\r\n@@ -533,13 +533,13 @@ bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth,\r\n         case SOCKS5Atyp::DOMAINNAME:\r\n         {\r\n             recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, sock);\r\n             if (recvr != IntrRecvError::OK) {\r\n                 return error(\"Error reading from proxy\");\r\n             }\r\n-            int nRecv = pchRet3[0];\r\n+            int nRecv = (char)pchRet3[0];\r\n             recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, sock);\r\n             break;\r\n         }\r\n         default: return error(\"Error: malformed proxy response\");\r\n     }\r\n     if (recvr != IntrRecvError::OK) {\r\n```\r\n\r\ncrashes the test in less than a minute.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-780622048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 780653448,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDY1MzQ0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780653448",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T15:52:10Z",
      "updated_at": "2021-02-17T15:52:10Z",
      "author_association": "MEMBER",
      "body": "The PR description needs an update since it mentions 4 commits, but there are just 2 now.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-780653448",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "commented",
      "id": 780701159,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDcwMTE1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780701159",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T17:00:31Z",
      "updated_at": "2021-02-18T13:40:25Z",
      "author_association": "MEMBER",
      "body": "> The PR description needs an update since it mentions 4 commits, but there are just 2 now.\r\n\r\nAh yes I had already updated the PR title for it, but you're right that the description is out of date too.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-780701159",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "reviewed",
      "id": 594240663,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjQwNjYz",
      "url": null,
      "actor": null,
      "commit_id": "1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 88af03002c170d95dc04077f3bbcd739e2a9e5b7 with caveat that I don't know very much about fuzzing so ignore my suggestions.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-594240663",
      "submitted_at": "2021-02-19T15:07:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4395800766,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5NTgwMDc2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4395800766",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T13:22:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4395856535,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5NTg1NjUzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4395856535",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T13:33:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4395911172,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5NTkxMTE3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4395911172",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T13:43:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4396448767,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5NjQ0ODc2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4396448767",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T15:20:41Z"
    },
    {
      "event": "commented",
      "id": 789062288,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTA2MjI4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789062288",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T17:06:13Z",
      "updated_at": "2021-03-02T17:06:13Z",
      "author_association": "MEMBER",
      "body": "b62b90fa0e642c89a75afcfeb7f0491fc8e93f00 looks good except that the first commit does not compile:\r\n```\r\ntest/fuzz/socks5.cpp:23:5: error: use of undeclared identifier 'default_socks5_recv_timeout'\r\n    default_socks5_recv_timeout = g_socks5_recv_timeout;\r\n    ^\r\ntest/fuzz/socks5.cpp:23:35: error: use of undeclared identifier 'g_socks5_recv_timeout'\r\n    default_socks5_recv_timeout = g_socks5_recv_timeout;\r\n                                  ^\r\n```\r\n(the second commit fixes this)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-789062288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjJkNGMxNjA3YjY0ODhiMzc4ZDM0MjdhNzA4YmQ3MWYxMmY3Mjc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b22d4c1607b6488b378d3427a708bd71f12f7276",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b22d4c1607b6488b378d3427a708bd71f12f7276",
      "tree": {
        "sha": "0ccf88ba2948a72de3c8b31fdcb1cf0ccacdd05c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ccf88ba2948a72de3c8b31fdcb1cf0ccacdd05c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9f41df1ead4b6a83a51fc41966b111c8459c313",
          "sha": "b9f41df1ead4b6a83a51fc41966b111c8459c313",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b9f41df1ead4b6a83a51fc41966b111c8459c313"
        }
      ],
      "message": "fuzz: Add fuzzing harness for Socks5(...)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-03-02T21:43:42Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-07T16:59:46Z"
      },
      "sha": "b22d4c1607b6488b378d3427a708bd71f12f7276"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjZlM2UxZjg5ZDk5YzYyYjU0ODA4NzM4NDQ4N2I2MmZkNjAyZTE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/366e3e1f89d99c62b548087384487b62fd602e17",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/366e3e1f89d99c62b548087384487b62fd602e17",
      "tree": {
        "sha": "2a5585b7d2018d4ff204aafd61042b6f7bc9e1e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a5585b7d2018d4ff204aafd61042b6f7bc9e1e9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b22d4c1607b6488b378d3427a708bd71f12f7276",
          "sha": "b22d4c1607b6488b378d3427a708bd71f12f7276",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b22d4c1607b6488b378d3427a708bd71f12f7276"
        }
      ],
      "message": "fuzz: Add FUZZED_SOCKET_FAKE_LATENCY mode to FuzzedSock to allow for fuzzing timeout logic",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-03-02T21:44:51Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-16T09:56:47Z"
      },
      "sha": "366e3e1f89d99c62b548087384487b62fd602e17"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4398316648,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5ODMxNjY0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4398316648",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T21:58:03Z"
    },
    {
      "event": "commented",
      "id": 789249683,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTI0OTY4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789249683",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T21:59:02Z",
      "updated_at": "2021-03-02T21:59:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "@vasild \r\n\r\n> [b62b90f](https://github.com/bitcoin/bitcoin/commit/b62b90fa0e642c89a75afcfeb7f0491fc8e93f00) looks good except that the first commit does not compile:\r\n> …\r\n> (the second commit fixes this)\r\n\r\nOh, good catch!\r\n\r\nNow addressed :)\r\n\r\nPlease re-review :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#issuecomment-789249683",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19203"
    },
    {
      "event": "mentioned",
      "id": 4398320313,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDM5ODMyMDMxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4398320313",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T21:59:02Z"
    },
    {
      "event": "subscribed",
      "id": 4398320314,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzOTgzMjAzMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4398320314",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T21:59:02Z"
    },
    {
      "event": "reviewed",
      "id": 602887841,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyODg3ODQx",
      "url": null,
      "actor": null,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 366e3e1f89d99c62b548087384487b62fd602e17",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#pullrequestreview-602887841",
      "submitted_at": "2021-03-03T13:25:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
    },
    {
      "event": "merged",
      "id": 4402083170,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDQwMjA4MzE3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4402083170",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ebd8d664540c776a35f4fab9cb867033dd8bef45",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebd8d664540c776a35f4fab9cb867033dd8bef45",
      "created_at": "2021-03-03T13:42:45Z"
    },
    {
      "event": "closed",
      "id": 4402083186,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDQwMjA4MzE4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4402083186",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T13:42:45Z"
    },
    {
      "event": "referenced",
      "id": 4402681590,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MDI2ODE1OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4402681590",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "217b5ba671cdee8448124892aa6975cc4b09c01b",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/217b5ba671cdee8448124892aa6975cc4b09c01b",
      "created_at": "2021-03-03T15:30:41Z"
    },
    {
      "event": "removed_from_project",
      "id": 4405030583,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50NDQwNTAzMDU4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4405030583",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T00:29:28Z",
      "project_card": {
        "id": 49298331,
        "url": "https://api.github.com/projects/columns/cards/49298331",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "head_ref_deleted",
      "id": 4577823054,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTc3ODIzMDU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4577823054",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-10T19:44:14Z"
    },
    {
      "event": "locked",
      "id": 7199118655,
      "node_id": "LOE_lADOABII584lxfsOzwAAAAGtGdU_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199118655",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:20:03Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457793470",
      "pull_request_review_id": 452077139,
      "id": 457793470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc5MzQ3MA==",
      "diff_hunk": "@@ -37,6 +41,98 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 17,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "5da912d7cbf86c697f65ec777f06c3e00c57e120",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a redundant declaration, it's defined lower on line 164.",
      "created_at": "2020-07-21T02:09:06Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r457793470",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457793470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458016843",
      "pull_request_review_id": 452077139,
      "id": 458016843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNjg0Mw==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just would like to point out that this is currently unused. Is this intentional?",
      "created_at": "2020-07-21T11:09:37Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r458016843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458016843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458020094",
      "pull_request_review_id": 452077139,
      "id": 458020094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMDA5NA==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& fuzzed_data_provider;",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "4f18edbe5500033ef619659b980b257c16a3834a",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `m_fuzzed_data_provider` so the reference in the constructor can just be `fuzzed_data_provider`?",
      "created_at": "2020-07-21T11:16:02Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r458020094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458020094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458022084",
      "pull_request_review_id": 452077139,
      "id": 458022084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMjA4NA==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider_) : fuzzed_data_provider{fuzzed_data_provider_}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 37,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "4f18edbe5500033ef619659b980b257c16a3834a",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here it is still possible for `random_bytes.size() < len` since that condition is only checked if `ConsumeBool` returns true. Shouldn't the correct number of bytes be returned if possible?",
      "created_at": "2020-07-21T11:20:04Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r458022084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458022084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470748302",
      "pull_request_review_id": 467735377,
      "id": 470748302,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc0ODMwMg==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": 458016843,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is used in `netbase.cpp`? :)\r\n\r\n```\r\n$ git grep SocketImpl\r\nsrc/netbase.cpp:        SocketImpl socket{hSocket};\r\nsrc/netbase.cpp:        SocketImpl socket{hSocket};\r\nsrc/netbase.h:class SocketImpl : public Socket\r\nsrc/netbase.h:    explicit SocketImpl(SOCKET socket) : m_socket{socket}\r\n```",
      "created_at": "2020-08-14T17:08:04Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470748302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470748302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470750075",
      "pull_request_review_id": 467737622,
      "id": 470750075,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MDA3NQ==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": 458016843,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I meant that even though it's used, the coverage isn't updated for `SocketImpl` functions. Might be a bug with `lcov` perhaps.",
      "created_at": "2020-08-14T17:11:41Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470750075",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470750075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470751725",
      "pull_request_review_id": 467739574,
      "id": 470751725,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MTcyNQ==",
      "diff_hunk": "@@ -37,6 +41,98 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 17,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "5da912d7cbf86c697f65ec777f06c3e00c57e120",
      "in_reply_to_id": 457793470,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is now used prior to L164, so it must be on L44 -- but removing L164. Thanks!",
      "created_at": "2020-08-14T17:14:46Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470751725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470751725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470753145",
      "pull_request_review_id": 467741240,
      "id": 470753145,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MzE0NQ==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": 458016843,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that is expected: it is currently only from `ConnectThroughProxy` which is not fuzzed :)",
      "created_at": "2020-08-14T17:17:29Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470753145",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470753145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470753243",
      "pull_request_review_id": 467741353,
      "id": 470753243,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MzI0Mw==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& fuzzed_data_provider;",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "4f18edbe5500033ef619659b980b257c16a3834a",
      "in_reply_to_id": 458020094,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good nit! Adressed!",
      "created_at": "2020-08-14T17:17:43Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470753243",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470753243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470755486",
      "pull_request_review_id": 467744215,
      "id": 470755486,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NTQ4Ng==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": 458016843,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah derp! I mistakenly thought it was fuzzed for some reason, but `FuzzedSocket` is the one that's used. Is the idea that they be used together in some manner eventually?",
      "created_at": "2020-08-14T17:22:29Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470755486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470755486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470755741",
      "pull_request_review_id": 467744522,
      "id": 470755741,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NTc0MQ==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider_) : fuzzed_data_provider{fuzzed_data_provider_}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 37,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "4f18edbe5500033ef619659b980b257c16a3834a",
      "in_reply_to_id": 458022084,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We want to make it so that the fuzzer driven `recv` can return _up to_ `len` bytes like the real `recv`, right? :)",
      "created_at": "2020-08-14T17:23:02Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470755741",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470755741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470758852",
      "pull_request_review_id": 467748299,
      "id": 470758852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1ODg1Mg==",
      "diff_hunk": "@@ -37,6 +41,91 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class Socket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class SocketImpl : public Socket",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 39,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "544a8705578cdecc532a209929a7ca2d846efd6a",
      "in_reply_to_id": 458016843,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Crypt-iQ It is only used as a way to wrap an existing `SOCKET`  as a `Socket` instance: no further plans beyond that :)",
      "created_at": "2020-08-14T17:29:03Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470758852",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470758852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470820694",
      "pull_request_review_id": 467819128,
      "id": 470820694,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgyMDY5NA==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider_) : fuzzed_data_provider{fuzzed_data_provider_}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 37,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "4f18edbe5500033ef619659b980b257c16a3834a",
      "in_reply_to_id": 458022084,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, yes that makes sense, thanks for clarifying. ",
      "created_at": "2020-08-14T19:15:08Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r470820694",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470820694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481735725",
      "pull_request_review_id": 480497736,
      "id": 481735725,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTczNTcyNQ==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();\n+    }\n+\n+#ifdef USE_POLL\n+    int poll(short events, int timeout_ms) override\n+    {\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 43,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "2d02f775fa36c59bca5d7ef1a0e702c1bc2de117",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Calling this with `-1` as the `min` parameter to `ConsumeIntegralInRange` will result in a very large range since it will be cast to `uint64_t`:\r\nhttps://github.com/bitcoin/bitcoin/blob/48c1083632687a42ac603d4f241e70616a1d3815/src/test/fuzz/FuzzedDataProvider.h#L87\r\n\r\nMaybe an alternative version of `ConsumeIntegralInRange` for just -1,0,1 can be used? Not your fault, it's the header file's fault.",
      "created_at": "2020-09-02T05:41:43Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r481735725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481735725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 554,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481735948",
      "pull_request_review_id": 480497736,
      "id": 481735948,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTczNTk0OA==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();\n+    }\n+\n+#ifdef USE_POLL\n+    int poll(short events, int timeout_ms) override\n+    {\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);\n+    }\n+#endif\n+\n+    int select(bool watch_read, bool watch_write, int timeout_ms) override\n+    {\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 49,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "2d02f775fa36c59bca5d7ef1a0e702c1bc2de117",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here.",
      "created_at": "2020-09-02T05:41:57Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r481735948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481735948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481745772",
      "pull_request_review_id": 480501517,
      "id": 481745772,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc0NTc3Mg==",
      "diff_hunk": "@@ -470,4 +470,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public Socket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();\n+    }\n+\n+#ifdef USE_POLL\n+    int poll(short events, int timeout_ms) override\n+    {\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 43,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "2d02f775fa36c59bca5d7ef1a0e702c1bc2de117",
      "in_reply_to_id": 481735725,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nevermind, godbolt tells me I am wrong.",
      "created_at": "2020-09-02T05:51:38Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r481745772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481745772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 554,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546625544",
      "pull_request_review_id": 556276078,
      "id": 546625544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyNTU0NA==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a note: this could return `0` from `send()`. I am not sure if [`send(2)`](https://linux.die.net/man/2/send) could ever [return `0`](https://stackoverflow.com/questions/3081952/with-c-tcp-sockets-can-send-return-zero#3082032):\r\n\r\n> On success, these calls return the number of characters sent. On error, -1 is returned\r\n\r\nanyway, I think it is ok to return `0` - to check that our code does not get bricked by that (in case `send(2)` actually returns `0`).",
      "created_at": "2020-12-21T10:24:32Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546625544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546625544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546628691",
      "pull_request_review_id": 556276078,
      "id": 546628691,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyODY5MQ==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be good to set `errno` if we are going to return an error (`-1`). Application reaction on error should differ depending on the value of `errno` (should retry on \"temporary\" errors).",
      "created_at": "2020-12-21T10:30:54Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546628691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546628691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546630296",
      "pull_request_review_id": 556276078,
      "id": 546630296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzMDI5Ng==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 23,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe assert that if `buf` is `nullptr` then `len` is `0` before this `if` and then remove `buf == nullptr` from here.",
      "created_at": "2020-12-21T10:34:32Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546630296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546630296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546631891",
      "pull_request_review_id": 556276078,
      "id": 546631891,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzMTg5MQ==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 28,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and above, set `errno` to some \"random\" value if we are going to return `-1`. Maybe the \"random\" value should have higher probablitity of being one of `EAGAIN`, `EWOULDBLOCK`, `EINTR` or `EINPROGRESS`.",
      "created_at": "2020-12-21T10:37:51Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546631891",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546631891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546633217",
      "pull_request_review_id": 556276078,
      "id": 546633217,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzMzIxNw==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 33,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why this? `recv(2)` would never set the remaining buffer to `0x0` bytes.",
      "created_at": "2020-12-21T10:40:34Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546633217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546633217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 629,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546634939",
      "pull_request_review_id": 556276078,
      "id": 546634939,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzNDkzOQ==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 26,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the likelihood of this returning less than `len`? The `ConsumeBytes()` comment says:\r\n\r\n> ... If fewer than\r\n  // |num_bytes| of data remain, returns a shorter std::vector containing all\r\n  // of the data that's left.\r\n\r\nI think we should make it more likely that this fuzzed `recv()` returns a partial read because this is when the \"interesting\" things happen in the app code as it should retry.",
      "created_at": "2020-12-21T10:44:19Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546634939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546634939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 596,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546824364",
      "pull_request_review_id": 556532204,
      "id": 546824364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNDM2NA==",
      "diff_hunk": "@@ -37,6 +41,101 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class MockableSocket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class Socket : public MockableSocket\n+{\n+    SOCKET m_socket = INVALID_SOCKET;\n+\n+public:\n+    explicit Socket(SOCKET socket) : m_socket{socket}\n+    {\n+    }\n+\n+    // Send bytes on the socket. See send(2).\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        return ::send(m_socket, buf, len, flags);\n+    }\n+\n+    // Receive bytes from the socket. See recv(2).\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        return ::recv(m_socket, buf, len, flags);\n+    }\n+\n+#ifdef USE_POLL",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 63,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd prefer to have this implementation in an implementation unit instead of the header. This is not a templated class and implementing virtual methods can be done everywhere.\r\nThis would also avoid adding the optional include `poll.h` here, I think.",
      "created_at": "2020-12-21T17:08:22Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546824364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546824364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853431",
      "pull_request_review_id": 556569534,
      "id": 546853431,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1MzQzMQ==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546628691,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Pushed an updated version addressing this.",
      "created_at": "2020-12-21T18:09:19Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546853431",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853482",
      "pull_request_review_id": 556569616,
      "id": 546853482,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1MzQ4Mg==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 23,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546630296,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Pushed an updated version addressing this.",
      "created_at": "2020-12-21T18:09:27Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546853482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853754",
      "pull_request_review_id": 556569976,
      "id": 546853754,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1Mzc1NA==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 28,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546631891,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Pushed an updated version addressing this.",
      "created_at": "2020-12-21T18:10:03Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546853754",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546853754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546863947",
      "pull_request_review_id": 556582773,
      "id": 546863947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2Mzk0Nw==",
      "diff_hunk": "@@ -37,6 +41,101 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class MockableSocket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class Socket : public MockableSocket\n+{\n+    SOCKET m_socket = INVALID_SOCKET;\n+\n+public:\n+    explicit Socket(SOCKET socket) : m_socket{socket}\n+    {\n+    }\n+\n+    // Send bytes on the socket. See send(2).\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        return ::send(m_socket, buf, len, flags);\n+    }\n+\n+    // Receive bytes from the socket. See recv(2).\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        return ::recv(m_socket, buf, len, flags);\n+    }\n+\n+#ifdef USE_POLL",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 63,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546824364,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Pushed an updated version addressing this.",
      "created_at": "2020-12-21T18:32:55Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546863947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546863947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546962270",
      "pull_request_review_id": 556704422,
      "id": 546962270,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk2MjI3MA==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 33,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546633217,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is intentional:\r\n\r\nIf `m_fuzzed_data_provider.ConsumeBool()` we pretend to read `len` bytes but we only consume `random_bytes.size()` from the fuzzing input and let the remaining bytes be `0x0`.\r\n\r\nThat way we can satisfy a read of say 4096 bytes even if we only have say 20 bytes of input left: 20 bytes will be real data from the input and 4076 bytes will be `0x0` bytes.\r\n\r\nMakes sense? :)",
      "created_at": "2020-12-21T22:32:01Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546962270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546962270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 629,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546964547",
      "pull_request_review_id": 556707041,
      "id": 546964547,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk2NDU0Nw==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 26,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546634939,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Pushed an updated version addressing this.",
      "created_at": "2020-12-21T22:38:41Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r546964547",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546964547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 596,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547206605",
      "pull_request_review_id": 556988642,
      "id": 547206605,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNjYwNQ==",
      "diff_hunk": "@@ -512,4 +512,63 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        return m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        if (buf == nullptr || len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(len);\n+        if (random_bytes.empty()) {\n+            return m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 33,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "b7a45b35555c195bd417f52b7b709cd69cc580b6",
      "in_reply_to_id": 546633217,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh yes, we return `len`. Sorry for the noise.",
      "created_at": "2020-12-22T10:48:51Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r547206605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547206605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 629,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553462191",
      "pull_request_review_id": 563665038,
      "id": 553462191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ2MjE5MQ==",
      "diff_hunk": "@@ -37,6 +38,79 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class MockableSocket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class Socket : public MockableSocket\n+{\n+    SOCKET m_socket = INVALID_SOCKET;\n+\n+public:\n+    explicit Socket(SOCKET socket) : m_socket{socket}\n+    {\n+    }\n+\n+    // Send bytes on the socket. See send(2).\n+    ssize_t send(const char* buf, size_t len, int flags) override;\n+\n+    // Receive bytes from the socket. See recv(2).\n+    ssize_t recv(char* buf, size_t len, int flags) override;\n+\n+#ifdef USE_POLL\n+    // Simplified poll(2) interface: Wait until the socket becomes ready for\n+    // reading, writing or other events. Timeout after timeout_ms milliseconds.\n+    // See poll(2) for return values.\n+    //\n+    // The input parameter field is a bit mask specifying the event(s) the\n+    // application is interested in.\n+    //\n+    // The bits that may be set in events are defined in <poll.h>. Examples\n+    // include:\n+    // * POLLIN: There is data to read.\n+    // * POLLOUT: Writing is now possible, though a write larger that the\n+    //   available space in a socket will still block (unless O_NONBLOCK is\n+    //   set).\n+    int poll(short events, int timeout_ms) override;\n+#endif\n+\n+    // Simplified select(2) interface: Wait until the socket becomes ready for\n+    // reading (if watch_read) and/or writing (if watch_write). Timeout after\n+    // timeout_ms milliseconds. See select(2) for return values.\n+    int select(bool watch_read, bool watch_write, int timeout_ms) override;",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 72,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could be in the `#else` of `USE_POLL`?",
      "created_at": "2021-01-07T17:09:49Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r553462191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553462191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705522",
      "pull_request_review_id": 585086574,
      "id": 571705522,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTcwNTUyMg==",
      "diff_hunk": "@@ -11,6 +11,7 @@\n \n #include <compat.h>\n #include <netaddress.h>\n+#include <protocol.h>",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 4,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't see where this is used",
      "created_at": "2021-02-07T21:51:33Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r571705522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705550",
      "pull_request_review_id": 585086574,
      "id": 571705550,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTcwNTU1MA==",
      "diff_hunk": "@@ -37,6 +38,79 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 15,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This move is an artifact of an earlier commit",
      "created_at": "2021-02-07T21:51:55Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r571705550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705869",
      "pull_request_review_id": 585086574,
      "id": 571705869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTcwNTg2OQ==",
      "diff_hunk": "@@ -512,4 +530,128 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        const std::vector<int> send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        const std::vector<int> recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(m_fuzzed_data_provider.ConsumeBool() ? len : m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();\n+    }\n+\n+#ifdef USE_POLL\n+    int poll(short events, int timeout_ms) override\n+    {\n+        const std::vector<int> poll_errnos{\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+        };\n+        const int r = m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, poll_errnos);\n+        }\n+        return r;\n+    }\n+#endif\n+\n+    int select(bool watch_read, bool watch_write, int timeout_ms) override\n+    {\n+        const std::vector<int> select_errnos{\n+            EBADF,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+        };\n+        const int r = m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, select_errnos);\n+        }\n+        return r;\n+    }\n+\n+    bool IsSelectable() const override\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+};\n+\n+FuzzedSocket ConsumeSocket(FuzzedDataProvider& fuzzed_data_provider)",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 148,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should use `inline`. See https://github.com/bitcoin/bitcoin/pull/20733\r\n\r\nmacOS build will warn with \r\n\r\n```\r\nld: warning: duplicate symbol 'ConsumeSocket(FuzzedDataProvider&)' in:\r\n    test/fuzz/fuzz-addition_overflow.o\r\n    libtest_fuzz.a(libtest_fuzz_a-util.o)\r\n```",
      "created_at": "2021-02-07T21:54:52Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r571705869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571705869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210234",
      "pull_request_review_id": 585716498,
      "id": 572210234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMDIzNA==",
      "diff_hunk": "@@ -11,6 +11,7 @@\n \n #include <compat.h>\n #include <netaddress.h>\n+#include <protocol.h>",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 4,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": 571705522,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now removed. Thanks!",
      "created_at": "2021-02-08T17:00:48Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r572210234",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210399",
      "pull_request_review_id": 585716728,
      "id": 572210399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMDM5OQ==",
      "diff_hunk": "@@ -37,6 +38,79 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 15,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": 571705550,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now addressed. Thanks!",
      "created_at": "2021-02-08T17:01:02Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r572210399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210552",
      "pull_request_review_id": 585716927,
      "id": 572210552,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMDU1Mg==",
      "diff_hunk": "@@ -37,6 +38,79 @@ class proxyType\n     bool randomize_credentials;\n };\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+// Represents a read/write socket.\n+class MockableSocket\n+{\n+public:\n+    virtual ssize_t send(const char* buf, size_t len, int flags) = 0;\n+\n+    virtual ssize_t recv(char* buf, size_t len, int flags) = 0;\n+\n+#ifdef USE_POLL\n+    virtual int poll(short events, int timeout_ms) = 0;\n+#endif\n+\n+    virtual int select(bool watch_read, bool watch_write, int timeout_ms) = 0;\n+\n+    virtual bool IsSelectable() const = 0;\n+};\n+\n+// Represents a non-owned SOCKET.\n+//\n+// The underlying SOCKET will NOT be closed automatically on object destruction.\n+class Socket : public MockableSocket\n+{\n+    SOCKET m_socket = INVALID_SOCKET;\n+\n+public:\n+    explicit Socket(SOCKET socket) : m_socket{socket}\n+    {\n+    }\n+\n+    // Send bytes on the socket. See send(2).\n+    ssize_t send(const char* buf, size_t len, int flags) override;\n+\n+    // Receive bytes from the socket. See recv(2).\n+    ssize_t recv(char* buf, size_t len, int flags) override;\n+\n+#ifdef USE_POLL\n+    // Simplified poll(2) interface: Wait until the socket becomes ready for\n+    // reading, writing or other events. Timeout after timeout_ms milliseconds.\n+    // See poll(2) for return values.\n+    //\n+    // The input parameter field is a bit mask specifying the event(s) the\n+    // application is interested in.\n+    //\n+    // The bits that may be set in events are defined in <poll.h>. Examples\n+    // include:\n+    // * POLLIN: There is data to read.\n+    // * POLLOUT: Writing is now possible, though a write larger that the\n+    //   available space in a socket will still block (unless O_NONBLOCK is\n+    //   set).\n+    int poll(short events, int timeout_ms) override;\n+#endif\n+\n+    // Simplified select(2) interface: Wait until the socket becomes ready for\n+    // reading (if watch_read) and/or writing (if watch_write). Timeout after\n+    // timeout_ms milliseconds. See select(2) for return values.\n+    int select(bool watch_read, bool watch_write, int timeout_ms) override;",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 72,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": 553462191,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea! Now addressed. Thanks!",
      "created_at": "2021-02-08T17:01:13Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r572210552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210839",
      "pull_request_review_id": 585717296,
      "id": 572210839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjIxMDgzOQ==",
      "diff_hunk": "@@ -512,4 +530,128 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSocket : public MockableSocket\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSocket(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ssize_t send(const char* buf, size_t len, int flags) override\n+    {\n+        const std::vector<int> send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t recv(char* buf, size_t len, int flags) override\n+    {\n+        const std::vector<int> recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(m_fuzzed_data_provider.ConsumeBool() ? len : m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset(buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        return random_bytes.size();\n+    }\n+\n+#ifdef USE_POLL\n+    int poll(short events, int timeout_ms) override\n+    {\n+        const std::vector<int> poll_errnos{\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+        };\n+        const int r = m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, poll_errnos);\n+        }\n+        return r;\n+    }\n+#endif\n+\n+    int select(bool watch_read, bool watch_write, int timeout_ms) override\n+    {\n+        const std::vector<int> select_errnos{\n+            EBADF,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+        };\n+        const int r = m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 1);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, select_errnos);\n+        }\n+        return r;\n+    }\n+\n+    bool IsSelectable() const override\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+};\n+\n+FuzzedSocket ConsumeSocket(FuzzedDataProvider& fuzzed_data_provider)",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 148,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "0370d7a22a4316dc11c4c85abc94f32cf960cf4c",
      "in_reply_to_id": 571705869,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now addressed. Thanks!",
      "created_at": "2021-02-08T17:01:36Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r572210839",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572210839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576926489",
      "pull_request_review_id": 591358974,
      "id": 576926489,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkyNjQ4OQ==",
      "diff_hunk": "@@ -250,6 +250,24 @@ template <class T>\n     return false;\n }\n \n+/**\n+ * Returns a copy of the value selected from the given vector `v`.\n+ */\n+template <typename T>\n+[[nodiscard]] T PickValue(FuzzedDataProvider& fuzzed_data_provider, const std::vector<T> v) noexcept",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 8,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is the full vector copied?",
      "created_at": "2021-02-16T15:47:40Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r576926489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576926489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929017",
      "pull_request_review_id": 591358974,
      "id": 576929017,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkyOTAxNw==",
      "diff_hunk": "@@ -250,6 +250,24 @@ template <class T>\n     return false;\n }\n \n+/**\n+ * Returns a copy of the value selected from the given vector `v`.\n+ */\n+template <typename T>\n+[[nodiscard]] T PickValue(FuzzedDataProvider& fuzzed_data_provider, const std::vector<T> v) noexcept\n+{\n+    assert(!v.empty());\n+    return v[fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, v.size() - 1)];\n+}\n+\n+/**\n+ * Sets errno to a value selected from the given vector `errnos`.\n+ */\n+inline void SetFuzzedErrNo(FuzzedDataProvider& fuzzed_data_provider, const std::vector<int> errnos) noexcept",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 17,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2021-02-16T15:50:40Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r576929017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929991",
      "pull_request_review_id": 591358974,
      "id": 576929991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkyOTk5MQ==",
      "diff_hunk": "@@ -250,6 +250,24 @@ template <class T>\n     return false;\n }\n \n+/**\n+ * Returns a copy of the value selected from the given vector `v`.\n+ */\n+template <typename T>\n+[[nodiscard]] T PickValue(FuzzedDataProvider& fuzzed_data_provider, const std::vector<T> v) noexcept\n+{\n+    assert(!v.empty());\n+    return v[fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, v.size() - 1)];\n+}\n+\n+/**\n+ * Sets errno to a value selected from the given vector `errnos`.\n+ */\n+inline void SetFuzzedErrNo(FuzzedDataProvider& fuzzed_data_provider, const std::vector<int> errnos) noexcept",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 17,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576929017,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also I am wondering why this can't use PickValueInArray",
      "created_at": "2021-02-16T15:51:58Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r576929991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576932534",
      "pull_request_review_id": 591358974,
      "id": 576932534,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkzMjUzNA==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth, const Sock& socket);\n+\n+namespace {\n+int DEFAULT_SOCKS5_RECV_TIMEOUT;\n+};\n+\n+extern int SOCKS5_RECV_TIMEOUT;\n+void initialize_socks5()\n+{\n+    static const std::unique_ptr<const BasicTestingSetup> testing_setup = MakeFuzzingContext<>();\n+    DEFAULT_SOCKS5_RECV_TIMEOUT = SOCKS5_RECV_TIMEOUT;\n+}\n+\n+FUZZ_TARGET_INIT(socks5, initialize_socks5)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    struct ProxyCredentials proxy_credentials;\n+    proxy_credentials.username = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    proxy_credentials.password = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    InterruptSocks5(fuzzed_data_provider.ConsumeBool());\n+    // Set FUZZED_SOCKET_FAKE_LATENCY=1 to exercise recv timeout code paths. This\n+    // will slow down fuzzing.\n+    SOCKS5_RECV_TIMEOUT = (fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) ? 1 : DEFAULT_SOCKS5_RECV_TIMEOUT;\n+    FuzzedSock fuzzed_sock = ConsumeSock(fuzzed_data_provider);\n+    // This Socks5(...) fuzzing harness would have caught CVE-2017-18350 within\n+    // a few seconds of fuzzing.\n+    (void)Socks5(fuzzed_data_provider.ConsumeRandomLengthString(512), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeBool() ? &proxy_credentials : nullptr, fuzzed_sock);",
      "path": "src/test/fuzz/socks5.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Would be nice to break long lines after each `,` or `?`, or `:`",
      "created_at": "2021-02-16T15:55:11Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r576932534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576932534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576933022",
      "pull_request_review_id": 591358974,
      "id": 576933022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkzMzAyMg==",
      "diff_hunk": "@@ -534,4 +552,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        const std::vector<int> send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        const std::vector<int> recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(m_fuzzed_data_provider.ConsumeBool() ? len : m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 111,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Would be nice to break long lines after each `?`, or `:`",
      "created_at": "2021-02-16T15:55:41Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r576933022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576933022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 629,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577000785",
      "pull_request_review_id": 591455472,
      "id": 577000785,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzAwMDc4NQ==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth, const Sock& socket);",
      "path": "src/test/fuzz/socks5.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: since `Socks5()` is not `static` now in `netbase.cpp`, I think it is more natural to put its declaration (prototype) in `netbase.h` and remove it from here.\r\n\r\nSame for `SOCKS5_RECV_TIMEOUT`.",
      "created_at": "2021-02-16T17:24:11Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577000785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577000785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577043636",
      "pull_request_review_id": 591508553,
      "id": 577043636,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA0MzYzNg==",
      "diff_hunk": "@@ -250,6 +250,24 @@ template <class T>\n     return false;\n }\n \n+/**\n+ * Returns a copy of the value selected from the given vector `v`.\n+ */\n+template <typename T>\n+[[nodiscard]] T PickValue(FuzzedDataProvider& fuzzed_data_provider, const std::vector<T> v) noexcept",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 8,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576926489,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, that was not intentional. Thanks!",
      "created_at": "2021-02-16T18:27:38Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577043636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577043636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073043",
      "pull_request_review_id": 591544863,
      "id": 577073043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA3MzA0Mw==",
      "diff_hunk": "@@ -250,6 +250,24 @@ template <class T>\n     return false;\n }\n \n+/**\n+ * Returns a copy of the value selected from the given vector `v`.\n+ */\n+template <typename T>\n+[[nodiscard]] T PickValue(FuzzedDataProvider& fuzzed_data_provider, const std::vector<T> v) noexcept\n+{\n+    assert(!v.empty());\n+    return v[fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, v.size() - 1)];\n+}\n+\n+/**\n+ * Sets errno to a value selected from the given vector `errnos`.\n+ */\n+inline void SetFuzzedErrNo(FuzzedDataProvider& fuzzed_data_provider, const std::vector<int> errnos) noexcept",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 17,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576929017,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1. Thanks! Fixed.\r\n2. Now using `std::array` and `PickValueInArray`.",
      "created_at": "2021-02-16T19:15:26Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577073043",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073150",
      "pull_request_review_id": 591544972,
      "id": 577073150,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA3MzE1MA==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth, const Sock& socket);\n+\n+namespace {\n+int DEFAULT_SOCKS5_RECV_TIMEOUT;\n+};\n+\n+extern int SOCKS5_RECV_TIMEOUT;\n+void initialize_socks5()\n+{\n+    static const std::unique_ptr<const BasicTestingSetup> testing_setup = MakeFuzzingContext<>();\n+    DEFAULT_SOCKS5_RECV_TIMEOUT = SOCKS5_RECV_TIMEOUT;\n+}\n+\n+FUZZ_TARGET_INIT(socks5, initialize_socks5)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    struct ProxyCredentials proxy_credentials;\n+    proxy_credentials.username = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    proxy_credentials.password = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    InterruptSocks5(fuzzed_data_provider.ConsumeBool());\n+    // Set FUZZED_SOCKET_FAKE_LATENCY=1 to exercise recv timeout code paths. This\n+    // will slow down fuzzing.\n+    SOCKS5_RECV_TIMEOUT = (fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) ? 1 : DEFAULT_SOCKS5_RECV_TIMEOUT;\n+    FuzzedSock fuzzed_sock = ConsumeSock(fuzzed_data_provider);\n+    // This Socks5(...) fuzzing harness would have caught CVE-2017-18350 within\n+    // a few seconds of fuzzing.\n+    (void)Socks5(fuzzed_data_provider.ConsumeRandomLengthString(512), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeBool() ? &proxy_credentials : nullptr, fuzzed_sock);",
      "path": "src/test/fuzz/socks5.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576932534,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2021-02-16T19:15:35Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577073150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073230",
      "pull_request_review_id": 591545040,
      "id": 577073230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA3MzIzMA==",
      "diff_hunk": "@@ -534,4 +552,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        const std::vector<int> send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        const std::vector<int> recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(m_fuzzed_data_provider.ConsumeBool() ? len : m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 111,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576933022,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2021-02-16T19:15:41Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577073230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577073230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 629,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577650893",
      "pull_request_review_id": 591455472,
      "id": 577650893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzY1MDg5Mw==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());",
      "path": "src/test/fuzz/util.h",
      "position": 122,
      "original_position": 124,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: the typecast `(char*)` in `memset()` should not be needed. Or if it is needed (why?), then it should also be needed for the `memcpy()` call a few lines earlier since both take `void*` argument.",
      "created_at": "2021-02-17T14:23:19Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577650893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577650893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": 638,
      "original_start_line": 640,
      "start_side": "RIGHT",
      "line": 641,
      "original_line": 641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577660714",
      "pull_request_review_id": 591455472,
      "id": 577660714,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzY2MDcxNA==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+            std::this_thread::sleep_for(std::chrono::milliseconds{2});",
      "path": "src/test/fuzz/util.h",
      "position": 127,
      "original_position": 129,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`SOCKS5_RECV_TIMEOUT` can be lowered to 1 second for the tests or be the default 20 seconds.\r\nIn half of the cases this will sleep for 2 ms. So we need 500 `Recv()` calls where this sleep is executed in order to trigger a higher level timeout of 1 second.\r\n\r\nI think this timeout will practically never be reached. Maybe change this to a few 100s of ms to make a timeout more likely?",
      "created_at": "2021-02-17T14:35:21Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577660714",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577660714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 646,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578422048",
      "pull_request_review_id": 593217990,
      "id": 578422048,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQyMjA0OA==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth, const Sock& socket);\n+\n+namespace {\n+int DEFAULT_SOCKS5_RECV_TIMEOUT;\n+};\n+\n+extern int SOCKS5_RECV_TIMEOUT;\n+void initialize_socks5()\n+{\n+    static const std::unique_ptr<const BasicTestingSetup> testing_setup = MakeFuzzingContext<>();\n+    DEFAULT_SOCKS5_RECV_TIMEOUT = SOCKS5_RECV_TIMEOUT;\n+}\n+\n+FUZZ_TARGET_INIT(socks5, initialize_socks5)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    struct ProxyCredentials proxy_credentials;\n+    proxy_credentials.username = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    proxy_credentials.password = fuzzed_data_provider.ConsumeRandomLengthString(512);\n+    InterruptSocks5(fuzzed_data_provider.ConsumeBool());\n+    // Set FUZZED_SOCKET_FAKE_LATENCY=1 to exercise recv timeout code paths. This\n+    // will slow down fuzzing.\n+    SOCKS5_RECV_TIMEOUT = (fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) ? 1 : DEFAULT_SOCKS5_RECV_TIMEOUT;\n+    FuzzedSock fuzzed_sock = ConsumeSock(fuzzed_data_provider);\n+    // This Socks5(...) fuzzing harness would have caught CVE-2017-18350 within\n+    // a few seconds of fuzzing.\n+    (void)Socks5(fuzzed_data_provider.ConsumeRandomLengthString(512), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeBool() ? &proxy_credentials : nullptr, fuzzed_sock);",
      "path": "src/test/fuzz/socks5.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 576932534,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Would be nice to break long lines ...\r\n\r\nOpened https://github.com/bitcoin/bitcoin/pull/21223 style: make clang-format break long lines",
      "created_at": "2021-02-18T13:37:03Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r578422048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578422048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579225840",
      "pull_request_review_id": 594240663,
      "id": 579225840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTIyNTg0MA==",
      "diff_hunk": "@@ -534,4 +544,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{",
      "path": "src/test/fuzz/util.h",
      "position": 58,
      "original_position": 58,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"fuzz: Add fuzzing harness for Socks5(...)\" (1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff)\r\n\r\nIt it better to make assumptions about return value and `errno` value with `ConsumeIntegralInRange` and `PickValueInArray` instead of just using `ConsumeIntegral` for these? `ConsumeIntegral` would definitely make the setup shorter and simpler and seem to make fuzzing more robust. Would it cause fuzzing to be too slow?",
      "created_at": "2021-02-19T14:30:09Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r579225840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579225840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 577,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579227540",
      "pull_request_review_id": 594240663,
      "id": 579227540,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTIyNzU0MA==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());",
      "path": "src/test/fuzz/util.h",
      "position": 122,
      "original_position": 124,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": 577650893,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577650893\r\n\r\n> nit: the typecast `(char*)` in `memset()` should not be needed. Or if it is needed (why?), then it should also be needed for the `memcpy()` call a few lines earlier since both take `void*` argument.\r\n\r\nI think think the compiler won't allow arithmetic `+ random_bytes.size()` on a void pointer.",
      "created_at": "2021-02-19T14:32:34Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r579227540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579227540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": 638,
      "original_start_line": 640,
      "start_side": "RIGHT",
      "line": 641,
      "original_line": 641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579230964",
      "pull_request_review_id": 594240663,
      "id": 579230964,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTIzMDk2NA==",
      "diff_hunk": "@@ -534,4 +544,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 113,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"fuzz: Add fuzzing harness for Socks5(...)\" (1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff)\r\n\r\nAgain I don't understand why need to bias the choice here instead of just choosing uniformly in the range. I guess I don't understand enough about fuzzing but it seems annoying if you have to hold the fuzzer's hand this way.",
      "created_at": "2021-02-19T14:37:41Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r579230964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579230964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": 630,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 632,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579238337",
      "pull_request_review_id": 594240663,
      "id": 579238337,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTIzODMzNw==",
      "diff_hunk": "@@ -41,7 +41,7 @@ int nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n bool fNameLookup = DEFAULT_NAME_LOOKUP;\n \n // Need ample time for negotiation for very slow proxies such as Tor (milliseconds)\n-static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n+int SOCKS5_RECV_TIMEOUT = 20 * 1000;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"fuzz: Add FUZZED_SOCKET_FAKE_LATENCY mode to FuzzedSock to allow for fuzzing timeout logic\" (88af03002c170d95dc04077f3bbcd739e2a9e5b7)\r\n\r\nIt seems dangerous to disguise a variable as an all caps constant. Best thing would be change this to a `SOCKS5_RECV_TIMEOUT_DEFAULT` default timeout, and add a runtime parameter to override the default. If that's too complicated, next best thing would be to `s/SOCKS5_RECV_TIMEOUT/g_socks5_recv_timeout/`",
      "created_at": "2021-02-19T14:47:43Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r579238337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579238337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579244585",
      "pull_request_review_id": 594240663,
      "id": 579244585,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTI0NDU4NQ==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+            std::this_thread::sleep_for(std::chrono::milliseconds{2});",
      "path": "src/test/fuzz/util.h",
      "position": 127,
      "original_position": 129,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": 577660714,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19203#discussion_r577660714\r\n\r\n> `SOCKS5_RECV_TIMEOUT` can be lowered to 1 second for the tests or be the default 20 seconds.\r\n> In half of the cases this will sleep for 2 ms. So we need 500 `Recv()` calls where this sleep is executed in order to trigger a higher level timeout of 1 second.\r\n> \r\n> I think this timeout will practically never be reached. Maybe change this to a few 100s of ms to make a timeout more likely?\r\n\r\nSOCKS5_RECV_TIMEOUT looks like milliseconds not seconds so std::chrono::milliseconds{2} should always time out.\r\n\r\nAlso, I'm assuming this is fake-sleeping not really sleeping in the middle of a fuzz test?",
      "created_at": "2021-02-19T14:56:08Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r579244585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579244585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 646,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584485495",
      "pull_request_review_id": 600436834,
      "id": 584485495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDQ4NTQ5NQ==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+            std::this_thread::sleep_for(std::chrono::milliseconds{2});",
      "path": "src/test/fuzz/util.h",
      "position": 127,
      "original_position": 129,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": 577660714,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right - it can be lowered to 1ms or be the default 20sec. If we want to always produce a timeout, maybe better to sleep for `SOCKS5_RECV_TIMEOUT` instead of `std::chrono::milliseconds{2}`?\r\n\r\nWhy would it be fake sleeping? My understanding is that it will actually sleep in the middle of the fuzz test.",
      "created_at": "2021-03-01T07:08:40Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r584485495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584485495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 646,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584487055",
      "pull_request_review_id": 600438831,
      "id": 584487055,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDQ4NzA1NQ==",
      "diff_hunk": "@@ -534,4 +544,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{",
      "path": "src/test/fuzz/util.h",
      "position": 58,
      "original_position": 58,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff",
      "in_reply_to_id": 579225840,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we want to mimic a conforming OS `send()` because our code is not prepared to handle a misbehaving `send()`, e.g.\r\n* one that returns `-1` and does not set `errno` or\r\n* returns `-1` and sets errno to `2379392` or \r\n* returns `-9287` or\r\n* returns a number bigger than `len`.",
      "created_at": "2021-03-01T07:12:59Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r584487055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584487055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 577,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585559158",
      "pull_request_review_id": 601807113,
      "id": 585559158,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTU1OTE1OA==",
      "diff_hunk": "@@ -41,7 +41,7 @@ int nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n bool fNameLookup = DEFAULT_NAME_LOOKUP;\n \n // Need ample time for negotiation for very slow proxies such as Tor (milliseconds)\n-static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n+int SOCKS5_RECV_TIMEOUT = 20 * 1000;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": 579238337,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed!",
      "created_at": "2021-03-02T13:22:25Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r585559158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585559158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585559526",
      "pull_request_review_id": 601807635,
      "id": 585559526,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTU1OTUyNg==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+bool Socks5(const std::string& strDest, int port, const ProxyCredentials* auth, const Sock& socket);",
      "path": "src/test/fuzz/socks5.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "ff13f099c922b90b6952d896d948d713ef6e9f7d",
      "in_reply_to_id": 577000785,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed!",
      "created_at": "2021-03-02T13:23:01Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r585559526",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585559526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585565843",
      "pull_request_review_id": 601815929,
      "id": 585565843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTU2NTg0Mw==",
      "diff_hunk": "@@ -534,4 +544,121 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        if (random_bytes.empty()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            if (len > random_bytes.size()) {\n+                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n+            }\n+            return len;\n+        }\n+        if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+            std::this_thread::sleep_for(std::chrono::milliseconds{2});",
      "path": "src/test/fuzz/util.h",
      "position": 127,
      "original_position": 129,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "88af03002c170d95dc04077f3bbcd739e2a9e5b7",
      "in_reply_to_id": 577660714,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unfortunately the sleeping required to make the timeout trigger is not mockable: that's the reason for making the ugly 2 ms real sleep opt-in via the environment variable `FUZZED_SOCKET_FAKE_LATENCY`. That environment is not assumed to be set except in special circumstances such as when targeted fuzzing is performed by security researchers and others who are willing to pay the 2 ms cost in order to get full coverage including the timeout logic.\r\n\r\nMaking the sleeping required to trigger the timeout mockable is likely out of scope for this PR (but would be nice to have!), so if the opt-in-to-timeout-via-`FUZZED_SOCKET_FAKE_LATENCY` workaround is deemed too ugly I could simply drop that commit from this PR, and we'll get partial instead of full coverage :)\r\n\r\nLet me know what you think and I'll adjust accordingly :)",
      "created_at": "2021-03-02T13:31:48Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r585565843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585565843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 646,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585667452",
      "pull_request_review_id": 601952859,
      "id": 585667452,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY2NzQ1Mg==",
      "diff_hunk": "@@ -534,4 +544,118 @@ void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) no\n     }\n }\n \n+class FuzzedSock : public Sock\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    ~FuzzedSock() override\n+    {\n+    }\n+\n+    SOCKET Get() const override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    SOCKET Release() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    void Reset() override\n+    {\n+        assert(false && \"Not implemented yet.\");\n+    }\n+\n+    ssize_t Send(const void* data, size_t len, int flags) const override\n+    {\n+        constexpr std::array send_errnos{\n+            EACCES,\n+            EAGAIN,\n+            EALREADY,\n+            EBADF,\n+            ECONNRESET,\n+            EDESTADDRREQ,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            EISCONN,\n+            EMSGSIZE,\n+            ENOBUFS,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EOPNOTSUPP,\n+            EPIPE,\n+            EWOULDBLOCK,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return len;\n+        }\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\n+        if (r == -1) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\n+        }\n+        return r;\n+    }\n+\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        constexpr std::array recv_errnos{\n+            EAGAIN,\n+            EBADF,\n+            ECONNREFUSED,\n+            EFAULT,\n+            EINTR,\n+            EINVAL,\n+            ENOMEM,\n+            ENOTCONN,\n+            ENOTSOCK,\n+            EWOULDBLOCK,\n+        };\n+        assert(buf != nullptr || len == 0);\n+        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n+            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+            if (r == -1) {\n+                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n+            }\n+            return r;\n+        }\n+        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n+            m_fuzzed_data_provider.ConsumeBool() ?\n+                len :\n+                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 113,
      "commit_id": "366e3e1f89d99c62b548087384487b62fd602e17",
      "original_commit_id": "1d95ff9f731b0c5a317a9c3ce52e37b4a57e99ff",
      "in_reply_to_id": 579230964,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good question!\r\n\r\nMy intuition was that the fuzzer would be helped by being able to distinguish between the expected \"success case\" (enough to read) and the unexpected \"fail\" case ((likely) not enough to read) on a single byte input basis. In other words: a single byte input chooses between the \"fail path\" and the \"success path\" via `ConsumeBool`.\r\n\r\nAfter some tinkering/measuring it seems like that effort to help the fuzzer didn't make any significant difference.\r\n\r\nNow skipping the `ConsumeBool(…) ? len : ConsumeIntegralInRange(…)` in favor of a straight `ConsumeIntegralInRange(…)` as suggested. Please re-review :)",
      "created_at": "2021-03-02T15:34:04Z",
      "updated_at": "2021-03-02T21:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19203#discussion_r585667452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585667452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19203"
        }
      },
      "start_line": null,
      "original_start_line": 630,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 632,
      "side": "RIGHT"
    }
  ]
}