{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
    "id": 36038314,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYwMzgzMTQ=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6176",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/6176.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/6176.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f3044fd191505253e7914916c784235698514e1e",
    "number": 6176,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add first-seen-safe replace-by-fee logic to the mempool",
    "user": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Replaces transactions already in the mempool if a new transaction is seen with a higher fee, provided that the replacement transaction's outputs pay all previous outputs an equal or greater amount. This preserves the \"first seen\" behavior of the mempool, in the sense that a transaction will never be replaced in a fashion that prevents an address from receiving funds that it otherwise would have. In short, zero-conf transactions are unaffected. (beyond the usual breakage for any mempool behavior change)\n\nTo prevent replacements from being used as a DoS attack mechanism a replacement only happens if the new transaction has a higher fee, pays a higher fee/KB rate, and the fee increase is sufficient to pay for the bandwidth consumed in relaying the replacement.\n\nIncludes stand-alone unittests for regtest in qa/replace-by-fee/ (implemented w/ python-bitcoinlib as I've been asked for a backport of this to v0.10/v0.9)\n\nYou can easily try out the behavior using https://github.com/petertodd/replace-by-fee-tools bump-fee.py with the -s first-seen-safe mode switch.\n\nCC: @aalness @coblee re: https://github.com/petertodd/bitcoin/pull/3\n",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2015-05-22T14:52:16Z",
    "updated_at": "2021-09-08T10:54:56Z",
    "closed_at": "2015-06-29T05:03:51Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "08ff923b91af0868cd3919ed13be96ced724f95c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "petertodd:first-seen-safe-rbf",
      "ref": "first-seen-safe-rbf",
      "sha": "f3044fd191505253e7914916c784235698514e1e",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 5992112,
        "node_id": "MDEwOlJlcG9zaXRvcnk1OTkyMTEy",
        "name": "bitcoin",
        "full_name": "petertodd/bitcoin",
        "owner": {
          "login": "petertodd",
          "id": 7042,
          "node_id": "MDQ6VXNlcjcwNDI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/petertodd",
          "html_url": "https://github.com/petertodd",
          "followers_url": "https://api.github.com/users/petertodd/followers",
          "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
          "organizations_url": "https://api.github.com/users/petertodd/orgs",
          "repos_url": "https://api.github.com/users/petertodd/repos",
          "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/petertodd/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/petertodd/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/petertodd/bitcoin",
        "archive_url": "https://api.github.com/repos/petertodd/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/petertodd/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/petertodd/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/petertodd/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/petertodd/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/petertodd/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/petertodd/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/petertodd/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/petertodd/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/petertodd/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/petertodd/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/petertodd/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/petertodd/bitcoin/events",
        "forks_url": "https://api.github.com/repos/petertodd/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/petertodd/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/petertodd/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/petertodd/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/petertodd/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/petertodd/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/petertodd/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/petertodd/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/petertodd/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/petertodd/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/petertodd/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/petertodd/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/petertodd/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/petertodd/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/petertodd/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/petertodd/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:petertodd/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/petertodd/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/petertodd/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/petertodd/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/petertodd/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/petertodd/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/petertodd/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/petertodd/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/petertodd/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/petertodd/bitcoin/hooks",
        "svn_url": "https://github.com/petertodd/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 6,
        "stargazers_count": 20,
        "watchers_count": 20,
        "size": 215368,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-26T23:38:42Z",
        "created_at": "2012-09-28T03:31:40Z",
        "updated_at": "2023-06-01T22:33:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "247b91449ad7d041c6af5d2abf5660ab00be0fb4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 560,
    "deletions": 2,
    "changed_files": 4,
    "commits": 1,
    "review_comments": 14,
    "comments": 13
  },
  "events": [
    {
      "event": "mentioned",
      "id": 311768490,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzExNzY4NDkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311768490",
      "actor": {
        "login": "aalness",
        "id": 4391003,
        "node_id": "MDQ6VXNlcjQzOTEwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aalness",
        "html_url": "https://github.com/aalness",
        "followers_url": "https://api.github.com/users/aalness/followers",
        "following_url": "https://api.github.com/users/aalness/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aalness/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aalness/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
        "organizations_url": "https://api.github.com/users/aalness/orgs",
        "repos_url": "https://api.github.com/users/aalness/repos",
        "events_url": "https://api.github.com/users/aalness/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aalness/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T14:52:16Z"
    },
    {
      "event": "subscribed",
      "id": 311768491,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMTc2ODQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311768491",
      "actor": {
        "login": "aalness",
        "id": 4391003,
        "node_id": "MDQ6VXNlcjQzOTEwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aalness",
        "html_url": "https://github.com/aalness",
        "followers_url": "https://api.github.com/users/aalness/followers",
        "following_url": "https://api.github.com/users/aalness/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aalness/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aalness/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
        "organizations_url": "https://api.github.com/users/aalness/orgs",
        "repos_url": "https://api.github.com/users/aalness/repos",
        "events_url": "https://api.github.com/users/aalness/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aalness/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T14:52:16Z"
    },
    {
      "event": "mentioned",
      "id": 311768492,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzExNzY4NDky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311768492",
      "actor": {
        "login": "coblee",
        "id": 999927,
        "node_id": "MDQ6VXNlcjk5OTkyNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/999927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coblee",
        "html_url": "https://github.com/coblee",
        "followers_url": "https://api.github.com/users/coblee/followers",
        "following_url": "https://api.github.com/users/coblee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/coblee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/coblee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/coblee/subscriptions",
        "organizations_url": "https://api.github.com/users/coblee/orgs",
        "repos_url": "https://api.github.com/users/coblee/repos",
        "events_url": "https://api.github.com/users/coblee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/coblee/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T14:52:16Z"
    },
    {
      "event": "subscribed",
      "id": 311768494,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMTc2ODQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311768494",
      "actor": {
        "login": "coblee",
        "id": 999927,
        "node_id": "MDQ6VXNlcjk5OTkyNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/999927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coblee",
        "html_url": "https://github.com/coblee",
        "followers_url": "https://api.github.com/users/coblee/followers",
        "following_url": "https://api.github.com/users/coblee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/coblee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/coblee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/coblee/subscriptions",
        "organizations_url": "https://api.github.com/users/coblee/orgs",
        "repos_url": "https://api.github.com/users/coblee/repos",
        "events_url": "https://api.github.com/users/coblee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/coblee/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T14:52:16Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjIwOTU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjIwOTc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 311787688,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExNzg3Njg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311787688",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T15:13:48Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjIwOTg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 311873809,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExODczODA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/311873809",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-22T16:51:47Z"
    },
    {
      "event": "commented",
      "id": 104877829,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDg3NzgyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104877829",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T10:04:05Z",
      "updated_at": "2015-05-23T10:04:05Z",
      "author_association": "MEMBER",
      "body": "I think we need to add a check that the replacing transaction isn't spending an output of the to-be-replaced transaction; I just wrote up a quick test and it looks to me like this would cause an orphan transaction to enter the mempool.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 312367326,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyMzY3MzI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/312367326",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T16:14:20Z"
    },
    {
      "event": "commented",
      "id": 104918678,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDkxODY3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104918678",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T16:14:30Z",
      "updated_at": "2015-05-23T16:14:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar Nice catch! Fixed.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104918678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 312367387,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEyMzY3Mzg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/312367387",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T16:14:30Z"
    },
    {
      "event": "subscribed",
      "id": 312367388,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMjM2NzM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/312367388",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T16:14:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 312384927,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyMzg0OTI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/312384927",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-23T17:32:23Z"
    },
    {
      "event": "labeled",
      "id": 313541054,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMzU0MTA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/313541054",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-26T08:34:20Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 105630255,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTYzMDI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105630255",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-26T18:40:45Z",
      "updated_at": "2015-05-26T18:40:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Should also ensure that no inputs have been removed or changed (other than scriptsigs) -- only added.\n\nOtherwise, the semantics change for the original signers.  Imagine a tx with two inputs from different parties.  Should it be easy for party 1 to be able to eliminate party 2 as a contributor of funds?  It's not difficult to imagine real-world consequences to not having contributed to the transaction. tx-level attributes like nLocktime should not change either.\n\nThe result would be something very like CPFP, but with the new inputs and outputs merged into the original tx, saving space and tx count.\n",
      "user": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105630255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "commented",
      "id": 105642248,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTY0MjI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105642248",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-26T19:30:17Z",
      "updated_at": "2015-05-26T19:30:17Z",
      "author_association": "MEMBER",
      "body": "I don't see a problem with removing inputs, but perhaps we should consider an additional requirement that any inputs not in the original transaction must also not be in the mempool (and therefore must already be confirmed).\n\nI think the idea should be that the replacing-transaction is more likely to be confirmed than the previous transaction.  If the replacing transaction has slightly higher fees but adds an input that depends on an unlikely-to-be-confirmed transaction, then a miner might prefer to not do the replacement.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105642248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "commented",
      "id": 105709000,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTcwOTAwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105709000",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:14:14Z",
      "updated_at": "2015-05-27T01:14:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar That's an interesting point. You're right that just forcing the input to be confirmed works; a more sophisticated - but still fairly easy to implement - approach would be to to have the mempool track the sum fee of transactions' parents and reject the replacement if you're going from a higher fee/KB parent to a lower one.\n\nHaving said that, I'm don't think you can really create an attack out of this: in either case the attacker is limited by the min-relay-fee, so they could have always done an attack by just broadcasting a long chain of transactions anyway.\n\nAnyway, I can't think of any applications other than adding inputs to transactions signed with SIGHASH_SINGLE where restricting new inputs to be confirmed would be a major limitation.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105709000",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 314371653,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0MzcxNjUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314371653",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:14:14Z"
    },
    {
      "event": "subscribed",
      "id": 314371654,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDM3MTY1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314371654",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:14:14Z"
    },
    {
      "event": "commented",
      "id": 105709406,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTcwOTQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105709406",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:19:05Z",
      "updated_at": "2015-05-27T01:19:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dgenr8 re: nLockTime, we only allow transactions into the mempool if they're final, in which case the exact nLockTime value is irrelevant; I don't think we should bend over backwards to accommodate weird smart contract protocols, particularly when it's easy to design them such that eliminating a contributor of funds from the transaction means the \"thing\" that was meant to happen doesn't happen. In all the smart contract stuff I've worked on the natural outcome of party #1 eliminating party #2 from being an input simply means that they've decided to \"purchase\" the thing/contract/right/whatever in question all by themselves rather than with the assistance of others.\n\nI didn't write it up in my FSS RBF writeup, but being able to replace transaction inputs rather than simply add to the vin makes fee bumping significantly more efficient in many scenarios; I'll write that up later on the -dev mailing list.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105709406",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 314373304,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0MzczMzA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314373304",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:19:05Z"
    },
    {
      "event": "subscribed",
      "id": 314373305,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDM3MzMwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314373305",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T01:19:05Z"
    },
    {
      "event": "commented",
      "id": 105750419,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc1MDQxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105750419",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T04:20:15Z",
      "updated_at": "2015-05-27T23:06:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@petertodd For a fee increase, there is no need to expose to deletion inputs in a transaction with inputs from multiple parties, which cannot be distinguished from a transaction whose inputs are all owned by a single party. (A tx with exactly one input can't conflict with a 1-input replacement if it increases the fee, given the restrictions on changes to outputs).\n\nYou're right about nLocktime, but there is simply no need for it to be changed to accomplish a fee bump.\n\nThis is a NACK for me unless it sticks to only what is necessary to allow a fee bump without otherwise altering the effects of the transaction replaced. IMO economizing on number of inputs is not a good enough reason.\n",
      "user": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105750419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 314463585,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0NDYzNTg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314463585",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T04:20:15Z"
    },
    {
      "event": "subscribed",
      "id": 314463586,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDQ2MzU4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314463586",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T04:20:15Z"
    },
    {
      "event": "commented",
      "id": 105799414,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc5OTQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105799414",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T07:32:28Z",
      "updated_at": "2015-05-27T07:32:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dgenr8 With CLTV you may need to set nLockTime on a transaction that previous had it unset to accomplish a fee bump; spending an input may require nLockTime to be set. Equally there are 2fa wallet cases where nLockTime must be set. Allowing nLockTime to be increased by the replacement fits well with the fee-sniping protection added by https://github.com/petertodd/bitcoin/commit/ba7fcc8de06602576ab6a5911879d3d8df80d36a\n\nRe: cost savings, I [posted them](http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07868.html) to the mailing list. Cost savings in one common example are %34\n\nIn any case, we'll see if anyone else raises any objections to this aspect of the patch; @gmaxwell has already stated he doesn't see any issue: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07846.html http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07860.html\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105799414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 314578024,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0NTc4MDI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314578024",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T07:32:28Z"
    },
    {
      "event": "subscribed",
      "id": 314578025,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDU3ODAyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314578025",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T07:32:28Z"
    },
    {
      "event": "mentioned",
      "id": 314578026,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0NTc4MDI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314578026",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T07:32:28Z"
    },
    {
      "event": "subscribed",
      "id": 314578027,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDU3ODAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314578027",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T07:32:28Z"
    },
    {
      "event": "commented",
      "id": 105915255,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTkxNTI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105915255",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T13:43:07Z",
      "updated_at": "2015-05-27T13:43:07Z",
      "author_association": "MEMBER",
      "body": "@petertodd  I agree comparing the total fee/kb with all parent tx's ought to address the issue, but I wasn't sure if implementing that would be worth the complexity, mainly because CPFP hasn't yet been merged.  But either approach seems fine to me.\n\nAnyway I also don't see this as an attack vector, more like a way to prevent a user from accidentally RBF'ing to a higher fee tx that has a lower chance of confirming, then having to RBF to a yet-higher-fee to correct the error (assuming the error is even noticed).\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105915255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 314889887,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE0ODg5ODg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314889887",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T13:43:07Z"
    },
    {
      "event": "subscribed",
      "id": 314889888,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNDg4OTg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/314889888",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-27T13:43:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 324113939,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI0MTEzOTM5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/324113939",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-06T01:35:22Z"
    },
    {
      "event": "commented",
      "id": 109506765,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTUwNjc2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109506765",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-06T02:41:38Z",
      "updated_at": "2015-06-06T02:41:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar Here's a new version with the additional restriction that additional inputs must be confirmed.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-109506765",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 324133933,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI0MTMzOTMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/324133933",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-06T02:41:38Z"
    },
    {
      "event": "subscribed",
      "id": 324133934,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNDEzMzkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/324133934",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-06T02:41:38Z"
    },
    {
      "event": "commented",
      "id": 113817547,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExMzgxNzU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113817547",
      "actor": {
        "login": "aalness",
        "id": 4391003,
        "node_id": "MDQ6VXNlcjQzOTEwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aalness",
        "html_url": "https://github.com/aalness",
        "followers_url": "https://api.github.com/users/aalness/followers",
        "following_url": "https://api.github.com/users/aalness/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aalness/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aalness/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
        "organizations_url": "https://api.github.com/users/aalness/orgs",
        "repos_url": "https://api.github.com/users/aalness/repos",
        "events_url": "https://api.github.com/users/aalness/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aalness/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-20T20:23:30Z",
      "updated_at": "2015-06-20T20:23:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@petertodd While I really appreciate you thinking to cc me on this review please do not expect one from me. I've decided to no longer work on bitcoin-related projects nor participate further in the community.\n",
      "user": {
        "login": "aalness",
        "id": 4391003,
        "node_id": "MDQ6VXNlcjQzOTEwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aalness",
        "html_url": "https://github.com/aalness",
        "followers_url": "https://api.github.com/users/aalness/followers",
        "following_url": "https://api.github.com/users/aalness/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aalness/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aalness/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
        "organizations_url": "https://api.github.com/users/aalness/orgs",
        "repos_url": "https://api.github.com/users/aalness/repos",
        "events_url": "https://api.github.com/users/aalness/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aalness/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-113817547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "mentioned",
      "id": 335987493,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM1OTg3NDkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/335987493",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-20T20:23:30Z"
    },
    {
      "event": "subscribed",
      "id": 335987494,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzNTk4NzQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/335987494",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-20T20:23:30Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjIxMDE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjIxMDU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzA0NGZkMTkxNTA1MjUzZTc5MTQ5MTZjNzg0MjM1Njk4NTE0ZTFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3044fd191505253e7914916c784235698514e1e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f3044fd191505253e7914916c784235698514e1e",
      "tree": {
        "sha": "8d93ebd30e3d89bb5c8b562de5f11ad1889b45e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d93ebd30e3d89bb5c8b562de5f11ad1889b45e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8d93ebd30e3d89bb5c8b562de5f11ad1889b45e5\nparent 247b91449ad7d041c6af5d2abf5660ab00be0fb4\nauthor Peter Todd <pete@petertodd.org> 1433520630 +0200\ncommitter Peter Todd <pete@petertodd.org> 1434949000 -0400\n\nAdd first-seen-safe replace-by-fee logic to the mempool\n\nReplaces transactions already in the mempool if a new transaction is\nseen with a higher fee, provided that the replacement transaction's\noutputs pay all previous outputs an equal or greater amount. This\npreserves the \"first seen\" behavior of the mempool, in the sense that a\ntransaction will never be replaced in a fashion that prevents an address\nfrom receiving funds that it otherwise would have. In short, zero-conf\ntransactions are unaffected.\n\nTo prevent replacements from being used as a DoS attack mechanism a\nreplacement only happens if the new transaction has a higher fee, pays a\nhigher fee/KB rate, and the fee increase is sufficient to pay for the\nbandwidth consumed in relaying the replacement.\n\nIncludes stand-alone unittests for regtest in qa/replace-by-fee/\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJVh5WJXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwNzdiYjRlOTUzY2ViNTYxNTQwODk4NDBjYzVjOWRjZmU3\nYmEyNTY2MTVlODhhNjgvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfvQ2Qf9Gt5mWMDB8QYrgi/h/Zlu6VcO\ntd+LoXL/jm76qV+P/uBJTzHBywyxsdvKgv5Tsy8sN/k4A0bXT5p2SvL+G+rRTQLN\nVKwJf+BWpkXOwCq6V5TvLc1GxxjYRszec9kBZDSVAieiKJ2O+pH2cE5p5/cbcwUk\nzvfeMokpDt3Wq/25ZVf0J7khm5y6UlkGwxf4MnmZXl0LgI13tDm3Ybuy3plZa+al\n2SZBlEjMCLp4eB/8AgrRISkBCqsdDQspZMVLm3yGwKEO2TzFQgITm+qj88Wp3Ini\ngR+w7zkjsrwv1pH9GhFdOnm3HJSeBgBzfIZjfdLnaukeDlfnTpWOSqOJBobdwQ==\n=4KFo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/247b91449ad7d041c6af5d2abf5660ab00be0fb4",
          "sha": "247b91449ad7d041c6af5d2abf5660ab00be0fb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/247b91449ad7d041c6af5d2abf5660ab00be0fb4"
        }
      ],
      "message": "Add first-seen-safe replace-by-fee logic to the mempool\n\nReplaces transactions already in the mempool if a new transaction is\nseen with a higher fee, provided that the replacement transaction's\noutputs pay all previous outputs an equal or greater amount. This\npreserves the \"first seen\" behavior of the mempool, in the sense that a\ntransaction will never be replaced in a fashion that prevents an address\nfrom receiving funds that it otherwise would have. In short, zero-conf\ntransactions are unaffected.\n\nTo prevent replacements from being used as a DoS attack mechanism a\nreplacement only happens if the new transaction has a higher fee, pays a\nhigher fee/KB rate, and the fee increase is sufficient to pay for the\nbandwidth consumed in relaying the replacement.\n\nIncludes stand-alone unittests for regtest in qa/replace-by-fee/",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-06-22T04:56:40Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-06-05T16:10:30Z"
      },
      "sha": "f3044fd191505253e7914916c784235698514e1e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 336386190,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM2Mzg2MTkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/336386190",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-22T04:57:28Z"
    },
    {
      "event": "mentioned",
      "id": 336386995,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM2Mzg2OTk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/336386995",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-22T04:58:25Z"
    },
    {
      "event": "subscribed",
      "id": 336386996,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzNjM4Njk5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/336386996",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-22T04:58:25Z"
    },
    {
      "event": "commented",
      "id": 115366200,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExNTM2NjIwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/115366200",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-25T19:09:51Z",
      "updated_at": "2015-06-25T19:09:51Z",
      "author_association": "MEMBER",
      "body": "ACK\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-115366200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "commented",
      "id": 116436480,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExNjQzNjQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/116436480",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-29T05:03:51Z",
      "updated_at": "2015-06-29T05:03:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing in favor of #6352 \n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-116436480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6176"
    },
    {
      "event": "closed",
      "id": 342572281,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQyNTcyMjgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/342572281",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-29T05:03:51Z"
    },
    {
      "event": "mentioned",
      "id": 342764347,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQyNzY0MzQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/342764347",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-29T09:15:24Z"
    },
    {
      "event": "subscribed",
      "id": 342764348,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Mjc2NDM0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/342764348",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-29T09:15:24Z"
    },
    {
      "event": "locked",
      "id": 5271510896,
      "node_id": "LOE_lADOABII584EvNc7zwAAAAE6NN9w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271510896",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:54:56Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30901955",
      "pull_request_review_id": null,
      "id": 30901955,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAxOTU1",
      "diff_hunk": "@@ -0,0 +1,315 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))",
      "path": "qa/replace-by-fee/replace-by-fee-tests.py",
      "position": 14,
      "original_position": 14,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it not be possible to rewrite/adapt this test so it would conform to other `qa/rpc-tests/*` and would therefore use the same framework?\n",
      "created_at": "2015-05-22T14:57:43Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30901955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30901955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902489",
      "pull_request_review_id": null,
      "id": 30902489,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAyNDg5",
      "diff_hunk": "@@ -0,0 +1,315 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))",
      "path": "qa/replace-by-fee/replace-by-fee-tests.py",
      "position": 14,
      "original_position": 14,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but that framework kinda sucks due to the lack of a good python Bitcoin library. Also, like I said above, I know I'll be backporting it so I needed a stand-alone set of tests that I could test the backports against.\n",
      "created_at": "2015-05-22T15:02:41Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902489",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902625",
      "pull_request_review_id": null,
      "id": 30902625,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAyNjI1",
      "diff_hunk": "@@ -1051,8 +1152,26 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Are we replacing an existing transaction?\n+        if (pool.exists(hash))\n+        {\n+        }",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Empty code block?\n",
      "created_at": "2015-05-22T15:03:58Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30903649",
      "pull_request_review_id": null,
      "id": 30903649,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAzNjQ5",
      "diff_hunk": "@@ -1051,8 +1152,26 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Are we replacing an existing transaction?\n+        if (pool.exists(hash))\n+        {\n+        }",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lol, I must be blind... That's stub code replaced by the lines just below it; fixed, thanks!\n",
      "created_at": "2015-05-22T15:14:33Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30903649",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30903649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30908342",
      "pull_request_review_id": null,
      "id": 30908342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTA4MzQy",
      "diff_hunk": "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 187,
      "original_position": 144,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe it shouldn't be possible for there to be more than one transaction in `ltxConflicted` here, is that right?  Perhaps clarifying the comment at line 1155 (or adding an assertion about the size of this list) would be helpful.\n",
      "created_at": "2015-05-22T16:08:55Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30908342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30908342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1215,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30911637",
      "pull_request_review_id": null,
      "id": 30911637,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTExNjM3",
      "diff_hunk": "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 187,
      "original_position": 144,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The mempool isn't locked the whole time, so I believe there's a small chance there could be more than one conflicting transaction. (never mind future design changes!)\n\nUpdated comment.\n",
      "created_at": "2015-05-22T16:52:51Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30911637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30911637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1215,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31074514",
      "pull_request_review_id": null,
      "id": 31074514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDc0NTE0",
      "diff_hunk": "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 187,
      "original_position": 144,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mostly an fyi after looking at this more: despite the mempool lock not being held the whole time, cs_main is held, and that seems important for a preventing a race condition (otherwise the result of `view.HaveInputs()` at line 1029 could have changed by the time you get to `pool.addUnchecked()` at line 1182)...  Anyway, I don't think there can be more than one conflicting transaction.\n",
      "created_at": "2015-05-26T20:13:26Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r31074514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31074514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1215,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32888773",
      "pull_request_review_id": null,
      "id": 32888773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODg4Nzcz",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could avoid checking each vout sequentially by checking mapNextTx.lower_bound(COutPoint(hashConflicting, 0))\n",
      "created_at": "2015-06-20T22:30:35Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32888773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32888773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32888788",
      "pull_request_review_id": null,
      "id": 32888788,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODg4Nzg4",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                {\n+                    if (pool.mapNextTx.count(COutPoint(hashConflicting, j)))\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: outpoint %s:%d already spent; can't replace with %s\",\n+                                                  hashConflicting.ToString(), j,\n+                                                  hash.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+\n+                    }\n+                }\n+\n+                set<COutPoint> setConflictsPrevouts;\n+                for (unsigned int j = 0; j < ptxConflicting->vin.size(); j++)\n+                {\n+                    setConflictsPrevouts.insert(ptxConflicting->vin[j].prevout);\n+                }\n+\n+                for (unsigned int j = 0; j < tx.vin.size(); j++)\n+                {\n+                    // Check that any new inputs spend only confirmed coins. It\n+                    // might not be economically rational to replace a\n+                    // transaction that spent confirmed inputs with one that\n+                    // spent the result of a long chain of inputs, as the total\n+                    // fee/KB might go down. Forcing all new inputs to be\n+                    // confirmed is a simple way of avoiding that problem.\n+                    if (!setConflictsPrevouts.count(tx.vin[j].prevout))\n+                    {\n+                        // Rather than check the UTXO set - potentially\n+                        // expensive - it's cheaper to just check that the new\n+                        // input refers to a tx that is *not* in the mempool.\n+                        if (pool.exists(tx.vin[j].prevout.hash))\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                      hash.ToString(), j),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+\n+                    // Check that this transaction doesn't itself spend an output\n+                    // of the conflicting transaction. If it did, when the conflict\n+                    // was removed this transaction would become an orphan. As we\n+                    // checked that the conflicts outputs were all unspent above,\n+                    // we only have to check against the conflict, not any\n+                    // children. Similarly because we'll only ever replace\n+                    // transactions on a 1-1 basis, we only have to do this check\n+                    // once.\n+                    if (tx.vin[j].prevout.hash == hashConflicting)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I may be wrong here, but wouldn't your previous check (no new inputs are in the mempool) already catch this case?\n",
      "created_at": "2015-06-20T22:31:33Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32888788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32888788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32892383",
      "pull_request_review_id": null,
      "id": 32892383,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODkyMzgz",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                {\n+                    if (pool.mapNextTx.count(COutPoint(hashConflicting, j)))\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: outpoint %s:%d already spent; can't replace with %s\",\n+                                                  hashConflicting.ToString(), j,\n+                                                  hash.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+\n+                    }\n+                }\n+\n+                set<COutPoint> setConflictsPrevouts;\n+                for (unsigned int j = 0; j < ptxConflicting->vin.size(); j++)\n+                {\n+                    setConflictsPrevouts.insert(ptxConflicting->vin[j].prevout);\n+                }\n+\n+                for (unsigned int j = 0; j < tx.vin.size(); j++)\n+                {\n+                    // Check that any new inputs spend only confirmed coins. It\n+                    // might not be economically rational to replace a\n+                    // transaction that spent confirmed inputs with one that\n+                    // spent the result of a long chain of inputs, as the total\n+                    // fee/KB might go down. Forcing all new inputs to be\n+                    // confirmed is a simple way of avoiding that problem.\n+                    if (!setConflictsPrevouts.count(tx.vin[j].prevout))\n+                    {\n+                        // Rather than check the UTXO set - potentially\n+                        // expensive - it's cheaper to just check that the new\n+                        // input refers to a tx that is *not* in the mempool.\n+                        if (pool.exists(tx.vin[j].prevout.hash))\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                      hash.ToString(), j),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+\n+                    // Check that this transaction doesn't itself spend an output\n+                    // of the conflicting transaction. If it did, when the conflict\n+                    // was removed this transaction would become an orphan. As we\n+                    // checked that the conflicts outputs were all unspent above,\n+                    // we only have to check against the conflict, not any\n+                    // children. Similarly because we'll only ever replace\n+                    // transactions on a 1-1 basis, we only have to do this check\n+                    // once.\n+                    if (tx.vin[j].prevout.hash == hashConflicting)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, yeah, that's true now that it's been changed to require new inputs to be confirmed. Good catch.\n",
      "created_at": "2015-06-21T10:35:37Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32892383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32892383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32892417",
      "pull_request_review_id": null,
      "id": 32892417,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODkyNDE3",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As in, check if the mapNextTx.lower_bound() hash == hashConflicting or the lower_bound() returns mapNextTx.end()?\n\nSeems reasonable, though the way that depends on which way COutPoint's is sorted bothers me slightly.\n",
      "created_at": "2015-06-21T10:41:51Z",
      "updated_at": "2015-06-22T04:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32892417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32892417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32905456",
      "pull_request_review_id": null,
      "id": 32905456,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTA1NDU2",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ashleyholman Switched to lower_bound(), thanks! Mind checking the new code over?\n",
      "created_at": "2015-06-22T04:58:25Z",
      "updated_at": "2015-06-22T04:58:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32905456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32905456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32905506",
      "pull_request_review_id": null,
      "id": 32905506,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTA1NTA2",
      "diff_hunk": "@@ -912,16 +912,121 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n+    uint256 hashConflicting;\n+    CAmount nConflictingFees = 0;\n+    size_t nConflictingSize = 0;\n+\n     // Check for conflicts with in-memory transactions\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n+    const CTransaction *ptxConflicting = NULL;\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n         if (pool.mapNextTx.count(outpoint))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            if (ptxConflicting)\n+            {\n+                // For simplicity we only replace transactions on a 1-for-1 basis.\n+                if (pool.mapNextTx[outpoint].ptx != ptxConflicting)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s conflicts with more than one other transaction\",\n+                                              hash.ToString()),\n+                                     REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+            }\n+            else\n+            {\n+                ptxConflicting = pool.mapNextTx[outpoint].ptx;\n+                hashConflicting = ptxConflicting->GetHash();\n+\n+                if (GetBoolArg(\"-firstseensafe\", true))\n+                {\n+                    // Check that the replacement is first-seen-safe.\n+                    //\n+                    // This requires the conflicting transaction's vout to be a\n+                    // subset of the replacement. Outputs can pay more than before,\n+                    // but not less. For simplicity we require the order of outputs\n+                    // be unchanged.\n+                    if (tx.vout.size() < ptxConflicting->vout.size())\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement has %s fewer outputs than original %s\",\n+                                                  hash.ToString(),\n+                                                  hashConflicting.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+                    for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                    {\n+                        if (ptxConflicting->vout[j].scriptPubKey != tx.vout[j].scriptPubKey ||\n+                            ptxConflicting->vout[j].nValue > tx.vout[j].nValue)\n+                        {\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s outputs not a subset of original %s\",\n+                                                      hash.ToString(),\n+                                                      hashConflicting.ToString()),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                        }\n+                    }\n+                }\n+\n+                // Make sure the outputs of the transaction we're replacing\n+                // have not been spent.\n+                for (unsigned int j = 0; j < ptxConflicting->vout.size(); j++)\n+                {\n+                    if (pool.mapNextTx.count(COutPoint(hashConflicting, j)))\n+                    {\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: outpoint %s:%d already spent; can't replace with %s\",\n+                                                  hashConflicting.ToString(), j,\n+                                                  hash.ToString()),\n+                                         REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+\n+                    }\n+                }\n+\n+                set<COutPoint> setConflictsPrevouts;\n+                for (unsigned int j = 0; j < ptxConflicting->vin.size(); j++)\n+                {\n+                    setConflictsPrevouts.insert(ptxConflicting->vin[j].prevout);\n+                }\n+\n+                for (unsigned int j = 0; j < tx.vin.size(); j++)\n+                {\n+                    // Check that any new inputs spend only confirmed coins. It\n+                    // might not be economically rational to replace a\n+                    // transaction that spent confirmed inputs with one that\n+                    // spent the result of a long chain of inputs, as the total\n+                    // fee/KB might go down. Forcing all new inputs to be\n+                    // confirmed is a simple way of avoiding that problem.\n+                    if (!setConflictsPrevouts.count(tx.vin[j].prevout))\n+                    {\n+                        // Rather than check the UTXO set - potentially\n+                        // expensive - it's cheaper to just check that the new\n+                        // input refers to a tx that is *not* in the mempool.\n+                        if (pool.exists(tx.vin[j].prevout.hash))\n+                            return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                      hash.ToString(), j),\n+                                             REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n+                    }\n+\n+                    // Check that this transaction doesn't itself spend an output\n+                    // of the conflicting transaction. If it did, when the conflict\n+                    // was removed this transaction would become an orphan. As we\n+                    // checked that the conflicts outputs were all unspent above,\n+                    // we only have to check against the conflict, not any\n+                    // children. Similarly because we'll only ever replace\n+                    // transactions on a 1-1 basis, we only have to do this check\n+                    // once.\n+                    if (tx.vin[j].prevout.hash == hashConflicting)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "b7ac851a98a18e9e6c73a00d97e8541ee3dc6f77",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed this check and replaced it with a comment describing how it's needed if we ever allow the new inputs to be unconfirmed.\n",
      "created_at": "2015-06-22T04:59:13Z",
      "updated_at": "2015-06-22T04:59:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r32905506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32905506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33446240",
      "pull_request_review_id": null,
      "id": 33446240,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDQ2MjQw",
      "diff_hunk": "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 187,
      "original_position": 144,
      "commit_id": "f3044fd191505253e7914916c784235698514e1e",
      "original_commit_id": "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sdaftuar other policies can replace more than one conflicting transaction. But, yeah, since this code doesn't, an assert with a comment along the lines \"disable multiple replacement feature for now\" wouldn't hurt.\n",
      "created_at": "2015-06-29T09:15:24Z",
      "updated_at": "2015-06-29T09:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r33446240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33446240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1215,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}