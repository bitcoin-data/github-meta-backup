{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
    "id": 1228540648,
    "node_id": "PR_kwDOABII585JOgro",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27039",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27039.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27039.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/46cca252e30f54b06df011d268ef1b8a48b076e7",
    "number": 27039,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "blockstorage: do not flush block to disk if it is already there",
    "user": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Closes https://github.com/bitcoin/bitcoin/issues/2039\r\nReplaces https://github.com/bitcoin/bitcoin/pull/26535 (added test, addressed feedback from reviews)\r\n\r\nWhen reindexing from flat-file block storage there is no need to write anything back to disk, since the block data is already there. This PR skips flushing to disk those blocks that already have a known position in the datastore. Skipping this means that users can write-protect the `blk` files on disk which may be useful for security or even safely sharing that data between multiple bitcoind instances.\r\n\r\n`FindBlockPos()` may also flush the undo data file, but again this is skipped if the corresponding block position is known, like during the initial stage of a reindex when block data is being indexed. Once the block index is complete the validation mechanism will call `ConnectBlock()` which will save undo data at that time.\r\n\r\nThe call stack looks like this:\r\n\r\n```\r\ninit()\r\nThreadImport() <-- process fReindex flag\r\nLoadExternalBlockFile()\r\nAcceptBlock()\r\nSaveBlockToDisk()\r\nFindBlockPos()\r\nFlushBlockFile() <-- unnecessary if block is already on disk\r\n```\r\n\r\nA larger refactor of this part of the code was started by mzumsande here:  https://github.com/mzumsande/bitcoin/tree/202207_refactor_findblockpos including this fix, reviewers can let me know if the changes should be combined.\r\n\r\nThis branch also adds a unit test for `BlockManager` to ensure that the patch does not affect currently expected behavior.",
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 1648013533,
        "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
        "name": "Review club",
        "description": "",
        "color": "0052cc",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
      "id": 9286970,
      "node_id": "MI_kwDOABII584AjbU6",
      "number": 60,
      "state": "open",
      "title": "26.0",
      "description": "",
      "creator": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 3,
      "closed_issues": 9,
      "created_at": "2023-04-15T11:36:05Z",
      "updated_at": "2023-06-02T10:00:06Z"
    },
    "created_at": "2023-02-03T18:50:50Z",
    "updated_at": "2023-05-09T16:29:38Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "fa774a06e0f31c5234e0330fedcde08b0276b34e",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "pinheadmz:reindex-read-only",
      "ref": "reindex-read-only",
      "sha": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 61248407,
        "node_id": "MDEwOlJlcG9zaXRvcnk2MTI0ODQwNw==",
        "name": "bitcoin",
        "full_name": "pinheadmz/bitcoin",
        "owner": {
          "login": "pinheadmz",
          "id": 2084648,
          "node_id": "MDQ6VXNlcjIwODQ2NDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pinheadmz",
          "html_url": "https://github.com/pinheadmz",
          "followers_url": "https://api.github.com/users/pinheadmz/followers",
          "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
          "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
          "repos_url": "https://api.github.com/users/pinheadmz/repos",
          "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pinheadmz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pinheadmz/bitcoin",
        "archive_url": "https://api.github.com/repos/pinheadmz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pinheadmz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pinheadmz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pinheadmz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pinheadmz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pinheadmz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pinheadmz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pinheadmz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pinheadmz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pinheadmz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pinheadmz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pinheadmz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pinheadmz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pinheadmz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pinheadmz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pinheadmz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pinheadmz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pinheadmz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pinheadmz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pinheadmz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pinheadmz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pinheadmz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pinheadmz/bitcoin/hooks",
        "svn_url": "https://github.com/pinheadmz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 214423,
        "default_branch": "master2",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T18:37:08Z",
        "created_at": "2016-06-15T23:48:20Z",
        "updated_at": "2019-11-18T20:27:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7b45d171f549595a831489827c28e8493f36c00c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 115,
    "deletions": 10,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 47,
    "comments": 15
  },
  "events": [
    {
      "event": "mentioned",
      "id": 8435305928,
      "node_id": "MEE_lADOABII585dmMzEzwAAAAH2yI3I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8435305928",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:50:51Z"
    },
    {
      "event": "subscribed",
      "id": 8435305940,
      "node_id": "SE_lADOABII585dmMzEzwAAAAH2yI3U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8435305940",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:50:51Z"
    },
    {
      "event": "commented",
      "id": 1416266573,
      "node_id": "IC_kwDOABII585UaoNN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1416266573",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:50:53Z",
      "updated_at": "2023-05-09T01:28:32Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531882383) |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1306329978), [turkycat](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1386645395) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1289406384) |\n| Stale ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1350842653), [LarryRuane](https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1499452625) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27596](https://github.com/bitcoin/bitcoin/pull/27596) (assumeutxo (2) by jamesob)\n* [#27491](https://github.com/bitcoin/bitcoin/pull/27491) (refactor: Move chain constants to the util library by TheCharlatan)\n* [#27125](https://github.com/bitcoin/bitcoin/pull/27125) (refactor, kernel: Decouple ArgsManager from blockstorage by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1416266573",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "labeled",
      "id": 8435306410,
      "node_id": "LE_lADOABII585dmMzEzwAAAAH2yI-q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8435306410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:50:55Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "reviewed",
      "id": 1283552030,
      "node_id": "PRR_kwDOABII585MgXMe",
      "url": null,
      "actor": null,
      "commit_id": "7a2e5cdc7ff6bd39f925f17b6582ad46f7e4475b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1283552030",
      "submitted_at": "2023-02-03T18:54:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "unsubscribed",
      "id": 8435360127,
      "node_id": "UE_lADOABII585dmMzEzwAAAAH2yWF_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8435360127",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:58:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8435370761,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH2yYsJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8435370761",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:59:40Z"
    },
    {
      "event": "reviewed",
      "id": 1283698111,
      "node_id": "PRR_kwDOABII585Mg62_",
      "url": null,
      "actor": null,
      "commit_id": "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1283698111",
      "submitted_at": "2023-02-03T20:45:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8436361275,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH22Kg7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8436361275",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T21:15:08Z"
    },
    {
      "event": "reviewed",
      "id": 1283917779,
      "node_id": "PRR_kwDOABII585MhwfT",
      "url": null,
      "actor": null,
      "commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach and code review ACK a6b05f8db63bae7eefb5330048d8b1441f1a9e5e\r\nI don't understand why the test needs to start a second node or why `-fastprune` is needed (but that may just be me!).\r\n\r\nEDIT: never mind, I see now why it's needed, you've documented it well.\r\n\r\n> reviewers can let me know if the changes should be combined\r\n\r\nIt seems fine to me that this is a separate PR, but I don't have a strong opinion.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1283917779",
      "submitted_at": "2023-02-04T00:30:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8438482776,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH2-QdY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8438482776",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-04T12:15:06Z"
    },
    {
      "event": "reviewed",
      "id": 1288594338,
      "node_id": "PRR_kwDOABII585MzmOi",
      "url": null,
      "actor": null,
      "commit_id": "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "crtACK 386faaf76ea0edb2150725c5bdb69d234a2f2607\r\nI'm still not able to figure out why two nodes are needed in the test. I tried modifying the test to use just one node, but the new test `reindex_readonly()`, didn't pass (the log file contained the unexpected string \"failed to open file\"). So the second node does seem to be needed.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1288594338",
      "submitted_at": "2023-02-08T07:16:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8472469422,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH4_5-u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8472469422",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:50:15Z"
    },
    {
      "event": "reviewed",
      "id": 1290025143,
      "node_id": "PRR_kwDOABII585M5Di3",
      "url": null,
      "actor": null,
      "commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK ed57565e36bf514fc4d063972464c9152a08fb8e",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1290025143",
      "submitted_at": "2023-02-08T21:25:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "reviewed",
      "id": 1306329978,
      "node_id": "PRR_kwDOABII585N3QN6",
      "url": null,
      "actor": null,
      "commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1306329978",
      "submitted_at": "2023-02-20T21:32:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8582660691,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH_kQJT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8582660691",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T16:05:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8582694974,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAH_kYg-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8582694974",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T16:08:24Z"
    },
    {
      "event": "reviewed",
      "id": 1310390172,
      "node_id": "PRR_kwDOABII585OGvec",
      "url": null,
      "actor": null,
      "commit_id": "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e7a0339b8cb612088ca212c568c0499c0f02398b",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1310390172",
      "submitted_at": "2023-02-22T22:54:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "commented",
      "id": 1446525945,
      "node_id": "IC_kwDOABII585WODv5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446525945",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T15:20:39Z",
      "updated_at": "2023-02-27T15:20:39Z",
      "author_association": "MEMBER",
      "body": "Rebased on master and prepended an extra commit with a unit test for BlockManager. The test passes on master and the branch without modification, hopefully illustrating that at least some behaviors are not affected.\r\n\r\nIt's hard to test precisely for the branch's change in a unit test because file-flushing is not something we can really predict or test for (sometimes it happens as soon as we `fwrite()`). \r\n\r\nThe actual error in issue #2039 comes from an attempt to OPEN a file with `rw` when the file is read-only:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/82793f1984911774b111117f2e81d5f3b0bbec68/src/flatfile.cpp#L81-L86\r\n\r\n...and this PR avoids the call to `Flush()` altogether when we know it is not necessary\r\n\r\n@jonatack lemme know if the new test is reassuring enough, or if you have advice for better coverage?",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1446525945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "mentioned",
      "id": 8616975961,
      "node_id": "MEE_lADOABII585dmMzEzwAAAAIBnJ5Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8616975961",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T15:20:40Z"
    },
    {
      "event": "subscribed",
      "id": 8616975989,
      "node_id": "SE_lADOABII585dmMzEzwAAAAIBnJ51",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8616975989",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T15:20:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8616976299,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIBnJ-r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8616976299",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T15:20:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8617684442,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIBp23a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8617684442",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T16:21:56Z"
    },
    {
      "event": "reviewed",
      "id": 1316150875,
      "node_id": "PRR_kwDOABII585Oct5b",
      "url": null,
      "actor": null,
      "commit_id": "5afd6bf274cf50743dc345eb9c0520c1b64c8069",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested that this PR indeed fixes #2039:\r\n\r\n- on master (82793f1984911774b111117f2e81d5f3b0bbec68):\r\n```\r\n$ chmod u-w ~/.bitcoin/signet/blocks/blk00003.dat\r\n$ ./src/bitcoind -signet -reindex\r\n...\r\n2023-02-27T17:58:31Z Reindexing block file blk00003.dat...\r\n2023-02-27T17:58:31Z Unable to open file /home/hebasto/.bitcoin/signet/blocks/blk00003.dat\r\n2023-02-27T17:58:31Z ERROR: Flush: failed to open file 3\r\n2023-02-27T17:58:31Z *** Flushing block file to disk failed. This is likely the result of an I/O error.\r\n2023-02-27T17:58:31Z Error: A fatal internal error occurred, see debug.log for details\r\nError: A fatal internal error occurred, see debug.log for details\r\n...\r\n```\r\n\r\n- this PR (5afd6bf274cf50743dc345eb9c0520c1b64c8069)\r\n```\r\n$ chmod u-w ~/.bitcoin/signet/blocks/blk00003.dat\r\n$ ./src/bitcoind -signet -reindex  # no errors\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1316150875",
      "submitted_at": "2023-02-27T18:04:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "labeled",
      "id": 8628440359,
      "node_id": "LE_lADOABII585dmMzEzwAAAAICS40n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8628440359",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T15:41:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1448432672,
      "node_id": "IC_kwDOABII585WVVQg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448432672",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T15:58:17Z",
      "updated_at": "2023-02-28T15:58:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK, although now rebase is needed",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1448432672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "reviewed",
      "id": 1318011379,
      "node_id": "PRR_kwDOABII585Oj0Hz",
      "url": null,
      "actor": null,
      "commit_id": "5afd6bf274cf50743dc345eb9c0520c1b64c8069",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, will review more closely soon.\r\n\r\nThe added unit test seems to fail under Win64.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1318011379",
      "submitted_at": "2023-02-28T16:20:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8639382921,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIC8oWJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8639382921",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T15:12:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8639493338,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIC9DTa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8639493338",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T15:22:27Z"
    },
    {
      "event": "commented",
      "id": 1450428114,
      "node_id": "IC_kwDOABII585Wc8bS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450428114",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T16:19:54Z",
      "updated_at": "2023-03-01T16:19:54Z",
      "author_association": "MEMBER",
      "body": "force-push to e600eb442802ca7b23189c8ceee448730e22e75a:\r\n- rebased on master and fixed conflict\r\n- added 2-second sleep before calls to `SaveBlockToDisk()`. This is to ensure that if the file is modified, its modification timestamp will definitely be updated. This test was intermittent on Windows I think because FAT has a 2-second resolution for `mtime` values. 🤷‍♂️  ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1450428114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "unlabeled",
      "id": 8640853567,
      "node_id": "UNLE_lADOABII585dmMzEzwAAAAIDCPY_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8640853567",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:34:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1450599651,
      "node_id": "IC_kwDOABII585WdmTj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450599651",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:55:08Z",
      "updated_at": "2023-03-01T17:55:08Z",
      "author_association": "MEMBER",
      "body": "@pinheadmz Thanks for working on unit test coverage -- will circle back soon.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1450599651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "mentioned",
      "id": 8641031287,
      "node_id": "MEE_lADOABII585dmMzEzwAAAAIDC6x3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8641031287",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:55:08Z"
    },
    {
      "event": "subscribed",
      "id": 8641031306,
      "node_id": "SE_lADOABII585dmMzEzwAAAAIDC6yK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8641031306",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:55:09Z"
    },
    {
      "event": "reviewed",
      "id": 1320217718,
      "node_id": "PRR_kwDOABII585OsOx2",
      "url": null,
      "actor": null,
      "commit_id": "e600eb442802ca7b23189c8ceee448730e22e75a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK e600eb442802ca7b23189c8ceee448730e22e75a\r\n\r\nI feel like one small step is missing in the motivation why this is safe: `FlushBlockFile()` not only flushes the blk file, but possibly also the undo file (and does this no longer during reindex after this change), so it would be good to mention somewhere (e.g. in the OP) why this is ok.\r\nMy understanding is that new undo data will only be available after connecting blocks to the chain, which only happens in the second part of the reindex where we rebuild the chain - so flushing in the first part would be a no-op anyway, and skipping it is ok.\r\n\r\nAlso, if you retouch, flake8 and Clang-format show a few minor nits for me in the added code.\r\n\r\n\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320217718",
      "submitted_at": "2023-03-01T19:48:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8642550574,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIDItsu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8642550574",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T20:50:12Z"
    },
    {
      "event": "reviewed",
      "id": 1320666918,
      "node_id": "PRR_kwDOABII585Ot8cm",
      "url": null,
      "actor": null,
      "commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Verified `clang-format-diff`. The unit test is nice! You may want to mention in the commit comment that it doesn't test this PR (I was a little confused at first because I was expecting that it was).",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320666918",
      "submitted_at": "2023-03-01T23:34:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8651437879,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIDqnc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651437879",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:35:31Z"
    },
    {
      "event": "commented",
      "id": 1452172358,
      "node_id": "IC_kwDOABII585WjmRG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452172358",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:36:57Z",
      "updated_at": "2023-03-02T16:36:57Z",
      "author_association": "MEMBER",
      "body": "force-push to b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4:\r\n\r\n- addressed all nits and review comments by @LarryRuane \r\n- added 1ms delay in blockmanager test for all non-windows systems (cc: @mzumsande )",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1452172358",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "mentioned",
      "id": 8651452381,
      "node_id": "MEE_lADOABII585dmMzEzwAAAAIDqq_d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651452381",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:36:58Z"
    },
    {
      "event": "subscribed",
      "id": 8651452405,
      "node_id": "SE_lADOABII585dmMzEzwAAAAIDqq_1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651452405",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:36:58Z"
    },
    {
      "event": "mentioned",
      "id": 8651452436,
      "node_id": "MEE_lADOABII585dmMzEzwAAAAIDqrAU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651452436",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:36:59Z"
    },
    {
      "event": "subscribed",
      "id": 8651452460,
      "node_id": "SE_lADOABII585dmMzEzwAAAAIDqrAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651452460",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:36:59Z"
    },
    {
      "event": "reviewed",
      "id": 1322225802,
      "node_id": "PRR_kwDOABII585Oz5CK",
      "url": null,
      "actor": null,
      "commit_id": "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4\r\nIf you retouch, consider the suggestion for the unit test commit comment here: https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320666918 (I think you may have just missed it), but it's not important.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1322225802",
      "submitted_at": "2023-03-02T16:47:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_requested",
      "id": 8651553100,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIDrDlM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8651553100",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:47:26Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1452190011,
      "node_id": "IC_kwDOABII585Wjqk7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452190011",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T16:49:03Z",
      "updated_at": "2023-03-02T16:49:03Z",
      "author_association": "MEMBER",
      "body": "> consider the suggestion for the unit test commit comment here: [#27039 (review)](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320666918) (I think you may have just missed it), but it's not important.\r\n\r\nah doh! I added a sentence to the PR description but if I rebase again I'll add to the actual commit",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1452190011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "reviewed",
      "id": 1335683963,
      "node_id": "PRR_kwDOABII585PnOt7",
      "url": null,
      "actor": null,
      "commit_id": "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1335683963",
      "submitted_at": "2023-03-10T22:06:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_requested",
      "id": 8722483471,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIH5okP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8722483471",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-10T22:06:38Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8746977825,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIJXEoh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8746977825",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T18:00:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8747106244,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIJXj_E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8747106244",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T18:13:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8795601966,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIMQjwu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8795601966",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-20T14:50:47Z"
    },
    {
      "event": "commented",
      "id": 1476608456,
      "node_id": "IC_kwDOABII585YA0HI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476608456",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-20T17:00:38Z",
      "updated_at": "2023-03-20T17:00:38Z",
      "author_association": "MEMBER",
      "body": "force push to: 93c70287a6434c6c665a211dc4dfbbd9c3db4083\r\n- rebase on master\r\n- fix failing unit test",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1476608456",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "reviewed",
      "id": 1350842653,
      "node_id": "PRR_kwDOABII585QhDkd",
      "url": null,
      "actor": null,
      "commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK 93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1350842653",
      "submitted_at": "2023-03-21T15:57:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_requested",
      "id": 8807432165,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIM9r_l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8807432165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-21T15:58:05Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1499452625,
      "node_id": "IC_kwDOABII585ZX9TR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499452625",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-06T18:22:14Z",
      "updated_at": "2023-04-06T18:22:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1499452625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "review_request_removed",
      "id": 8948641237,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIVYW3V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8948641237",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-06T18:22:19Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1386645395,
      "node_id": "PRR_kwDOABII585SpoeT",
      "url": null,
      "actor": null,
      "commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "code review and local test run ACK\r\n\r\n470ef396\r\n\r\n(edited by @DrahtBot due to GitHub bug https://github.com/MarcoFalke/DrahtBot/issues/31)",
      "user": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1386645395",
      "submitted_at": "2023-04-16T02:47:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_requested",
      "id": 9015490634,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIZXXhK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9015490634",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-16T02:47:47Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9015490665,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIZXXhp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9015490665",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-16T02:47:50Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9015490676,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIZXXh0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9015490676",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-16T02:47:51Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9015493750,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIZXYR2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9015493750",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-16T02:52:28Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9015493758,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIZXYR-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9015493758",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-16T02:52:28Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9025423648,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIZ9Qkg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025423648",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T14:35:08Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9025423853,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIZ9Qnt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025423853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T14:35:09Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9025488029,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIZ9gSd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025488029",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T14:40:33Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9025488203,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIZ9gVL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025488203",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T14:40:34Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "milestoned",
      "id": 9025998026,
      "node_id": "MIE_lADOABII585dmMzEzwAAAAIZ_czK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025998026",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T15:21:23Z",
      "milestone": {
        "title": "26.0"
      }
    },
    {
      "event": "reviewed",
      "id": 1392374264,
      "node_id": "PRR_kwDOABII585S_fH4",
      "url": null,
      "actor": null,
      "commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. (went thru notes and other related PRs mentioned on the [Review club meeting preparation webpage](https://bitcoincore.reviews/27039) - Please add label when possible)",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1392374264",
      "submitted_at": "2023-04-19T15:43:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_request_removed",
      "id": 9048204082,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIbUKMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048204082",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T15:43:08Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9048204209,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIbUKOx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048204209",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T15:43:09Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 9048208570,
      "node_id": "LE_lADOABII585dmMzEzwAAAAIbULS6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048208570",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T15:43:35Z",
      "label": {
        "name": "Review club",
        "color": "0052cc"
      }
    },
    {
      "event": "review_request_removed",
      "id": 9048347967,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIbUtU_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048347967",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T15:57:15Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9048348100,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIbUtXE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9048348100",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-19T15:57:16Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1289406384,
      "node_id": "PRR_kwDOABII585M2sew",
      "url": null,
      "actor": null,
      "commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK 93c70287a6434c6c665a211dc4dfbbd9c3db4083 (modulo tests)\r\n\r\nConceptually, this seems straightforward: we don't want to update block files during reindex, so avoiding the flushing altogether is desireable.\r\n\r\nI think the only potential for unexpected behaviour change is if there are places other than `BlockManager::SaveBlockToDisk()` where block files are modified (and potentially not flushed). Looking at the callsites of `FlatFileSeq::Open()` and all of its parent callsites, it seems like the only place where we open a block file with `read_only == false` is in `BlockManager::SaveBlockToDisk()`. From that, I think the concept and approach make sense and seem safe.\r\n\r\nWhen it comes to the tests, I'm not yet convinced. I think relying on `fs::last_write_time` is fragile, and I don't know if the test is useful enough to warrant this hacky approach. I understand this flushing behaviour is inherently difficult to test, but I'm not sure the current approach is worth the hassle?",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1289406384",
      "submitted_at": "2023-04-20T15:30:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
    },
    {
      "event": "review_request_removed",
      "id": 9058831865,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb8s35",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9058831865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:30:50Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9058832013,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIb8s6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9058832013",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:30:51Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9058832514,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb8tCC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9058832514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:30:54Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9058832717,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIb8tFN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9058832717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:30:55Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9058944642,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb9IaC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9058944642",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:42:28Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9059002045,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIb9Wa9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059002045",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:48:34Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9059005363,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb9XOz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059005363",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:48:54Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9059005458,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIb9XQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059005458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:48:55Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9059023761,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb9buR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059023761",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:50:54Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9059023927,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIb9bw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059023927",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:50:55Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9059042529,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIb9gTh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9059042529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T15:52:51Z",
      "requested_reviewer": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9104794545,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIesCOx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9104794545",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T15:09:07Z"
    },
    {
      "event": "commented",
      "id": 1523589827,
      "node_id": "IC_kwDOABII585a0CLD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523589827",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T15:11:03Z",
      "updated_at": "2023-04-26T15:11:03Z",
      "author_association": "MEMBER",
      "body": "Ok I updated the unit test: removed the time modified checks because all we need to check is if the content of the file has been changed, which it is NOT if `dbp != nullptr`. The read-only check in the functional test covers the rest.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1523589827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9105383113,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIeuR7J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9105383113",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T16:05:09Z"
    },
    {
      "event": "labeled",
      "id": 9105385821,
      "node_id": "LE_lADOABII585dmMzEzwAAAAIeuSld",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9105385821",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T16:05:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9111772167,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIfGpwH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9111772167",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T08:49:04Z"
    },
    {
      "event": "commented",
      "id": 1525160464,
      "node_id": "IC_kwDOABII585a6BoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525160464",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T08:49:13Z",
      "updated_at": "2023-04-27T08:49:13Z",
      "author_association": "MEMBER",
      "body": "> Maybe rebase to make CI less sad?\r\n\r\nrebased. cheer up little guy!",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1525160464",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "unlabeled",
      "id": 9113086641,
      "node_id": "UNLE_lADOABII585dmMzEzwAAAAIfLqqx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9113086641",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T11:07:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9143686163,
      "node_id": "LE_lADOABII585dmMzEzwAAAAIhAZQT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9143686163",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T09:32:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM2MjBkNjIxYWU1MDk4MjRhNWI4ODA0NmMzZjIyZTIxMGI5MzA2MWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3620d621ae509824a5b88046c3f22e210b93061d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3620d621ae509824a5b88046c3f22e210b93061d",
      "tree": {
        "sha": "40a9324b27208e8cfed899376a042442c173ef11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40a9324b27208e8cfed899376a042442c173ef11"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40a9324b27208e8cfed899376a042442c173ef11\nparent 7b45d171f549595a831489827c28e8493f36c00c\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1677272040 -0500\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1683039075 -0400\n\nunit test: add coverage for BlockManager\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRRI2MACgkQ5+KYS2KJ\nyTrqZA//aspmkt3rtuTaNdw38zzmU/AWVRijaeFD8UC5mikfK+eYrKM2nsGuiJsI\nijAK6Tw1spx2GsJGajjv4dVWZCuI81LLn6JybEiQYsoRTV/Ee7/ThJYCT13+23Dx\nwNk0zIxto/2LsMU7RkvrZtXL+vzVSD5TtYSIANcMkc3ftFr++4DNui2SU4sV8IfL\nL6E+4thKsaw/3DSxNrYQaxOHnulZfBzppLgAIQt/A9tsurosU3z6sNJC+zaI/x2W\nZKGcz3Y0mjW19Dr7uuRo49OpyxNKWYCUSNIVhtxdVKBvD+kVsKRN3OimAso6ST6A\nRlPnUmlS8o+feYALjvrIxOCody5HswrWHr+czgKJBPuVB8pi3GGEP2TYUup1hDXg\nj48ZHILrFW18ZWlWCZ4IZyiphDFy8cCVBWpZYoWo4czQwILxIAiSgcYfGajAlH/f\n7as0N7WwjosVtug9YE9RG3vGDyuFW38AO7q8qLOU6DSZ1+Mytp0GQlGIjfqiqX4K\nyO+M5hI3+p4cOnrf63FRTD1OGaiFuU6OrK3IqsWIpWeN5dugmpdz8NAIcacoo381\n3nERElms/kwFBrguMTPXzP4cdsnOzLlYHlL0KWeoGufGWnimN2DmfOHro3NJXSyD\naBYbl35+wd/tpEukGtdy81n8iwhBUXCvnA6AIdJ6YtaEFlHwERo=\n=9fpf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b45d171f549595a831489827c28e8493f36c00c",
          "sha": "7b45d171f549595a831489827c28e8493f36c00c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7b45d171f549595a831489827c28e8493f36c00c"
        }
      ],
      "message": "unit test: add coverage for BlockManager",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-02T14:51:15Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-02-24T20:54:00Z"
      },
      "sha": "3620d621ae509824a5b88046c3f22e210b93061d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2Y2NhMjUyZTMwZjU0YjA2ZGYwMTFkMjY4ZWYxYjhhNDhiMDc2ZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46cca252e30f54b06df011d268ef1b8a48b076e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46cca252e30f54b06df011d268ef1b8a48b076e7",
      "tree": {
        "sha": "89e5f9c63f215ae00ebeac8abb61c7af4e2b368b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89e5f9c63f215ae00ebeac8abb61c7af4e2b368b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 89e5f9c63f215ae00ebeac8abb61c7af4e2b368b\nparent 3620d621ae509824a5b88046c3f22e210b93061d\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1675444040 -0500\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1683039208 -0400\n\nblockstorage: do not flush block to disk if it is already there\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRRI+0ACgkQ5+KYS2KJ\nyTqZKw//ZpP+zm2IE3GRMlB3OdsKf5nxCKIQvpj6Yqg4/g1P4EIhSSGM6dX2c/dS\nZ9ougTGjzPGCRB0uMMsVqqCJ5C+D8mGlsaYisqDZvf+1jbg11GjKVwS+O71qW6Jd\nquDBU5F4duQxQh9a9Cj6DJYq3n1mcSsDurzvA88VcpLv+fDm8zBWLAGNSI1IvT2J\nTjP/dBi7JrwvXCK6G4fHOP/RAGKiJSli3gQLtDLuWCFiAk/u+vi/gVFfLjOpWU0v\nwYRD2DAhY37dji2pFEOJUL3KjMsNtJcHMo9AdNZPl9p8R1IqXdfkR1pEvH84ph+G\n66hZv+fPmevH6UzTb/G589kzRb+7qZXiH6J7kJc7/oJa9J3NjIo/VE7XnlNAIlW7\n3M/BqFuI7jEmCGJxtW7QrRnAvdvpd6iTSG/a7of814oPTBPmeTVogrSXDgX0yTSj\n1eK8tH4vKqdDRZNROghoN7TnLEzo7fApccAzzNPvMl0LHVFy5mRziUJgb+bp/ac4\nixkK8P9Dn9SHLNMfy/5oTRZZUVbnYzAA69ma4CQebNILBoWeY3qKgBsFcobLMA9K\n3vmN0/dZepYqiT6ReK99GnF+vfeCV+SDfcbMCwQAGKHT4b0jaym2QHFJkJoLM2/+\nwtKMBY/MJrevvZSkqALc0GgQayPHguwAQXb3o8FZrpErV4iK1E0=\n=Ld+p\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3620d621ae509824a5b88046c3f22e210b93061d",
          "sha": "3620d621ae509824a5b88046c3f22e210b93061d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3620d621ae509824a5b88046c3f22e210b93061d"
        }
      ],
      "message": "blockstorage: do not flush block to disk if it is already there",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-02T14:53:28Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-02-03T17:07:20Z"
      },
      "sha": "46cca252e30f54b06df011d268ef1b8a48b076e7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9146724079,
      "node_id": "HRFPE_lADOABII585dmMzEzwAAAAIhL-7v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9146724079",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T14:55:57Z"
    },
    {
      "event": "commented",
      "id": 1531627646,
      "node_id": "IC_kwDOABII585bSsh-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531627646",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T14:56:09Z",
      "updated_at": "2023-05-02T14:56:09Z",
      "author_association": "MEMBER",
      "body": "> 🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\r\n\r\ndone ✅ ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531627646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "unlabeled",
      "id": 9147256604,
      "node_id": "UNLE_lADOABII585dmMzEzwAAAAIhOA8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9147256604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T15:48:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1531882383,
      "node_id": "IC_kwDOABII585bTquP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531882383",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T17:39:43Z",
      "updated_at": "2023-05-02T17:39:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 46cca252e30f54b06df011d268ef1b8a48b076e7.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531882383",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "review_requested",
      "id": 9148220158,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIhRsL-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9148220158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T17:39:47Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9148220167,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIhRsMH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9148220167",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T17:39:48Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9148283423,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIhR7of",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9148283423",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T17:47:29Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9148283551,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIhR7qf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9148283551",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T17:47:29Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1540310529,
      "node_id": "IC_kwDOABII585bz0YB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540310529",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T14:59:37Z",
      "updated_at": "2023-05-09T14:59:37Z",
      "author_association": "MEMBER",
      "body": "> done \r\n\r\nWe are likely going to defer mergeing this for the moment, as it conflicts with the next two kernel PRs, and assumeutxo. Up to you, if you'd like to keep it rebased after each merge, in the interim.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1540310529",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    },
    {
      "event": "review_request_removed",
      "id": 9201839971,
      "node_id": "RRRE_lADOABII585dmMzEzwAAAAIkeO9j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9201839971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T14:59:41Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9201840164,
      "node_id": "RRE_lADOABII585dmMzEzwAAAAIkePAk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9201840164",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T14:59:42Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 9202773783,
      "node_id": "LE_lADOABII585dmMzEzwAAAAIkhy8X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9202773783",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T16:29:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1540500594,
      "node_id": "IC_kwDOABII585b0ixy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540500594",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T16:29:38Z",
      "updated_at": "2023-05-09T16:29:38Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1540500594",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27039"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096159709",
      "pull_request_review_id": 1283552030,
      "id": 1096159709,
      "node_id": "PRRC_kwDOABII585BVhHd",
      "diff_hunk": "@@ -68,12 +73,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat');",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 52,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "7a2e5cdc7ff6bd39f925f17b6582ad46f7e4475b",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\r\n```",
      "created_at": "2023-02-03T18:54:30Z",
      "updated_at": "2023-02-03T18:54:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096159709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096159709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096165964",
      "pull_request_review_id": 1283558671,
      "id": 1096165964,
      "node_id": "PRRC_kwDOABII585BVipM",
      "diff_hunk": "@@ -68,12 +73,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat');",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 52,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "7a2e5cdc7ff6bd39f925f17b6582ad46f7e4475b",
      "in_reply_to_id": 1096159709,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks! fixed.",
      "created_at": "2023-02-03T18:59:31Z",
      "updated_at": "2023-02-03T18:59:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096165964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096165964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096269282",
      "pull_request_review_id": 1283698111,
      "id": 1096269282,
      "node_id": "PRRC_kwDOABII585BV73i",
      "diff_hunk": "@@ -19,22 +19,27 @@\n class ReindexTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 1\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\"]\n+        ]\n \n     def reindex(self, justchainstate=False):\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\n         blockcount = self.nodes[0].getblockcount()\n-        self.stop_nodes()\n-        extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\"]]\n-        self.start_nodes(extra_args)\n+        self.stop_node(0)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 17,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of stopping the node and right after starting it again, you could use `self.restart_node`.",
      "created_at": "2023-02-03T20:45:47Z",
      "updated_at": "2023-02-03T20:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096269282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096269282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096290459",
      "pull_request_review_id": 1283729146,
      "id": 1096290459,
      "node_id": "PRRC_kwDOABII585BWBCb",
      "diff_hunk": "@@ -19,22 +19,27 @@\n class ReindexTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 1\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\"]\n+        ]\n \n     def reindex(self, justchainstate=False):\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\n         blockcount = self.nodes[0].getblockcount()\n-        self.stop_nodes()\n-        extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\"]]\n-        self.start_nodes(extra_args)\n+        self.stop_node(0)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 17,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "in_reply_to_id": 1096269282,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah thanks, fixed. also added an explanation of the test to the comments at the top",
      "created_at": "2023-02-03T21:15:21Z",
      "updated_at": "2023-02-03T21:15:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096290459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096290459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394295",
      "pull_request_review_id": 1283917779,
      "id": 1096394295,
      "node_id": "PRRC_kwDOABII585BWaY3",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 54,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Verified:\r\n```\r\n$ ls -l /tmp/btest/node1/regtest/blocks/blk*.dat\r\n-rw------- 1 larry larry 65400 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n-rw------- 1 larry larry 16384 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00001.dat\r\n```",
      "created_at": "2023-02-04T00:03:24Z",
      "updated_at": "2023-02-04T00:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394699",
      "pull_request_review_id": 1283917779,
      "id": 1096394699,
      "node_id": "PRRC_kwDOABII585BWafL",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 59,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Verified:\r\n```\r\n$ ls -l /tmp/btest/node1/regtest/blocks/blk*.dat\r\n-r--r--r-- 1 larry larry 65400 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n-rw------- 1 larry larry 16384 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00001.dat\r\n```",
      "created_at": "2023-02-04T00:04:17Z",
      "updated_at": "2023-02-04T00:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096397334",
      "pull_request_review_id": 1283917779,
      "id": 1096397334,
      "node_id": "PRRC_kwDOABII585BWbIW",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 62,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Verified that without the PR, the node doesn't start, and we see this in `debug.log`:\r\n```\r\n2023-02-04T00:05:32.219184Z [loadblk] [node/blockstorage.cpp:865] [ThreadImport] Reindexing block file blk00001.dat...\r\n2023-02-04T00:05:32.224307Z [loadblk] [flatfile.cpp:44] [Open] Unable to open file /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n2023-02-04T00:05:32.224320Z [loadblk] [util/system.h:50] [error] ERROR: Flush: failed to open file 0\r\n2023-02-04T00:05:32.224334Z [loadblk] [shutdown.cpp:26] [AbortNode] *** Flushing block file to disk failed. This is likely the result of an I/O error.\r\n```\r\nNothing the PR needs to address, but just FYI, the first message may look confusing; it mentions `blk00001.dat` just before it attempts to write the previous file, `blk00001.dat`, which is where it runs into the write failure. Notice that this write is what the PR prevents because it's unnecessary. This is a nice way to test that the write happens without the PR, and doesn't happen with the PR.",
      "created_at": "2023-02-04T00:10:39Z",
      "updated_at": "2023-02-04T00:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096397334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096397334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096403631",
      "pull_request_review_id": 1283917779,
      "id": 1096403631,
      "node_id": "PRRC_kwDOABII585BWcqv",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])\n+        assert_equal(self.nodes[1].getblockcount(), 312)\n+\n+        # shut down this node, triggering disk flushes, but not to the read-only file\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Flush'], unexpected_msgs=['Error']):\n+            self.stop_node(1)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 67,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are many `Flush` log lines for unrelated things (like the ChainState), so consider making that string more specific. Maybe:\r\n```\r\n2023-02-04T00:15:05.877123Z [shutoff] [logging/timer.h:57] [Log] [bench] FlushStateToDisk: write block and undo data to disk completed (6.62ms)\r\n```\r\nSimilarly, maybe \"Error\" is too general? It does work, but I'd be afraid that something unrelated might log \"Error\" in the future and break this test. Maybe look for one of the error strings in my comment above?",
      "created_at": "2023-02-04T00:24:01Z",
      "updated_at": "2023-02-04T00:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096403631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096403631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 96,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096529154",
      "pull_request_review_id": 1284062599,
      "id": 1096529154,
      "node_id": "PRRC_kwDOABII585BW7UC",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])\n+        assert_equal(self.nodes[1].getblockcount(), 312)\n+\n+        # shut down this node, triggering disk flushes, but not to the read-only file\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Flush'], unexpected_msgs=['Error']):\n+            self.stop_node(1)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 67,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": 1096403631,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good call, I was being too general, updated. thanks!",
      "created_at": "2023-02-04T12:14:47Z",
      "updated_at": "2023-02-04T12:14:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096529154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096529154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 96,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099741914",
      "pull_request_review_id": 1288594338,
      "id": 1099741914,
      "node_id": "PRRC_kwDOABII585BjLra",
      "diff_hunk": "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "path": "test/functional/feature_reindex.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you need to retouch, maybe expand this comment to explain why two nodes are needed.",
      "created_at": "2023-02-08T07:15:46Z",
      "updated_at": "2023-02-08T07:16:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1099741914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099741914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100332583",
      "pull_request_review_id": 1289470489,
      "id": 1100332583,
      "node_id": "PRRC_kwDOABII585Blb4n",
      "diff_hunk": "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "path": "test/functional/feature_reindex.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "in_reply_to_id": 1099741914,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I added a second node to the test so I could start a clean chain using smaller `blk` files (`-fastprune`) without bugging the existing tests that switch a few options on and off throughout.",
      "created_at": "2023-02-08T15:46:40Z",
      "updated_at": "2023-02-08T15:46:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100332583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100332583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100517673",
      "pull_request_review_id": 1289745617,
      "id": 1100517673,
      "node_id": "PRRC_kwDOABII585BmJEp",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 54,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": 1096394295,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To ensure it, I think you could check if both files exist:\r\n```diff\r\ndiff --git a/test/functional/feature_reindex.py b/test/functional/feature_reindex.py\r\nindex c68773e06..a3c9562f1 100755\r\n--- a/test/functional/feature_reindex.py\r\n+++ b/test/functional/feature_reindex.py\r\n@@ -84,6 +84,9 @@ class ReindexTest(BitcoinTestFramework):\r\n         self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\r\n         self.stop_node(1)\r\n \r\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\r\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')\r\n+\r\n         # make the first block file read-only\r\n         path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\r\n         os.chmod(path, 0o444)\r\n```",
      "created_at": "2023-02-08T18:18:07Z",
      "updated_at": "2023-02-08T18:18:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100517673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100517673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606119",
      "pull_request_review_id": 1289900751,
      "id": 1100606119,
      "node_id": "PRRC_kwDOABII585Bmeqn",
      "diff_hunk": "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 54,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "in_reply_to_id": 1096394295,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks, added.",
      "created_at": "2023-02-08T19:50:04Z",
      "updated_at": "2023-02-08T19:50:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606588",
      "pull_request_review_id": 1289901618,
      "id": 1100606588,
      "node_id": "PRRC_kwDOABII585Bmex8",
      "diff_hunk": "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "path": "test/functional/feature_reindex.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "in_reply_to_id": 1099741914,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added comment to top of the test where second node is set up",
      "created_at": "2023-02-08T19:50:24Z",
      "updated_at": "2023-02-08T19:50:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320245",
      "pull_request_review_id": 1306329978,
      "id": 1112320245,
      "node_id": "PRRC_kwDOABII585CTKj1",
      "diff_hunk": "@@ -618,8 +618,8 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n     if ((int)nFile != m_last_blockfile) {\n         if (!fKnown) {\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            FlushBlockFile(/*fFinalize=*/true, finalize_undo);",
      "path": "src/node/blockstorage.cpp",
      "position": 13,
      "original_position": 4,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The new test fails on master as expected, because the block file is read-only and can't be written to.\r\n\r\nIt may be reassuring to have coverage for the other side of this change, to be sure we're still flushing when expected.  If this new line is removed and no flushing is done, all the functional and unit tests still pass (I didn't run the extended functional tests).\r\n\r\n```diff\r\n@@ -618,7 +618,6 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\r\n     if ((int)nFile != m_last_blockfile) {\r\n         if (!fKnown) {\r\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\r\n-            FlushBlockFile(/*fFinalize=*/true, finalize_undo);\r\n         }\r\n         m_last_blockfile = nFile;\r\n     }\r\n```\r\n",
      "created_at": "2023-02-20T21:09:38Z",
      "updated_at": "2023-02-20T21:32:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320479",
      "pull_request_review_id": 1306329978,
      "id": 1112320479,
      "node_id": "PRRC_kwDOABII585CTKnf",
      "diff_hunk": "@@ -803,7 +803,7 @@ FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight, CCha\n {\n     unsigned int nBlockSize = ::GetSerializeSize(block, CLIENT_VERSION);\n     FlatFilePos blockPos;\n-    const auto position_known {dbp != nullptr};\n+    const bool position_known {dbp != nullptr};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, fix clang-format since you touch this line\r\n```suggestion\r\n    const bool position_known{dbp != nullptr};\r\n```\r\n\r\nEdit, while touching up nits in the commit, maybe hit this one, too (feel free to ignore):\r\n\r\n```diff\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -566,7 +566,7 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\r\n \r\n static FlatFileSeq BlockFileSeq()\r\n {\r\n-    return FlatFileSeq(gArgs.GetBlocksDirPath(), \"blk\", gArgs.GetBoolArg(\"-fastprune\", false) ? 0x4000 /* 16kb */ : BLOCKFILE_CHUNK_SIZE);\r\n+    return FlatFileSeq(gArgs.GetBlocksDirPath(), \"blk\", gArgs.GetBoolArg(\"-fastprune\", false) ? 0x4000 /* 16KiB */ : BLOCKFILE_CHUNK_SIZE);\r\n }\r\n```\r\n",
      "created_at": "2023-02-20T21:10:13Z",
      "updated_at": "2023-02-20T22:00:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112331348",
      "pull_request_review_id": 1306329978,
      "id": 1112331348,
      "node_id": "PRRC_kwDOABII585CTNRU",
      "diff_hunk": "@@ -68,12 +72,35 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 54,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adding some logging shows that this `generate` call is the slowest part of the added test. Questions:\r\n\r\n- Why 300 blocks?  On my laptop the test passes reliably with 239 blocks and fails reliably with 238.  Fewer blocks = faster test runs.\r\n\r\n- Can you explain how the number of blocks used was arrived at, and document that calculation along with the other magic numbers?\r\n\r\n<details><summary>Ideas, feel free to pick and choose (maybe some of the suggested logging should be debug instead of info)</summary><p>\r\n\r\n```diff\r\n@@ -29,7 +29,7 @@ class ReindexTest(BitcoinTestFramework):\r\n     def reindex(self, justchainstate=False):\r\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\r\n         blockcount = self.nodes[0].getblockcount()\r\n-        self.restart_node(0, [\"-reindex-chainstate\" if justchainstate else \"-reindex\"])\r\n+        self.restart_node(0, extra_args=[\"-reindex-chainstate\" if justchainstate else \"-reindex\"])\r\n         self.connect_nodes(0, 1)\r\n         assert_equal(self.nodes[0].getblockcount(), blockcount)  # start_node is blocking on reindex\r\n         self.log.info(\"Success\")\r\n@@ -72,34 +72,36 @@ class ReindexTest(BitcoinTestFramework):\r\n             'LoadExternalBlockFile: Out of order block',\r\n             'LoadExternalBlockFile: Processing out of order child',\r\n         ]):\r\n-            self.start_node(0, [\"-reindex\"])\r\n+            self.start_node(0, extra_args=[\"-reindex\"])\r\n \r\n         # All blocks should be accepted and processed.\r\n         assert_equal(self.nodes[0].getblockcount(), 12)\r\n \r\n     def reindex_readonly(self):\r\n         self.connect_nodes(0, 1)\r\n-        # generate enough blocks to ensure that the -fastprune node fills up the\r\n-        # first blk00000.dat file and starts another block file\r\n-        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\r\n+        block_count = self.nodes[1].getblockcount()\r\n+\r\n+        num_blocks_to_add = 239  # document how this is calculated...\r\n+        self.log.info(f\"Generate {num_blocks_to_add} blocks to ensure the -fastprune node fills up the first blk00000.dat file and starts another block file\")\r\n+        self.generatetoaddress(self.nodes[1], num_blocks_to_add, self.nodes[1].get_deterministic_priv_key().address)\r\n         self.stop_node(1)\r\n \r\n         assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\r\n         assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')\r\n \r\n-        # make the first block file read-only\r\n-        path = self.nodes[1].chain_path / 'blocks' / 'blk00000.dat'\r\n-        os.chmod(path, 0o444)\r\n+        self.log.info(\"Make the first block file read-only\")\r\n+        filename = self.nodes[1].chain_path / 'blocks' / 'blk00000.dat'\r\n+        os.chmod(filename, 0o444)\r\n \r\n-        # restart and reindex the node with the read-only block file\r\n+        self.log.info(\"Restart the node and reindex with the read-only block file\")\r\n         self.start_node(1, [\"-reindex\", \"-fastprune\"])\r\n-        assert_equal(self.nodes[1].getblockcount(), 312)\r\n+        assert_equal(self.nodes[1].getblockcount(), block_count + num_blocks_to_add)\r\n \r\n-        # shut down this node, triggering disk flushes, but not to the read-only file\r\n+        self.log.info(\"Shut down this node, triggering disk flushes, but not to the read-only file\")\r\n         with self.nodes[1].assert_debug_log(expected_msgs=['FlushStateToDisk'], unexpected_msgs=['failed to open file']):\r\n             self.stop_node(1)\r\n \r\n-        self.log.info(\"Reindex read-only Success\")\r\n+        self.log.info(\"Success of reindex read-only test\")\r\n \r\n     def run_test(self):\r\n         self.reindex(False)\r\n```\r\n</p></details>\r\n\r\n",
      "created_at": "2023-02-20T21:26:03Z",
      "updated_at": "2023-02-22T17:49:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112331348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112331348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114563559",
      "pull_request_review_id": 1309595387,
      "id": 1114563559,
      "node_id": "PRRC_kwDOABII585CbuPn",
      "diff_hunk": "@@ -68,12 +72,35 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "path": "test/functional/feature_reindex.py",
      "position": null,
      "original_position": 54,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "in_reply_to_id": 1112331348,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks Jon I believe I addressed all the style nits and reduced the number of generated blocks as requested in e7a0339b8c. Adding test coverage for flush to disk is next...",
      "created_at": "2023-02-22T16:06:20Z",
      "updated_at": "2023-02-22T16:08:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1114563559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114563559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115055900",
      "pull_request_review_id": 1310390172,
      "id": 1115055900,
      "node_id": "PRRC_kwDOABII585Cdmcc",
      "diff_hunk": "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size\n+\n+        self.generatetoaddress(self.nodes[1], blocks_needed, addr)\n+        self.stop_node(1)\n+\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')",
      "path": "test/functional/feature_reindex.py",
      "position": 72,
      "original_position": 72,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Some assertions are not checking that the PR's changes are working correctly, they're ensuring that the test is setting things up as expected, and sometimes that's not obvious to readers. Sorry I didn't think to mention this earlier, but if you retouch, consider adding a comment before these two lines to make it clear that all we're doing here is verifying the test setup.",
      "created_at": "2023-02-22T22:44:16Z",
      "updated_at": "2023-02-22T22:54:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115055900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115055900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": 101,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115061429",
      "pull_request_review_id": 1310390172,
      "id": 1115061429,
      "node_id": "PRRC_kwDOABII585Cdny1",
      "diff_hunk": "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size",
      "path": "test/functional/feature_reindex.py",
      "position": 66,
      "original_position": 66,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like the way you're calculating the number of blocks needed rather than hard-coding the number; I verified that this value (when I run the test) is 240, which matches, with a tiny bit of rounding, what @jonatack suggested.",
      "created_at": "2023-02-22T22:50:17Z",
      "updated_at": "2023-02-28T15:53:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115061429",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115061429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115871611",
      "pull_request_review_id": 1311575753,
      "id": 1115871611,
      "node_id": "PRRC_kwDOABII585Cgtl7",
      "diff_hunk": "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size\n+\n+        self.generatetoaddress(self.nodes[1], blocks_needed, addr)\n+        self.stop_node(1)\n+\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')",
      "path": "test/functional/feature_reindex.py",
      "position": 72,
      "original_position": 72,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "in_reply_to_id": 1115055900,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok good feedback. Yeah these asserts are more like sanity checks. Testing the test! Although they also fail early on certain code regressions for example if the `-fastprune` size is changed in the future.",
      "created_at": "2023-02-23T15:37:45Z",
      "updated_at": "2023-02-23T15:37:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115871611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115871611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": 101,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122020763",
      "pull_request_review_id": 1320217718,
      "id": 1122020763,
      "node_id": "PRRC_kwDOABII585C4K2b",
      "diff_hunk": "@@ -82,4 +83,105 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+    : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params {CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman {};\n+    CChain chain {};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "dc1c1a1ce8f56b9e35b1fecf64a7dad4f4622feb",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if this is only necessary for windows, would it be possible to hide it behind `#ifdef WIN32` so that the unit tests don't run 3*2=6 seconds longer for everyone else (which is quite a lot)?",
      "created_at": "2023-03-01T16:34:36Z",
      "updated_at": "2023-03-01T19:48:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122020763",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122020763"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122285875",
      "pull_request_review_id": 1320604068,
      "id": 1122285875,
      "node_id": "PRRC_kwDOABII585C5Lkz",
      "diff_hunk": "@@ -82,4 +83,105 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+    : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params {CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman {};\n+    CChain chain {};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "dc1c1a1ce8f56b9e35b1fecf64a7dad4f4622feb",
      "in_reply_to_id": 1122020763,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I guarded the sleep for WIN32, cleaned up the lint and mentioned the undo data in OP.",
      "created_at": "2023-03-01T20:51:19Z",
      "updated_at": "2023-03-01T20:51:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122285875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122285875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122332686",
      "pull_request_review_id": 1320666918,
      "id": 1122332686,
      "node_id": "PRRC_kwDOABII585C5XAO",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    constexpr int TEST_BLOCK_SIZE{81};\r\n```",
      "created_at": "2023-03-01T21:48:25Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122332686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122332686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122337219",
      "pull_request_review_id": 1320666918,
      "id": 1122337219,
      "node_id": "PRRC_kwDOABII585C5YHD",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // Write the first block; dbp=nullptr means this block doesn't already have a disk\r\n    // location, so allocate a free location and write it there.\r\n    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\r\n```\r\nand similar below",
      "created_at": "2023-03-01T21:54:12Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122337219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122337219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122338428",
      "pull_request_review_id": 1320666918,
      "id": 1122338428,
      "node_id": "PRRC_kwDOABII585C5YZ8",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // Attempt, but fail, to save block 3 to original position of block 2\r\n```",
      "created_at": "2023-03-01T21:55:43Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122338428",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122338428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122400769",
      "pull_request_review_id": 1320666918,
      "id": 1122400769,
      "node_id": "PRRC_kwDOABII585C5noB",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well, on non-windows, it _may_ have been modified, but within the same second. This is kind of a minor point (probably don't need to change anything), but if in the future there's a bug such that `blk00000.dat` was modified, this test might not catch it. I verified this by hacking the test such that the file _is_ modified, and about once in 10 or 20 runs, the timestamp didn't change. (This is on Ubuntu.)\r\n\r\nBut I guess that's okay, because if there is such a bug, it will likely be caught quickly. It's just that I wish this test could be 100 percent solid. The only way I could think of to do that is to read and checksum the file, and compare the checksums instead of the timestamps. (Then you wouldn't need that sleep for WIN32.) It wouldn't be a performance problem, because block files are very small in this test.\r\n\r\nJust something to consider, it may not be worth the trouble.",
      "created_at": "2023-03-01T23:06:10Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122400769",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122400769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122413793",
      "pull_request_review_id": 1320666918,
      "id": 1122413793,
      "node_id": "PRRC_kwDOABII585C5qzh",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems more problematic than what I mentioned above because this can cause false-positive. Is the resolution one second? Could all that happened since `time2` was sampled be in the same second? But I ran the test many times and did not see the problem.",
      "created_at": "2023-03-01T23:19:59Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122413793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122413793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122420915",
      "pull_request_review_id": 1320666918,
      "id": 1122420915,
      "node_id": "PRRC_kwDOABII585C5siz",
      "diff_hunk": "@@ -621,7 +621,7 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n \n     bool finalize_undo = false;\n     if (!fKnown) {\n-        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64kb */ : MAX_BLOCKFILE_SIZE)) {\n+        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE)) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "as long as you're touching this line\r\n```suggestion\r\n        const unsigned int max_size{gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE};\r\n        while (m_blockfile_info[nFile].nSize + nAddSize >= max_size) {\r\n```",
      "created_at": "2023-03-01T23:31:00Z",
      "updated_at": "2023-03-01T23:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122420915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122420915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123341750",
      "pull_request_review_id": 1322130805,
      "id": 1123341750,
      "node_id": "PRRC_kwDOABII585C9NW2",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": 1122413793,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What I learned is that windows/FAT systems have 2-second resolution but Linux/EXT4 etc have ms or ns resolution. I had a hard time determining the best method for testing when a file is flushed but I think you're right, using timestamps is just asking for intermittency. I think I wanted to avoid hashing files because it means opening the file while blockmanager might already have it open... but I think that's going to be the best way to test.",
      "created_at": "2023-03-02T16:04:09Z",
      "updated_at": "2023-03-02T16:04:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123341750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123341750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123380652",
      "pull_request_review_id": 1322182153,
      "id": 1123380652,
      "node_id": "PRRC_kwDOABII585C9W2s",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": 1122413793,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok trying another approach where we ALWAYS pause, to ensure incremental timestamps. But on windows we have to pause for 2 seconds. All other filesystems we only need to wait for 1 ms.",
      "created_at": "2023-03-02T16:26:50Z",
      "updated_at": "2023-03-02T16:26:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123380652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123380652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132925968",
      "pull_request_review_id": 1335683963,
      "id": 1132925968,
      "node_id": "PRRC_kwDOABII585DhxQQ",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand what this part of the test is testing - calling `SaveBlockToDisk` for a block at a specified but incorrect position is something that should never be possible in an actual, non-corrupted node unless I'm missing something. \r\nBut if it somehow happened anyway, even if the existing block isn't overwritten, I'd imagine that it would still cause some havoc, like changing block file statistics [here](https://github.com/bitcoin/bitcoin/blob/c7f1d95f52883d7087b74f45f5e4ce1100d51149/src/node/blockstorage.cpp#L646-L648) for the added size of a block that is never actually written to disk, which would probably be bad.",
      "created_at": "2023-03-10T22:00:57Z",
      "updated_at": "2023-03-10T22:06:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1132925968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132925968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133072579",
      "pull_request_review_id": 1335855256,
      "id": 1133072579,
      "node_id": "PRRC_kwDOABII585DiVDD",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": 1132925968,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1. What I'm asserting here is that if a position is passed in, the function called \"save block to disk\" does not save a block to disk. By using incorrect data I can easily prove that it is not actually written to disk.\r\n2. The call to `AddBlock` you highlight here confuses and concerns me a bit - since we know a `known` block won't be written, why are we updating the metadata at all?",
      "created_at": "2023-03-11T11:36:10Z",
      "updated_at": "2023-03-11T11:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133072579",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133072579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133090332",
      "pull_request_review_id": 1335870522,
      "id": 1133090332,
      "node_id": "PRRC_kwDOABII585DiZYc",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": 1132925968,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n> 2\\. The call to `AddBlock` you highlight here confuses and concerns me a bit - since we know a `known` block won't be written, why are we updating the metadata at all?\r\n\r\nBecause the block index LevelDB database (saved in `blocks/index`) is being wiped at the beginning of a reindex and needs to be rebuilt from scratch as we look at each block. Part of this database is meta info about each blockfile ([see bitcoin wiki](https://en.bitcoin.it/wiki/Bitcoin_Core_0.11_(ch_2):_Data_Storage#Block_index_.28leveldb.29)). I think that's the main reason why we have to call `SaveBlockToDisk` for each block during a reindex at all.\r\n\r\n\r\n",
      "created_at": "2023-03-11T14:20:18Z",
      "updated_at": "2023-03-11T14:20:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133090332",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133090332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133091606",
      "pull_request_review_id": 1335872593,
      "id": 1133091606,
      "node_id": "PRRC_kwDOABII585DiZsW",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": 1132925968,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok make sense thanks. do you think my first point justifies the method of the test or is that just confusing then and I should remove it?",
      "created_at": "2023-03-11T14:31:36Z",
      "updated_at": "2023-03-11T14:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133091606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133091606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135648966",
      "pull_request_review_id": 1339446081,
      "id": 1135648966,
      "node_id": "PRRC_kwDOABII585DsKDG",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": 1132925968,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that both removing it and adding an explanatory comment would be ok. Maybe the test could also check that the block statistics (`CBlockFileInfo`) is not the same after the call (`nBlocks` should have increased)?",
      "created_at": "2023-03-14T14:32:43Z",
      "updated_at": "2023-03-14T14:32:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135648966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135648966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135993681",
      "pull_request_review_id": 1339971916,
      "id": 1135993681,
      "node_id": "PRRC_kwDOABII585DteNR",
      "diff_hunk": "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "in_reply_to_id": 1132925968,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added in force-push to 5e579c6435145d84e43fb79224f2cb09b40ea047 and rebased on master",
      "created_at": "2023-03-14T18:00:28Z",
      "updated_at": "2023-03-14T18:00:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135993681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135993681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162797652",
      "pull_request_review_id": 1289406384,
      "id": 1162797652,
      "node_id": "PRRC_kwDOABII585FTuJU",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // When FlatFilePos* dbp is given, SaveBlockToDisk() will not write or\n+    // overwrite anything to the flat file block storage. It will, however,\n+    // update the blockfile metadata. This is to facilitate reindexing\n+    // when the user has the blocks on disk but the metadata is being rebuilt.\n+    CBlockFileInfo* block_data = blockman.GetBlockFileInfo(0);\n+    BOOST_CHECK(block_data->nBlocks == 2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: some inconsistent usage of `BOOST_CHECK` and `BOOST_CHECK_EQUAL`, I think using `BOOST_CHECK_EQUAL` here and in a few other places makes sense",
      "created_at": "2023-04-11T13:12:03Z",
      "updated_at": "2023-04-20T15:30:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1162797652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162797652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164077010",
      "pull_request_review_id": 1289406384,
      "id": 1164077010,
      "node_id": "PRRC_kwDOABII585FYmfS",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this a reliable way to check for a FAT filesystem? WIN32 could also use other filesystems I think (e.g. NTFS), and likewise - FAT could still be used without WIN32, I think?\r\n\r\nI think I agree with [LarryRuane](https://github.com/bitcoin/bitcoin/pull/27039/files#r1122400769) that comparing files is probably more robust and portable, which I think is reasonable with these small file sizes? But perhaps you've found this is too much of a performance hit?\r\n\r\nYou could also check the filesystem directly with `statfs` - or`GetVolumeInformationA` on Windows.",
      "created_at": "2023-04-12T12:40:33Z",
      "updated_at": "2023-04-20T15:30:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1164077010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164077010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167679089",
      "pull_request_review_id": 1386645395,
      "id": 1167679089,
      "node_id": "PRRC_kwDOABII585FmV5x",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": null,
      "user": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: use of assignment operator on line 126 while using initializer syntax for the same type on 123.\r\n\r\n```suggestion\r\n    FlatFilePos pos2{blockman.SaveBlockToDisk(block2, /*nHeight=*2, chain, *params, /*dbp=*/nullptr)};\r\n```",
      "created_at": "2023-04-16T02:00:11Z",
      "updated_at": "2023-04-16T02:47:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167679089",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167679089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167681916",
      "pull_request_review_id": 1386645395,
      "id": 1167681916,
      "node_id": "PRRC_kwDOABII585FmWl8",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": null,
      "user": {
        "login": "turkycat",
        "id": 5198897,
        "node_id": "MDQ6VXNlcjUxOTg4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5198897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/turkycat",
        "html_url": "https://github.com/turkycat",
        "followers_url": "https://api.github.com/users/turkycat/followers",
        "following_url": "https://api.github.com/users/turkycat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/turkycat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/turkycat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/turkycat/subscriptions",
        "organizations_url": "https://api.github.com/users/turkycat/orgs",
        "repos_url": "https://api.github.com/users/turkycat/repos",
        "events_url": "https://api.github.com/users/turkycat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/turkycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can you explain why you're sleeping _after_ reading `last_write_time`? If I understand correctly, based on the other comments in this thread, the sleep is necessary because the file modified time may not be updated immediately after the contents are written. This test does pass on my linux machine (which has a significantly shorter resolution time), yet I feel that we should be sleeping immediately after the potential file write does/does not occur before checking the file time and verifying it? This comment applies to the other uses of `sleep_for` in this test.",
      "created_at": "2023-04-16T02:37:22Z",
      "updated_at": "2023-04-16T02:47:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167681916",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167681916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168814404",
      "pull_request_review_id": 1388259983,
      "id": 1168814404,
      "node_id": "PRRC_kwDOABII585FqrFE",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": 1167679089,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks good eye. If I retouch I'll fix this.",
      "created_at": "2023-04-17T14:35:03Z",
      "updated_at": "2023-04-17T14:35:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168814404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168814404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168822308",
      "pull_request_review_id": 1388272272,
      "id": 1168822308,
      "node_id": "PRRC_kwDOABII585FqtAk",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": 1167681916,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This pause is intended to guarantee that `time1` (L140) and `time2` (L162) will be different if any file modification happens between the two readings. On windows for example with its 2 second resolution, all kinds of stuff could be happening to that file during those 22 lines and the timestamp would still not change (if no delay were present).",
      "created_at": "2023-04-17T14:40:28Z",
      "updated_at": "2023-04-17T14:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168822308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168822308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171578190",
      "pull_request_review_id": 1289406384,
      "id": 1171578190,
      "node_id": "PRRC_kwDOABII585F1N1O",
      "diff_hunk": "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // When FlatFilePos* dbp is given, SaveBlockToDisk() will not write or\n+    // overwrite anything to the flat file block storage. It will, however,\n+    // update the blockfile metadata. This is to facilitate reindexing\n+    // when the user has the blocks on disk but the metadata is being rebuilt.\n+    CBlockFileInfo* block_data = blockman.GetBlockFileInfo(0);\n+    BOOST_CHECK(block_data->nBlocks == 2);\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, /*dbp=*/&pos2);\n+    BOOST_CHECK(block_data->nBlocks == 3);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: unintuitive name, it's not a block\r\n\r\n```suggestion\r\n    FlatFilePos last_block_pos;\r\n```",
      "created_at": "2023-04-19T16:20:57Z",
      "updated_at": "2023-04-20T15:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1171578190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171578190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174134793",
      "pull_request_review_id": 1396354816,
      "id": 1174134793,
      "node_id": "PRRC_kwDOABII585F--AJ",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": 1122400769,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The only way I could think of to do that is to read and checksum the file, and compare the checksums instead of the timestamps. \r\n\r\nIsn't the point that the file contents aren't changing? So checksum wouldn't work because the files will be the same whether it's rewritten or not. The only things that can be different are the filesystem's metadata on the modification time, and these are not covered by a checksum.",
      "created_at": "2023-04-21T20:21:55Z",
      "updated_at": "2023-04-21T20:22:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174134793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174134793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174158220",
      "pull_request_review_id": 1396390894,
      "id": 1174158220,
      "node_id": "PRRC_kwDOABII585F_DuM",
      "diff_hunk": "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "path": "src/test/blockmanager_tests.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": 1122400769,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The only things that can be different are the filesystem's metadata on the modification time, and these are not covered by a checksum.\r\n\r\nIt might be the same usefulness actually, I seem to remember that if file contents aren't changed, when you call `fwrite()` or `fflush()`, the modification timestamp won't be updated. I researched different ways to detect a `fflush()` and this unit test was the closest. Most systems flush when `fwrite()` is called, and then a subsequent `fflush()` doesn't do anything at all. The best I could do with this unit test was cover current behavior to ensure that the PR didn't break it.\r\n\r\nSo actually it might be reasonable to just ditch the timestamp stuff altogether and just ensure that file contents aren't modified.\r\n\r\nThe better test coverage is in the functional test which will throw on master when bitcoin tries to **open** the read-only file.",
      "created_at": "2023-04-21T20:57:48Z",
      "updated_at": "2023-04-21T20:57:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174158220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174158220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1177996808",
      "pull_request_review_id": 1402175750,
      "id": 1177996808,
      "node_id": "PRRC_kwDOABII585GNs4I",
      "diff_hunk": "@@ -621,7 +621,7 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n \n     bool finalize_undo = false;\n     if (!fKnown) {\n-        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64kb */ : MAX_BLOCKFILE_SIZE)) {\n+        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE)) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_commit_id": "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "in_reply_to_id": 1122420915,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm going to revert this so it can be fixed in https://github.com/bitcoin/bitcoin/pull/27191",
      "created_at": "2023-04-26T14:49:31Z",
      "updated_at": "2023-04-26T14:49:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1177996808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1177996808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 624,
      "side": "RIGHT"
    }
  ]
}