{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
    "id": 1211392473,
    "node_id": "PR_kwDOABII585INGHZ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26929",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26929.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26929.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
    "number": 26929,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rpc: Throw more user friendly arg type check error (1.5/2)",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The arg type check error doesn't list which arg (position or name) failed. Fix that.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2023-01-20T11:12:19Z",
    "updated_at": "2023-01-26T20:06:24Z",
    "closed_at": "2023-01-25T15:25:59Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-01-25T15:25:59Z",
    "merge_commit_sha": "ab98673f058853e00c310afad57925f54c1ecfae",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2301-rpc-arg-type-check-error-nice-ðŸ¤”",
      "ref": "2301-rpc-arg-type-check-error-nice-ðŸ¤”",
      "sha": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205802,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:04Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "392dc68e37be9fc7adb32496b13d9b50262e317d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 51,
    "deletions": 33,
    "changed_files": 3,
    "commits": 1,
    "review_comments": 13,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 1398237495,
      "node_id": "IC_kwDOABII585TV2k3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398237495",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T11:12:22Z",
      "updated_at": "2023-01-25T13:52:53Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/26929#pullrequestreview-1269382574) |\n\nIf your review is incorrectly listed, please react with ðŸ‘Ž to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#issuecomment-1398237495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929"
    },
    {
      "event": "labeled",
      "id": 8320498608,
      "node_id": "LE_lADOABII585cbYfqzwAAAAHv8Luw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8320498608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T11:12:23Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "review_requested",
      "id": 8320502720,
      "node_id": "RRE_lADOABII585cbYfqzwAAAAHv8MvA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8320502720",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T11:12:52Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1398247408,
      "node_id": "IC_kwDOABII585TV4_w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398247408",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T11:22:57Z",
      "updated_at": "2023-01-20T11:22:57Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/pull/26929/checks?check_run_id=10776272066\r\n```bash\r\n/usr/bin/ccache g++ -m32 -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DHAVE_BUILD_INFO -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -I./leveldb/include -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_CXX98_FUNCTION_BASE -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/  -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection   -Werror    -fno-extended-identifiers -fvisibility=hidden -fPIE -pipe -std=c++17 -O2  -c -o rpc/libbitcoin_common_a-util.o `test -f 'rpc/util.cpp' || echo './'`rpc/util.cpp\r\nrpc/util.cpp: In function â€˜std::optional<UniValue::VType> ExpectedType(RPCArg::Type)â€™:\r\nrpc/util.cpp:717:1: error: control reaches end of non-void function [-Werror=return-type]\r\n }\r\n ^\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#issuecomment-1398247408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8320688590,
      "node_id": "HRFPE_lADOABII585cbYfqzwAAAAHv86HO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8320688590",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T11:40:51Z"
    },
    {
      "event": "reviewed",
      "id": 1263473805,
      "node_id": "PRR_kwDOABII585LTxSN",
      "url": null,
      "actor": null,
      "commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK for better error feedback",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#pullrequestreview-1263473805",
      "submitted_at": "2023-01-20T12:05:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8320919108,
      "node_id": "HRFPE_lADOABII585cbYfqzwAAAAHv9yZE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8320919108",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T12:14:22Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZmVkZGZlMGU2NzQ4ZTk3NjlhZDNkZDUyNmE2YzBlYWY2ZjRhYWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "tree": {
        "sha": "b1d0b718e341986a9e713c3f02895b06d9b0c3df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1d0b718e341986a9e713c3f02895b06d9b0c3df"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree b1d0b718e341986a9e713c3f02895b06d9b0c3df\nparent eebc24bfc6d2d809952e27c7fe269452f319455f\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1674215425 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1674217607 +0100\n\nrpc: Throw more user friendly arg type check error\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh/xQwAhl5+0O7T+TRnwStmDTJraKbQtuEa1Ubn1+6zischI4aqeaKIRgytr6KY\nfd8Kvx6J9Kc/OngsHpjuVDyC0VusLSI8o46jwGymRvQn3m629EUmJgbZ5o7mvOcM\nCmKHGgEBQglfYzFyIMoIk6lsS7LjEG+GeeQjd8rN6osMxLhNCoAgCDARGurgWJWP\nSWBH6dOD25tlYdEn5iKya+oxeOuvTy0EzP3I5tnkF9lNg4e3tErGZcD3kAtIIt45\nbPqsRzAUMkUjM1D31DF8QU7mdkRWBAf64g+x1aHJDcUYCsMq5GXVYfPpuP5cR2Ug\ny6PAkmTPVEV1PeNdC+MhGyM0jDJyg/yMv4lDd8nMh0VCHxCgcCi7GmcHcsuPgV/6\ntOtpWE2iSdZaEqASQkZsKWfQJ2YGz67f5cn+UY63szg77mix67hAz8aUy2F1f3YP\nTovw2i9Z1wxzOpz1s50WBE78DbMyHsj/0/euhgt5WuzccdUTDpKFuB7cNe0GRBWd\nnrIkRj0p\n=Df9A\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eebc24bfc6d2d809952e27c7fe269452f319455f",
          "sha": "eebc24bfc6d2d809952e27c7fe269452f319455f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eebc24bfc6d2d809952e27c7fe269452f319455f"
        }
      ],
      "message": "rpc: Throw more user friendly arg type check error",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-01-20T12:26:47Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-01-20T11:50:25Z"
      },
      "sha": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8321008545,
      "node_id": "HRFPE_lADOABII585cbYfqzwAAAAHv-IOh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8321008545",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T12:27:02Z"
    },
    {
      "event": "reviewed",
      "id": 1269382574,
      "node_id": "PRR_kwDOABII585LqT2u",
      "url": null,
      "actor": null,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac - although I think the functional test isn't in a logical place (but not blocking)",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#pullrequestreview-1269382574",
      "submitted_at": "2023-01-25T13:52:50Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
    },
    {
      "event": "merged",
      "id": 8355915026,
      "node_id": "ME_lADOABII585cbYfqzwAAAAHyDSUS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8355915026",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ab98673f058853e00c310afad57925f54c1ecfae",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab98673f058853e00c310afad57925f54c1ecfae",
      "created_at": "2023-01-25T15:25:59Z"
    },
    {
      "event": "closed",
      "id": 8355915080,
      "node_id": "CE_lADOABII585cbYfqzwAAAAHyDSVI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8355915080",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T15:25:59Z"
    },
    {
      "event": "referenced",
      "id": 8357101733,
      "node_id": "REFE_lADOABII585cbYfqzwAAAAHyH0Cl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8357101733",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2bc1cf4135181553b4bd61edec83a914d511406",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/a2bc1cf4135181553b4bd61edec83a914d511406",
      "created_at": "2023-01-25T17:28:43Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 8367447612,
      "node_id": "HRDE_lADOABII585cbYfqzwAAAAHyvR48",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8367447612",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T20:06:24Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082422648",
      "pull_request_review_id": 1263473805,
      "id": 1082422648,
      "node_id": "PRRC_kwDOABII585AhHV4",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Feels like a `util::Result` return type would be more appropriate here?",
      "created_at": "2023-01-20T12:04:20Z",
      "updated_at": "2023-01-20T12:05:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082422648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082422648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082429724",
      "pull_request_review_id": 1263480346,
      "id": 1082429724,
      "node_id": "PRRC_kwDOABII585AhJEc",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure. This would be `util::Result<void, UniValue>`, which is not yet available. I could also use `std::optional<UniValue>`, but not sure if it is worth it.",
      "created_at": "2023-01-20T12:09:53Z",
      "updated_at": "2023-01-20T12:09:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082429724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082429724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082464732",
      "pull_request_review_id": 1263511143,
      "id": 1082464732,
      "node_id": "PRRC_kwDOABII585AhRnc",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah it would benefit from #25665 but could do it with today's implementation already as well. I didn't realize we need a `UniValue` object (instead of just the string) in `HandleRequest`, though, so that makes this a bit more verbose than I hoped. Just found it a bit confusing to have a `UniValue` act as a variant, but that's probably personal preference.\r\n\r\nNo strong view either way, just thinking out loud. Feel free to close.\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 5f44b82aa..30528bd09 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -11,6 +11,7 @@\r\n #include <script/signingprovider.h>\r\n #include <tinyformat.h>\r\n #include <util/check.h>\r\n+#include <util/result.h>\r\n #include <util/strencodings.h>\r\n #include <util/string.h>\r\n #include <util/system.h>\r\n@@ -559,9 +560,9 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     UniValue arg_mismatch{UniValue::VOBJ};\r\n     for (size_t i{0}; i < m_args.size(); ++i) {\r\n         const auto& arg{m_args.at(i)};\r\n-        UniValue match{arg.MatchesType(request.params[i])};\r\n-        if (!match.isTrue()) {\r\n-            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(match));\r\n+        auto match{arg.MatchesType(request.params[i])};\r\n+        if (!match) {\r\n+            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), UniValue{UniValue::VType::VSTR, util::ErrorString(match).original});\r\n         }\r\n     }\r\n     if (!arg_mismatch.empty()) {\r\n@@ -717,7 +718,7 @@ static std::optional<UniValue::VType> ExpectedType(RPCArg::Type type)\r\n     NONFATAL_UNREACHABLE();\r\n }\r\n \r\n-UniValue RPCArg::MatchesType(const UniValue& request) const\r\n+util::Result<bool> RPCArg::MatchesType(const UniValue& request) const\r\n {\r\n     if (m_opts.skip_type_check) return true;\r\n     if (IsOptional() && request.isNull()) return true;\r\n@@ -725,7 +726,7 @@ UniValue RPCArg::MatchesType(const UniValue& request) const\r\n     if (!exp_type) return true; // nothing to check\r\n \r\n     if (*exp_type != request.getType()) {\r\n-        return strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type));\r\n+        return util::Error{Untranslated(strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type)))};\r\n     }\r\n     return true;\r\n }\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0d60e29fa..c374ee528 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -16,6 +16,7 @@\r\n #include <script/standard.h>\r\n #include <univalue.h>\r\n #include <util/check.h>\r\n+#include <util/result.h>\r\n \r\n #include <string>\r\n #include <variant>\r\n@@ -213,7 +214,7 @@ struct RPCArg {\r\n      * Check whether the request JSON type matches.\r\n      * Returns true if type matches, or object describing error(s) if not.\r\n      */\r\n-    UniValue MatchesType(const UniValue& request) const;\r\n+    util::Result<bool> MatchesType(const UniValue& request) const;\r\n \r\n     /** Return the first of all aliases */\r\n     std::string GetFirstName() const;\r\n```\r\n</details>",
      "created_at": "2023-01-20T12:34:42Z",
      "updated_at": "2023-01-20T12:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082464732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082464732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082467981",
      "pull_request_review_id": 1263514036,
      "id": 1082467981,
      "node_id": "PRRC_kwDOABII585AhSaN",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Although I think with https://github.com/bitcoin/bitcoin/pull/25665 merged I'd definitely prefer having the `util::Result<void, UniValue>` return type, just for readability.",
      "created_at": "2023-01-20T12:37:04Z",
      "updated_at": "2023-01-20T12:37:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082467981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082467981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082478974",
      "pull_request_review_id": 1263523374,
      "id": 1082478974,
      "node_id": "PRRC_kwDOABII585AhVF-",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Your diff doesn't work, because the return type is `util::Result<bool>`, but the function needs to return an `UniValue` object somehow. (To make the calling code less verbose and because it is needed for follow up 2/2)",
      "created_at": "2023-01-20T12:44:56Z",
      "updated_at": "2023-01-20T12:44:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082478974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082478974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082577837",
      "pull_request_review_id": 1263645976,
      "id": 1082577837,
      "node_id": "PRRC_kwDOABII585AhtOt",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think my diff does work? I'm not sure what the follow up and its requirements are, but the diff compiles, and seems to work fine e.g. for this call. But I agree that making the calling code more verbose is not ideal, so probably best to drop this approach.\r\n\r\n<details>\r\n<summary>./src/bitcoin-cli -signet getmempoolancestors tx 5</summary>\r\n\r\n```\r\nerror code: -3\r\nerror message:\r\nWrong type passed:\r\n{\r\n    \"Position 1 (verbose)\": \"JSON value of type number is not of expected type bool\"\r\n}\r\n```\r\n</details>\r\n\r\n\r\nI don't mean to bikeshed, but here's another approach without `util::Result` that may be more appropriate by returning `std::pair<bool, UniValue>`. Still slightly more verbose than currently, but could be worth it if compatible with 2/2? I'll give up after this :-D\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 5f44b82aa..e0c6aec67 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -559,9 +559,9 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     UniValue arg_mismatch{UniValue::VOBJ};\r\n     for (size_t i{0}; i < m_args.size(); ++i) {\r\n         const auto& arg{m_args.at(i)};\r\n-        UniValue match{arg.MatchesType(request.params[i])};\r\n-        if (!match.isTrue()) {\r\n-            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(match));\r\n+        auto [match, error] = arg.MatchesType(request.params[i]);\r\n+        if (!match) {\r\n+            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(error.value()));\r\n         }\r\n     }\r\n     if (!arg_mismatch.empty()) {\r\n@@ -717,17 +717,17 @@ static std::optional<UniValue::VType> ExpectedType(RPCArg::Type type)\r\n     NONFATAL_UNREACHABLE();\r\n }\r\n \r\n-UniValue RPCArg::MatchesType(const UniValue& request) const\r\n+std::pair<bool, std::optional<UniValue>> RPCArg::MatchesType(const UniValue& request) const\r\n {\r\n-    if (m_opts.skip_type_check) return true;\r\n-    if (IsOptional() && request.isNull()) return true;\r\n+    if (m_opts.skip_type_check) return {true, std::nullopt};\r\n+    if (IsOptional() && request.isNull()) return {true, std::nullopt};\r\n     const auto exp_type{ExpectedType(m_type)};\r\n-    if (!exp_type) return true; // nothing to check\r\n+    if (!exp_type) return {true, std::nullopt}; // nothing to check\r\n \r\n     if (*exp_type != request.getType()) {\r\n-        return strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type));\r\n+        return {false, strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type))};\r\n     }\r\n-    return true;\r\n+    return {true, std::nullopt};\r\n }\r\n \r\n std::string RPCArg::GetFirstName() const\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0d60e29fa..2d5f882fe 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -213,7 +213,7 @@ struct RPCArg {\r\n      * Check whether the request JSON type matches.\r\n      * Returns true if type matches, or object describing error(s) if not.\r\n      */\r\n-    UniValue MatchesType(const UniValue& request) const;\r\n+    std::pair<bool, std::optional<UniValue>> MatchesType(const UniValue& request) const;\r\n \r\n     /** Return the first of all aliases */\r\n     std::string GetFirstName() const;\r\n```\r\n</details>",
      "created_at": "2023-01-20T14:03:52Z",
      "updated_at": "2023-01-20T14:04:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082577837",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082577837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082590785",
      "pull_request_review_id": 1263660075,
      "id": 1082590785,
      "node_id": "PRRC_kwDOABII585AhwZB",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The return value in 2/2 needs to be of a type that can hold the nested types of a JSON argument, so UniValue seems a good fit.\r\n\r\n> std::pair<bool, UniValue>\r\n\r\nyes, that works, but seems worse than just `std::optional<UniValue>`.",
      "created_at": "2023-01-20T14:13:13Z",
      "updated_at": "2023-01-20T14:13:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082590785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082590785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082608076",
      "pull_request_review_id": 1263688189,
      "id": 1082608076,
      "node_id": "PRRC_kwDOABII585Ah0nM",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> but seems worse than just std::optional<UniValue>\r\n\r\nFrom a code brevity perspective, yes, but from a readability perspective I don't think so, because then boolean evaluation of `MatchesType` is the negation of what the name implies.",
      "created_at": "2023-01-20T14:25:08Z",
      "updated_at": "2023-01-20T14:25:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082608076",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082608076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082640658",
      "pull_request_review_id": 1263736159,
      "id": 1082640658,
      "node_id": "PRRC_kwDOABII585Ah8kS",
      "diff_hunk": "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "path": "src/rpc/util.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "in_reply_to_id": 1082422648,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, but then I'd prefer `UniValue` over `std::pair<bool, UniValue>`",
      "created_at": "2023-01-20T14:45:48Z",
      "updated_at": "2023-01-20T14:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082640658",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082640658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086659972",
      "pull_request_review_id": 1269382574,
      "id": 1086659972,
      "node_id": "PRRC_kwDOABII585AxR2E",
      "diff_hunk": "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "path": "test/functional/rpc_blockchain.py",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is an appropriate place for this test?\r\n\r\nE.g. renaming `rpc_named_arguments.py` -> `rpc_arguments.py` and adding it there seems more logical to me.",
      "created_at": "2023-01-25T13:46:09Z",
      "updated_at": "2023-01-25T13:52:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086659972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086659972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": 433,
      "original_start_line": 433,
      "start_side": "RIGHT",
      "line": 443,
      "original_line": 443,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086681113",
      "pull_request_review_id": 1269414816,
      "id": 1086681113,
      "node_id": "PRRC_kwDOABII585AxXAZ",
      "diff_hunk": "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "path": "test/functional/rpc_blockchain.py",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "in_reply_to_id": 1086659972,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not? Every other RPC that has missing-arg or wrong-type checks is also called in the rpc-specific test file?\r\n\r\nExamples:\r\n\r\n```\r\ngit grep 'is not of expected type' test\r\n```\r\n\r\nFor example in this file:\r\n\r\n```\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type string is not of expected type number\", self.nodes[0].getchaintxstats, '')\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type number is not of expected type string\", self.nodes[0].getchaintxstats, blockhash=0)\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type string is not of expected type number\", node.getblock, blockhash, \"2\")\r\n\r\n",
      "created_at": "2023-01-25T14:04:31Z",
      "updated_at": "2023-01-25T14:04:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086681113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086681113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": 433,
      "original_start_line": 433,
      "start_side": "RIGHT",
      "line": 443,
      "original_line": 443,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086695163",
      "pull_request_review_id": 1269436527,
      "id": 1086695163,
      "node_id": "PRRC_kwDOABII585Axab7",
      "diff_hunk": "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "path": "test/functional/rpc_blockchain.py",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "in_reply_to_id": 1086659972,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh yes, I'm not arguing against checking for an RPC's specific argument types within the RPC-specific test file in general, that can help with regressions etc.\r\n\r\nSince this PR is about type checking in general (and not about `getnetworkhashps`), I think it'd be good to have a test that checks the correct error message is raised - and that should be a test dedicated to just that? If for some unrelated reason in the future `_test_getnetworkhashps()` gets deleted because the method is deprecated, we'd unintentionally remove test coverage on this PR too.",
      "created_at": "2023-01-25T14:16:33Z",
      "updated_at": "2023-01-25T14:27:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086695163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086695163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": 433,
      "original_start_line": 433,
      "start_side": "RIGHT",
      "line": 443,
      "original_line": 443,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086706371",
      "pull_request_review_id": 1269453485,
      "id": 1086706371,
      "node_id": "PRRC_kwDOABII585AxdLD",
      "diff_hunk": "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "path": "test/functional/rpc_blockchain.py",
      "position": 22,
      "original_position": 22,
      "commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_commit_id": "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "in_reply_to_id": 1086659972,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, will add more tests in the follow-up",
      "created_at": "2023-01-25T14:25:25Z",
      "updated_at": "2023-01-25T14:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086706371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086706371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
        }
      },
      "start_line": 433,
      "original_start_line": 433,
      "start_side": "RIGHT",
      "line": 443,
      "original_line": 443,
      "side": "RIGHT"
    }
  ]
}