{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
    "id": 26078009,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYwNzgwMDk=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5478",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/5478.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/5478.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8f1563a3a5c259fe4ff034f206df0788c565365e",
    "number": 5478,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Replace uint256/uint160 by opaque blobs where possible",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This pull replaces almost all uses of `uint256` and all uses of `uint160` to use opaque byte blobs `blob256` and `blob160` with **only** the following operations: \n- Default initialization to 0, or from a vector of bytes\n- Assignment from other blobXXXs\n- `IsNull()` compare to special all-zeros value\n- `SetNull()` clear to special all-zeros value: Bitcoin needs `IsNull()` / `SetNull()` because we often use the all-zeroes value as a marker for errors and empty values.\n- `<` for sorting in maps.\n- `!=` `==` test for (in)equality\n- `GetHex`/`SetHex`/`ToString` because they're just so useful\n- `begin()`/`end()` raw access to the data\n- `size()` returns a fixed size\n- `GetSerializeSize()` `Serialize` `Unserialize` serialization just reads and writes the bytes\n- `GetCheapHash()` this is similar to `GetLow64()` and returns part of the value as uint64_t, for cheap hashing when the contents are assumed distributed uniformy random.\n\n`uint256` (used for proof-of-work mainly), on the other hand, loses all functionality like raw bytes access and serialization. Its memory should not be accessed directly. This is necessary for #888 (big endian support).\n`uint160` is completely removed as Bitcoin Core does no 160-bit integer arithmetic.\n### Overall steps (see commits)\n\nEven though the diff is huge, I've tried to follow a logical and easy to review process:\n1. Introduce `base_uint::SetNull` and `base_uint::IsNull()` as well as other methods that will later be on `base_blob`, to prepare for migration\n2. Replace x=0 with .SetNull(), x==0 with IsNull(), x!=0 with !IsNull().  Replace uses of uint256(0) with uint256().\n3. Introduce blob256 and blob160 as well as conversion functions   (only needed for blob256, we don't ever compute with uint160).\n4. Replace `GetLow64()` with `GetCheapHash()`\n5. Rename uint256 and uint160 to blob256 and blob160 except where big integers are really necessary.   For reviewing convenience I separated this out into \n   \n    A) pure renames uintXXX to blobXXX, can easily be verified (in reverse) with\n       find -name *.h -print0 | xargs -0 sed -i 's/blob256/uint256/g'\n       find -name *.cpp -print0 | xargs -0 sed -i 's/blob256/uint256/g'\n       find -name *.h -print0 | xargs -0 sed -i 's/blob160/uint160/g'\n       find -name *.cpp -print0 | xargs -0 sed -i 's/blob160/uint160/g'\n   \n    B) string conversions uint256(\"string\") to blob256S(\"string\")\n   \n    C) Added #includes and predeclared classes\n   \n    D) Necessary conversions between uint256 and blob256 **Focus reviewing here**\n6. Remove now-unused methods from base_uint and blob160/blob256, eg GetHash, also remove unused uint160.\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2014-12-15T15:44:27Z",
    "updated_at": "2021-09-08T11:47:25Z",
    "closed_at": "2014-12-16T14:05:41Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "9d4021b2546bcf69bf8b14ad5f3051016a8ce64d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "laanwj:2014_12_the_blob2",
      "ref": "2014_12_the_blob2",
      "sha": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1750308,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzUwMzA4",
        "name": "bitcoin",
        "full_name": "laanwj/bitcoin",
        "owner": {
          "login": "laanwj",
          "id": 126646,
          "node_id": "MDQ6VXNlcjEyNjY0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/laanwj",
          "html_url": "https://github.com/laanwj",
          "followers_url": "https://api.github.com/users/laanwj/followers",
          "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
          "organizations_url": "https://api.github.com/users/laanwj/orgs",
          "repos_url": "https://api.github.com/users/laanwj/repos",
          "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/laanwj/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/laanwj/bitcoin",
        "description": "Laanwj's Bitcoin Core fork - see README.md on \"readme\" branch",
        "fork": true,
        "url": "https://api.github.com/repos/laanwj/bitcoin",
        "archive_url": "https://api.github.com/repos/laanwj/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/laanwj/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/laanwj/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/laanwj/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/laanwj/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/laanwj/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/laanwj/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/laanwj/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/laanwj/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/laanwj/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/laanwj/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/laanwj/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/laanwj/bitcoin/events",
        "forks_url": "https://api.github.com/repos/laanwj/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/laanwj/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/laanwj/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/laanwj/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/laanwj/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/laanwj/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/laanwj/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/laanwj/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/laanwj/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/laanwj/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/laanwj/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/laanwj/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/laanwj/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/laanwj/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/laanwj/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/laanwj/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:laanwj/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/laanwj/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/laanwj/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/laanwj/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/laanwj/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/laanwj/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/laanwj/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/laanwj/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/laanwj/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/laanwj/bitcoin/hooks",
        "svn_url": "https://github.com/laanwj/bitcoin",
        "homepage": "",
        "forks_count": 19,
        "stargazers_count": 42,
        "watchers_count": 42,
        "size": 200945,
        "default_branch": "readme",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-07T09:13:04Z",
        "created_at": "2011-05-15T07:09:54Z",
        "updated_at": "2023-04-02T19:40:33Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bf4bf40a1c8e94e766679f1c8cde75c3067cf594",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1406,
    "deletions": 1167,
    "changed_files": 103,
    "commits": 15,
    "review_comments": 12,
    "comments": 6
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjJjZGY5ODhhOGI3NDliM2FhYmY3ZGI4MWEwZDJmZTJmNGM0ZWYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2",
      "tree": {
        "sha": "101192a4a9926233717cd7225e239ac454f6665b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/101192a4a9926233717cd7225e239ac454f6665b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c789b761d568badb30e50898d590eb1a9c0b273c",
          "sha": "c789b761d568badb30e50898d590eb1a9c0b273c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c789b761d568badb30e50898d590eb1a9c0b273c"
        }
      ],
      "message": "Temporarily add SetNull/IsNull/GetCheapHash to base_uint\n\nEases step-by-step migration to blob.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T09:05:51Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T09:05:51Z"
      },
      "sha": "722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA2NTMxZWMxYTRhMjNlNmM0NmJmNDNiMWVjZDdhNjU4NmVlN2I1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5",
      "tree": {
        "sha": "4b263010f76801252c3cd1ef24ee2fc4695896af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b263010f76801252c3cd1ef24ee2fc4695896af"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2",
          "sha": "722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/722cdf988a8b749b3aabf7db81a0d2fe2f4c4ef2"
        }
      ],
      "message": "Replace direct use of 0 with SetNull and IsNull\n\nReplace x=0 with .SetNull(),\nx==0 with IsNull(), x!=0 with !IsNull().\nReplace uses of uint256(0) with uint256().",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:11:17Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T08:11:16Z"
      },
      "sha": "fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTZiNzYyMmE0NTBhYWY4N2VkNDc1YmE2ODE5ZGY3NjU3MGYwMWNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e6b7622a450aaf87ed475ba6819df76570f01cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9e6b7622a450aaf87ed475ba6819df76570f01cb",
      "tree": {
        "sha": "8c909bb5f74416301301635c3f018ffcfa950341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c909bb5f74416301301635c3f018ffcfa950341"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5",
          "sha": "fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa06531ec1a4a23e6c46bf43b1ecd7a6586ee7b5"
        }
      ],
      "message": "Replace GetLow64 with GetCheapHash",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:12:44Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T08:12:11Z"
      },
      "sha": "9e6b7622a450aaf87ed475ba6819df76570f01cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTQ3MDBjMTlmYmE3ODU1YjQ4YTBkZmExNzdjZmY2NThlMGRmMjUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/354700c19fba7855b48a0dfa177cff658e0df251",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/354700c19fba7855b48a0dfa177cff658e0df251",
      "tree": {
        "sha": "5e5fe763668ce5f9c4194a892b4ef903395ea6ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e5fe763668ce5f9c4194a892b4ef903395ea6ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e6b7622a450aaf87ed475ba6819df76570f01cb",
          "sha": "9e6b7622a450aaf87ed475ba6819df76570f01cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9e6b7622a450aaf87ed475ba6819df76570f01cb"
        }
      ],
      "message": "Add blob256.cpp/h to build",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:12:44Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T09:22:19Z"
      },
      "sha": "354700c19fba7855b48a0dfa177cff658e0df251"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTcyZGRlMzE3ZmNjMTVhZTdlNDEyYWRlMDU0ZGQ2MDQxYjIwODA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee72dde317fcc15ae7e412ade054dd6041b20809",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee72dde317fcc15ae7e412ade054dd6041b20809",
      "tree": {
        "sha": "a24bb85202fba5ca2ff4d1e463c09fa3d127dcdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a24bb85202fba5ca2ff4d1e463c09fa3d127dcdc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/354700c19fba7855b48a0dfa177cff658e0df251",
          "sha": "354700c19fba7855b48a0dfa177cff658e0df251",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/354700c19fba7855b48a0dfa177cff658e0df251"
        }
      ],
      "message": "Add UintToBlob256 and BlobToUint256\n\nConvert between blobs and uints, mostly for proof of work checks.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:34:14Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T09:46:17Z"
      },
      "sha": "ee72dde317fcc15ae7e412ade054dd6041b20809"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Yjg0MzI4MjJkN2RhODYxN2Y0NDllMGFlYWM3ZWZiNGFjZjZkODE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b8432822d7da8617f449e0aeac7efb4acf6d819",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b8432822d7da8617f449e0aeac7efb4acf6d819",
      "tree": {
        "sha": "4e932de4e2a38c2e8cb1d5315084c4b31c54ac8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e932de4e2a38c2e8cb1d5315084c4b31c54ac8a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee72dde317fcc15ae7e412ade054dd6041b20809",
          "sha": "ee72dde317fcc15ae7e412ade054dd6041b20809",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee72dde317fcc15ae7e412ade054dd6041b20809"
        }
      ],
      "message": "Replace uint256(1) with static constant\n\nSignatureHash and its test function SignatureHashOld\nreturn uint256(1) as a special error signaling value.\nReturn a local static constant with the same value instead.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:34:14Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T08:17:25Z"
      },
      "sha": "9b8432822d7da8617f449e0aeac7efb4acf6d819"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzY5Nzg4ODg5NjY1YWMyYzY3MGE2ODM0OWYxNmNlMDBmYTQ1OTdk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1369788889665ac2c670a68349f16ce00fa4597d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1369788889665ac2c670a68349f16ce00fa4597d",
      "tree": {
        "sha": "dc1ea1196e92a67ca616f1e3c35367048112ca2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc1ea1196e92a67ca616f1e3c35367048112ca2c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b8432822d7da8617f449e0aeac7efb4acf6d819",
          "sha": "9b8432822d7da8617f449e0aeac7efb4acf6d819",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b8432822d7da8617f449e0aeac7efb4acf6d819"
        }
      ],
      "message": "protect base_uint begin() and end()\n\nClients outside the class have no business poking at the internals.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:37Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T10:36:44Z"
      },
      "sha": "1369788889665ac2c670a68349f16ce00fa4597d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDA4YjdhNjgzZTI5NGZhMGE1ZWQzNTgxY2I0YzIxNWI3ZTg2YTUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4008b7a683e294fa0a5ed3581cb4c215b7e86a53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4008b7a683e294fa0a5ed3581cb4c215b7e86a53",
      "tree": {
        "sha": "cf7f1ee39f7a5378c8a175d44e94a721ebda5d64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf7f1ee39f7a5378c8a175d44e94a721ebda5d64"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1369788889665ac2c670a68349f16ce00fa4597d",
          "sha": "1369788889665ac2c670a68349f16ce00fa4597d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1369788889665ac2c670a68349f16ce00fa4597d"
        }
      ],
      "message": "blob256: make initialization from string explicit\n\nAvoid dangerous cases where 0 is interpreted as std::string(0).\nKeyword `explicit` does not help here.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:37Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T11:24:45Z"
      },
      "sha": "4008b7a683e294fa0a5ed3581cb4c215b7e86a53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTU2OWVkMDI3Mjk4Mjg2ZTJlOTJmMGE0NjZlYmU3ZTA2ZmQwNTUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9569ed027298286e2e92f0a466ebe7e06fd0553",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d9569ed027298286e2e92f0a466ebe7e06fd0553",
      "tree": {
        "sha": "8dfd9c5c0dd0721e8c37cada56a6994a1ea193c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dfd9c5c0dd0721e8c37cada56a6994a1ea193c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4008b7a683e294fa0a5ed3581cb4c215b7e86a53",
          "sha": "4008b7a683e294fa0a5ed3581cb4c215b7e86a53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4008b7a683e294fa0a5ed3581cb4c215b7e86a53"
        }
      ],
      "message": "A: pure renames uintXXX to blobXXX",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:38Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:02:56Z"
      },
      "sha": "d9569ed027298286e2e92f0a466ebe7e06fd0553"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzI4ZTIzYzMzODExMTVmNjMxNTBjNzJkZGU2YjI5ZDNhZmU5Nzkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc28e23c3381115f63150c72dde6b29d3afe9793",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc28e23c3381115f63150c72dde6b29d3afe9793",
      "tree": {
        "sha": "76b5e9e481e70e7d7316b8a079a518b68cec96d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76b5e9e481e70e7d7316b8a079a518b68cec96d6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9569ed027298286e2e92f0a466ebe7e06fd0553",
          "sha": "d9569ed027298286e2e92f0a466ebe7e06fd0553",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d9569ed027298286e2e92f0a466ebe7e06fd0553"
        }
      ],
      "message": "B: string conversions",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:38Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:05:04Z"
      },
      "sha": "cc28e23c3381115f63150c72dde6b29d3afe9793"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzU3ZDVkNWY5NGRjNzM1ZGMzYWZjNTQ2ZTE3ODU2ZjJjN2M1NDk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c57d5d5f94dc735dc3afc546e17856f2c7c5494",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9c57d5d5f94dc735dc3afc546e17856f2c7c5494",
      "tree": {
        "sha": "fb1ce87eedfcc79e771a015b131ab994c3c053d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb1ce87eedfcc79e771a015b131ab994c3c053d1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc28e23c3381115f63150c72dde6b29d3afe9793",
          "sha": "cc28e23c3381115f63150c72dde6b29d3afe9793",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cc28e23c3381115f63150c72dde6b29d3afe9793"
        }
      ],
      "message": "C: Includes and predeclared classes",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:38Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:06:18Z"
      },
      "sha": "9c57d5d5f94dc735dc3afc546e17856f2c7c5494"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWYyZmY4NDA0Mjc4YjU2NDFmMGU2MWM2MWYxNGJmZmZmMDE0MTYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65f2ff8404278b5641f0e61c61f14bffff014162",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65f2ff8404278b5641f0e61c61f14bffff014162",
      "tree": {
        "sha": "4353188b63d6032d5619da551fe733c8f24083ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4353188b63d6032d5619da551fe733c8f24083ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c57d5d5f94dc735dc3afc546e17856f2c7c5494",
          "sha": "9c57d5d5f94dc735dc3afc546e17856f2c7c5494",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9c57d5d5f94dc735dc3afc546e17856f2c7c5494"
        }
      ],
      "message": "D: Necessary conversions between uint256 and blob256",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:40:38Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:07:08Z"
      },
      "sha": "65f2ff8404278b5641f0e61c61f14bffff014162"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 207746258,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA3NzQ2MjU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/207746258",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-15T17:11:59Z"
    },
    {
      "event": "commented",
      "id": 67062561,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYyNTYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67062561",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-15T20:46:43Z",
      "updated_at": "2014-12-15T20:46:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "This appears to be unused now:\n\n```\nsrc/test/uint256_tests.cpp:const double R1Sdouble = 0.7096329412477836074; \n```\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67062561",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "commented",
      "id": 67113660,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTEzNjYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67113660",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T05:16:15Z",
      "updated_at": "2014-12-16T05:16:15Z",
      "author_association": "MEMBER",
      "body": "@paveljanik Thanks, I'll remove it. All *S variables in `uint256_tests.cpp` are for testing uint160, which went away.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67113660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "mentioned",
      "id": 208086340,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA4MDg2MzQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/208086340",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T05:16:15Z"
    },
    {
      "event": "subscribed",
      "id": 208086341,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwODA4NjM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/208086341",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T05:16:15Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTBmNTgxMmJmYTBjZmVkNjlhYzc0NWUyNmNlNGY4NjliNDcwYTUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a0f5812bfa0cfed69ac745e26ce4f869b470a53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2a0f5812bfa0cfed69ac745e26ce4f869b470a53",
      "tree": {
        "sha": "5f1282bace6c4869d6fd4731a9316935f59f4853",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f1282bace6c4869d6fd4731a9316935f59f4853"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65f2ff8404278b5641f0e61c61f14bffff014162",
          "sha": "65f2ff8404278b5641f0e61c61f14bffff014162",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65f2ff8404278b5641f0e61c61f14bffff014162"
        }
      ],
      "message": "Remove uint160\n\nNo uint160 arithmetic is used at all. Also remove the tests.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-16T07:00:07Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:24:01Z"
      },
      "sha": "2a0f5812bfa0cfed69ac745e26ce4f869b470a53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmU5NDUzMmU3OTA5ZmNhZTMwNjc0MDBiNTMxNWNiM2U5ZWZkNzAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfe94532e7909fcae3067400b5315cb3e9efd701",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cfe94532e7909fcae3067400b5315cb3e9efd701",
      "tree": {
        "sha": "75aed97d8af76caf52646f6e1d0a452d83b0f440",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75aed97d8af76caf52646f6e1d0a452d83b0f440"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a0f5812bfa0cfed69ac745e26ce4f869b470a53",
          "sha": "2a0f5812bfa0cfed69ac745e26ce4f869b470a53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a0f5812bfa0cfed69ac745e26ce4f869b470a53"
        }
      ],
      "message": "Remove now-unused methods from uint256 and base_uint",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-16T07:00:07Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T14:26:05Z"
      },
      "sha": "cfe94532e7909fcae3067400b5315cb3e9efd701"
    },
    {
      "event": "commented",
      "id": 67123372,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTIzMzcy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67123372",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T07:45:43Z",
      "updated_at": "2014-12-16T08:40:58Z",
      "author_association": "MEMBER",
      "body": "Re: people complaining about rebasing their pulls, if the large diff in 'A: pure renames' is problematic, we could cheat by changing uint256 and uint160 to be blob types and introduce a new type for actual 256 bit integer arithmetic. But as clear type names are important I don't really like this.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67123372",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjE1NjNhM2E1YzI1OWZlNGZmMDM0ZjIwNmRmMDc4OGM1NjUzNjVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f1563a3a5c259fe4ff034f206df0788c565365e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8f1563a3a5c259fe4ff034f206df0788c565365e",
      "tree": {
        "sha": "ea729676f58885eeef2fb6e86a02b1bd1fc7f00a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea729676f58885eeef2fb6e86a02b1bd1fc7f00a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfe94532e7909fcae3067400b5315cb3e9efd701",
          "sha": "cfe94532e7909fcae3067400b5315cb3e9efd701",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cfe94532e7909fcae3067400b5315cb3e9efd701"
        }
      ],
      "message": "Add tests for blob256",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-16T09:02:58Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-15T15:27:09Z"
      },
      "sha": "8f1563a3a5c259fe4ff034f206df0788c565365e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 208150424,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA4MTUwNDI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/208150424",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T09:03:25Z"
    },
    {
      "event": "labeled",
      "id": 208189216,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwODE4OTIxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/208189216",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T10:26:26Z",
      "label": {
        "name": "Improvement",
        "color": "E6F6D6"
      }
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTgxMjY0Nzc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTgxMjY0ODA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTgxMjY0ODE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTgxMjY0ODI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 67154146,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTU0MTQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67154146",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T12:44:19Z",
      "updated_at": "2014-12-16T12:44:19Z",
      "author_association": "MEMBER",
      "body": "I would actually like the PR as a whole to just introduce arith_uint256 or something (for the version with arithmetic semantics) and leave uint256/uint160 in place (for the version without). That will result in a much smaller patchset, and require much less rebasings while this is being reviewed.\n\nPerhaps later there can be mass rename that is trivial to review and merge.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67154146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "commented",
      "id": 67158692,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTU4Njky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67158692",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T13:25:41Z",
      "updated_at": "2014-12-16T13:25:41Z",
      "author_association": "MEMBER",
      "body": "Ok, reluctantly agreed... As I say above already I hate the idea of using uint160/uint256 for what are not actually integers and introduce a yes_this_is_really_an_int256 for real uint256 arithmetic, but yes the diff will be much smaller.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67158692",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "commented",
      "id": 67163551,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTYzNTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67163551",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T14:05:41Z",
      "updated_at": "2014-12-17T10:06:10Z",
      "author_association": "MEMBER",
      "body": "Closing, will reopen after reorganization.\n\nContinued in #5490\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67163551",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5478"
    },
    {
      "event": "closed",
      "id": 208294032,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjA4Mjk0MDMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/208294032",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-12-16T14:05:41Z"
    },
    {
      "event": "locked",
      "id": 5271769835,
      "node_id": "LOE_lADOABII584DGXgRzwAAAAE6ONLr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271769835",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:47:25Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891455",
      "pull_request_review_id": null,
      "id": 21891455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxNDU1",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "path": "src/blob256.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it break anything if we defined the ordering of blob256 as platform-dependent? That would allow using memcmp for this operator too.\n",
      "created_at": "2014-12-16T11:24:25Z",
      "updated_at": "2014-12-16T11:24:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891628",
      "pull_request_review_id": null,
      "id": 21891628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxNjI4",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "path": "src/blob256.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fact, I think that would allow implementing blob\\* as wrappers around byte arrays, and leave all integer conversion to uint*.\n\nEDIT: Sorry, they already are byte-arrays; I should read more before commenting.\n\nEDIT2: In fact, I think the implementation below is already identical to just \"memcmp(a.data, b.data, sizeof(a.data)) < 0\".\n",
      "created_at": "2014-12-16T11:28:45Z",
      "updated_at": "2014-12-16T11:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891914",
      "pull_request_review_id": null,
      "id": 21891914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTE0",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "path": "src/blob256.h",
      "position": 31,
      "original_position": 31,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "memcpy?\n\nOr just the default copy constructor, really.\n",
      "created_at": "2014-12-16T11:35:58Z",
      "updated_at": "2014-12-16T11:36:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891916",
      "pull_request_review_id": null,
      "id": 21891916,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTE2",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;",
      "path": "src/blob256.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "memset?\n",
      "created_at": "2014-12-16T11:36:03Z",
      "updated_at": "2014-12-16T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891982",
      "pull_request_review_id": null,
      "id": 21891982,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTgy",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "path": "src/blob256.h",
      "position": 120,
      "original_position": 120,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can probably be local to blob256.h?\n",
      "created_at": "2014-12-16T11:37:43Z",
      "updated_at": "2014-12-16T11:37:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892272",
      "pull_request_review_id": null,
      "id": 21892272,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMjcy",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "path": "src/blob256.h",
      "position": 120,
      "original_position": 120,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How that? There are four uses of this function in addrman.cpp and one in main.h.\n",
      "created_at": "2014-12-16T11:44:54Z",
      "updated_at": "2014-12-16T11:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892296",
      "pull_request_review_id": null,
      "id": 21892296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMjk2",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "path": "src/blob256.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, it's identical to memcmp, good catch. Will use that.\n",
      "created_at": "2014-12-16T11:45:25Z",
      "updated_at": "2014-12-16T11:45:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892309",
      "pull_request_review_id": null,
      "id": 21892309,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMzA5",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;",
      "path": "src/blob256.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK\n",
      "created_at": "2014-12-16T11:45:51Z",
      "updated_at": "2014-12-16T11:45:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892406",
      "pull_request_review_id": null,
      "id": 21892406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyNDA2",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "path": "src/blob256.h",
      "position": 120,
      "original_position": 120,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, that was confused. I mean making it specific to the blob256 type, as opposed to base_blob.\n",
      "created_at": "2014-12-16T11:48:15Z",
      "updated_at": "2014-12-16T11:48:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892406",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892775",
      "pull_request_review_id": null,
      "id": 21892775,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyNzc1",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "path": "src/blob256.h",
      "position": 31,
      "original_position": 31,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point. The default POD copy constructor (as well as assignment operator?) will do the right thing here.\n",
      "created_at": "2014-12-16T11:58:31Z",
      "updated_at": "2014-12-16T11:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21893340",
      "pull_request_review_id": null,
      "id": 21893340,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkzMzQw",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "path": "src/blob256.h",
      "position": 31,
      "original_position": 31,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yup, the assignment operator too. Though perhaps those are needed to make the inherited blob256/uint256 work; unsure.\n",
      "created_at": "2014-12-16T12:13:51Z",
      "updated_at": "2014-12-16T12:13:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21893340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21893340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21894230",
      "pull_request_review_id": null,
      "id": 21894230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0MjMw",
      "diff_hunk": "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "path": "src/blob256.h",
      "position": 120,
      "original_position": 120,
      "commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_commit_id": "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "SGTM\n",
      "created_at": "2014-12-16T12:31:40Z",
      "updated_at": "2014-12-16T12:31:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21894230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21894230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}