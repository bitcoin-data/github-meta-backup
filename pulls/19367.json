{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367",
    "id": 438916546,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM4OTE2NTQ2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19367",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19367.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19367.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
    "number": 19367,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "doc: Span pitfalls",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is an attempt to document pitfalls with the use of `Span`, following up on comments like https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622846597 and https://github.com/bitcoin/bitcoin/pull/18468#discussion_r442998211",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-24T02:08:43Z",
    "updated_at": "2022-02-15T10:33:02Z",
    "closed_at": "2020-06-29T13:18:53Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-06-29T13:18:53Z",
    "merge_commit_sha": "fb87f6d168c45acd36d3c2b55b0647f3959c7a76",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202006_span_pitfalls",
      "ref": "202006_span_pitfalls",
      "sha": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "49464004701e5ac256fe1f3e969464012af7c598",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 69,
    "deletions": 0,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 11,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 648538999,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODUzODk5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648538999",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:08:58Z",
      "updated_at": "2020-06-24T02:08:58Z",
      "author_association": "MEMBER",
      "body": "Ping @theuni.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648538999",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "mentioned",
      "id": 3475471671,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NTQ3MTY3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475471671",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:08:58Z"
    },
    {
      "event": "subscribed",
      "id": 3475471673,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzU0NzE2NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475471673",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:08:58Z"
    },
    {
      "event": "labeled",
      "id": 3475472785,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0NzU0NzI3ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475472785",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:09:28Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 648799528,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODc5OTUyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648799528",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T12:50:06Z",
      "updated_at": "2020-06-24T12:50:06Z",
      "author_association": "MEMBER",
      "body": "ACK 402980d7d0299769e147688250235339908523c7\r\nIt might aid discoverability to refer to this list of pitfalls in `developer-notes.md`.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648799528",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "commented",
      "id": 648854853,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg1NDg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648854853",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T14:27:17Z",
      "updated_at": "2020-06-24T14:27:17Z",
      "author_association": "MEMBER",
      "body": "ACK 402980d7d0299769e147688250235339908523c7",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648854853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "commented",
      "id": 648872233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg3MjIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648872233",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T14:55:40Z",
      "updated_at": "2020-06-24T14:55:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK modulo adding a reference in `developer-notes.md` to ease discoverability as suggested by @laanwj :)\r\n\r\nPrediction: We'll need a similar life-time issue warning in the developer notes once we get the sharp edges of `std::string_view` to play with :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648872233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "mentioned",
      "id": 3477915981,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NzkxNTk4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3477915981",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T14:55:40Z"
    },
    {
      "event": "subscribed",
      "id": 3477915988,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Nzc5MTU5ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3477915988",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T14:55:40Z"
    },
    {
      "event": "reviewed",
      "id": 436735896,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NzM1ODk2",
      "url": null,
      "actor": null,
      "commit_id": "402980d7d0299769e147688250235339908523c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#pullrequestreview-436735896",
      "submitted_at": "2020-06-24T15:02:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
    },
    {
      "event": "reviewed",
      "id": 436819014,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODE5MDE0",
      "url": null,
      "actor": null,
      "commit_id": "402980d7d0299769e147688250235339908523c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#pullrequestreview-436819014",
      "submitted_at": "2020-06-24T16:36:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
    },
    {
      "event": "reviewed",
      "id": 436824565,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODI0NTY1",
      "url": null,
      "actor": null,
      "commit_id": "402980d7d0299769e147688250235339908523c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#pullrequestreview-436824565",
      "submitted_at": "2020-06-24T16:43:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
    },
    {
      "event": "reviewed",
      "id": 437619855,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjE5ODU1",
      "url": null,
      "actor": null,
      "commit_id": "402980d7d0299769e147688250235339908523c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "ysangkok",
        "id": 284023,
        "node_id": "MDQ6VXNlcjI4NDAyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ysangkok",
        "html_url": "https://github.com/ysangkok",
        "followers_url": "https://api.github.com/users/ysangkok/followers",
        "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
        "organizations_url": "https://api.github.com/users/ysangkok/orgs",
        "repos_url": "https://api.github.com/users/ysangkok/repos",
        "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ysangkok/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#pullrequestreview-437619855",
      "submitted_at": "2020-06-25T15:39:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
    },
    {
      "event": "commented",
      "id": 649839833,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTgzOTgzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649839833",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:01:56Z",
      "updated_at": "2020-06-25T22:01:56Z",
      "author_association": "MEMBER",
      "body": "Related: I've pushed a branch here which adds the lifetimebound annotation: https://github.com/theuni/bitcoin/commits/lifetimebound\r\n\r\nThe changes are actually very simple, but the commit messages are verbose and reflect my (hopefully correct?) understanding of what's going on.\r\n\r\n@sipa Would you like me to PR that separately for discussion? Or (if you actually want them) do you want to pull them into #13062 ?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649839833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "mentioned",
      "id": 3484307945,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ4NDMwNzk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3484307945",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:01:56Z"
    },
    {
      "event": "subscribed",
      "id": 3484307947,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0ODQzMDc5NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3484307947",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:01:56Z"
    },
    {
      "event": "commented",
      "id": 649842936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg0MjkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649842936",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:10:02Z",
      "updated_at": "2020-06-25T22:10:02Z",
      "author_association": "MEMBER",
      "body": "@theuni That looks great; I think you should PR it separately (as master stands to benefit from it independent of any other Span-related changes).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649842936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "mentioned",
      "id": 3484329041,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ4NDMyOTA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3484329041",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:10:02Z"
    },
    {
      "event": "subscribed",
      "id": 3484329044,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0ODQzMjkwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3484329044",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T22:10:02Z"
    },
    {
      "event": "reviewed",
      "id": 437902152,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTAyMTUy",
      "url": null,
      "actor": null,
      "commit_id": "402980d7d0299769e147688250235339908523c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 402980d7d0299769e147688250235339908523c7 modulo the nits that have been pointed out.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#pullrequestreview-437902152",
      "submitted_at": "2020-06-25T22:28:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
    },
    {
      "event": "renamed",
      "id": 3484549519,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzQ4NDU0OTUxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3484549519",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T23:56:47Z",
      "rename": {
        "from": "[comments only] Document Span pitfalls",
        "to": "doc: Span pitfalls"
      }
    },
    {
      "event": "commented",
      "id": 649874237,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg3NDIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649874237",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T23:56:55Z",
      "updated_at": "2020-06-25T23:56:55Z",
      "author_association": "MEMBER",
      "body": "ACK 402980d7d0299769e147688250235339908523c7",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649874237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTAyYTYwNDE4ODU4YTgyODFkZGYyZjljZDU5ZGFhOGYwMWQyZmE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3502a60418858a8281ddf2f9cd59daa8f01d2fa8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3502a60418858a8281ddf2f9cd59daa8f01d2fa8",
      "tree": {
        "sha": "b656533b5be26018cab98a4a9d26434234c15dbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b656533b5be26018cab98a4a9d26434234c15dbf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49464004701e5ac256fe1f3e969464012af7c598",
          "sha": "49464004701e5ac256fe1f3e969464012af7c598",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49464004701e5ac256fe1f3e969464012af7c598"
        }
      ],
      "message": "doc: Document Span pitfalls",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-06-26T20:49:52Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-06-24T02:04:46Z"
      },
      "sha": "3502a60418858a8281ddf2f9cd59daa8f01d2fa8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3488090402,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ4ODA5MDQwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3488090402",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T20:50:10Z"
    },
    {
      "event": "commented",
      "id": 650394756,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDM5NDc1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650394756",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T20:50:24Z",
      "updated_at": "2020-06-26T20:50:24Z",
      "author_association": "MEMBER",
      "body": "Addressed all comments, I believe.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-650394756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI1N2UyYjliYzQ1NzdmY2ZjZDlmYmRkYmMzNWQ5NjA0NmM1ZDg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "tree": {
        "sha": "b32cbddbb88ec6fd90092711c629f1eceeb572c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b32cbddbb88ec6fd90092711c629f1eceeb572c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3502a60418858a8281ddf2f9cd59daa8f01d2fa8",
          "sha": "3502a60418858a8281ddf2f9cd59daa8f01d2fa8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3502a60418858a8281ddf2f9cd59daa8f01d2fa8"
        }
      ],
      "message": "doc: Mention Span in developer-notes.md",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-06-26T20:53:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-06-26T20:47:48Z"
      },
      "sha": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3488100431,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ4ODEwMDQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3488100431",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T20:54:03Z"
    },
    {
      "event": "commented",
      "id": 651114979,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTExNDk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651114979",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T13:18:17Z",
      "updated_at": "2020-06-29T13:18:17Z",
      "author_association": "MEMBER",
      "body": "ACK fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-651114979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19367"
    },
    {
      "event": "merged",
      "id": 3492671521,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzQ5MjY3MTUyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3492671521",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fb87f6d168c45acd36d3c2b55b0647f3959c7a76",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb87f6d168c45acd36d3c2b55b0647f3959c7a76",
      "created_at": "2020-06-29T13:18:53Z"
    },
    {
      "event": "closed",
      "id": 3492671547,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ5MjY3MTU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3492671547",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T13:18:53Z"
    },
    {
      "event": "referenced",
      "id": 5050721295,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNTA3MjEyOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5050721295",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "56f10aaa5199398f04233e6a29f5580fbb9e5fba",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/56f10aaa5199398f04233e6a29f5580fbb9e5fba",
      "created_at": "2021-07-21T14:42:28Z"
    },
    {
      "event": "referenced",
      "id": 5141021352,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDEwMjEzNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5141021352",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "created_at": "2021-08-11T10:09:46Z"
    },
    {
      "event": "referenced",
      "id": 5224254189,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUyMjQyNTQxODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5224254189",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "13597e2d22aa3d1f87e8823b15bffff47e43a298",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/13597e2d22aa3d1f87e8823b15bffff47e43a298",
      "created_at": "2021-08-30T06:33:21Z"
    },
    {
      "event": "locked",
      "id": 6073801957,
      "node_id": "LOE_lADOABII584mZqvvzwAAAAFqBtzl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073801957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:33:02Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444961222",
      "pull_request_review_id": 436735896,
      "id": 444961222,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MTIyMg==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible",
      "path": "src/span.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/accept as Span/accept a Span/",
      "created_at": "2020-06-24T15:01:19Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r444961222",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444961222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445025361",
      "pull_request_review_id": 436819014,
      "id": 445025361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyNTM2MQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!",
      "path": "src/span.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Turns out clang actually has a newish attribute to detect this!\r\nhttps://reviews.llvm.org/rL338464\r\n\r\nI can confirm that this case is detected with clang-10 and the following change to span.h:\r\n```diff\r\n-    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\r\n+    constexpr Span(V&& v __attribute__((lifetimebound))) noexcept : m_data(v.data()), m_size(v.size()) {}\r\n```\r\nA new warning is given:\r\n```\r\nspantest.cpp:12:24: warning: temporary whose address is used as value of local variable 'sp' will be destroyed at the end of the full-expression [-Wdangling]\r\n    Span<const int> sp(std::vector<int>{1, 2, 3});\r\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n1 warning generated.\r\n```\r\nIt currently warns about several uses in #13062.\r\nI'm going through them now to see if they're false-positives.",
      "created_at": "2020-06-24T16:36:09Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445025361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445025361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445029671",
      "pull_request_review_id": 436824565,
      "id": 445029671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyOTY3MQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible\n+ *   range-like object. For example, this works:\n+*\n+ *       void Foo(Span<const int> arg);\n+ *\n+ *       Foo(std::vector<int>{1, 2, 3}); // Works\n+ *\n+ *   This is very useful in cases a function truly does not care about the",
      "path": "src/span.h",
      "position": null,
      "original_position": 38,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in cases *where* a function..",
      "created_at": "2020-06-24T16:43:22Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445029671",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445029671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445032414",
      "pull_request_review_id": 436828024,
      "id": 445032414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMjQxNA==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!",
      "path": "src/span.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445025361,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@theuni Interesting!\r\n\r\nI expect that there is one particular false positive: when you're converting a temporary *Span* to a compatible one. We could introduce a separate constructor for that, which then doesn't get the attribute. On the other hand, perhaps that interferes with useful detection too.",
      "created_at": "2020-06-24T16:47:41Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445032414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445032414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445069891",
      "pull_request_review_id": 436876915,
      "id": 445069891,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2OTg5MQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!",
      "path": "src/span.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445025361,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa Yes, that seems to be the bulk of them.\r\n\r\n~I can't figure out why this _isn't_ UB (from ParseScript()):~\r\n```c++\r\n    if (Func(\"pkh\", expr)) {\r\n        auto pubkey = ParsePubkey(key_exp_index, expr, ctx != ParseScriptContext::P2WSH, out, error);\r\n```\r\n~Remember that ```Func()``` takes a ```std::string```, not a c string. So in the example above, presumably ```expr``` ends up pointing to somewhere inside the temporary string's memory after ```Func()``` returns. As you [pointed out](https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443000807), for string literals that's the lifetime of the program. But in this case, I think we're relying on the fact that std::string's .data() returns that exact pointer. Is that guaranteed to be the case?~\r\n\r\nEdit: Nevermind. Guess I read the body of ```Func()``` too quickly. The modified span is not created from the string param.",
      "created_at": "2020-06-24T17:53:10Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445069891",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445069891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445105927",
      "pull_request_review_id": 436923155,
      "id": 445105927,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTkyNw==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!",
      "path": "src/span.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445025361,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> We could introduce a separate constructor for that, which then doesn't get the attribute. On the other hand, perhaps that interferes with useful detection too.\r\n\r\nIndeed giving Span a (default) move ctor causes all current ```lifetimebound``` false-positives to go away, but still warns when intentionally inserting your UB example.",
      "created_at": "2020-06-24T18:58:51Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445105927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445105927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445652881",
      "pull_request_review_id": 437619855,
      "id": 445652881,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY1Mjg4MQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible\n+ *   range-like object. For example, this works:\n+*\n+ *       void Foo(Span<const int> arg);\n+ *\n+ *       Foo(std::vector<int>{1, 2, 3}); // Works\n+ *\n+ *   This is very useful in cases a function truly does not care about the\n+ *   container, and only about having exactly a range of elements. However\n+ *   it may also be surprising to see automatic conversions in this case.\n+ *\n+ *   When a function accepts a Span with a mutable element type, it will not\n+ *   accept temporaries; only variables or other references. For example:\n+ *\n+ *       void FooMut(Span<int> arg);\n+ *\n+ *       FooMut(std::vector<int>{1, 2, 3}); // Does not compile\n+ *       std::vector<int> baz{1, 2, 3};\n+ *       FooMut(baz); // Works\n+ *\n+ *   This is similar to how functions that take (non-const) lvalue reference",
      "path": "src/span.h",
      "position": null,
      "original_position": 51,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": null,
      "user": {
        "login": "ysangkok",
        "id": 284023,
        "node_id": "MDQ6VXNlcjI4NDAyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ysangkok",
        "html_url": "https://github.com/ysangkok",
        "followers_url": "https://api.github.com/users/ysangkok/followers",
        "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
        "organizations_url": "https://api.github.com/users/ysangkok/orgs",
        "repos_url": "https://api.github.com/users/ysangkok/repos",
        "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ysangkok/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "reference should be plural or have article",
      "created_at": "2020-06-25T15:39:19Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445652881",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445652881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446403829",
      "pull_request_review_id": 438587286,
      "id": 446403829,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMzgyOQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible\n+ *   range-like object. For example, this works:\n+*\n+ *       void Foo(Span<const int> arg);\n+ *\n+ *       Foo(std::vector<int>{1, 2, 3}); // Works\n+ *\n+ *   This is very useful in cases a function truly does not care about the\n+ *   container, and only about having exactly a range of elements. However\n+ *   it may also be surprising to see automatic conversions in this case.\n+ *\n+ *   When a function accepts a Span with a mutable element type, it will not\n+ *   accept temporaries; only variables or other references. For example:\n+ *\n+ *       void FooMut(Span<int> arg);\n+ *\n+ *       FooMut(std::vector<int>{1, 2, 3}); // Does not compile\n+ *       std::vector<int> baz{1, 2, 3};\n+ *       FooMut(baz); // Works\n+ *\n+ *   This is similar to how functions that take (non-const) lvalue reference",
      "path": "src/span.h",
      "position": null,
      "original_position": 51,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445652881,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-06-26T20:50:33Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446403829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446403829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404098",
      "pull_request_review_id": 438587650,
      "id": 446404098,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNDA5OA==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible\n+ *   range-like object. For example, this works:\n+*\n+ *       void Foo(Span<const int> arg);\n+ *\n+ *       Foo(std::vector<int>{1, 2, 3}); // Works\n+ *\n+ *   This is very useful in cases a function truly does not care about the",
      "path": "src/span.h",
      "position": null,
      "original_position": 38,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445029671,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-06-26T20:51:13Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404286",
      "pull_request_review_id": 438587908,
      "id": 446404286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNDI4Ng==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!",
      "path": "src/span.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 445025361,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Discussion on this moved to #19387.",
      "created_at": "2020-06-26T20:51:47Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404341",
      "pull_request_review_id": 438587996,
      "id": 446404341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNDM0MQ==",
      "diff_hunk": "@@ -21,6 +21,62 @@\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n+ *\n+ * Things to be aware of when writing code that deals with Spans:\n+ *\n+ * - Similar to references themselves, Spans are subject to reference lifetime\n+ *   issues. The user is responsible for making sure the objects pointed to by\n+ *   a Span live as long as the Span is used. For example:\n+ *\n+ *       std::vector<int> vec{1,2,3,4};\n+ *       Span<int> sp(vec);\n+ *       vec.push_back(5);\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   may exhibit undefined behavior, as increasing the size of a vector may\n+ *   invalidate references.\n+ *\n+ * - One particular pitfall is that Spans can be constructed from temporaries,\n+ *   but this is unsafe when the Span is stored in a variable, outliving the\n+ *   temporary. For example, this will compile, but exhibits undefined behavior:\n+ *\n+ *       Span<const int> sp(std::vector<int>{1, 2, 3});\n+ *       printf(\"%i\\n\", sp.front()); // UB!\n+ *\n+ *   The lifetime of the vector ends when the statement it is created in ends.\n+ *   Thus the Span is left with a dangling reference, and using it is undefined.\n+ *\n+ * - Due to Span's automatic creation from range-like objects (arrays, and data\n+ *   types that expose a data() and size() member function), functions that\n+ *   accept as Span as input parameter can be called with any compatible",
      "path": "src/span.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88",
      "original_commit_id": "402980d7d0299769e147688250235339908523c7",
      "in_reply_to_id": 444961222,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-06-26T20:51:58Z",
      "updated_at": "2020-06-26T20:54:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446404341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19367"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    }
  ]
}