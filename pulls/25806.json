{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
    "id": 1020771188,
    "node_id": "PR_kwDOABII584817t0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25806",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25806.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25806.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
    "number": 25806,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "wallet: group outputs only once, decouple it from Coin Selection",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The idea originates from https://github.com/bitcoin/bitcoin/pull/24845#issuecomment-1130310321.\r\n\r\nNote:\r\nFor clarity, it's recommended to start reviewing from the end result to understand the structure of the flow.\r\n\r\n#### GroupOutputs function rationale:\r\nIf \"Avoid Partial Spends\" is enabled, the function gathers outputs with the same script together inside a container. So Coin Selection can treats them as if them were just one possible input and either select them all or not select them. \r\n\r\n#### How the Inputs Fetch + Selection process roughly works:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins (walks through the entire wallet txes map) and insert them into a set of vectors (each vector store outputs from a single type).\r\n3. Coin Selection Process:\r\n   Call `AttemptSelection` 8 times. Each of them expands the coin eligibility filter (accepting a larger subset of coins in the calculation) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n\r\n   Each `AttemptSelection` call performs the following actions:\r\n     - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and a combination of all of them):\r\n       Call ‘ChooseSelectionResult’ providing the respective, filtered by type, coins vector. Which:\r\n           I. Groups the outputs vector twice (one for positive only and a second one who includes the negative ones as well).\r\n              - GroupOutputs walks-through the entire inputted coins vector one time at least, + more if we are avoiding partial spends, to generate a vector of OutputGroups.\r\n           II. Then performs every coin selection algorithm using the recently created vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n           III. Then returns the best solution out of them.\r\n```\r\n\r\nWe perform the general operation of gathering outputs, with the same script, into a single container inside:\r\nEach coins selection attempt (8 times —> each coin eligibility filter), for each of the outputs vector who were filtered by type (plus another one joining all the outputs as well if needed), twice (one for the positive only outputs effective value and a second one for all of them).\r\n\r\nSo, in the worst case scenario where no solution is found after the 8 Coin Selection attempts, the `GroupOutputs` function is called 80 times (8 * 5 * 2).\r\n\r\n#### Improvements:\r\n\r\nThis proposal streamlines the process so that the output groups, filtered by coin eligibility and type, are created in a single loop outside of the Coin Selection Process. \r\n\r\nThe new process is as follows:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins.\r\n3. Group outputs by each coin eligibility filter and each different output type found.\r\n4. Coin Selection Process: \r\n   Call AttemptSelection 8 times. Each of them expands the coin eligibility filter (accepting different output groups) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n   \r\n   Each ‘AttemptSelection’ call performs the following actions:\r\n      - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and all of them):\r\n          A. Call ‘ChooseSelectionResult’ providing the respective, filtered by type, output group. Which:\r\n             I. Performs every coin selection algorithm using the provided vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n             II. Then returns the best solution out of them.\r\n```\r\n\r\nExtra Note:\r\nThe next steps after this PR will be to:\r\n1) Merge `AvailableCoins` and `GroupOutputs` processes.\r\n2) Skip entire coin selection rounds if no new coins are added into the subsequent round.\r\n3) Remove global feerates from the OutputGroup class.\r\n4) Remove secondary \"grouped\" tx creation from `CreateTransactionInternal` by running Coin Selection results over the aps grouped outputs vs non-aps ones.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2022-08-08T21:19:07Z",
    "updated_at": "2023-05-27T01:47:50Z",
    "closed_at": "2023-03-06T23:52:42Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-03-06T23:52:41Z",
    "merge_commit_sha": "4ea3a8b71df02a54699e7aa5a4d0f7cde9b1f830",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "furszy:2022_wallet_single_outputs_grouping_process",
      "ref": "2022_wallet_single_outputs_grouping_process",
      "sha": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 380259,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T20:18:24Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-02-27T18:01:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "40c6c85c05812ee8bf824b639307b1ac17a001c4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 476,
    "deletions": 149,
    "changed_files": 9,
    "commits": 7,
    "review_comments": 68,
    "comments": 13
  },
  "events": [
    {
      "event": "labeled",
      "id": 7150484103,
      "node_id": "LE_lADOABII585PavYSzwAAAAGqM7qH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7150484103",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T21:32:28Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 1208941748,
      "node_id": "IC_kwDOABII585IDvy0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208941748",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T05:46:16Z",
      "updated_at": "2023-03-06T23:19:23Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [S3RK](https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456850195), [theStack](https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1327223431), [achow101](https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1457199020) |\n| Concept ACK | [Xekyo](https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1304212477) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26720](https://github.com/bitcoin/bitcoin/pull/26720) (wallet: coin selection, don't return results that exceed the max allowed weight by furszy)\n* [#25982](https://github.com/bitcoin/bitcoin/pull/25982) (wallet: Guard against undefined behaviour by yancyribbens)\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#23475](https://github.com/bitcoin/bitcoin/pull/23475) (wallet: add config to prioritize a solution that doesn't create change in coin selection by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1208941748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "labeled",
      "id": 7201389973,
      "node_id": "LE_lADOABII585PavYSzwAAAAGtPH2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7201389973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T00:43:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "renamed",
      "id": 7330658107,
      "node_id": "RTE_lADOABII585PavYSzwAAAAG08Pc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7330658107",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T13:48:58Z",
      "rename": {
        "from": "wallet: single outputs grouping calculation",
        "to": "wallet: single group outputs calculation, decouple it from Coin Selection"
      }
    },
    {
      "event": "renamed",
      "id": 7331927562,
      "node_id": "RTE_lADOABII585PavYSzwAAAAG1BFYK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7331927562",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T16:11:51Z",
      "rename": {
        "from": "wallet: single group outputs calculation, decouple it from Coin Selection",
        "to": "wallet: single group outputs calculation, decoupled from Coin Selection"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7686328134,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHKJA9G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7686328134",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T22:40:12Z"
    },
    {
      "event": "renamed",
      "id": 7686332530,
      "node_id": "RTE_lADOABII585PavYSzwAAAAHKJCBy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7686332530",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T22:41:01Z",
      "rename": {
        "from": "wallet: single group outputs calculation, decoupled from Coin Selection",
        "to": "wallet: group outputs only once, decouple it from Coin Selection"
      }
    },
    {
      "event": "unlabeled",
      "id": 7686414635,
      "node_id": "UNLE_lADOABII585PavYSzwAAAAHKJWEr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7686414635",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T22:56:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7825540171,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHScERL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7825540171",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-16T16:01:01Z"
    },
    {
      "event": "reviewed",
      "id": 1183479857,
      "node_id": "PRR_kwDOABII585Gingx",
      "url": null,
      "actor": null,
      "commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1183479857",
      "submitted_at": "2022-11-16T23:40:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7834387173,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHS90Ll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7834387173",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-17T14:18:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7834423830,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHS99IW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7834423830",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-17T14:21:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7834426566,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHS99zG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7834426566",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-17T14:22:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7834533906,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHS-YAS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7834533906",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-17T14:33:01Z"
    },
    {
      "event": "labeled",
      "id": 7965537703,
      "node_id": "LE_lADOABII585PavYSzwAAAAHayHWn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7965537703",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T11:31:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7966475941,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHa1sal",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7966475941",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T13:19:01Z"
    },
    {
      "event": "unlabeled",
      "id": 7966719724,
      "node_id": "UNLE_lADOABII585PavYSzwAAAAHa2n7s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7966719724",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T13:45:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1339719566,
      "node_id": "IC_kwDOABII585P2n-O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339719566",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T17:23:13Z",
      "updated_at": "2022-12-06T17:25:31Z",
      "author_association": "MEMBER",
      "body": "PR description needs be updated to remove the \"this is built on\", for the already-merged PR. Although, given `Footnote; this PR is still a WIP:` in the PR description, maybe this should also be a draft (that would better communicate the WIP intent than a footnote in description)? If it's no-longer WIP, please update the PR description to remove that as well. Can be done along with the next rebase.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339719566",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "labeled",
      "id": 7969303284,
      "node_id": "LE_lADOABII585PavYSzwAAAAHbAer0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7969303284",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T17:58:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1339788475,
      "node_id": "IC_kwDOABII585P24y7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339788475",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T18:19:41Z",
      "updated_at": "2022-12-06T18:19:41Z",
      "author_association": "MEMBER",
      "body": "> PR description needs be updated to remove the \"this is built on\", for the already-merged PR. \r\n\r\nremoved, thanks.\r\n\r\n> Although, given `Footnote; this PR is still a WIP:` in the PR description, maybe this should also be a draft (that would better communicate the WIP intent than a footnote in description)? If it's no-longer WIP, please update the PR description to remove that as well. Can be done along with the next rebase.\r\n\r\nyeah. This one is on my current working-path. I'm planning to update the PR description soon.\r\nSince yesterday, have been working on https://github.com/bitcoin/bitcoin/pull/26560#discussion_r1038307694 which will make this PR a bit smaller.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339788475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "convert_to_draft",
      "id": 7990930016,
      "node_id": "CTDE_lADOABII585PavYSzwAAAAHcS-pg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7990930016",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T16:43:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8105800474,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjJLMa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8105800474",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T20:44:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8105937712,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjJssw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8105937712",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T21:33:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8105943564,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjJuIM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8105943564",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T21:36:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8105961426,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjJyfS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8105961426",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T21:44:08Z"
    },
    {
      "event": "unlabeled",
      "id": 8106050572,
      "node_id": "UNLE_lADOABII585PavYSzwAAAAHjKIQM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8106050572",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T22:18:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8106193049,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjKrCZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8106193049",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-23T23:37:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8111759350,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjf5_2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8111759350",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-26T15:24:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8116394027,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjxlgr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8116394027",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-27T16:08:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8116467542,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHjx3dW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8116467542",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-27T16:24:17Z"
    },
    {
      "event": "referenced",
      "id": 8146861647,
      "node_id": "REFE_lADOABII585PavYSzwAAAAHllz5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8146861647",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3f8591d46b46cec2c4effc01f8822222087d74c4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8591d46b46cec2c4effc01f8822222087d74c4",
      "created_at": "2023-01-03T23:53:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8151881034,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHl49VK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8151881034",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T14:51:10Z"
    },
    {
      "event": "ready_for_review",
      "id": 8152222352,
      "node_id": "RFRE_lADOABII585PavYSzwAAAAHl6QqQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8152222352",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T15:29:00Z"
    },
    {
      "event": "referenced",
      "id": 8152729069,
      "node_id": "REFE_lADOABII585PavYSzwAAAAHl8MXt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8152729069",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cab438784eadd1e80e44981c8ed23d54cb5e3c40",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/cab438784eadd1e80e44981c8ed23d54cb5e3c40",
      "created_at": "2023-01-04T16:27:32Z"
    },
    {
      "event": "reviewed",
      "id": 1262031533,
      "node_id": "PRR_kwDOABII585LORKt",
      "url": null,
      "actor": null,
      "commit_id": "325f171145771e5ff3a4c7e7eb0966728709370b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some minor comments. Will review 6df2b735b6ad1e744b2ecceeee10fb36a6673fd6, 5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3, and 325f171145771e5ff3a4c7e7eb0966728709370b further later.\r\n\r\n### Benchmark results\r\n`./src/bench/bench_bitcoin -filter='CoinSelection' --min-time=5000`.\r\n\r\n#### Master\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|          426,716.89 |            2,343.47 |    0.3% |   10,501,652.22 |   2,344,328.92 |    0.2% |      5.41 | `CoinSelection`\r\n\r\n#### PR :rocket: \r\n\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|          328,320.35 |            3,045.81 |    0.2% |    8,324,339.49 |   1,946,693.33 |    0.1% |      5.34 | `CoinSelection`\r\n\r\nI ran the benchmarks multiple times to make sure they are consistent.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1262031533",
      "submitted_at": "2023-01-19T16:25:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8321366396,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHv_fl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8321366396",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T13:16:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8321658090,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHwAmzq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8321658090",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T13:53:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8321843004,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHwBT88",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8321843004",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T14:14:09Z"
    },
    {
      "event": "reviewed",
      "id": 1272840693,
      "node_id": "PRR_kwDOABII585L3gH1",
      "url": null,
      "actor": null,
      "commit_id": "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1272840693",
      "submitted_at": "2023-01-27T14:57:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8376176604,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAHzQk_c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8376176604",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T18:50:57Z"
    },
    {
      "event": "reviewed",
      "id": 1284087299,
      "node_id": "PRR_kwDOABII585MiZ4D",
      "url": null,
      "actor": null,
      "commit_id": "c0e427467acab37976d7560be9ea29607ee4e1cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1284087299",
      "submitted_at": "2023-02-04T16:59:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8441855469,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH3LH3t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8441855469",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-05T22:21:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8441882280,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH3LOao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8441882280",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-05T22:30:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8441908695,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH3LU3X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8441908695",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-05T22:37:08Z"
    },
    {
      "event": "reviewed",
      "id": 1291787960,
      "node_id": "PRR_kwDOABII585M_x64",
      "url": null,
      "actor": null,
      "commit_id": "4343835a23290f2cd34404821494303cc75ce86e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I was thinking if the `OutputGroups` class could be simplified somehow, right now the methods `Push` and `PushAll` seem to be a bit redundant and could be deduplicated. How about a single method like\r\n```\r\nvoid OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)\r\n{\r\n    if (group.m_outputs.empty()) return;\r\n\r\n    Groups& groups = groups_by_type[type];\t\r\n    if (insert_positive && group.GetSelectionAmount() > 0) {\r\n        groups.positive_group.emplace_back(group);\r\n        all_groups.positive_group.emplace_back(group);\r\n    }\r\n    if (insert_mixed) {\r\n        groups.mixed_group.emplace_back(group);\r\n        all_groups.mixed_group.emplace_back(group);\r\n    }\r\n}\r\n```\r\n(This seems a bit more like the earlier version you had, but without enums and without duplication.) The methods `OutputGroups::PushAll` and `Groups::GetRef` could then simply be dropped and only the call-sites need to be adapted w.r.t. to the two boolean parameters.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1291787960",
      "submitted_at": "2023-02-09T19:03:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8484198984,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH5sppI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8484198984",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T21:58:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8484208259,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH5sr6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8484208259",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T22:00:19Z"
    },
    {
      "event": "commented",
      "id": 1424892417,
      "node_id": "IC_kwDOABII585U7iIB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424892417",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T22:00:31Z",
      "updated_at": "2023-02-09T22:00:31Z",
      "author_association": "MEMBER",
      "body": "Sounds good @theStack 👌🏼, pushed.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1424892417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "mentioned",
      "id": 8484209656,
      "node_id": "MEE_lADOABII585PavYSzwAAAAH5ssP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8484209656",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T22:00:31Z"
    },
    {
      "event": "subscribed",
      "id": 8484209671,
      "node_id": "SE_lADOABII585PavYSzwAAAAH5ssQH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8484209671",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T22:00:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8484475528,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAH5ttKI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8484475528",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T22:45:27Z"
    },
    {
      "event": "reviewed",
      "id": 1294071267,
      "node_id": "PRR_kwDOABII585NIfXj",
      "url": null,
      "actor": null,
      "commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code-review ACK 0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1294071267",
      "submitted_at": "2023-02-10T21:40:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "commented",
      "id": 1428731690,
      "node_id": "IC_kwDOABII585VKLcq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428731690",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T21:45:08Z",
      "updated_at": "2023-02-13T21:45:08Z",
      "author_association": "MEMBER",
      "body": "ACK 0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1428731690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "review_requested",
      "id": 8549748549,
      "node_id": "RRE_lADOABII585PavYSzwAAAAH9ms9F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8549748549",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T18:13:11Z",
      "requested_reviewer": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1438070020,
      "node_id": "IC_kwDOABII585VtzUE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1438070020",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-21T08:47:29Z",
      "updated_at": "2023-02-21T08:47:29Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. started review",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1438070020",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "reviewed",
      "id": 1308739083,
      "node_id": "PRR_kwDOABII585OAcYL",
      "url": null,
      "actor": null,
      "commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1308739083",
      "submitted_at": "2023-02-22T08:28:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "reviewed",
      "id": 1304212477,
      "node_id": "PRR_kwDOABII585NvLP9",
      "url": null,
      "actor": null,
      "commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, very light review, need to go over it in more detail still",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1304212477",
      "submitted_at": "2023-02-22T21:07:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "commented",
      "id": 1451488906,
      "node_id": "IC_kwDOABII585Wg_aK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451488906",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T08:35:25Z",
      "updated_at": "2023-03-02T08:35:25Z",
      "author_association": "MEMBER",
      "body": "Code review ACK 0bb90cabc8e2c6bbbc3c52ec1170e725435b625d modulo tests.\r\n\r\nI believe this PR is a good improvement over status quo.\r\n\r\nThe biggest worry I have now it somewhat ambiguous terminology:\r\n- `mixed` groups could mean mixed type or mixed effective value\r\n-  `all` groups not always refers to actually all groups, but filtered by `CoinEligibiltyFilter`\r\n- two structs `Groups` vs `OutputGroups`\r\n\r\nI don't have better suggestion as of now, so it's not blocking. I'll think more and come back if I have some ideas. Maybe @Xekyo the master of terminology have some ideas.",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1451488906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "mentioned",
      "id": 8646620817,
      "node_id": "MEE_lADOABII585PavYSzwAAAAIDYPaR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8646620817",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T08:35:25Z"
    },
    {
      "event": "subscribed",
      "id": 8646620833,
      "node_id": "SE_lADOABII585PavYSzwAAAAIDYPah",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8646620833",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T08:35:25Z"
    },
    {
      "event": "reviewed",
      "id": 1319203680,
      "node_id": "PRR_kwDOABII585OoXNg",
      "url": null,
      "actor": null,
      "commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1319203680",
      "submitted_at": "2023-03-02T08:35:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8654638584,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAID2034",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8654638584",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:54:36Z"
    },
    {
      "event": "commented",
      "id": 1452678639,
      "node_id": "IC_kwDOABII585Wlh3v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452678639",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:56:18Z",
      "updated_at": "2023-03-02T22:56:18Z",
      "author_association": "MEMBER",
      "body": "Thanks @S3RK for the review.\r\n\r\nUpdated per feedback ([small diff](https://github.com/bitcoin/bitcoin/compare/0bb90cabc8e2c6bbbc3c52ec1170e725435b625d..ae0dd2becd4fa01666793c3f48e8725d5e585c30)), tackled the following points that made sense for me to include here:\r\n\r\n* Renamed `OutputGroups` to `OutputGroupTypeMap` to reflect what the struct really does and differentiate it from the inner struct.\r\n* Corrected the `OutputGroups`, now `OutputGroupTypeMap`, members comments.\r\n* And tackled @Xekyo’s unneeded check.\r\n\r\nI think that while we all agree that this work is functionality and structurally sound, we can move forward.\r\nAnd tackle any new naming discussion in a follow-up work.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1452678639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "mentioned",
      "id": 8654648025,
      "node_id": "MEE_lADOABII585PavYSzwAAAAID23LZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8654648025",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:56:18Z"
    },
    {
      "event": "subscribed",
      "id": 8654648037,
      "node_id": "SE_lADOABII585PavYSzwAAAAID23Ll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8654648037",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:56:18Z"
    },
    {
      "event": "mentioned",
      "id": 8654648043,
      "node_id": "MEE_lADOABII585PavYSzwAAAAID23Lr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8654648043",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:56:18Z"
    },
    {
      "event": "subscribed",
      "id": 8654648051,
      "node_id": "SE_lADOABII585PavYSzwAAAAID23Lz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8654648051",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T22:56:18Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2ZWM4Zjk5Mjg5MGNhYzY5Y2QwZmQyMDIyNGFhNTFmYTMxMWExODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06ec8f992890cac69cd0fd20224aa51fa311a181",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/06ec8f992890cac69cd0fd20224aa51fa311a181",
      "tree": {
        "sha": "b4d34d716b93574150ac7bfcff1051718f5b87cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4d34d716b93574150ac7bfcff1051718f5b87cc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b4d34d716b93574150ac7bfcff1051718f5b87cc\nparent 3b88c8502534f0dc94e0abcb04ffa80ba8bd7f01\nauthor furszy <matiasfurszyfer@protonmail.com> 1659298924 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1677878283 -0300\n\nwallet: make OutputGroup \"positive_only\" filter explicit\n\nAnd not hide it inside the `OutputGroup::Insert` method.\nThis method does not return anything if insertion fails.\n\nWe can know before calling `Insert` whether the coin\nwill be accepted or not.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQCZAsACgkQXdI8zGhq\npiN6+xAAo89cGLAUdEfJgzNtwHrNI6wHk6QB/UX4lZ35NwPE8gFYV30fJgk9zx4W\nZijYv90hmuPwsLjYWdWHD19wnZuhRF/w8n9mxpeX1OVrGBDQktgV6G3Dbeygimid\nXxG66dleOATB3km1FM/kycmnF5plbcBQsdjVWsg98Eah4b0NA+8Fo3HPitpTqhrv\nWGpnMI781h7BC9UCrHe9FtejAJt8WYRzv7KxU+KxccjjQAb67r9wRZRS/C6dxIh5\nv5ZhX9F91h+TZrgVCCSvrtvQeGIG+gjP5QywtDAdGApPJS79qbt8SynNYiPPoL8A\nTiSBtuFWSj8ibjuBmyAUvhXkVHHvRhPj9AVoudM2TXaJm32oVyL/4a6WC8torngA\nosGIvqD9k7r+g3CC5KuLISg45vK5/KEeehn89IIOS2J8WnUOfVZ2vDjjBwQ3DCLa\n0tZ0xB1IwJYlQSgZtyXwvx2bqBLhZPo8RTsbvnpkVp3qecNHX5vnIz8l3tQ9UwDG\n3ZOc2Xvuym4ddhm0/2dDyhNr9uXz662ft46i+oO+I1NeI9QabMsTXJ0znqScReqL\nX3kqeBR202dyxtJVBF31eu7ljc4/tVbbOKLMX57L0JGMF8G0qiqJIi91pwpv9nLD\nd6r5i3ONmKZssR42ZWx11aFW9HvM5LxfEkWMD4wupvFcx0xqnn8=\n=7elV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b88c8502534f0dc94e0abcb04ffa80ba8bd7f01",
          "sha": "3b88c8502534f0dc94e0abcb04ffa80ba8bd7f01",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b88c8502534f0dc94e0abcb04ffa80ba8bd7f01"
        }
      ],
      "message": "wallet: make OutputGroup \"positive_only\" filter explicit\n\nAnd not hide it inside the `OutputGroup::Insert` method.\nThis method does not return anything if insertion fails.\n\nWe can know before calling `Insert` whether the coin\nwill be accepted or not.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-03T21:18:03Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-07-31T20:22:04Z"
      },
      "sha": "06ec8f992890cac69cd0fd20224aa51fa311a181"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8663664139,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAIEZQYL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8663664139",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T21:34:35Z"
    },
    {
      "event": "commented",
      "id": 1454159231,
      "node_id": "IC_kwDOABII585WrLV_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1454159231",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T21:36:09Z",
      "updated_at": "2023-03-03T21:41:56Z",
      "author_association": "MEMBER",
      "body": "Rebased due silent merge conflicts with #26889.\r\nReady to go now.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1454159231",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "commented",
      "id": 1455748229,
      "node_id": "IC_kwDOABII585WxPSF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1455748229",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T09:08:11Z",
      "updated_at": "2023-03-06T09:08:11Z",
      "author_association": "MEMBER",
      "body": "utACK 1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4 (also reviewed the tests)",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1455748229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "reviewed",
      "id": 1325727381,
      "node_id": "PRR_kwDOABII585PBP6V",
      "url": null,
      "actor": null,
      "commit_id": "1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1325727381",
      "submitted_at": "2023-03-06T09:10:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4ZTc0OWJiODQwY2Y2NTA2NWVkMDA1NjE5OTgyNTUxNTYxMjYyNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8e749bb840cf65065ed00561998255156126278",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e749bb840cf65065ed00561998255156126278",
      "tree": {
        "sha": "b6d3c78cc684bd9005bc6a2d836d2674ddede9f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6d3c78cc684bd9005bc6a2d836d2674ddede9f0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b6d3c78cc684bd9005bc6a2d836d2674ddede9f0\nparent 06ec8f992890cac69cd0fd20224aa51fa311a181\nauthor furszy <matiasfurszyfer@protonmail.com> 1659299104 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\ntest: wallet, add coverage for outputs grouping process\n\nThe following scenarios are covered:\n\n1) 10 UTXO with the same script:\n   partial spends is enabled --> outputs must not be grouped.\n\n2) 10 UTXO with the same script:\n   partial spends disabled --> outputs must be grouped.\n\n3) 20 UTXO, 10 one from scriptA + 10 from scriptB:\n   a) if partial spends is enabled --> outputs must not be grouped.\n   b) if partial spends is not enabled --> 2 output groups expected (one per script).\n\n3) Try to add a negative output (value - fee < 0):\n   a) if \"positive_only\" is enabled --> negative output must be skipped.\n   b) if \"positive_only\" is disabled --> negative output must be added.\n\n4) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n \"not mine\" UTXOs) --> it must not be added to any group\n\n5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n \"mine\" UTXOs) --> it must not be added to any group\n\n6) Surpass the 'OUTPUT_GROUP_MAX_ENTRIES' size and verify that a second partial\ngroup gets created.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiPFSw/8Daylo5frocYrarLghE1mN1YRkby22d/jyDlLWZT8h1gmPbidsnQ9N/uQ\nx+MK88VBRBiJclCb7qenvCOrcpdQ8hGmCPMLLFp5JmvL1KXQ+t7par+xwxB4cK/T\n3Bd48lBmO/HZhtLHFmdHoRtfrGeO0ho1DYEcqbPox/pOu8pdTwWNSgE1tdi1lQ2m\niA7fRqVxGkOAogSuqMWquQORHoPrKx80eNShQqYKzVKjpn1GdLXOE191GpPzXv1Z\nWz1WTevu8zBFOihfJGTLdYsDNNa+aPK043Ux7HcJehfpTz3mmnp0mZJRwSaNuL+w\n+KsvW0OEMRPAaqiFxgWcyzxwgTOKA8dGrMnKZQVI8NzR03YWCvJVbjti0p6pLq4L\njo+B3tcW4PoGCV/VlfiwzKk4hJZ+lQfcIKUlMjY5VzGTmi3lpS+9kiAM0qhg5MPg\njmOwJTRKhQ4WqEvhU5DHbc/UFhycsbCyisoPfxpu1Tv3usuIrI+Ohkkjhl3JkM6u\n5RHlCn71aTrLTiDifYtssbyYxz6SirzjkpNm2av12+cxsmYYL9eg2Rg1KmPaBvlV\ngDYgX1ODsqYFqaIZDNOMgQgPNhO+tdszFBAdCaVjJi0qr7kaXz6UJOektD+e9DY7\nneLYXIj/glhcAEB9IEP869RNfUDigf/zqBIIZWozeK8rjcUquSk=\n=0W+c\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06ec8f992890cac69cd0fd20224aa51fa311a181",
          "sha": "06ec8f992890cac69cd0fd20224aa51fa311a181",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/06ec8f992890cac69cd0fd20224aa51fa311a181"
        }
      ],
      "message": "test: wallet, add coverage for outputs grouping process\n\nThe following scenarios are covered:\n\n1) 10 UTXO with the same script:\n   partial spends is enabled --> outputs must not be grouped.\n\n2) 10 UTXO with the same script:\n   partial spends disabled --> outputs must be grouped.\n\n3) 20 UTXO, 10 one from scriptA + 10 from scriptB:\n   a) if partial spends is enabled --> outputs must not be grouped.\n   b) if partial spends is not enabled --> 2 output groups expected (one per script).\n\n3) Try to add a negative output (value - fee < 0):\n   a) if \"positive_only\" is enabled --> negative output must be skipped.\n   b) if \"positive_only\" is disabled --> negative output must be added.\n\n4) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n \"not mine\" UTXOs) --> it must not be added to any group\n\n5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n \"mine\" UTXOs) --> it must not be added to any group\n\n6) Surpass the 'OUTPUT_GROUP_MAX_ENTRIES' size and verify that a second partial\ngroup gets created.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-07-31T20:25:04Z"
      },
      "sha": "d8e749bb840cf65065ed00561998255156126278"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2MWYwODIxYTJkZmYwYTI3Zjc1NTQ2NGIwZWI5MjMxNGZiYTFhY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/461f0821a2dff0a27f755464b0eb92314fba1acd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/461f0821a2dff0a27f755464b0eb92314fba1acd",
      "tree": {
        "sha": "d04797fd9b8cd29d0a0690af982d7f29547e0326",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d04797fd9b8cd29d0a0690af982d7f29547e0326"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d04797fd9b8cd29d0a0690af982d7f29547e0326\nparent d8e749bb840cf65065ed00561998255156126278\nauthor furszy <matiasfurszyfer@protonmail.com> 1659381336 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\nrefactor: make OutputGroup::m_outputs field a vector of shared_ptr\n\nInitial steps towards sharing COutput instances across all possible\nOutputGroups (instead of copying them time after time).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiOxbg/+IQxYhzYS9gUOGudN7MzQVNWtoTT9ya9idDtzi9A++Gncj0sfVvk/2nFc\nMpYc7znZP3vrnAi9HKOh0XJb+hWRUqMqYO6U+20I+YMBbm5ZgEBbY4lipNICwA7m\n5fpyukoyNm+CSOP2uBAoPTiW2VYJJPvRzZIQ5rHh8CaOAOtDe4S5Ocxrb5Xkdg3b\nfvDnBTVrQlb1wiwzfygWxabQHb8jRYaB4vmOasqofCiLU/fcd8p9wTd4JruNZeqW\ne2hNp/TAmwgVuGDReWoktEUI0tRBjcG5sSs9emqacAxEeaxBfGrX2OBg5KPBl6Ny\nDMgfz/tDKSoK6dLV41c3i9k/sqsd88xP/JVrSKu7Bmo2lYI7DOaFaP2PlUiyyods\nFAAOyQqXtfTRL4qoZnbWNeGXh9vMGafEVUi91D+0HyHA/9wjf8aHe9bYLFqds6Gu\nKhRuww+VM7SNNbUUJQsHProuR8oF3FMkFxK/neP1Zww8KqklKTDdDaMRYUttylUO\nnv+O2eWVtnzfr3K8P0JK5PcmcWVoXidOgF/ZgDLqFv3xSpbyLgIVKG0/JxQQU6iM\nwgBAm3o0Sivfr0SvvVRhtOrOvqAoKWZmW3PeC+9HTGAht/XUiR0wo05NUbUU3dvF\nkhABEAg/MIoPxdxFK8qGEN48ctTxzxeT4rA7awQ7NSm8lh0dr2Y=\n=qehm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8e749bb840cf65065ed00561998255156126278",
          "sha": "d8e749bb840cf65065ed00561998255156126278",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e749bb840cf65065ed00561998255156126278"
        }
      ],
      "message": "refactor: make OutputGroup::m_outputs field a vector of shared_ptr\n\nInitial steps towards sharing COutput instances across all possible\nOutputGroups (instead of copying them time after time).",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-01T19:15:36Z"
      },
      "sha": "461f0821a2dff0a27f755464b0eb92314fba1acd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0ZjU0YTBhM2E1NGM1OWQzZjA2MmRlNjk1NTBhYjNhM2IwNzdlYTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f54a0a3a54c59d3f062de69550ab3a3b077ea0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34f54a0a3a54c59d3f062de69550ab3a3b077ea0",
      "tree": {
        "sha": "a65abd88a5d4e20383abc9df19a9dcf419556739",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a65abd88a5d4e20383abc9df19a9dcf419556739"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a65abd88a5d4e20383abc9df19a9dcf419556739\nparent 461f0821a2dff0a27f755464b0eb92314fba1acd\nauthor furszy <matiasfurszyfer@protonmail.com> 1659383990 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\nwallet: decouple outputs grouping process from each ChooseSelectionResult\n\nAnother step towards the single OutputGroups calculation goal\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiNuPhAAuc50mVEQKpdLn6DF3Q8HYe+F8VZB7H+hrVNHdL5uMn7elu7CSoEDKqvM\nu2wAFBh7TgWg2puy0z1eXwt1kjJraJl5lJrZE/20ABa0w9pt/AC7WOPT6hqGaYN6\nr/acrVltCfedvl7Gqnwop6zPVhrtgUgay9WtBH6LaLTF4+0u9AgylD47YZv3oH1x\n5vmljdGwXt5rpSZSub7aSXygP8MuuYYWQvVAkRBpe+S/fESh4MvTXbV8hgLHXRN6\n1By4bHnuEUcm2MVdeWaeusd75HIOhh+6jtwzHYRYWVUFbTa6sYZFqiai9+U6JLIa\nWe0TemIoHndQ9ZJvWi+SNuYbusFD62zT+XVB64Bx0rnlZ+FbQfwbvaJNG8tbV0QG\nPoHcoghX7G2pd9cOHLGsDfY8kqQyWvrAJ9d5LxvDDUt2EkBbirbnuDAe+NE8J8Tb\ng2IeJfI+7OrEKCD0m2iuMJK2MVol4Dv+JW//zVS3qF6py95q1zspHW9RuTZCOlg1\nVaW3TDPUBzedRpnkKle3BoOD71qHyM7bBXbvXJqSR28OgWv5OAD3P+ljXTM7turA\nb3wWFY4sEWZcWZ7GEhFYAKXXtF4ouNWDHeQZkib9Wx9yLS/i6E0Dpq9Au7/EHXY7\nH7QMwiybw/09sFOdzU9rRX/DcnmXq4qeBr/KE36Trvluc9BAUzo=\n=P7xD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/461f0821a2dff0a27f755464b0eb92314fba1acd",
          "sha": "461f0821a2dff0a27f755464b0eb92314fba1acd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/461f0821a2dff0a27f755464b0eb92314fba1acd"
        }
      ],
      "message": "wallet: decouple outputs grouping process from each ChooseSelectionResult\n\nAnother step towards the single OutputGroups calculation goal",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-01T19:59:50Z"
      },
      "sha": "34f54a0a3a54c59d3f062de69550ab3a3b077ea0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1OTYyMDAxZGE0Zjg0NjdlNTJkYTUwMmIwNWY1YzBhODUxMjhmYjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55962001da4f8467e52da502b05f5c0a85128fb0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/55962001da4f8467e52da502b05f5c0a85128fb0",
      "tree": {
        "sha": "70597629849e958822da7755b59ac93bf87e27de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70597629849e958822da7755b59ac93bf87e27de"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 70597629849e958822da7755b59ac93bf87e27de\nparent 34f54a0a3a54c59d3f062de69550ab3a3b077ea0\nauthor furszy <matiasfurszyfer@protonmail.com> 1671827703 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\ntest: coinselector_tests refactor, use CoinsResult instead of plain std::vector\n\nNo functional changes. Only cosmetic changes to simplify the follow-up commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiOJzxAAi6keRVy91525viBMaO1FZXtTT3+G6rENWIUzE3XoPrW5G8dMuBatkrkF\n1A2MCRuE2uq/nGF3aHCmP45N+h8EHcy8DsGVlDgHA8qw4tORqy0wRVXk2+/QahpN\naJvCBlp1PfLhxjXCnvIgWBkpfzhsp7Yz6AhEacY6mujCDuau4qDAWVAhRODkoL7n\nadg/5vgT8F8EZhJux0XVhjMn+RtoBV6M04b3/8g94LXdSuaaQ3sLo0KHWXPU8Xfn\newwA5f2wN8r/KoHRa/42GxCObT3bw6AEX+uiBxjHg33iEMCXPV0nmdiqXC/MvaU7\nCC3vtUUliECuuMhua3Vqy14kvJZsdKemHCkev/Qhg+f6WyEnvKARAThzwyYliqra\nif3/c4CN/Go2jR4ENXut3qvLiQwsCJ5/kVgYuN+qKkt0nO9D4RhXitXuJHSSiIOA\nZMpZ4Av9NeYBjz8GP3e90leyipJO97m4tUtPMTqg6MfUiAIC+MMMm0YPtpA7siiZ\ng5Ay+9UiJgsvJGyGiswFWL8kROFh0io/qFC3QZ3CL+aqfOSLbbSuG+OFxllC2zVe\nZJFM6CHPw0lYkkp1KCjraNUh4Q0sLzIK/pOAQiiWbtFQVz3kVTdlTL8jnAKureLu\nZNGKPoX0snd/s14vO0Hl7zTWDZjOOj761oNva6c/MWawdimuTTo=\n=CwtQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f54a0a3a54c59d3f062de69550ab3a3b077ea0",
          "sha": "34f54a0a3a54c59d3f062de69550ab3a3b077ea0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/34f54a0a3a54c59d3f062de69550ab3a3b077ea0"
        }
      ],
      "message": "test: coinselector_tests refactor, use CoinsResult instead of plain std::vector\n\nNo functional changes. Only cosmetic changes to simplify the follow-up commit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-12-23T20:35:03Z"
      },
      "sha": "55962001da4f8467e52da502b05f5c0a85128fb0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJkOTFlZDFjYjJjYzgwNGY4MjRkMWIyMDQ1MTNhYzJhZmI3ZDVlMjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd91ed1cb2cc804f824d1b204513ac2afb7d5e28",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bd91ed1cb2cc804f824d1b204513ac2afb7d5e28",
      "tree": {
        "sha": "9956b147f73c622e5f895337fb27c1c3a0098613",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9956b147f73c622e5f895337fb27c1c3a0098613"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9956b147f73c622e5f895337fb27c1c3a0098613\nparent 55962001da4f8467e52da502b05f5c0a85128fb0\nauthor furszy <matiasfurszyfer@protonmail.com> 1659452060 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\nwallet: unify outputs grouping process\n\nThe 'GroupOutputs()' function performs the same\ncalculations for only-positive and mixed groups,\nthe only difference is that when we look for\nonly-positive groups, we discard negative utxos.\n\nSo, instead of wasting resources calling GroupOutputs()\nfor positive-only first, then call it again to include\nthe negative ones in the result, we can execute\nGroupOutputs() only once, including in the response\nboth group types (positive-only and mixed).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiNplg/9FlKwDgwQ11Cfh/MISzXI3EjjF9EZwVj/reAYSa61hvuRL86L8jEUI1FW\nGbXXtcfMKE6Oy9XFhdZC5FezjU74fHHev5iJuByZDI6kMBeE+Rl/f7CKdl7Hehqy\nfLrGpa/OB2z9xJLzQZ1T9wLz5z04+gWqu61PFXLXsy7BPkcFPVTZcRIpUfYB5hDy\nQx2X76GHkRi7pTizf12FohXCu8yTyMX5NqQUZ/0/BcPQc96AJD9v/+ARXn/fK5sT\nlUjOMyuIcFYsfZPgMjZoGwc1rCc6jRQqlGf8i3Qpp/MTegn8wIiVdUahsHtfsDaY\ncOA1G3nL4OhEbS8CRtWwgHA0rlGfGlkYmyVolUH8X/9UI+6VgbJhi9caUL42oSHS\noMRrVE9o4wHSxAdHrreScncrZ0pbyC/2nFUvSnd+XsN0N+GoUn29GRve9BRzFXKN\nh5K2URMyM7BIsBv0kfFAGaR3RmutlJrUrfnA/jShJyCfw+cYHmgWuawk0dgqKJ5M\nOdcbC82tkP5VTWGA7xrAkz2RYzgJrgbNgvFTkbN5NlIF2j6SybWVOH7ymzSwmLA/\nk5g5L4a7o4sNCZPAo8oPQEW3lZ23sXtAFTws49ycCw97hqgIQ4Lsx3c1cuCAJ13Z\n3Q35lLnta5+UcdQALBwDAg4nbTcIcm2bwL3eAnfTBpX35wdn19w=\n=AzuJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55962001da4f8467e52da502b05f5c0a85128fb0",
          "sha": "55962001da4f8467e52da502b05f5c0a85128fb0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/55962001da4f8467e52da502b05f5c0a85128fb0"
        }
      ],
      "message": "wallet: unify outputs grouping process\n\nThe 'GroupOutputs()' function performs the same\ncalculations for only-positive and mixed groups,\nthe only difference is that when we look for\nonly-positive groups, we discard negative utxos.\n\nSo, instead of wasting resources calling GroupOutputs()\nfor positive-only first, then call it again to include\nthe negative ones in the result, we can execute\nGroupOutputs() only once, including in the response\nboth group types (positive-only and mixed).",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-02T14:54:20Z"
      },
      "sha": "bd91ed1cb2cc804f824d1b204513ac2afb7d5e28"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZhMzAyZDQwZGZjYzMzYjE1YmYyN2ExZDNmY2MwNGJmZDNjYmRhNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "tree": {
        "sha": "f532e7e41b8d128dd176904d531c86f7a3c1786c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f532e7e41b8d128dd176904d531c86f7a3c1786c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f532e7e41b8d128dd176904d531c86f7a3c1786c\nparent bd91ed1cb2cc804f824d1b204513ac2afb7d5e28\nauthor furszy <matiasfurszyfer@protonmail.com> 1659564276 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1678106740 -0300\n\nwallet: single output groups filtering and grouping process\n\nOptimizes coin selection by performing the \"group outputs\"\nprocedure only once, outside the \"attempt selection\" process.\n\nAvoiding the repeated execution of the 'GroupOutputs' operation\nthat occurs on each coin eligibility filters (up to 8 of them);\nthen for every coin vector type plus one for all the coins together.\n\nThis also let us not perform coin selection over coin eligibility\nfiltered groups that don't add new elements.\n(because, if the previous round failed, and the subsequent one has\nthe same coins, then this new round will fail again).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmQF4HQACgkQXdI8zGhq\npiNROg//e65i9Ydv7t92y5JQeZvM3T4tQd5AL7ophEb/WBiA60FE85D0meRmPNMJ\nDuyJ9YUXUCJ4gHfDUxooIh5vCFOgfXPGuoypHGJlFHo13I5GO8+2LEkyTmJzi4WG\nXGcc5oCIOg2r/QCEJqXOJK49fI3ay6rlWEesecnW/8kE1cS62L1+bgs3l8BlTas7\nRsmT3YMNOgkXfB8kTwPaQpeajioLR64z+4WivdCCZp82J0GKEbVEIU4Js5Rzoyk5\n3dTKAkhyNXnbn7nr78PhmTEELcTPlZorCobWofnPpAgzxFVJSaV8mZl9rgLgUEsT\nMBW4Oj1fINYyOlOYYHPGek+SxKfMdUJHOp8qTew1AMGxR9BkEyAfTfj1LYHKPe7j\nkt4fbEuycsEGxWWS3mFj2P5lBjHFXn+4M/xMR/eppXVOJpZuixwxFkHSz14VyEp0\n9ksfAFJtTf4r4FFq+2ccKtDKT5VFNwOdE7zJEw7OjQGcwEJXeMOM+atWGIONIl8S\nqk/XOwEFKBqXvMy2TuFQ6WsZehZHO6zhisD1mlvugpAgcVV+9QqCdfYndGk5uJoQ\nXvcuME3v417uts/DGj3eN8MrWCt+TiHkUgs/FWU/tyfIeUzsPAiv42Vqa4/4Yq+M\n49n0bv1+rG+aBlYeF2BXFZPqwtJasYG7PYodrtP9IQ4bP28qILM=\n=r2UR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd91ed1cb2cc804f824d1b204513ac2afb7d5e28",
          "sha": "bd91ed1cb2cc804f824d1b204513ac2afb7d5e28",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bd91ed1cb2cc804f824d1b204513ac2afb7d5e28"
        }
      ],
      "message": "wallet: single output groups filtering and grouping process\n\nOptimizes coin selection by performing the \"group outputs\"\nprocedure only once, outside the \"attempt selection\" process.\n\nAvoiding the repeated execution of the 'GroupOutputs' operation\nthat occurs on each coin eligibility filters (up to 8 of them);\nthen for every coin vector type plus one for all the coins together.\n\nThis also let us not perform coin selection over coin eligibility\nfiltered groups that don't add new elements.\n(because, if the previous round failed, and the subsequent one has\nthe same coins, then this new round will fail again).",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-03-06T12:45:40Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-03T22:04:36Z"
      },
      "sha": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44"
    },
    {
      "event": "review_requested",
      "id": 8673935443,
      "node_id": "RRE_lADOABII585PavYSzwAAAAIFAcBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8673935443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T12:50:13Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8673935474,
      "node_id": "RRE_lADOABII585PavYSzwAAAAIFAcBy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8673935474",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T12:50:13Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8674065351,
      "node_id": "HRFPE_lADOABII585PavYSzwAAAAIFA7vH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8674065351",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T13:03:40Z"
    },
    {
      "event": "commented",
      "id": 1456099290,
      "node_id": "IC_kwDOABII585Wyk_a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456099290",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T13:06:22Z",
      "updated_at": "2023-03-06T13:06:22Z",
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks S3RK 👌🏼.\r\n\r\n[Small diff](https://github.com/bitcoin/bitcoin/compare/1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4..6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44), changes are in the last test scenario and the test commit message.\r\n\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456099290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "commented",
      "id": 1456850195,
      "node_id": "IC_kwDOABII585W1cUT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456850195",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T19:43:03Z",
      "updated_at": "2023-03-06T19:43:03Z",
      "author_association": "MEMBER",
      "body": "ReACK 6a302d4\r\nThanks for addressing feedback",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456850195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "reviewed",
      "id": 1327223431,
      "node_id": "PRR_kwDOABII585PG9KH",
      "url": null,
      "actor": null,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44 :coconut: \r\n\r\n(verified via `git range-diff 0bb90cab...6a302d40` that since my last ACK, most review comments by Murch and S3RK have been tackled, mostly trivial refactor + terminology/naming improvements and [a minor unit test adaption](https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126088720))",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1327223431",
      "submitted_at": "2023-03-06T21:31:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "commented",
      "id": 1457199020,
      "node_id": "IC_kwDOABII585W2xes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457199020",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:19:19Z",
      "updated_at": "2023-03-06T23:19:19Z",
      "author_association": "MEMBER",
      "body": "ACK 6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1457199020",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806"
    },
    {
      "event": "merged",
      "id": 8680065768,
      "node_id": "ME_lADOABII585PavYSzwAAAAIFX0ro",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8680065768",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ea3a8b71df02a54699e7aa5a4d0f7cde9b1f830",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ea3a8b71df02a54699e7aa5a4d0f7cde9b1f830",
      "created_at": "2023-03-06T23:52:41Z"
    },
    {
      "event": "closed",
      "id": 8680065805,
      "node_id": "CE_lADOABII585PavYSzwAAAAIFX0sN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8680065805",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:52:42Z"
    },
    {
      "event": "referenced",
      "id": 8681605056,
      "node_id": "REFE_lADOABII585PavYSzwAAAAIFdsfA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8681605056",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "62f50a73712d4ed40873e23281b9629493565b7f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/62f50a73712d4ed40873e23281b9629493565b7f",
      "created_at": "2023-03-07T05:02:28Z"
    },
    {
      "event": "referenced",
      "id": 8761043738,
      "node_id": "REFE_lADOABII585PavYSzwAAAAIKMusa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8761043738",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "609c95d4a8171544b946037b67b47106ea8c4065",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/609c95d4a8171544b946037b67b47106ea8c4065",
      "created_at": "2023-03-15T23:07:31Z"
    },
    {
      "event": "referenced",
      "id": 8762739433,
      "node_id": "REFE_lADOABII585PavYSzwAAAAIKTMrp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762739433",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd7f9c4f68fb8864da131747d236ffb245ac5aa0",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/dd7f9c4f68fb8864da131747d236ffb245ac5aa0",
      "created_at": "2023-03-16T04:27:18Z"
    },
    {
      "event": "referenced",
      "id": 8762785444,
      "node_id": "REFE_lADOABII585PavYSzwAAAAIKTX6k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762785444",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f979be15ac7cddd0274b8937b1ec06e31db6ee74",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/f979be15ac7cddd0274b8937b1ec06e31db6ee74",
      "created_at": "2023-03-16T04:38:11Z"
    },
    {
      "event": "reviewed",
      "id": 1377824610,
      "node_id": "PRR_kwDOABII585SH-9i",
      "url": null,
      "actor": null,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Post merge ACK 6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1377824610",
      "submitted_at": "2023-04-10T17:14:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
    },
    {
      "event": "head_ref_deleted",
      "id": 9355562881,
      "node_id": "HRDE_lADOABII585PavYSzwAAAAItoo-B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9355562881",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T01:47:50Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024610915",
      "pull_request_review_id": 1183479857,
      "id": 1024610915,
      "node_id": "PRRC_kwDOABII5849ElJj",
      "diff_hunk": "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(type, {COutPoint(wtx.GetHash(), 0),\n+                       txout,\n+                       depth,\n+                       CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                       /*spendable=*/ true,\n+                       /*solvable=*/ true,\n+                       /*safe=*/ true,\n+                       wtx.GetTxTime(),\n+                       is_from_me,\n+                       fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(bool avoid_partial_spends)\n+{\n+    FastRandomContext rand{};\n+    return CoinSelectionParams{\n+            rand,",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": 64,
      "original_position": 65,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CoinSelectionParams`'s `rng_fast` member is a reference and you're using a stack object, this will create a dangling reference.",
      "created_at": "2022-11-16T23:33:38Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024610915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024610915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611478",
      "pull_request_review_id": 1183479857,
      "id": 1024611478,
      "node_id": "PRRC_kwDOABII5849ElSW",
      "diff_hunk": "@@ -229,11 +235,41 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    std::vector<OutputGroup> positive_group;\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/**\n+* Stores several 'Groups' whose\n+* were filtered by different output type\n+*/\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum InsertGroupType {",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 71,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "prefer enum class",
      "created_at": "2022-11-16T23:34:44Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611786",
      "pull_request_review_id": 1183479857,
      "id": 1024611786,
      "node_id": "PRRC_kwDOABII5849ElXK",
      "diff_hunk": "@@ -416,28 +416,35 @@ std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet)\n     return result;\n }\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only)\n+FilteredOutputGroups GroupOutputs(const CWallet& wallet,\n+                          const CoinsResult& coins,\n+                          const CoinSelectionParams& coin_sel_params,\n+                          const std::vector<CoinEligibilityFilter>& filters)\n {\n-    std::vector<OutputGroup> groups_out;\n+    FilteredOutputGroups filtered_groups;\n \n+    // Allowing partial spends means no grouping. Each COutput gets its own OutputGroup\n     if (!coin_sel_params.m_avoid_partial_spends) {\n-        // Allowing partial spends  means no grouping. Each COutput gets its own OutputGroup.\n-        for (const COutput& output : outputs) {\n-            // Skip outputs we cannot spend\n-            if (!output.spendable) continue;\n-\n-            size_t ancestors, descendants;\n-            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n-\n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n-\n-            // Check the OutputGroup's eligibility. Only add the eligible ones.\n-            if (positive_only && group.GetSelectionAmount() <= 0) continue;\n-            if (group.m_outputs.size() > 0 && group.EligibleForSpending(filter)) groups_out.push_back(group);\n+        for (const auto& coins_by_type : coins.coins) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could use structured binding",
      "created_at": "2022-11-16T23:35:18Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612246",
      "pull_request_review_id": 1183479857,
      "id": 1024612246,
      "node_id": "PRRC_kwDOABII5849EleW",
      "diff_hunk": "@@ -474,39 +477,69 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             group = &groups.back();\n         }\n \n-        // Add the output to group\n-        group->Insert(output, ancestors, descendants, positive_only);\n+        // Filter for positive only before adding the output to group\n+        if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n+            group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n+        }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& coins_by_type : coins.coins) {\n+        for (const COutput& output : coins_by_type.second) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;\n+\n+            size_t ancestors, descendants;\n+            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n+\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_groups_map, coin_sel_params, /*positive_only=*/ false);\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_positive_groups_map,\n+                          coin_sel_params, /*positive_only=*/ true);\n+        }\n     }\n \n-    // Now we go through the entire map and pull out the OutputGroups\n-    for (const auto& spk_and_groups_pair: spk_to_groups_map) {\n-        const std::vector<OutputGroup>& groups_per_spk= spk_and_groups_pair.second;\n+    // Now we go through the entire maps and pull out the OutputGroups\n+    const auto& push_output_groups = [&](ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const auto& push_output_groups = [&](const ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {\r\n```",
      "created_at": "2022-11-16T23:36:10Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612600",
      "pull_request_review_id": 1183479857,
      "id": 1024612600,
      "node_id": "PRRC_kwDOABII5849Elj4",
      "diff_hunk": "@@ -474,39 +477,69 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             group = &groups.back();\n         }\n \n-        // Add the output to group\n-        group->Insert(output, ancestors, descendants, positive_only);\n+        // Filter for positive only before adding the output to group\n+        if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n+            group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n+        }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& coins_by_type : coins.coins) {\n+        for (const COutput& output : coins_by_type.second) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;\n+\n+            size_t ancestors, descendants;\n+            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n+\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_groups_map, coin_sel_params, /*positive_only=*/ false);\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_positive_groups_map,\n+                          coin_sel_params, /*positive_only=*/ true);\n+        }\n     }\n \n-    // Now we go through the entire map and pull out the OutputGroups\n-    for (const auto& spk_and_groups_pair: spk_to_groups_map) {\n-        const std::vector<OutputGroup>& groups_per_spk= spk_and_groups_pair.second;\n+    // Now we go through the entire maps and pull out the OutputGroups\n+    const auto& push_output_groups = [&](ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {\n+        for (const auto& spk_and_groups_pair: groups_map) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could use structured binding",
      "created_at": "2022-11-16T23:36:52Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 504,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612836",
      "pull_request_review_id": 1183479857,
      "id": 1024612836,
      "node_id": "PRRC_kwDOABII5849Elnk",
      "diff_hunk": "@@ -517,40 +550,39 @@ std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAm\n     // If we can't fund the transaction from any individual OutputType, run coin selection one last time\n     // over all available coins, which would allow mixing\n     if (allow_mixed_output_types) {\n-        if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params)}) {\n+        if (auto result{ChooseSelectionResult(wallet, nTargetValue, groups.all_groups, coin_selection_params)}) {\n             return result;\n         }\n     }\n     // Either mixing is not allowed and we couldn't find a solution from any single OutputType, or mixing was allowed and we still couldn't\n     // find a solution using all available coins\n-    return std::nullopt;\n+    return util::Error();\n };\n \n-std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins, const CoinSelectionParams& coin_selection_params)\n+util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, Groups& groups,",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wallet is unused",
      "created_at": "2022-11-16T23:37:20Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613519",
      "pull_request_review_id": 1183479857,
      "id": 1024613519,
      "node_id": "PRRC_kwDOABII5849ElyP",
      "diff_hunk": "@@ -614,54 +646,54 @@ std::optional<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coi\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n-    std::optional<SelectionResult> res = [&] {\n-        // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n-        // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n-        // Allow mixing only if no solution from any single output type can be found\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r2;\n-\n+    util::Result<SelectionResult> res = [&] {\n+        // Ordered filters\n+        std::vector<CoinEligibilityFilter> ordered_filters{\n+                // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n+                // confirmations on outputs received from other wallets and only spend confirmed change.\n+                CoinEligibilityFilter(1, 6, 0),\n+                CoinEligibilityFilter(1, 1, 0),\n+        };\n+        // Only allow mixed output types on filters added prior to this point\n+        unsigned int index_for_allow_mixed_output_types = ordered_filters.size();\n         // Fall back to using zero confirmation change (but with as few ancestors in the mempool as\n         // possible) if we cannot fund the transaction otherwise.\n         if (wallet.m_spend_zero_conf_change) {\n-            if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, 2), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;\n-            if (auto r4{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r4;\n-            }\n-            if (auto r5{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r5;\n-            }\n+            ordered_filters.emplace_back(CoinEligibilityFilter(0, 1, 2));",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 278,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No need for temporary object, same around this line.\r\n```suggestion\r\n            ordered_filters.emplace_back(0, 1, 2);\r\n```",
      "created_at": "2022-11-16T23:38:39Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613782",
      "pull_request_review_id": 1183479857,
      "id": 1024613782,
      "node_id": "PRRC_kwDOABII5849El2W",
      "diff_hunk": "@@ -925,7 +958,7 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     // behavior.\"\n     const uint32_t nSequence{coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : CTxIn::MAX_SEQUENCE_NONFINAL};\n     for (const auto& coin : selected_coins) {\n-        txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n+        txNew.vin.push_back(CTxIn(coin->outpoint, CScript(), nSequence));",
      "path": "src/wallet/spend.cpp",
      "position": 254,
      "original_position": 364,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could use emplace_back\r\n```suggestion\r\n        txNew.vin.emplace_back(coin->outpoint, CScript(), nSequence);\r\n```",
      "created_at": "2022-11-16T23:39:09Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 978,
      "original_line": 978,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024614454",
      "pull_request_review_id": 1183479857,
      "id": 1024614454,
      "node_id": "PRRC_kwDOABII5849EmA2",
      "diff_hunk": "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": 44,
      "original_position": 45,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could use structured binding",
      "created_at": "2022-11-16T23:40:20Z",
      "updated_at": "2022-11-16T23:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024614454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024614454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025259484",
      "pull_request_review_id": 1184411785,
      "id": 1025259484,
      "node_id": "PRRC_kwDOABII5849HDfc",
      "diff_hunk": "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(type, {COutPoint(wtx.GetHash(), 0),\n+                       txout,\n+                       depth,\n+                       CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                       /*spendable=*/ true,\n+                       /*solvable=*/ true,\n+                       /*safe=*/ true,\n+                       wtx.GetTxTime(),\n+                       is_from_me,\n+                       fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(bool avoid_partial_spends)\n+{\n+    FastRandomContext rand{};\n+    return CoinSelectionParams{\n+            rand,",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": 64,
      "original_position": 65,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": 1024610915,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oops, good catch 👍🏼 ",
      "created_at": "2022-11-17T14:22:26Z",
      "updated_at": "2022-11-17T14:22:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025259484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025259484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025260624",
      "pull_request_review_id": 1184413529,
      "id": 1025260624,
      "node_id": "PRRC_kwDOABII5849HDxQ",
      "diff_hunk": "@@ -517,40 +550,39 @@ std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAm\n     // If we can't fund the transaction from any individual OutputType, run coin selection one last time\n     // over all available coins, which would allow mixing\n     if (allow_mixed_output_types) {\n-        if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params)}) {\n+        if (auto result{ChooseSelectionResult(wallet, nTargetValue, groups.all_groups, coin_selection_params)}) {\n             return result;\n         }\n     }\n     // Either mixing is not allowed and we couldn't find a solution from any single OutputType, or mixing was allowed and we still couldn't\n     // find a solution using all available coins\n-    return std::nullopt;\n+    return util::Error();\n };\n \n-std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins, const CoinSelectionParams& coin_selection_params)\n+util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, Groups& groups,",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": 1024612836,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good eye, this let me remove the `AttemptSelection` wallet arg too.",
      "created_at": "2022-11-17T14:23:21Z",
      "updated_at": "2022-11-17T14:23:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025260624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025260624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025265189",
      "pull_request_review_id": 1184420038,
      "id": 1025265189,
      "node_id": "PRRC_kwDOABII5849HE4l",
      "diff_hunk": "@@ -614,54 +646,54 @@ std::optional<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coi\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n-    std::optional<SelectionResult> res = [&] {\n-        // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n-        // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n-        // Allow mixing only if no solution from any single output type can be found\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r2;\n-\n+    util::Result<SelectionResult> res = [&] {\n+        // Ordered filters\n+        std::vector<CoinEligibilityFilter> ordered_filters{\n+                // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n+                // confirmations on outputs received from other wallets and only spend confirmed change.\n+                CoinEligibilityFilter(1, 6, 0),\n+                CoinEligibilityFilter(1, 1, 0),\n+        };\n+        // Only allow mixed output types on filters added prior to this point\n+        unsigned int index_for_allow_mixed_output_types = ordered_filters.size();\n         // Fall back to using zero confirmation change (but with as few ancestors in the mempool as\n         // possible) if we cannot fund the transaction otherwise.\n         if (wallet.m_spend_zero_conf_change) {\n-            if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, 2), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;\n-            if (auto r4{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r4;\n-            }\n-            if (auto r5{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r5;\n-            }\n+            ordered_filters.emplace_back(CoinEligibilityFilter(0, 1, 2));",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 278,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": 1024613519,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I actually didn't make this change on purpose to minimize the diff burden inside the same commit. Would prefer to do it in a different commit to make reviewers' life a bit easier (adding the args names there too).",
      "created_at": "2022-11-17T14:26:58Z",
      "updated_at": "2022-11-17T14:26:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025265189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025265189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025266473",
      "pull_request_review_id": 1184421918,
      "id": 1025266473,
      "node_id": "PRRC_kwDOABII5849HFMp",
      "diff_hunk": "@@ -925,7 +958,7 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     // behavior.\"\n     const uint32_t nSequence{coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : CTxIn::MAX_SEQUENCE_NONFINAL};\n     for (const auto& coin : selected_coins) {\n-        txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n+        txNew.vin.push_back(CTxIn(coin->outpoint, CScript(), nSequence));",
      "path": "src/wallet/spend.cpp",
      "position": 254,
      "original_position": 364,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "in_reply_to_id": 1024613782,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "agree but it's unrelated to the commit changes. Let's better leave it for another PR.",
      "created_at": "2022-11-17T14:27:59Z",
      "updated_at": "2022-11-17T14:27:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025266473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025266473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 978,
      "original_line": 978,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081433547",
      "pull_request_review_id": 1262031533,
      "id": 1081433547,
      "node_id": "PRRC_kwDOABII585AdV3L",
      "diff_hunk": "@@ -237,11 +243,41 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    std::vector<OutputGroup> positive_group;\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.\n+    void push(const OutputGroup& group, OutputType type, InsertGroupType insert_type);\n+    // Retrieves 'Groups' filtered by type\n+    std::optional<Groups> find(OutputType type);\n+    // Different output types count\n+    int typesCount() { return groups_by_type.size(); }",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 63,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "325f171145771e5ff3a4c7e7eb0966728709370b",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \r\n```suggestion\r\n    size_t typesCount() const { return groups_by_type.size(); }\r\n```",
      "created_at": "2023-01-19T15:26:34Z",
      "updated_at": "2023-01-19T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081433547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081433547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081460601",
      "pull_request_review_id": 1262031533,
      "id": 1081460601,
      "node_id": "PRRC_kwDOABII585Adcd5",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "6df2b735b6ad1e744b2ecceeee10fb36a6673fd6",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Somewhat unrelated, it would be nice to extract this function in test utils.\r\n\r\n```\r\ngrep -FnrIi 'std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());' src/wallet/test\r\nsrc/wallet/test/coinselector_tests.cpp:306:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:329:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:352:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:417:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:727:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:749:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:1058:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/group_outputs_tests.cpp:20:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\n```",
      "created_at": "2023-01-19T15:44:39Z",
      "updated_at": "2023-01-19T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081460601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081460601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081472167",
      "pull_request_review_id": 1262031533,
      "id": 1081472167,
      "node_id": "PRRC_kwDOABII585AdfSn",
      "diff_hunk": "@@ -375,17 +372,53 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n-CAmount GetSelectionWaste(const std::set<COutput>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)\n+{\n+    auto it_by_type = groups_by_type.find(type);\n+    if (it_by_type == groups_by_type.end()) return std::nullopt;\n+    return it_by_type->second;\n+}\n+\n+CAmount GetSelectionWaste(const std::set<std::shared_ptr<COutput>>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n {\n     // This function should not be called with empty inputs as that would mean the selection failed\n     assert(!inputs.empty());\n \n     // Always consider the cost of spending an input now vs in the future.\n     CAmount waste = 0;\n     CAmount selected_effective_value = 0;\n-    for (const COutput& coin : inputs) {\n-        waste += coin.GetFee() - coin.long_term_fee;\n-        selected_effective_value += use_effective_value ? coin.GetEffectiveValue() : coin.txout.nValue;\n+    for (const auto& coin : inputs) {\n+        waste += coin->GetFee() - coin->long_term_fee;\n+        selected_effective_value += use_effective_value ? coin->GetEffectiveValue() : coin->txout.nValue;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "325f171145771e5ff3a4c7e7eb0966728709370b",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could avoid some dereferences. \r\n```suggestion\r\n        const COutput& out = *coin;\r\n        waste += out.GetFee() - out.long_term_fee;\r\n        selected_effective_value += use_effective_value ? out.GetEffectiveValue() : out.txout.nValue;() : out.txout.nValue;\r\n```",
      "created_at": "2023-01-19T15:52:58Z",
      "updated_at": "2023-01-19T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081472167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081472167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081487125",
      "pull_request_review_id": 1262031533,
      "id": 1081487125,
      "node_id": "PRRC_kwDOABII585Adi8V",
      "diff_hunk": "@@ -521,8 +521,11 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n {\n     // Run coin selection on each OutputType and compute the Waste Metric\n     std::vector<SelectionResult> results;\n-    for (const auto& it : available_coins.coins) {\n-        auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, it.second, coin_selection_params)};\n+    for (const auto& [type, coins] : available_coins.coins) {\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\n        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, /*positive_only=*/true );\r\n        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, /*positive_only=*/false );\r\n```",
      "created_at": "2023-01-19T16:03:58Z",
      "updated_at": "2023-01-19T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081487125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081487125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 526,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081488029",
      "pull_request_review_id": 1262031533,
      "id": 1081488029,
      "node_id": "PRRC_kwDOABII585AdjKd",
      "diff_hunk": "@@ -536,31 +539,33 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n     // over all available coins, which would allow mixing.\n     // If TypesCount() <= 1, there is nothing to mix.\n     if (allow_mixed_output_types && available_coins.TypesCount() > 1) {\n-        return ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params);\n+        const auto& all = available_coins.All();\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: same as above (comment before value)",
      "created_at": "2023-01-19T16:04:41Z",
      "updated_at": "2023-01-19T16:25:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081488029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081488029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 544,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081492353",
      "pull_request_review_id": 1262031533,
      "id": 1081492353,
      "node_id": "PRRC_kwDOABII585AdkOB",
      "diff_hunk": "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3\r\nnit\r\n```suggestion\r\nvoid OutputGroups::Push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\r\n```",
      "created_at": "2023-01-19T16:07:44Z",
      "updated_at": "2023-01-19T16:25:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081492353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081492353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081495662",
      "pull_request_review_id": 1262031533,
      "id": 1081495662,
      "node_id": "PRRC_kwDOABII585AdlBu",
      "diff_hunk": "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3\r\nnit\r\n```suggestion\r\nstd::optional<Groups> OutputGroups::Find(OutputType type)\r\n```",
      "created_at": "2023-01-19T16:09:52Z",
      "updated_at": "2023-01-19T16:25:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081495662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081495662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082046728",
      "pull_request_review_id": 1262885478,
      "id": 1082046728,
      "node_id": "PRRC_kwDOABII585AfrkI",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "6df2b735b6ad1e744b2ecceeee10fb36a6673fd6",
      "in_reply_to_id": 1081460601,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Great catch!\r\nCleaned inside https://github.com/bitcoin/bitcoin/pull/26720#issuecomment-1397832543.",
      "created_at": "2023-01-20T01:58:46Z",
      "updated_at": "2023-01-20T01:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082046728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082046728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526038",
      "pull_request_review_id": 1263565764,
      "id": 1082526038,
      "node_id": "PRRC_kwDOABII585AhglW",
      "diff_hunk": "@@ -521,8 +521,11 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n {\n     // Run coin selection on each OutputType and compute the Waste Metric\n     std::vector<SelectionResult> results;\n-    for (const auto& it : available_coins.coins) {\n-        auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, it.second, coin_selection_params)};\n+    for (const auto& [type, coins] : available_coins.coins) {\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "in_reply_to_id": 1081487125,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This lines were just moved from one place to another (tried to not change them to make the review easier), and are later removed inside [b187c3a](https://github.com/bitcoin/bitcoin/pull/25806/commits/b187c3a7e79aa8768196353a809a4d03996e44a4).",
      "created_at": "2023-01-20T13:18:36Z",
      "updated_at": "2023-01-20T13:18:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 526,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526370",
      "pull_request_review_id": 1263566203,
      "id": 1082526370,
      "node_id": "PRRC_kwDOABII585Ahgqi",
      "diff_hunk": "@@ -536,31 +539,33 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n     // over all available coins, which would allow mixing.\n     // If TypesCount() <= 1, there is nothing to mix.\n     if (allow_mixed_output_types && available_coins.TypesCount() > 1) {\n-        return ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params);\n+        const auto& all = available_coins.All();\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "in_reply_to_id": 1081488029,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same answer as above :)",
      "created_at": "2023-01-20T13:18:54Z",
      "updated_at": "2023-01-20T13:18:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 544,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082530196",
      "pull_request_review_id": 1263570862,
      "id": 1082530196,
      "node_id": "PRRC_kwDOABII585AhhmU",
      "diff_hunk": "@@ -375,17 +372,53 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n-CAmount GetSelectionWaste(const std::set<COutput>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)\n+{\n+    auto it_by_type = groups_by_type.find(type);\n+    if (it_by_type == groups_by_type.end()) return std::nullopt;\n+    return it_by_type->second;\n+}\n+\n+CAmount GetSelectionWaste(const std::set<std::shared_ptr<COutput>>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n {\n     // This function should not be called with empty inputs as that would mean the selection failed\n     assert(!inputs.empty());\n \n     // Always consider the cost of spending an input now vs in the future.\n     CAmount waste = 0;\n     CAmount selected_effective_value = 0;\n-    for (const COutput& coin : inputs) {\n-        waste += coin.GetFee() - coin.long_term_fee;\n-        selected_effective_value += use_effective_value ? coin.GetEffectiveValue() : coin.txout.nValue;\n+    for (const auto& coin : inputs) {\n+        waste += coin->GetFee() - coin->long_term_fee;\n+        selected_effective_value += use_effective_value ? coin->GetEffectiveValue() : coin->txout.nValue;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "325f171145771e5ff3a4c7e7eb0966728709370b",
      "in_reply_to_id": 1081472167,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2023-01-20T13:22:25Z",
      "updated_at": "2023-01-20T13:22:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082530196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082530196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089055672",
      "pull_request_review_id": 1272840693,
      "id": 1089055672,
      "node_id": "PRRC_kwDOABII585A6au4",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 176,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "17bd243dfa050516900098dc8c2ff3171df740f7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could use the just-below-boundary value of 5 here\r\n```suggestion\r\n            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\r\n```",
      "created_at": "2023-01-27T14:56:23Z",
      "updated_at": "2023-01-27T14:57:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089055672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089055672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089056734",
      "pull_request_review_id": 1272840693,
      "id": 1089056734,
      "node_id": "PRRC_kwDOABII585A6a_e",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < 130; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 205,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "17bd243dfa050516900098dc8c2ff3171df740f7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could just-above-boundary value of 101 here\r\n```suggestion\r\n    for (unsigned long i = 0; i < 101; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\r\n```",
      "created_at": "2023-01-27T14:57:20Z",
      "updated_at": "2023-01-27T14:57:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089056734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089056734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307058",
      "pull_request_review_id": 1273273813,
      "id": 1089307058,
      "node_id": "PRRC_kwDOABII585A7YGy",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 176,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "17bd243dfa050516900098dc8c2ff3171df740f7",
      "in_reply_to_id": 1089055672,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2023-01-27T18:51:09Z",
      "updated_at": "2023-01-27T18:51:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307058",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307116",
      "pull_request_review_id": 1273273968,
      "id": 1089307116,
      "node_id": "PRRC_kwDOABII585A7YHs",
      "diff_hunk": "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < 130; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 205,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "17bd243dfa050516900098dc8c2ff3171df740f7",
      "in_reply_to_id": 1089056734,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2023-01-27T18:51:13Z",
      "updated_at": "2023-01-27T18:51:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096555682",
      "pull_request_review_id": 1284087299,
      "id": 1096555682,
      "node_id": "PRRC_kwDOABII585BXByi",
      "diff_hunk": "@@ -132,18 +132,15 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                    The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue              The target value\n- * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  groups                    The struct containing the outputs grouped by script and divided by (1) positive only outputs and (2) all outputs (positive + negative).\n  * param@[in]  coin_selection_params     Parameters for the coin selection\n  * returns                               If successful, a SelectionResult containing the input set\n  *                                       If failed, returns (1) an empty error message if the target was not reached (general \"Insufficient funds\")\n  *                                                  or (2) an specific error message if there was something particularly wrong (e.g. a selection\n  *                                                  result that surpassed the tx max weight size).\n  */\n-util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n-                        const CoinSelectionParams& coin_selection_params);\n+util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups groups, const CoinSelectionParams& coin_selection_params);",
      "path": "src/wallet/spend.h",
      "position": null,
      "original_position": 17,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "feeae53b0e28331de36afeaa7deec466b5082166",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: at this point one could already pass the `groups` parameter by-reference rather than by-value (it is done later in eca918dd17739036cbb2430a4fc2a5a785d88fb6 though anyways) : \r\n```suggestion\r\nutil::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups& groups, const CoinSelectionParams& coin_selection_params);\r\n```",
      "created_at": "2023-02-04T16:21:03Z",
      "updated_at": "2023-02-04T16:59:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096555682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096555682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096558215",
      "pull_request_review_id": 1284087299,
      "id": 1096558215,
      "node_id": "PRRC_kwDOABII585BXCaH",
      "diff_hunk": "@@ -247,6 +248,27 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 27,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "eca918dd17739036cbb2430a4fc2a5a785d88fb6",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC, for all possible `insert_types`, something is inserted both in the `by type` groups and `all groups` container. The `and/or` seems to apply for the `positive_group`/`mixed_group`? Suggestion:\r\n```suggestion\r\n    // Depending on the 'insert_type', appends the output group into the `positive_group`\r\n    // and/or the 'mixed_group' for both the `by type` groups and the `all groups` container.\r\n```",
      "created_at": "2023-02-04T16:41:30Z",
      "updated_at": "2023-02-04T16:59:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096558215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096558215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 265,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096814328",
      "pull_request_review_id": 1284357530,
      "id": 1096814328,
      "node_id": "PRRC_kwDOABII585BYA74",
      "diff_hunk": "@@ -132,18 +132,15 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                    The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue              The target value\n- * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  groups                    The struct containing the outputs grouped by script and divided by (1) positive only outputs and (2) all outputs (positive + negative).\n  * param@[in]  coin_selection_params     Parameters for the coin selection\n  * returns                               If successful, a SelectionResult containing the input set\n  *                                       If failed, returns (1) an empty error message if the target was not reached (general \"Insufficient funds\")\n  *                                                  or (2) an specific error message if there was something particularly wrong (e.g. a selection\n  *                                                  result that surpassed the tx max weight size).\n  */\n-util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n-                        const CoinSelectionParams& coin_selection_params);\n+util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups groups, const CoinSelectionParams& coin_selection_params);",
      "path": "src/wallet/spend.h",
      "position": null,
      "original_position": 17,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "feeae53b0e28331de36afeaa7deec466b5082166",
      "in_reply_to_id": 1096555682,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, will re-order it so the change appears when `Groups` are introduced and not later.",
      "created_at": "2023-02-05T21:46:56Z",
      "updated_at": "2023-02-05T21:46:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096814328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096814328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818963",
      "pull_request_review_id": 1284362527,
      "id": 1096818963,
      "node_id": "PRRC_kwDOABII585BYCET",
      "diff_hunk": "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "in_reply_to_id": 1081492353,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "pushed",
      "created_at": "2023-02-05T22:22:06Z",
      "updated_at": "2023-02-05T22:22:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818975",
      "pull_request_review_id": 1284362551,
      "id": 1096818975,
      "node_id": "PRRC_kwDOABII585BYCEf",
      "diff_hunk": "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "in_reply_to_id": 1081495662,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "pushed",
      "created_at": "2023-02-05T22:22:13Z",
      "updated_at": "2023-02-05T22:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096819125",
      "pull_request_review_id": 1284362692,
      "id": 1096819125,
      "node_id": "PRRC_kwDOABII585BYCG1",
      "diff_hunk": "@@ -247,6 +248,27 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 27,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "eca918dd17739036cbb2430a4fc2a5a785d88fb6",
      "in_reply_to_id": 1096558215,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, thanks!.\r\nAside from the method doc re-phrasing, have re-worked the area, so it's clear what the `push` method does on each scenario.",
      "created_at": "2023-02-05T22:23:15Z",
      "updated_at": "2023-02-05T22:23:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096819125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096819125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": 265,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110370140",
      "pull_request_review_id": 1304212477,
      "id": 1110370140,
      "node_id": "PRRC_kwDOABII585CLudc",
      "diff_hunk": "@@ -417,13 +417,14 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             size_t ancestors, descendants;\n             wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n \n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n+            // If 'positive_only' is set, filter for positive only before adding the coin\n+            if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "9c523c5612b6eb56d25eefac511e47ee82f4f737",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and everywhere in this commit, the `positive_only` check is redundant because `¬A ∨ A ∧ B = ¬A ∨ B`\r\n\r\n```suggestion\r\n            if (!positive_only || output.GetEffectiveValue() > 0) {\r\n```",
      "created_at": "2023-02-17T21:11:38Z",
      "updated_at": "2023-02-23T18:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1110370140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110370140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1113985558",
      "pull_request_review_id": 1308739083,
      "id": 1113985558,
      "node_id": "PRRC_kwDOABII585CZhIW",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe the separation between positive and mixed group is an implementation detail of particular coin selection algorithms. We can contrast it with `CoinEligibilityFilter` and `OutputType` grouping which are algorithm independent. Therefore I propose to not separate positive outputs at the grouping stage.\r\n\r\nRather filter negative/positive groups  as close to the particular coin selection algo as possible, e.g. in `ChooseSelectionResult`. This will significantly simplify the code by removing extra nesting of structs and multiple `if` statements. I expect computation overhead of iterating over groups to remove negative UTXos to be negligible, but maybe I'm wrong.",
      "created_at": "2023-02-22T08:28:36Z",
      "updated_at": "2023-02-22T08:28:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1113985558",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1113985558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114930512",
      "pull_request_review_id": 1310169552,
      "id": 1114930512,
      "node_id": "PRRC_kwDOABII585CdH1Q",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1113985558,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm, that would make the avoid partial spends flow even uglier, plus I don't think that that will be negligible for big wallets (+50k UTXOs wallets).\r\n\r\nThe later removal of negative UTXOs will leave APS full groups with less than 100 entries, which will force us to re-order groups so they are full again (moving UTXOs from one group to another), then if the wallet does not include partial groups, will need to discard those groups too.\r\nSo making this changes would actually introduce more code than what we currently have with few nested structs (whose creation is scoped only to `GroupOutputs`). I mean, we would need to have one APS procedure inside `GroupOutputs` and another reorder + removal APS procedure inside `ChooseSelectionResult`.\r\n\r\nAbout the computation overhead:\r\nIn the worst case scenario, the wallet executes `ChooseSelectionResult` 5 times in each of the 8 `AttemptSelection` calls.\r\nSo, it could end up performing the traverse + re-order + removal 40 times.",
      "created_at": "2023-02-22T20:39:39Z",
      "updated_at": "2023-02-22T21:04:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114930512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114930512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114969240",
      "pull_request_review_id": 1310250569,
      "id": 1114969240,
      "node_id": "PRRC_kwDOABII585CdRSY",
      "diff_hunk": "@@ -417,13 +417,14 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             size_t ancestors, descendants;\n             wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n \n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n+            // If 'positive_only' is set, filter for positive only before adding the coin\n+            if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "9c523c5612b6eb56d25eefac511e47ee82f4f737",
      "in_reply_to_id": 1110370140,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah k 👌🏼, will do the change if need to re-touch to not invalidate the other reviews only for this small redundancy.",
      "created_at": "2023-02-22T21:19:12Z",
      "updated_at": "2023-02-22T21:19:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114969240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114969240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1118460580",
      "pull_request_review_id": 1315163858,
      "id": 1118460580,
      "node_id": "PRRC_kwDOABII585Cqlqk",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1113985558,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this is how APS works. When we remove negative UTXOs we assess the whole group and not each UTXO individually, so you don't need to regroup anything after filtering negative groups.",
      "created_at": "2023-02-27T09:10:17Z",
      "updated_at": "2023-02-27T09:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1118460580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1118460580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119204773",
      "pull_request_review_id": 1316287432,
      "id": 1119204773,
      "node_id": "PRRC_kwDOABII585CtbWl",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1113985558,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm not sure this is how APS works. When we remove negative UTXOs we assess the whole group and not each UTXO individually, so you don't need to regroup anything after filtering negative groups.\r\n\r\nNo wait, that would leave negative UTXOs in positive-only groups if the sum of the positive UTXOs surpasses the sum of the negative ones.\r\n\r\nCurrently, a \"positive-only group\" is essentially a container who stores only positive UTXOs. Not a mix of UTXOs which values sum is positive. That is different conceptually and something that, at least for now, we are not allowing.\r\n\r\nCheck master, inside `OutputGroup::Insert` method, first line. We reject individual negative UTXOs when the container only stores positive-only UTXOs.\r\n\r\nThe only way to create positive-groups out of mixed groups is to traverse each group UTXOs set and remove the negative ones. Then, if the group has less than a 100 entries and there are other groups corresponding to the same script (after doing the same removal on those groups), the wallet need to re-order them so only full groups are provided to the selection algorithms (if the avoid partial groups flag is enabled).\r\n\r\nAside from that, performance wise, I still think that performing the negative UTXOs removal later on the process will introduce a non-negligible overhead in big wallets.",
      "created_at": "2023-02-27T19:21:58Z",
      "updated_at": "2023-02-27T19:23:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119204773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119204773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119252440",
      "pull_request_review_id": 1316346787,
      "id": 1119252440,
      "node_id": "PRRC_kwDOABII585Ctm_Y",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1113985558,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, thanks for the explanation. This comment could be resolved. ",
      "created_at": "2023-02-27T20:02:20Z",
      "updated_at": "2023-02-27T20:02:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119252440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119252440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121297405",
      "pull_request_review_id": 1319203680,
      "id": 1121297405,
      "node_id": "PRRC_kwDOABII585C1aP9",
      "diff_hunk": "@@ -106,7 +106,14 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n  */\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+* Group coins by the provided filters.\n+*/\n+OutputGroups GroupOutputs(const CWallet& wallet,",
      "path": "src/wallet/spend.h",
      "position": null,
      "original_position": 8,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: While we are at it, what do you think about passing `wallet.chain()` instead of whole wallet object?",
      "created_at": "2023-03-01T07:54:34Z",
      "updated_at": "2023-03-02T08:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121297405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121297405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121298272",
      "pull_request_review_id": 1319203680,
      "id": 1121298272,
      "node_id": "PRRC_kwDOABII585C1adg",
      "diff_hunk": "@@ -467,28 +467,49 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n         if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n             group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n         }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& [type, outs] : coins.coins) {\n+        for (const COutput& output : outs) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 104,
      "original_position": 84,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: this is redundant, we shouldn't have non-spendable coins here at all. They has to be filtered in `AvailableCoins`",
      "created_at": "2023-03-01T07:55:17Z",
      "updated_at": "2023-03-02T08:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121298272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121298272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 481,
      "original_line": 481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121303672",
      "pull_request_review_id": 1319203680,
      "id": 1121303672,
      "node_id": "PRRC_kwDOABII585C1bx4",
      "diff_hunk": "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I'd prefer just having two methods for positive only and for all groups. For me this would be cleaner code instead of controlling the flow with bool params.",
      "created_at": "2023-03-01T07:59:51Z",
      "updated_at": "2023-03-02T08:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121303672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121303672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121328934",
      "pull_request_review_id": 1319203680,
      "id": 1121328934,
      "node_id": "PRRC_kwDOABII585C1h8m",
      "diff_hunk": "@@ -249,6 +250,21 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 15,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment is wrong",
      "created_at": "2023-03-01T08:20:52Z",
      "updated_at": "2023-03-02T08:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121328934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121328934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121336522",
      "pull_request_review_id": 1319203680,
      "id": 1121336522,
      "node_id": "PRRC_kwDOABII585C1jzK",
      "diff_hunk": "@@ -193,6 +193,11 @@ struct CoinEligibilityFilter\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_ancestors) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants, bool include_partial) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants), m_include_partial_groups(include_partial) {}\n+\n+    bool operator<(const CoinEligibilityFilter& other) const {",
      "path": "src/wallet/coinselection.h",
      "position": 13,
      "original_position": 5,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure why this is needed",
      "created_at": "2023-03-01T08:26:28Z",
      "updated_at": "2023-03-02T08:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121336522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121336522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122739758",
      "pull_request_review_id": 1319203680,
      "id": 1122739758,
      "node_id": "PRRC_kwDOABII585C66Yu",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "path": "src/wallet/coinselection.h",
      "position": 42,
      "original_position": 42,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it'd be great if we can disambiguate the term `mixed`. Now it applies to both a) mixed type groups b) mixed effects value group",
      "created_at": "2023-03-02T08:23:01Z",
      "updated_at": "2023-03-02T08:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122739758",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122739758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122748374",
      "pull_request_review_id": 1319203680,
      "id": 1122748374,
      "node_id": "PRRC_kwDOABII585C68fW",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "path": "src/wallet/coinselection.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `All` groups is somewhat misleading here, because these are actually filtered groups, but for all output types. Unfortunately, I don't have better suggestion yet.",
      "created_at": "2023-03-02T08:31:23Z",
      "updated_at": "2023-03-02T08:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122748374",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122748374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122749611",
      "pull_request_review_id": 1319203680,
      "id": 1122749611,
      "node_id": "PRRC_kwDOABII585C68yr",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Judging from the name it's not clear what's the difference between `Groups` and `OutputGroups`",
      "created_at": "2023-03-02T08:32:35Z",
      "updated_at": "2023-03-02T08:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122749611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122749611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123258118",
      "pull_request_review_id": 1322023829,
      "id": 1123258118,
      "node_id": "PRRC_kwDOABII585C848G",
      "diff_hunk": "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121303672,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wrote it in that way before but changed it due a previous code review suggestion (previous [diff](https://github.com/bitcoin/bitcoin/compare/4343835a23290f2cd34404821494303cc75ce86e..5246cc1098e5409e986c1f215bc88eb44cec62f8)). I'm not fan of bool args neither but, at least here, I would be ok either way.",
      "created_at": "2023-03-02T15:12:22Z",
      "updated_at": "2023-03-02T15:12:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123258118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123258118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123260283",
      "pull_request_review_id": 1322027332,
      "id": 1123260283,
      "node_id": "PRRC_kwDOABII585C85d7",
      "diff_hunk": "@@ -467,28 +467,49 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n         if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n             group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n         }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& [type, outs] : coins.coins) {\n+        for (const COutput& output : outs) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 104,
      "original_position": 84,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121298272,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes, I didn't remove it just to make the diff smaller. This was already there.",
      "created_at": "2023-03-02T15:13:42Z",
      "updated_at": "2023-03-02T15:13:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123260283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123260283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 481,
      "original_line": 481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123270988",
      "pull_request_review_id": 1322041279,
      "id": 1123270988,
      "node_id": "PRRC_kwDOABII585C88FM",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "path": "src/wallet/coinselection.h",
      "position": 42,
      "original_position": 42,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122739758,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What are you referring with \"mixed type groups\"?\r\n\r\nThe `mixed` term is only used inside the `Groups` structure, and reflects a vector of `OutputGroup` that may contain positive and negative UTXOs.",
      "created_at": "2023-03-02T15:20:18Z",
      "updated_at": "2023-03-02T15:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123270988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123270988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123295722",
      "pull_request_review_id": 1322073031,
      "id": 1123295722,
      "node_id": "PRRC_kwDOABII585C9CHq",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "path": "src/wallet/coinselection.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122748374,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The \"filter\" term usage here in the comment is wrong. For what corresponds to this struct, the `all` term just refers to the combination of all inserted groups. Same as we do in the `CoinsResult::All` method.\r\nThe filtering process, nor what is inserted (whether is filtered or not), is not responsibility of this struct.\r\n\r\nIt's just a container that keeps track of `Groups` by type and the caches the combination of all of them.",
      "created_at": "2023-03-02T15:35:28Z",
      "updated_at": "2023-03-02T15:35:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123295722",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123295722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123305653",
      "pull_request_review_id": 1322085351,
      "id": 1123305653,
      "node_id": "PRRC_kwDOABII585C9Ei1",
      "diff_hunk": "@@ -193,6 +193,11 @@ struct CoinEligibilityFilter\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_ancestors) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants, bool include_partial) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants), m_include_partial_groups(include_partial) {}\n+\n+    bool operator<(const CoinEligibilityFilter& other) const {",
      "path": "src/wallet/coinselection.h",
      "position": 13,
      "original_position": 5,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1121336522,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "for the `FilteredOutputGroups` map. `std::map` keys requires a comparator or a hash function.",
      "created_at": "2023-03-02T15:41:18Z",
      "updated_at": "2023-03-02T15:41:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123305653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123305653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123314932",
      "pull_request_review_id": 1322096962,
      "id": 1123314932,
      "node_id": "PRRC_kwDOABII585C9Gz0",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122749611,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe we could change `Groups` to `GroupsByEffectiveValue`? \r\n\r\nI prefer the struct rather than having an ugly std::pair or a typedef:\r\n`typedef std::pair<std::vector<OutputGroup>, std::vector<OutputGroup>> GroupsByEffectiveValue`",
      "created_at": "2023-03-02T15:47:12Z",
      "updated_at": "2023-03-02T21:13:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123314932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123314932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123363865",
      "pull_request_review_id": 1322161398,
      "id": 1123363865,
      "node_id": "PRRC_kwDOABII585C9SwZ",
      "diff_hunk": "@@ -249,6 +250,21 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 15,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121328934,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah",
      "created_at": "2023-03-02T16:15:31Z",
      "updated_at": "2023-03-02T16:15:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123363865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123363865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123369441",
      "pull_request_review_id": 1322168304,
      "id": 1123369441,
      "node_id": "PRRC_kwDOABII585C9UHh",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "path": "src/wallet/coinselection.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122748374,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I mean, it would be slower but could also be created on-demand:\r\n```c++\r\nGroups OutputGroups::All()\r\n{\r\n    Groups ret;\r\n    for (const auto& [type, groups_vec] : groups_by_type) {\r\n        ret.positive_group.insert(ret.positive_group.begin(), groups_vec.positive_group.begin(), groups_vec.positive_group.end());\r\n        ret.mixed_group.insert(ret.mixed_group.begin(), groups_vec.mixed_group.begin(), groups_vec.mixed_group.end());\r\n    }\r\n    return ret;\r\n}\r\n```",
      "created_at": "2023-03-02T16:19:15Z",
      "updated_at": "2023-03-02T16:19:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123369441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123369441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123661658",
      "pull_request_review_id": 1322565586,
      "id": 1123661658,
      "node_id": "PRRC_kwDOABII585C-bda",
      "diff_hunk": "@@ -106,7 +106,14 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n  */\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+* Group coins by the provided filters.\n+*/\n+OutputGroups GroupOutputs(const CWallet& wallet,",
      "path": "src/wallet/spend.h",
      "position": null,
      "original_position": 8,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121297405,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah could do that, but we wouldn't win much really. The commit that touches\r\nthis method signature is the biggest one of the PR, so we would add more diff\r\nfor no real gain.\r\n\r\nBetter to leave it for the next PR on the line. I have few that will come right after\r\nthis one anyway.",
      "created_at": "2023-03-02T20:32:14Z",
      "updated_at": "2023-03-02T20:32:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123661658",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123661658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123685274",
      "pull_request_review_id": 1322604229,
      "id": 1123685274,
      "node_id": "PRRC_kwDOABII585C-hOa",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "path": "src/wallet/coinselection.h",
      "position": 42,
      "original_position": 42,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122739758,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok understood it (talked via DM), the `mixed` term is also used for the `allow_mixed_output_types` flag. Which is not from this PR.\r\nWe could change that boolean to `only_select_coins_by_type` and forget about the \"mixed\" term there in a follow-up.",
      "created_at": "2023-03-02T20:56:55Z",
      "updated_at": "2023-03-02T22:58:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123685274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123685274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123825816",
      "pull_request_review_id": 1322820202,
      "id": 1123825816,
      "node_id": "PRRC_kwDOABII585C_DiY",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "path": "src/wallet/coinselection.h",
      "position": 38,
      "original_position": 38,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122749611,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ended up renaming `OutputGroups` to `OutputGroupTypeMap` to reflect what the struct really does and differentiate it from the inner struct.",
      "created_at": "2023-03-02T22:57:13Z",
      "updated_at": "2023-03-02T22:57:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123825816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123825816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123826202",
      "pull_request_review_id": 1322821129,
      "id": 1123826202,
      "node_id": "PRRC_kwDOABII585C_Doa",
      "diff_hunk": "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "path": "src/wallet/coinselection.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "in_reply_to_id": 1122748374,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed the \"filter\" comment mention.",
      "created_at": "2023-03-02T22:57:37Z",
      "updated_at": "2023-03-02T22:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123826202",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123826202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126088720",
      "pull_request_review_id": 1325727381,
      "id": 1126088720,
      "node_id": "PRRC_kwDOABII585DHsAQ",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    uint16_t NUM_SINGLE_ENTRIES = 101;\n+    for (unsigned long i = 0; i < NUM_SINGLE_ENTRIES; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\n+        addCoin(group_verifier.coins_pool, *wallet, dest7, 9 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    // Exclude partial groups must have no changes from this round and the previous one (point 6)",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 210,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this is slightly confusing because I'd expect the number to go one up from the previous case (from 3 => 4).\r\n\r\nThe test is passing, because you flipped `positive_only` and now excluded negative group is balanced by the group for `dest7`.\r\n\r\nI'd suggest keeping `positive_only=false` and bumping the numbers",
      "created_at": "2023-03-06T08:38:01Z",
      "updated_at": "2023-03-06T09:10:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126088720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126088720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126099320",
      "pull_request_review_id": 1325727381,
      "id": 1126099320,
      "node_id": "PRRC_kwDOABII585DHul4",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": 207,
      "original_position": 201,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit message is now inconsistent with the code. Either drop the details of test cases or update them.",
      "created_at": "2023-03-06T08:48:04Z",
      "updated_at": "2023-03-06T09:10:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126099320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126099320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126122594",
      "pull_request_review_id": 1325727381,
      "id": 1126122594,
      "node_id": "PRRC_kwDOABII585DH0Ri",
      "diff_hunk": "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121303672,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The reason why I suggested this change is because it's hard to explain why we need a `insert_mixed` flag. Why don't we just always add groups to `mixed` vector? I understand that's because of how aps works, but just looking at this method it's mysterious.",
      "created_at": "2023-03-06T09:09:50Z",
      "updated_at": "2023-03-06T09:10:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126122594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126122594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384700",
      "pull_request_review_id": 1326177580,
      "id": 1126384700,
      "node_id": "PRRC_kwDOABII585DI0Q8",
      "diff_hunk": "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "in_reply_to_id": 1121303672,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "well, this method is just a push function. It doesn't have to tell anything about the context where it is used. The struct is basically a map container with a cache, it doesn't need to explain how APS works.\r\n\r\nIf you are strong over the bool args usage, that would be the argument to make the changes for me.",
      "created_at": "2023-03-06T13:01:48Z",
      "updated_at": "2023-03-06T13:01:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384935",
      "pull_request_review_id": 1326178147,
      "id": 1126384935,
      "node_id": "PRRC_kwDOABII585DI0Un",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    uint16_t NUM_SINGLE_ENTRIES = 101;\n+    for (unsigned long i = 0; i < NUM_SINGLE_ENTRIES; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\n+        addCoin(group_verifier.coins_pool, *wallet, dest7, 9 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    // Exclude partial groups must have no changes from this round and the previous one (point 6)",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": null,
      "original_position": 210,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "in_reply_to_id": 1126088720,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sounds good, pushed",
      "created_at": "2023-03-06T13:02:00Z",
      "updated_at": "2023-03-06T13:03:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126387031",
      "pull_request_review_id": 1326182689,
      "id": 1126387031,
      "node_id": "PRRC_kwDOABII585DI01X",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created",
      "path": "src/wallet/test/group_outputs_tests.cpp",
      "position": 207,
      "original_position": 201,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "in_reply_to_id": 1126099320,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "pushed, thanks",
      "created_at": "2023-03-06T13:03:52Z",
      "updated_at": "2023-03-06T13:03:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126387031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126387031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161893162",
      "pull_request_review_id": 1377824610,
      "id": 1161893162,
      "node_id": "PRRC_kwDOABII585FQRUq",
      "diff_hunk": "@@ -29,8 +29,10 @@ static void GroupCoins(FuzzedDataProvider& fuzzed_data_provider, const std::vect\n     auto output_group = OutputGroup(coin_params);\n     bool valid_outputgroup{false};\n     for (auto& coin : coins) {\n-        output_group.Insert(coin, /*ancestors=*/0, /*descendants=*/0, positive_only);\n-        // If positive_only was specified, nothing may have been inserted, leading to an empty output group\n+        if (!positive_only || (positive_only && coin.GetEffectiveValue() > 0)) {",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "original_commit_id": "06ec8f992890cac69cd0fd20224aa51fa311a181",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if (!positive_only || (coin.GetEffectiveValue() > 0)) {\r\n```",
      "created_at": "2023-04-10T16:54:06Z",
      "updated_at": "2023-04-10T17:14:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1161893162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161893162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    }
  ]
}