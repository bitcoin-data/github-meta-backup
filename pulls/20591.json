{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
    "id": 533832485,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMzODMyNDg1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20591",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20591.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20591.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/240ea294d5e899a906f213f039b21e94c24d6018",
    "number": 20591,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet, bugfix: fix ComputeTimeSmart function during rescanning process.",
    "user": {
      "login": "BitcoinTsunami",
      "id": 75384375,
      "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinTsunami",
      "html_url": "https://github.com/BitcoinTsunami",
      "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
      "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
      "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
      "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The function ComputeTimeSmart in wallet.cpp assume that transaction are discovered in the right order.\r\nMoreover the 'smarttime' determination algorithm is coded with realtime scenario in mind and not rescanning of old block.\r\n\r\nThe functional test demonstrate that if the user import a wallet, then rescan only recent history, and then rescan the entire history, the older transaction discovered would have an incorrect time determination.\r\nIn the context of rescanning old block, the only time value that as a meaning is the blocktime.\r\n\r\nThat's why I've fixed the problem with a simple separation between rescanning of old block and realtime time determination. The fix is written to have no impact on every realtime scenario and only impact the behaviour during a rescanning process.\r\nThis PR Fixes #20181.\r\n\r\nTo be fair, I don't think that this bug could be triggered with the wallet GUI, because it always proceed with a proper rescan.\r\nBut RPC API provide the possibility to trigger it. I've discovered it, because Specter desktop v0.10.0 was impacted. (https://github.com/cryptoadvance/specter-desktop/issues/680).",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2020-12-07T17:31:11Z",
    "updated_at": "2022-10-30T19:10:15Z",
    "closed_at": "2021-09-28T22:18:52Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-09-28T22:18:51Z",
    "merge_commit_sha": "6a5381a06b0b9b4490394e42a8e3bc284601a4af",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "BitcoinTsunami:fix-computetimesmart",
      "ref": "fix-computetimesmart",
      "sha": "240ea294d5e899a906f213f039b21e94c24d6018",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 319309200,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTkzMDkyMDA=",
        "name": "bitcoin",
        "full_name": "BitcoinTsunami/bitcoin",
        "owner": {
          "login": "BitcoinTsunami",
          "id": 75384375,
          "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
          "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/BitcoinTsunami",
          "html_url": "https://github.com/BitcoinTsunami",
          "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
          "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
          "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
          "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
          "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/BitcoinTsunami/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/BitcoinTsunami/bitcoin",
        "archive_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/events",
        "forks_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/BitcoinTsunami/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:BitcoinTsunami/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/BitcoinTsunami/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/BitcoinTsunami/bitcoin/hooks",
        "svn_url": "https://github.com/BitcoinTsunami/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 176498,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-09-28T20:04:34Z",
        "created_at": "2020-12-07T12:13:11Z",
        "updated_at": "2021-09-26T12:28:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "efa227f5df5f5a9669dec5f1d574cf22d3c0903f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 208,
    "deletions": 36,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 36,
    "comments": 30
  },
  "events": [
    {
      "event": "commented",
      "id": 740100466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDEwMDQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740100466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T18:34:35Z",
      "updated_at": "2021-09-26T21:49:24Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#21206](https://github.com/bitcoin/bitcoin/pull/21206) (refactor: Make CWalletTx sync state type-safe by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740100466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "labeled",
      "id": 4081277667,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwODEyNzc2Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4081277667",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T19:21:06Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 740184798,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDE4NDc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740184798",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T21:16:36Z",
      "updated_at": "2020-12-07T21:17:04Z",
      "author_association": "MEMBER",
      "body": "If this PR is intended to address issue #20181, can you add \"Closes #20181\" or \"Fixes #20181\" to the PR description instead of the PR title?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740184798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "renamed",
      "id": 4081719635,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDA4MTcxOTYzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4081719635",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T21:18:42Z",
      "rename": {
        "from": "wallet, bugfix: fix ComputeTimeSmart function during rescanning process. fixes #20181",
        "to": "wallet, bugfix: fix ComputeTimeSmart function during rescanning process."
      }
    },
    {
      "event": "commented",
      "id": 740187113,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDE4NzExMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740187113",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T21:21:15Z",
      "updated_at": "2020-12-07T21:21:15Z",
      "author_association": "NONE",
      "body": "Is it right this way ?",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740187113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 740193240,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDE5MzI0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740193240",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T21:33:53Z",
      "updated_at": "2020-12-07T21:33:53Z",
      "author_association": "MEMBER",
      "body": "Yes, thank you.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740193240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 740198726,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDE5ODcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740198726",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T21:45:29Z",
      "updated_at": "2020-12-07T21:45:29Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740198726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 546580921,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTgwOTIx",
      "url": null,
      "actor": null,
      "commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-546580921",
      "submitted_at": "2020-12-07T22:38:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 546604258,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjA0MjU4",
      "url": null,
      "actor": null,
      "commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-546604258",
      "submitted_at": "2020-12-07T22:49:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 546606289,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjA2Mjg5",
      "url": null,
      "actor": null,
      "commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-546606289",
      "submitted_at": "2020-12-07T22:53:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "commented",
      "id": 740444897,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDQ0NDg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740444897",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T07:43:29Z",
      "updated_at": "2020-12-08T07:43:29Z",
      "author_association": "NONE",
      "body": "Thanks for all the feedback. I'll correct everything and ask question if needed.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740444897",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 740917494,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDkxNzQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740917494",
      "actor": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T19:38:59Z",
      "updated_at": "2020-12-08T19:38:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. Thanks!",
      "user": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740917494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 741599788,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTU5OTc4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741599788",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T07:52:57Z",
      "updated_at": "2020-12-09T07:52:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK - code looks good (haven't looked at the tests). Code is relatively simple, basically just an `if` to bypass the smart-time calculation.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-741599788",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4090812446,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5MDgxMjQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4090812446",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T16:23:44Z"
    },
    {
      "event": "commented",
      "id": 741889830,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg4OTgzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741889830",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T16:32:45Z",
      "updated_at": "2020-12-09T16:32:45Z",
      "author_association": "NONE",
      "body": "I've push a new version with the rework marked as resolved done.\r\nWhat is not done yet:\r\n- remove hardcoded pubkey in the functionnal test : wait for feedback on the way to do it to limit useless code.\r\n- update ComputeTimeSmart doxygen documentation : wait for feedback on my proposal in comment.\r\n- update AddToWalletIfInvolvingMe doxygen documentation : wait for feedback on my proposal in comment.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-741889830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4098912267,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5ODkxMjI2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4098912267",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T07:35:25Z"
    },
    {
      "event": "commented",
      "id": 743029963,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzAyOTk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743029963",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T07:39:26Z",
      "updated_at": "2020-12-11T07:39:26Z",
      "author_association": "NONE",
      "body": "I've push the full rework and add documentation update proposal in a separated commit.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743029963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4098969015,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5ODk2OTAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4098969015",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T07:50:31Z"
    },
    {
      "event": "commented",
      "id": 743274105,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzI3NDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743274105",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T15:53:50Z",
      "updated_at": "2020-12-11T15:53:50Z",
      "author_association": "MEMBER",
      "body": "Weak NACK. Seems like a hacky \"fix\" for what is pretty much a user error...?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743274105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 743763913,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mzc2MzkxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743763913",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-12T14:27:26Z",
      "updated_at": "2020-12-12T14:31:53Z",
      "author_association": "NONE",
      "body": "Thanks for your feedback.\r\n\r\nI'll try to give a broader view of the problem and of my fix, from my perspective.\r\n\r\nFirst of all, the current behaviour seems to be present for years, and no recent modification has changed this.\r\nIt's rare that users encounter this one and there's clearly no emergency here.\r\n\r\nThe issue that triggered my investigation is this one : https://github.com/bitcoin/bitcoin/issues/20181\r\nBut by looking at open issue, I've now found two more open issue on Github that should be related to the same behaviour :\r\nhttps://github.com/bitcoin/bitcoin/issues/11703\r\nhttps://github.com/bitcoin/bitcoin/issues/6662\r\nAnd one pull request abandoned due to the lack of activity :\r\nhttps://github.com/bitcoin/bitcoin/pull/12024\r\nThis pull request proposed in 2018 by @achow101 is more radical than the way I fix it, because it remove the SmartTime computation, but this raises an interesting point for me on which I would like to come back later.\r\n\r\nThe thing is that when someone encounters this behavior from Bitcoin Core wallet, it clearly has no clue on what's going on, because it's hard to reproduce it and the date seems so random and nonsense, that there's no easy way to request for similar problems on search engines. And when you try to investigate it, nothing points you in the right direction.\r\n\r\nIf it's considered as an error from the RPC API user to proceed first with a recent scan, and after with an older one, it must be documented in the RPC API Reference.\r\nAnd maybe it's the right solution for this problem : simply inform that rescanblockchain function should be manipulated with some rules in mind.\r\nIn that case, the documentation should precise that a miss handling of this method is fatal. Because if the API user proceeds to an improper rescan, there's no way to correct transaction datation later : the only way is to destroy the wallet.\r\n\r\nHere why I think it might be a good idea to fix it : the API RPC users are mainly teams working around Bitcoin Core to enrich the ecosystem with more tools.\r\nThis part of the ecosystem is far more experimental (and less strict) than Bitcoin Core itself, and that's a good thing from my point of the view.\r\nThe specter desktop team has exploited the RPC rescanblockchain function to enable faster wallet import :\r\n- If it's a segwit wallet, the rescanning process starts automatically on the first segwit enable block.\r\n- During the backup process, the first transaction blockheight is saved, to enable auto optimized reimport of this wallet later.\r\n- If the user is a power user and knows the height of his first transaction, it could restart manually from here to restore faster his wallet.\r\n\r\nI found all these ideas interesting for a faster and better user experience and guess what, they had a bug that broke my wallet, and pushed me to look at the problem.\r\nThis type of experimentation has not his place in the Bitcoin Core wallet, but is, for me, a net positive for the ecosystem.\r\nWe could imagine others optimisation for an external wallet project to improve the user experience with this RPC rescanblockchain function, for example : start with a fast utxo rescanning process with UI blocked, then unblock the interface and rescan only the current year, then the previous one, then the previous one,...\r\nFrom an user perspective, I think that the oldest transactions are way less important than the more recents one.\r\nIt's just some random thought, but my core point is that RPC API functions are not going to be used the way the internal wallet uses them, and it's a good thing because it enables leveraged creativity outside the Bitcoin Core project and high quality and reference code for the Bitcoin Core wallet.\r\nThat's why I think it might be good to enable a non restricted usage of RPC rescanblockchain function between the two points (start_height and stop_height), even if it's not used by the wallet internally.\r\n\r\nNow let's go back to the fix itself.\r\nI've tried to limit the impact on my fix on the existing code, but I'll try to give a broader view of the way I've thought about it to feed the conversation.\r\nAs I've said in the description of my PR : In the context of rescanning old blocks, the only time value that has a meaning is the blocktime.\r\nThat's why my first reaction was to look for a way not to call the ComputeTimeSmart function during a rescanning of old blocks, because you don't want to launch a complex time evaluation function in the first place when you already know that the blocktime is the only time that means something.\r\nI then discovered that the ComputeTimeSmart call was a very deep call in the hierarchy of functions and that a lot of wallet logic was shared in the middle part whatever the context.\r\nThe separation of the code between block rescan processing and realtime processing would have been an incorrect approach, due to this middleware logic.\r\nThe main wrong thing here, to me, is to compute the time of a specific context (realtime processing) in a shared function called deep in the hierarchy.\r\nA good way to fix it, is to push this responsibility outside the hierarchy (at least near the surface of the hierarchy).\r\nBut this way will require a bigger refactoring for the wallet.cpp file. If someone finds this interesting, I could try to write a proof of concept in a branch outside a pull request. But this patch would have a far bigger impact on the code.\r\n\r\nFinally this PR approach was a way of keeping the patch simple while preserving functionality.\r\nBut If this seems too hacky, there's 3 other ways :\r\n- Keep it as it's today, don't touch the wallet code, but update the RPC API Reference to explain restrictions on rescanblockchain function.\r\n- Make a bigger refactoring to push ComputeTimeSmart responsibility in the right place in the functions hierarchy.\r\n- Fix it like achow101 in his previous PR, by removing the part of ComputeTimeSmart that is only valid in a realtime context. This way, ComputeTimeSmart has not to be moved because it's not context dependent, but you've restricted a part of the current functionality. It's clearly an interesting approach too, from my point of view because it removes the root cause of the misplacement of the function in the hierarchy call.\r\n\r\nHappy to pursue the discussion here.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743763913",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "mentioned",
      "id": 4104279203,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNDI3OTIwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4104279203",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-12T14:27:26Z"
    },
    {
      "event": "subscribed",
      "id": 4104279207,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDQyNzkyMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4104279207",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-12T14:27:26Z"
    },
    {
      "event": "commented",
      "id": 744125525,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDEyNTUyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744125525",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T02:22:26Z",
      "updated_at": "2020-12-14T02:22:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Seems like a hacky \"fix\" for what is pretty much a user error...?\r\n\r\nHow is rescanning blockchain a user error?",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744125525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 744154291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDE1NDI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744154291",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T04:16:24Z",
      "updated_at": "2020-12-14T04:16:24Z",
      "author_association": "MEMBER",
      "body": "Manually scanning out of order, to be specific, is a user error because the wallet is assumed to always be scanned up to its sync-point.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744154291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 744160157,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDE2MDE1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744160157",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T04:37:35Z",
      "updated_at": "2020-12-14T04:37:35Z",
      "author_association": "MEMBER",
      "body": "@luke-jr I'd agree the wallet is written with that assumption, but I also don't see a downside to changing the behavior when the wallet can know it's dealing with an unusual situation. I haven't dug into the details, but I suspect this change makes things match expectations in strictly more situations.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744160157",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "mentioned",
      "id": 4107087242,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNzA4NzI0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4107087242",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T04:37:35Z"
    },
    {
      "event": "subscribed",
      "id": 4107087244,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDcwODcyNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4107087244",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T04:37:35Z"
    },
    {
      "event": "commented",
      "id": 763042693,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA0MjY5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/763042693",
      "actor": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-19T18:39:56Z",
      "updated_at": "2021-01-19T18:39:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-763042693",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 582518603,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNTE4NjAz",
      "url": null,
      "actor": null,
      "commit_id": "ace3f77597a04785c2ab98708f31970934197044",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK ace3f77597a04785c2ab98708f31970934197044. This is great! A trivial fix replacing currently insane behavior (using latest transaction times to estimate times of transactions in old blocks) with the simple and obvious behavior of using the block timestamp as the transaction timestamp.\r\n\r\nThe only suggestion I would make is to maybe use block max time instead of block time for these transactions, to ensure that times within the set of rescanned transactions are monotonically increasing. (You can get the max time by chaining the `FoundBlock` expression `FoundBlock().time(blocktime).maxTime(block_max_time)`).\r\n\r\nI will say I don't actually understand Luke's objection to this, and would be curious for an explanation. I understand (despite disagreeing with) the idea that it may be good to alert users that something is wrong by showing bad timestamps when they do something that the wallet can't support. But it's not clear what the exact user mistake is here, and if there is a better way to alert users about the bad usage, or just add code supporting the usage.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-582518603",
      "submitted_at": "2021-02-03T15:54:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "commented",
      "id": 772628017,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjYyODAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772628017",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T16:14:03Z",
      "updated_at": "2021-02-03T16:14:03Z",
      "author_association": "MEMBER",
      "body": "Another thing I think could be done to improve this is to avoid adding these transactions to `wtxOrdered` when `rescanning_old_block` is true:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ea96e17e1f2c2b0a949366260906ef02e560a425/src/wallet/wallet.cpp#L873-L874\r\n\r\nIf we want to exclude these transactions from smart time calculation, better to fully exclude instead of half-excluding them. Maybe there is a way to adjust the smart time calculations to include them, but that would require more thought and might not be worth the effort.\r\n\r\nAnother code cleanup that would be nice to see is moving `nTimeReceived`, `nOrderPos`, and `wtxOrdered` updates inside the `ComputeTimeSmart` function instead of doing them before. `ComputeTimeSmart` is only called one place and the current way time calculation is split up outside and inside this function is probably unnecessarily confusing. \r\n\r\nIMO, previous ACK is still ok and switching from block time to max block time, excluding these transactions from wtxOrdered, and making `ComputeTimeSmart` more self-contained are all optional improvements that could be followed up later.\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-772628017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "labeled",
      "id": 4296600440,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQyOTY2MDA0NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4296600440",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-05T15:17:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4323998332,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMyMzk5ODMzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4323998332",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-12T09:57:50Z"
    },
    {
      "event": "unlabeled",
      "id": 4324040445,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDMyNDA0MDQ0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4324040445",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-12T10:07:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4327100102,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMyNzEwMDEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4327100102",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-12T23:24:36Z"
    },
    {
      "event": "commented",
      "id": 780866774,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDg2Njc3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780866774",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T21:29:40Z",
      "updated_at": "2021-02-17T21:29:40Z",
      "author_association": "MEMBER",
      "body": "There appear to be spurious \"Agent is not responding!\" test failures https://cirrus-ci.com/task/5367295805489152, probably could be fixed by a new push or bulk restart",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-780866774",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 592647090,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjQ3MDkw",
      "url": null,
      "actor": null,
      "commit_id": "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 0072fc36b2e4d1a3660c46dd4d8cd9e551c17917. No changes since last review other than rebase. Suggestions from https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-582518603 to use max block time instead of block time, and https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-582518603 to keep rescan transactions out of wtxOrdered still apply and could be implemented here or in a followup",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-592647090",
      "submitted_at": "2021-02-17T21:33:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 592936707,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyOTM2NzA3",
      "url": null,
      "actor": null,
      "commit_id": "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 0072fc36b2e4d1a3660c46dd4d8cd9e551c17917\r\n\r\nVerified the test passes on this branch and fails on master.\r\n\r\n> Suggestions from #20591 (review) to use max block time instead of block time, and #20591 (review) to keep rescan transactions out of wtxOrdered still apply.\r\n\r\nAgree with @ryanofsky here.\r\n\r\nOne further suggestion below. \r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-592936707",
      "submitted_at": "2021-02-18T08:32:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "commented",
      "id": 782228291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjIyODI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782228291",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T17:41:14Z",
      "updated_at": "2021-02-19T17:41:34Z",
      "author_association": "NONE",
      "body": "Thanks ryanofsky for your feedback and suggestions !\r\nI confirm that my latest push was just to rebase master and I was a bit perplex about CI test failing.\r\n\r\nI'll implement thoses two point :\r\n> Suggestions from #20591 (review) to use max block time instead of block time, and #20591 (review) to keep rescan transactions out of wtxOrdered still apply.\r\n\r\nI need a little time to fully understand the impact of your recommandation. I may have question about it later.\r\n\r\njonatack : I'll modify the functional test with your adjustment. You're not missing anything, my test just using a large number because I was to lazy to look at the minimal working number (If I remember correctly, I was not sure If I should use 100 or 101 to unlock miner coins and I increased the number).\r\n\r\n",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-782228291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4355187986,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM1NTE4Nzk4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4355187986",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-20T11:11:48Z"
    },
    {
      "event": "commented",
      "id": 782608848,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjYwODg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782608848",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-20T11:17:41Z",
      "updated_at": "2021-02-20T11:17:41Z",
      "author_association": "NONE",
      "body": "Hey I just push a first update:\r\n- fresh rebase\r\n- use block_max_time instead of blocktime following ryanofsky advice\r\n- faster functional test with jonatack recommandation.\r\n\r\nThe block_max_time advantage is clear for me now, because blocktime could sometimes  not be ordered in strict chronological order. block_max_time prevents this and Foundblock helper is very practical to get it.\r\n\r\nFollowing jonatack recommandation, the test is now faster and validates the exact same thing as my previous iteration.\r\n\r\nBut this update doesn't contain any change concerning the wtxOrdered list.\r\nI can't wrap my head around the fact that ryanofsky and jonatack sees a way to change this to obtain a better code.\r\n\r\nAt first glance, I thought I would do this first: \r\n\r\n> Another code cleanup that would be nice to see is moving nTimeReceived, nOrderPos, and wtxOrdered updates inside the ComputeTimeSmart function instead of doing them before\r\n\r\nTo cleanup the code first and change the behavior with rescanning_old_block after.\r\nBut I don't think it's a good idea to do that : currently, ComputeTimeSmart has no side effect on the wtx transaction. It's a good thing for me. If I do that, and you look at the resulting AddToWallet function : the fInsertedNew path will populate wtx via side effects in the ComputeTimeSmart function and the !fInsertedNew path will populate it directly in AddToWallet function. I don't like this type of asymetric + side effects behaviors in various execution path, but I'm open to understand the way things are done in Bitcoin Core and in C++ (I don't have any experience in C++).\r\n\r\nAfter that, I just tried the simplest approach:\r\n```\r\nif (fInsertedNew) {\r\n        wtx.m_confirm = confirm;\r\n        wtx.nTimeReceived = chain().getAdjustedTime();\r\n        if(!rescanning_old_block) {\r\n            wtx.nOrderPos = IncOrderPosNext(&batch);\r\n            wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\r\n        }\r\n        wtx.nTimeSmart = ComputeTimeSmart(wtx, rescanning_old_block);\r\n        AddToSpends(hash);\r\n    }\r\n```\r\n\r\nBut this make me scratched my head : In the rescanning_old_block case, wtx object will be left with uninitialized field. I'm pretty sure it could produce error somewhere else... maybe not if nOrderPos != -1 is always checked before manipulating m_it_wtxOrdered, but a minima it requires more prudence to manipulate this. To be clear : I'm inconfortable because I don't visualise all consequences.\r\n\r\nAnd after that , I looked at the wtxOrdered usage, and that's where my head explode : This list has two usages at the same time:\r\n- the first is to maintain an ordered list for ComputeTimeSmart. The ordered aspect is only used here. That's why I understand why ryanofsky want to remove the transaction from here in the first place.\r\n- the second usage is from RPC interface in the listtransactions method. And here I don't think that transaction order has impact (not sure, but highly probable), but I'm sure that absence of a wallet transaction has impact. I can't remove the wtxOrdered insertion in rescanning_old_block scenario without breaking things here.\r\n\r\nThat's why I'm stuck and don't understand the way you two see it in the first place. Could you please help me here ? I'll be happy to better understand implications here and way to move around this problem here !\r\n\r\nThe only way I could thing about refactoring it, is to separate the two list : maintain one unordered with all transactions and one ordered with transaction for ComputeTimeSmart only... but I doesn't make any sense for me to do that and I can't envision a step after this move to obtain a clearer code after that.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-782608848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 782764550,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mjc2NDU1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782764550",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-20T23:22:38Z",
      "updated_at": "2021-02-20T23:22:38Z",
      "author_association": "NONE",
      "body": "More thoughts :\r\n\r\nI realise that the \"two separate list\" already exist with wtxOrdered (ordered) and mapWallet (unordered). It make more sens to me now. Because listtransactions() method in rpcwallet.cpp is dependant from wtxOrdered, I can't skip some transactions to be added in it.\r\n\r\nIf you still think that I should avoid adding these transactions to wtxOrdered, maybe a rewrite of listtransactions() is needed to use mapWallet instead of wtxOrdered (like the listsinceblock() method in rpcwallet.cpp).\r\nI don't know exactly how the listtransactions RPC method is used externaly. Is wtxOrdered order really important or is the order just an easy way to ensure repetable output during pagination with moving (skip, count) couple ?\r\n\r\nLast point, if we drop this point and keep the fix as it is right now, It should be noted that in case of and RPC API user which proceed first with a recent scan, and after with an older one, the ComputeTimeSmart function is fixed, but wtxOrdered is not sorted correctly. It may not be a big deal for listtransactions() method, but it may induce an unexpected behavior in the futur if some fresh code use this list thinking it's well sorted.\r\n",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-782764550",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 595010886,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MDEwODg2",
      "url": null,
      "actor": null,
      "commit_id": "bb6bc61bea3098d4dab895a73c2c0f7b8d293e2b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Tested ACK https://github.com/bitcoin/bitcoin/pull/20591/commits/6fb0173427df4b6a63131d0c338b5a2e63805561 \r\nThe test passes on this branch and fails on master.\r\n\r\nIf the approach mentioned above is applied, the test will fail with `restorewo_wallet.listtransactions()` returning 0.\r\n```\r\nif(!rescanning_old_block) {\r\n    wtx.nOrderPos = IncOrderPosNext(&batch);\r\n    wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\r\n}\r\n```",
      "user": {
        "login": "leonardojobim",
        "id": 2694753,
        "node_id": "MDQ6VXNlcjI2OTQ3NTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2694753?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leonardojobim",
        "html_url": "https://github.com/leonardojobim",
        "followers_url": "https://api.github.com/users/leonardojobim/followers",
        "following_url": "https://api.github.com/users/leonardojobim/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leonardojobim/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leonardojobim/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leonardojobim/subscriptions",
        "organizations_url": "https://api.github.com/users/leonardojobim/orgs",
        "repos_url": "https://api.github.com/users/leonardojobim/repos",
        "events_url": "https://api.github.com/users/leonardojobim/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leonardojobim/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-595010886",
      "submitted_at": "2021-02-22T05:01:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "commented",
      "id": 783558887,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzU1ODg4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783558887",
      "actor": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T17:59:10Z",
      "updated_at": "2021-02-22T17:59:10Z",
      "author_association": "NONE",
      "body": "I tried this pull request today, and I still have the same problem. It's pulling in the wrong date after a rescan. I am now attempting to reload the entire blockchain. I need this fixed for my IRS audit.",
      "user": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-783558887",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 783675403,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzY3NTQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783675403",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T21:08:02Z",
      "updated_at": "2021-02-22T21:08:02Z",
      "author_association": "NONE",
      "body": "> I tried this pull request today, and I still have the same problem. It's pulling in the wrong date after a rescan. I am now attempting to reload the entire blockchain. I need this fixed for my IRS audit.\r\n\r\nYou must encounter a similar problem as the one that make me code this PR. You can't recovered a wallet with incorrect datation. It's not possible yet, even with this PR : the only way is to destroy and recreate it. This PR only prevent the datation to be corrupted in the first place.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-783675403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 606894038,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2ODk0MDM4",
      "url": null,
      "actor": null,
      "commit_id": "bb6bc61bea3098d4dab895a73c2c0f7b8d293e2b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK bb6bc61bea3098d4dab895a73c2c0f7b8d293e2b. No significant changes since last review other than rebase, optimizing test, and switching to max block time instead of block time.\r\n\r\nThanks for looking into txordered suggestions! It'd be nice to clean up this code more but I can see how listtransaction constrains changing txordered, and I can see upsides of keeping ComputeTimeSmart functional even I might still prefer to see time logic less spread out over two method. There's space for more improvements later but I think this PR is clearly better than status quo.\r\n\r\nOne thing I don't know is what problem may cause the other reported issue https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-783675403. Might be worth filing separate bug if there are known steps to reproduce.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-606894038",
      "submitted_at": "2021-03-09T03:04:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 607182369,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTgyMzY5",
      "url": null,
      "actor": null,
      "commit_id": "bb6bc61bea3098d4dab895a73c2c0f7b8d293e2b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "How about `nTimeSmart = min(nTimeSmart, block_max_time)` and avoid `rescanning_old_block` argument?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-607182369",
      "submitted_at": "2021-03-09T09:21:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "commented",
      "id": 794463385,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDQ2MzM4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794463385",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-09T21:14:51Z",
      "updated_at": "2021-03-09T21:29:56Z",
      "author_association": "NONE",
      "body": "> How about `nTimeSmart = min(nTimeSmart, block_max_time)` and avoid `rescanning_old_block` argument?\r\n\r\nCould you elaborate where do you imagine using it ?\r\n\r\nBecause min function between nTimeSmart and blocktime is already present in the current Bitcoin Core code and doesn't prevent the original problem.\r\n\r\nI'm refering to this line :\r\n` nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));`\r\n\r\nIf you imagine introduce another minimum function after the previous one, you'll invalidate the maximum function with lastestEntry and change the original behavior of the ComputeTimeSmart function.\r\nIn the past achow101 has already purpose a previous PR with this type of approach (#12024). It's an elegant way to solve the issue, but it restrict existing functionality.\r\n\r\nThis PR solve the issue without removing existing functionality.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-794463385",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 797665024,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzY2NTAyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797665024",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:10:17Z",
      "updated_at": "2021-03-12T18:10:17Z",
      "author_association": "NONE",
      "body": "> Code review ACK [bb6bc61](https://github.com/bitcoin/bitcoin/commit/bb6bc61bea3098d4dab895a73c2c0f7b8d293e2b). No significant changes since last review other than rebase, optimizing test, and switching to max block time instead of block time.\r\n> \r\n> Thanks for looking into txordered suggestions! It'd be nice to clean up this code more but I can see how listtransaction constrains changing txordered, and I can see upsides of keeping ComputeTimeSmart functional even I might still prefer to see time logic less spread out over two method. There's space for more improvements later but I think this PR is clearly better than status quo.\r\n> \r\n> One thing I don't know is what problem may cause the other reported issue [#20591 (comment)](https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-783675403). Might be worth filing separate bug if there are known steps to reproduce.\r\n\r\nThanks ryanofsky for your feedback and your code review !\r\n\r\nFor the [#20591 (comment)], I need some confirmation from @charlierlee on my analysis :\r\nI think that @charlierlee encountered an incorrect datation in a wallet.\r\nAfter that, he searched for a solution online, found this PR and try it with a rescan of the wallet.\r\nHis incorrect datation was not corrected after that and he give his feedback here.\r\n\r\nMy point is that in that case : this PR won't save you because you can't recover an incorrect datation. It's an unrecoverable state. I mention in a previous comment \"there's no way to correct transaction datation later : the only way is to destroy the wallet.\". The rescan function never change a previous datation (even with a full rescan). That's why I think this PR is important, because it prevent the bad datation to occured in the first place.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-797665024",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "mentioned",
      "id": 4452041928,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ1MjA0MTkyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4452041928",
      "actor": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:10:17Z"
    },
    {
      "event": "subscribed",
      "id": 4452041935,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0NTIwNDE5MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4452041935",
      "actor": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:10:17Z"
    },
    {
      "event": "commented",
      "id": 797670438,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzY3MDQzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797670438",
      "actor": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:21:03Z",
      "updated_at": "2021-03-12T18:21:03Z",
      "author_association": "NONE",
      "body": "For the [#20591 (comment)], @BitcoinTsunami yes that is correct.",
      "user": {
        "login": "maddadder",
        "id": 441667,
        "node_id": "MDQ6VXNlcjQ0MTY2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/441667?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maddadder",
        "html_url": "https://github.com/maddadder",
        "followers_url": "https://api.github.com/users/maddadder/followers",
        "following_url": "https://api.github.com/users/maddadder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maddadder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maddadder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maddadder/subscriptions",
        "organizations_url": "https://api.github.com/users/maddadder/orgs",
        "repos_url": "https://api.github.com/users/maddadder/repos",
        "events_url": "https://api.github.com/users/maddadder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maddadder/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-797670438",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "mentioned",
      "id": 4452073786,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ1MjA3Mzc4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4452073786",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:21:05Z"
    },
    {
      "event": "subscribed",
      "id": 4452073788,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0NTIwNzM3ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4452073788",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:21:05Z"
    },
    {
      "event": "commented",
      "id": 810324129,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDMyNDEyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810324129",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T14:48:30Z",
      "updated_at": "2021-03-30T14:48:30Z",
      "author_association": "MEMBER",
      "body": "@promag did want to follow up on https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-794463385?\r\n\r\nTo me this PR seems like a straightforward improvement that gets the rescan context taken into account in a simple way and adds test coverage. I'm sure there are other ways it could be improved beyond this, but I think this change should only help make future improvements and not get in the way.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-810324129",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "mentioned",
      "id": 4528266887,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyODI2Njg4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4528266887",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T14:48:30Z"
    },
    {
      "event": "subscribed",
      "id": 4528266896,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjgyNjY4OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4528266896",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T14:48:30Z"
    },
    {
      "event": "labeled",
      "id": 5361162131,
      "node_id": "LE_lADOABII584tOOfozwAAAAE_jNeT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5361162131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-26T11:36:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5361367586,
      "node_id": "HRFPE_lADOABII584tOOfozwAAAAE_j_oi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5361367586",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-26T14:17:48Z"
    },
    {
      "event": "commented",
      "id": 927314001,
      "node_id": "IC_kwDOABII5843RbBR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927314001",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-26T14:19:26Z",
      "updated_at": "2021-09-26T14:19:26Z",
      "author_association": "NONE",
      "body": "Same code. I've just rebased from the latest master code to resolve conflict.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-927314001",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "unlabeled",
      "id": 5361482980,
      "node_id": "UNLE_lADOABII584tOOfozwAAAAE_kbzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5361482980",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-26T15:45:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 764909236,
      "node_id": "PRR_kwDOABII584tl5a0",
      "url": null,
      "actor": null,
      "commit_id": "22b9a92cd42c7ea84feea041e70906df709dbe79",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK b92d5522782a8d56f71f9ed4d04dbb068b9d65e6\r\n\r\nVerified the test fails on current master but passes with this PR. Nits inline are non-blocking. Will merge if @ryanofsky or someone else re-ACKs.\r\n\r\nThanks @BitcoinTsunami!",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-764909236",
      "submitted_at": "2021-09-28T02:45:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 765219699,
      "node_id": "PRR_kwDOABII584tnFNz",
      "url": null,
      "actor": null,
      "commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review re-ACK b92d5522782a8d56f71f9ed4d04dbb068b9d65e6 \r\n\r\nEdit, also re-verified the debug build is clean and the test passes on the branch and fails on master.\r\n```\r\n2021-09-28T10:46:57.258000Z TestFramework (INFO): Check transactions time after restoration\r\n2021-09-28T10:46:57.260000Z TestFramework (ERROR): Assertion failed\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/wallet_transactiontime_rescan.py\", line 154, in run_test\r\n    assert_equal(tx['time'], cur_time + ten_days)\r\nAssertionError: not(1635418013 == 1633690013)\r\n```\r\nHappy to re-review quickly for the suggestions.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-765219699",
      "submitted_at": "2021-09-28T10:01:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "reviewed",
      "id": 765657331,
      "node_id": "PRR_kwDOABII584towDz",
      "url": null,
      "actor": null,
      "commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK b92d5522782a8d56f71f9ed4d04dbb068b9d65e6. No changes since previous review other than rebase (conflicts on nearby lines)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-765657331",
      "submitted_at": "2021-09-28T16:03:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3YjQ0ZjE2ZTcxYjlkZjEwZGZhYzdmMzJmOTI5OTc5MzhmN2U3YWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07b44f16e71b9df10dfac7f32f92997938f7e7aa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07b44f16e71b9df10dfac7f32f92997938f7e7aa",
      "tree": {
        "sha": "358f11918fb37ccf9fdf06069f7f5cd933160697",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/358f11918fb37ccf9fdf06069f7f5cd933160697"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09cb5ec6c8b4468ee3e8c2b3e1a9075907e5c84d",
          "sha": "09cb5ec6c8b4468ee3e8c2b3e1a9075907e5c84d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09cb5ec6c8b4468ee3e8c2b3e1a9075907e5c84d"
        }
      ],
      "message": "wallet: fix ComputeTimeSmart algorithm to use blocktime during old block rescanning",
      "committer": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2021-09-28T18:56:52Z"
      },
      "author": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2020-12-07T16:29:48Z"
      },
      "sha": "07b44f16e71b9df10dfac7f32f92997938f7e7aa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2ZWIzOWFmMjE4MTBiZjFjM2JkY2UwZWYyMjEyYzFhZDY1OTdiY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd",
      "tree": {
        "sha": "260f636eca72bd136188ffcbdd724413d859ec57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/260f636eca72bd136188ffcbdd724413d859ec57"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07b44f16e71b9df10dfac7f32f92997938f7e7aa",
          "sha": "07b44f16e71b9df10dfac7f32f92997938f7e7aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07b44f16e71b9df10dfac7f32f92997938f7e7aa"
        }
      ],
      "message": "test: add functional test to check transaction time determination during block rescanning",
      "committer": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2021-09-28T19:49:22Z"
      },
      "author": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2020-12-07T16:45:47Z"
      },
      "sha": "d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0MGVhMjk0ZDVlODk5YTkwNmYyMTNmMDM5YjIxZTk0YzI0ZDYwMTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/240ea294d5e899a906f213f039b21e94c24d6018",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/240ea294d5e899a906f213f039b21e94c24d6018",
      "tree": {
        "sha": "52533a4cb1156b3dd7a604272d52d144b78114aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52533a4cb1156b3dd7a604272d52d144b78114aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd",
          "sha": "d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d6eb39af21810bf1c3bdce0ef2212c1ad6597bcd"
        }
      ],
      "message": "doc: update doxygen documention of ComputeTimeSmart() and AddToWalletIfInvolvingMe() regarding rescanning_old_block parameter",
      "committer": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2021-09-28T19:49:35Z"
      },
      "author": {
        "name": "BitcoinTsunami",
        "email": "",
        "date": "2020-12-10T23:00:43Z"
      },
      "sha": "240ea294d5e899a906f213f039b21e94c24d6018"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5376299504,
      "node_id": "HRFPE_lADOABII584tOOfozwAAAAFAc9Hw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5376299504",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T20:04:46Z"
    },
    {
      "event": "commented",
      "id": 929584986,
      "node_id": "IC_kwDOABII5843aFda",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929584986",
      "actor": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T20:07:14Z",
      "updated_at": "2021-09-28T20:07:14Z",
      "author_association": "NONE",
      "body": "Thanks meshcollider and jonatack for your feedback.\r\nAll your recommendations are included in the new code.",
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-929584986",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "commented",
      "id": 929639976,
      "node_id": "IC_kwDOABII5843aS4o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929639976",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T21:30:07Z",
      "updated_at": "2021-09-28T21:30:07Z",
      "author_association": "MEMBER",
      "body": "ACK 240ea294d5e899a906f213f039b21e94c24d6018 per `git diff b92d552 240ea29`, re-verified rebase to latest master + debug build clean + new test passes on the branch and fails on master, only change since my review a few hours ago is incorporation of latest review suggestions",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-929639976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20591"
    },
    {
      "event": "reviewed",
      "id": 766014303,
      "node_id": "PRR_kwDOABII584tqHNf",
      "url": null,
      "actor": null,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-utACK 240ea294d5e899a906f213f039b21e94c24d6018",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#pullrequestreview-766014303",
      "submitted_at": "2021-09-28T22:11:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
    },
    {
      "event": "merged",
      "id": 5376886978,
      "node_id": "ME_lADOABII584tOOfozwAAAAFAfMjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5376886978",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6a5381a06b0b9b4490394e42a8e3bc284601a4af",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a5381a06b0b9b4490394e42a8e3bc284601a4af",
      "created_at": "2021-09-28T22:18:51Z"
    },
    {
      "event": "closed",
      "id": 5376886993,
      "node_id": "CE_lADOABII584tOOfozwAAAAFAfMjR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5376886993",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T22:18:52Z"
    },
    {
      "event": "referenced",
      "id": 5377136274,
      "node_id": "REFE_lADOABII584tOOfozwAAAAFAgJaS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5377136274",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "89faa29cfaf6e1f18c548e2903fec10efc22a1b0",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/89faa29cfaf6e1f18c548e2903fec10efc22a1b0",
      "created_at": "2021-09-28T23:42:11Z"
    },
    {
      "event": "locked",
      "id": 7699632560,
      "node_id": "LOE_lADOABII584tOOfozwAAAAHK7xGw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7699632560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T19:10:15Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606",
      "pull_request_review_id": 546580921,
      "id": 537871606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3MTYwNg==",
      "diff_hunk": "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 4997a2ea5f2 \"wallet: fix ComputeTimeSmart algorithm to use blocktime during old block rescanning fixes #20181\"\r\n\r\n- does the `ComputeTimeSmart` doxygen documentation need to be updated?\r\n\r\n- missing space\r\n```suggestion\r\n            if (!rescanning_old_block) {\r\n```\r\n\r\n- maybe start with the truthy case first, e.g. `if (rescanning_old_block) {`...\r\n\r\n- can drop the \"fixes #20181\" from the commit message, same for the test commit message (remove \"refs #20181\"); having \"Fixes #20181\" in the PR description is enough\r\n\r\n- suggestion to reviewers: review this commit diff with `-w`",
      "created_at": "2020-12-07T22:11:38Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537871606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209",
      "pull_request_review_id": 546580921,
      "id": 537877209,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3NzIwOQ==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 27,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: 2 spaces before each comment per PEP8\r\n```suggestion\r\n        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\r\n```",
      "created_at": "2020-12-07T22:21:29Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537877209",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472",
      "pull_request_review_id": 546580921,
      "id": 537883472,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4MzQ3Mg==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)\n+        assert_equal(minernode.getblockcount(), 500)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days)\n+        usernode.setmocktime(mocktime + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 600)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 700)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 800)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':\n+                assert_equal(tx['blocktime'], 1526835225)\n+                assert_equal(tx['time'], 1526835225)\n+            elif tx['address'] == 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5':\n+                assert_equal(tx['blocktime'], 1527699225)\n+                assert_equal(tx['time'], 1527699225)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a', rescan=False)\n+\n+        # check user has 0 balance and no transaction\n+        assert_equal(restorewo_wallet.getbalance(), 0)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 0)\n+\n+        # proceed to rescan, first with an incomplete one, then with a full rescan\n+        self.log.info('Rescan last history part')\n+        restorewo_wallet.rescanblockchain(650)\n+        self.log.info('Rescan all history')\n+        restorewo_wallet.rescanblockchain()\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance after restoration')\n+        assert_equal(restorewo_wallet.getbalance(), 16)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time after restoration')\n+        for tx in restorewo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 152,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The test does indeed fail without the change and passes with it.\r\n```\r\n2020-12-07T22:04:28.394000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"test/functional/wallet_transactiontime_rescan.py\", line 152, in run_test\r\n    assert_equal(tx['time'], 1525971225)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 50, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(1527699225 == 1525971225)\r\n```\r\nBut the test commit needs to be after the commit that makes the change, not before, otherwise the test commit fails. The tests and CI should pass for each commit. Also, you can squash the linter fixup commit into the test commit. (Note that you can run the Python test linter on the command line with `test/lint/lint-python.sh`).",
      "created_at": "2020-12-07T22:32:10Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537883472",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648",
      "pull_request_review_id": 546580921,
      "id": 537886648,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NjY0OA==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 30,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could use current time, grep in the functional tests for `int(time.time()`",
      "created_at": "2020-12-07T22:37:49Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972",
      "pull_request_review_id": 546580921,
      "id": 537886972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4Njk3Mg==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 54,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The addresses and pubkeys don't need to be hardcoded. Have a look in other tests how this can be done (grep for \"importpubkey\", \"deterministic\", \"pub_key\", \"priv_key\", etc.)",
      "created_at": "2020-12-07T22:38:30Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800",
      "pull_request_review_id": 546604258,
      "id": 537892800,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5MjgwMA==",
      "diff_hunk": "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": 9,
      "original_position": 5,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would probaby be good to update the Doxygen documentation here.",
      "created_at": "2020-12-07T22:49:30Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537892800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706",
      "pull_request_review_id": 546606289,
      "id": 537894706,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDcwNg==",
      "diff_hunk": "@@ -1788,7 +1788,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, true /* rescanning_old_block */);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\n                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, /* rescanning_old_block */ true);\r\n```\r\n",
      "created_at": "2020-12-07T22:53:21Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537894706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538866929",
      "pull_request_review_id": 547698260,
      "id": 538866929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjkyOQ==",
      "diff_hunk": "@@ -1788,7 +1788,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, true /* rescanning_old_block */);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537894706,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2020-12-08T22:49:43Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538866929",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538866929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867184",
      "pull_request_review_id": 547698522,
      "id": 538867184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NzE4NA==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 27,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537877209,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2020-12-08T22:50:11Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867184",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867510",
      "pull_request_review_id": 547698899,
      "id": 538867510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NzUxMA==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)\n+        assert_equal(minernode.getblockcount(), 500)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days)\n+        usernode.setmocktime(mocktime + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 600)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 700)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 800)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':\n+                assert_equal(tx['blocktime'], 1526835225)\n+                assert_equal(tx['time'], 1526835225)\n+            elif tx['address'] == 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5':\n+                assert_equal(tx['blocktime'], 1527699225)\n+                assert_equal(tx['time'], 1527699225)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a', rescan=False)\n+\n+        # check user has 0 balance and no transaction\n+        assert_equal(restorewo_wallet.getbalance(), 0)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 0)\n+\n+        # proceed to rescan, first with an incomplete one, then with a full rescan\n+        self.log.info('Rescan last history part')\n+        restorewo_wallet.rescanblockchain(650)\n+        self.log.info('Rescan all history')\n+        restorewo_wallet.rescanblockchain()\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance after restoration')\n+        assert_equal(restorewo_wallet.getbalance(), 16)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time after restoration')\n+        for tx in restorewo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 152,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537883472,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2020-12-08T22:50:50Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867510",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538868050",
      "pull_request_review_id": 547699432,
      "id": 538868050,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2ODA1MA==",
      "diff_hunk": "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537871606,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, except doxygen documentation update, not pushed yet",
      "created_at": "2020-12-08T22:51:47Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538868050",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538868050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539239571",
      "pull_request_review_id": 548102396,
      "id": 539239571,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzOTU3MQ==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 30,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537886648,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2020-12-09T11:46:57Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539239571",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539239571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539249567",
      "pull_request_review_id": 548114015,
      "id": 539249567,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0OTU2Nw==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 54,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537886972,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've a question about this one. My first local version didn't use any hardcoded key and I use getaddressinfo and the pubkey field. I found my test a little bit hard to read, because I needed 4 wallets to realise it (and one, just to get a couple of address/pubkey). I find that by hardcoding address and pubkey, I could remove one wallet, and let the reader of the test be more focus on the 3 really important wallets.\r\n\r\nCan you confirm me that I need to create a wallet to avoid hardcoded pubkey ? Or is there something I'm missing here.\r\n\r\nIf another wallet is required, I'll try to isolate it better from the 3 others than in my first attempt.",
      "created_at": "2020-12-09T12:03:02Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539249567",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539249567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539280278",
      "pull_request_review_id": 548150430,
      "id": 539280278,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MDI3OA==",
      "diff_hunk": "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537871606,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure about how to update the doxygen documentation, because I don't understand the way the logic is explained. The documentation split sending and receiving transaction treatment explanation, but there's no distinction in ComputeTimeSmart in the code (or I don't see it).\r\n\r\nThat's why I'm not sure between which lines I should insert the new beahaviour description.\r\nMaybe something like \"- If receiving a transaction during a rescanning process, assign all its (not already known) transactions' timestamps to the block time.\" between the second and the third one :\r\n\r\n```\r\n/**\r\n * Compute smart timestamp for a transaction being added to the wallet.\r\n *\r\n * Logic:\r\n * - If sending a transaction, assign its timestamp to the current time.\r\n * - If receiving a transaction outside a block, assign its timestamp to the\r\n *   current time.\r\n * - If receiving a transaction during a rescanning process, assign all its\r\n *   (not already known) transactions' timestamps to the block time.\r\n * - If receiving a block with a future timestamp, assign all its (not already\r\n *   known) transactions' timestamps to the current time.\r\n * - If receiving a block with a past timestamp, before the most recent known\r\n *   transaction (that we care about), assign all its (not already known)\r\n *   transactions' timestamps to the same timestamp as that most-recent-known\r\n *   transaction.\r\n * - If receiving a block with a past timestamp, but after the most recent known\r\n *   transaction, assign all its (not already known) transactions' timestamps to\r\n *   the block time.\r\n *\r\n * For more information see CWalletTx::nTimeSmart,\r\n * https://bitcointalk.org/?topic=54527, or\r\n * https://github.com/bitcoin/bitcoin/pull/1393.\r\n */\r\n```",
      "created_at": "2020-12-09T12:51:12Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539280278",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539280278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539332655",
      "pull_request_review_id": 548214446,
      "id": 539332655,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMjY1NQ==",
      "diff_hunk": "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": 9,
      "original_position": 5,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537892800,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I need some feedback here too.\r\n\r\nI want to add this at the end of the existing comment : \r\n\"Should be called with rescanning_old_block set to true, if the transaction is not discovered in realtime, but during a rescan of old blocks.\" \r\n\r\n```\r\n /**\r\n     * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\r\n     * be set when the transaction was known to be included in a block.  When\r\n     * pIndex == nullptr, then wallet state is not updated in AddToWallet, but\r\n     * notifications happen and cached balances are marked dirty.\r\n     *\r\n     * If fUpdate is true, existing transactions will be updated.\r\n     * TODO: One exception to this is that the abandoned state is cleared under the\r\n     * assumption that any further notification of a transaction that was considered\r\n     * abandoned is an indication that it is not safe to be considered abandoned.\r\n     * Abandoned state should probably be more carefully tracked via different\r\n     * posInBlock signals or by checking mempool presence when necessary.\r\n     *\r\n     * Should be called with rescanning_old_block set to true, if the transaction is\r\n     * not discovered in realtime, but during a rescan of old blocks.\r\n     */\r\n```",
      "created_at": "2020-12-09T14:05:06Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539332655",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539332655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540576404",
      "pull_request_review_id": 549693002,
      "id": 540576404,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjQwNA==",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 54,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537886972,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've find a way with getnewaddress() on the node. The test is rewrited with importaddress() instead of importpubkey(). It's simplier and demonstrated the same thing.\r\nDone locally, not pushed yet.",
      "created_at": "2020-12-10T23:27:59Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540576404",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540576404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746812",
      "pull_request_review_id": 549859962,
      "id": 540746812,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0NjgxMg==",
      "diff_hunk": "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537871606,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've push the proposition in a dedicated commit and will revise it if needed.",
      "created_at": "2020-12-11T07:37:40Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746812",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746882",
      "pull_request_review_id": 549860078,
      "id": 540746882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0Njg4Mg==",
      "diff_hunk": "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": 9,
      "original_position": 5,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "in_reply_to_id": 537892800,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've push the proposition in a dedicated commit and will revise it if needed.",
      "created_at": "2020-12-11T07:37:50Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746882",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578203567",
      "pull_request_review_id": 592936707,
      "id": 578203567,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIwMzU2Nw==",
      "diff_hunk": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 64,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think 101 blocks would suffice here (the test functions the same but would run faster), unless I'm missing something.\r\n \r\n<details><summary>working example</summary><p>\r\n\r\n```diff\r\n         # generate some btc to create transactions and check blockcount\r\n-        minernode.generatetoaddress(300, m1)\r\n-        assert_equal(minernode.getblockcount(), 500)\r\n+        initial_mine = 101\r\n+        minernode.generatetoaddress(initial_mine, m1)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -75,7 +76,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 600)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -88,7 +89,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 700)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -101,7 +102,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate more blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 800)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\r\n \r\n         # check user final balance and transaction count\r\n         self.log.info('Check user final balance')\r\n@@ -136,7 +137,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # proceed to rescan, first with an incomplete one, then with a full rescan\r\n         self.log.info('Rescan last history part')\r\n-        restorewo_wallet.rescanblockchain(650)\r\n+        restorewo_wallet.rescanblockchain(initial_mine + 350)\r\n         self.log.info('Rescan all history')\r\n         restorewo_wallet.rescanblockchain()\r\n```\r\n</p></details>\r\n",
      "created_at": "2021-02-18T08:01:12Z",
      "updated_at": "2021-02-20T11:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r578203567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578203567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579648366",
      "pull_request_review_id": 594746400,
      "id": 579648366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTY0ODM2Ng==",
      "diff_hunk": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 64,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "in_reply_to_id": 578203567,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2021-02-20T12:07:47Z",
      "updated_at": "2021-02-20T12:07:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r579648366",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579648366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717174612",
      "pull_request_review_id": 764909236,
      "id": 717174612,
      "node_id": "PRRC_kwDOABII584qvzdU",
      "diff_hunk": "@@ -503,7 +503,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! @return true if wtx is changed and needs to be saved to disk, otherwise false\n     using UpdateWalletTxFn = std::function<bool(CWalletTx& wtx, bool new_tx)>;\n \n-    CWalletTx* AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx=nullptr, bool fFlushOnClose=true);\n+    CWalletTx* AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx=nullptr, bool fFlushOnClose=true, bool rescanning_old_block=false);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 32,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "22b9a92cd42c7ea84feea041e70906df709dbe79",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: spaces around `=` (we use new style guidelines even if it doesn't match with surrounding code)",
      "created_at": "2021-09-28T02:27:36Z",
      "updated_at": "2021-09-28T02:45:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717174612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717174612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717176321",
      "pull_request_review_id": 764909236,
      "id": 717176321,
      "node_id": "PRRC_kwDOABII584qvz4B",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 73,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `user's`",
      "created_at": "2021-09-28T02:32:29Z",
      "updated_at": "2021-09-28T02:45:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717176321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717176321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717177012",
      "pull_request_review_id": 764909236,
      "id": 717177012,
      "node_id": "PRRC_kwDOABII584qv0C0",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == wo1:\n+                assert_equal(tx['blocktime'], cur_time + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days)\n+            elif tx['address'] == wo2:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days)\n+            elif tx['address'] == wo3:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days + ten_days)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 127,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: unnecessary `, ` after the last argument",
      "created_at": "2021-09-28T02:34:38Z",
      "updated_at": "2021-09-28T02:45:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717177012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717177012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717177145",
      "pull_request_review_id": 764909236,
      "id": 717177145,
      "node_id": "PRRC_kwDOABII584qv0E5",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == wo1:\n+                assert_equal(tx['blocktime'], cur_time + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days)\n+            elif tx['address'] == wo2:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days)\n+            elif tx['address'] == wo3:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days + ten_days)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importaddress(wo1, rescan=False)\n+        restorewo_wallet.importaddress(wo2, rescan=False)\n+        restorewo_wallet.importaddress(wo3, rescan=False)\n+\n+        # check user has 0 balance and no transaction",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 134,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `transactions`",
      "created_at": "2021-09-28T02:35:08Z",
      "updated_at": "2021-09-28T02:45:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717177145",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717177145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717412449",
      "pull_request_review_id": 765219699,
      "id": 717412449,
      "node_id": "PRRC_kwDOABII584qwthh",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 78,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c308ceba suggestion, maybe use `COINBASE_MATURITY` constant\r\n\r\n<details><summary>example diff</summary><p>\r\n\r\n```diff\r\n@@ -7,6 +7,7 @@\r\n \r\n import time\r\n \r\n+from test_framework.blocktools import COINBASE_MATURITY\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_equal\r\n@@ -61,7 +62,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n         assert_equal(minernode.getblockcount(), 200)\r\n \r\n         # generate some btc to create transactions and check blockcount\r\n-        initial_mine = 101\r\n+        initial_mine = COINBASE_MATURITY + 1\r\n         minernode.generatetoaddress(initial_mine, m1)\r\n         assert_equal(minernode.getblockcount(), initial_mine + 200)\r\n \r\n@@ -75,7 +76,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n         miner_wallet.sendtoaddress(wo1, 10)\r\n \r\n         # generate blocks and check blockcount\r\n-        minernode.generatetoaddress(100, m1)\r\n+        minernode.generatetoaddress(COINBASE_MATURITY, m1)\r\n         assert_equal(minernode.getblockcount(), initial_mine + 300)\r\n \r\n         # synchronize nodes and time\r\n@@ -88,7 +89,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n         miner_wallet.sendtoaddress(wo2, 5)\r\n \r\n         # generate blocks and check blockcount\r\n-        minernode.generatetoaddress(100, m1)\r\n+        minernode.generatetoaddress(COINBASE_MATURITY, m1)\r\n         assert_equal(minernode.getblockcount(), initial_mine + 400)\r\n \r\n         # synchronize nodes and time\r\n@@ -101,7 +102,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n         miner_wallet.sendtoaddress(wo3, 1)\r\n \r\n         # generate more blocks and check blockcount\r\n-        minernode.generatetoaddress(100, m1)\r\n+        minernode.generatetoaddress(COINBASE_MATURITY, m1)\r\n         assert_equal(minernode.getblockcount(), initial_mine + 500)\r\n```\r\n\r\n</p></details>\r\n",
      "created_at": "2021-09-28T09:50:34Z",
      "updated_at": "2021-09-28T10:48:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717412449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717412449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717413240",
      "pull_request_review_id": 765219699,
      "id": 717413240,
      "node_id": "PRRC_kwDOABII584qwtt4",
      "diff_hunk": "@@ -271,8 +271,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * abandoned is an indication that it is not safe to be considered abandoned.\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n+     *\n+     * Should be called with rescanning_old_block set to true, if the transaction is\n+     * not discovered in realtime, but during a rescan of old blocks.",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 6,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b92d5522 nit, if you retouch\r\n```suggestion\r\n     * not discovered in real time, but during a rescan of old blocks.\r\n```",
      "created_at": "2021-09-28T09:51:31Z",
      "updated_at": "2021-09-28T10:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717413240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717413240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717417780",
      "pull_request_review_id": 765219699,
      "id": 717417780,
      "node_id": "PRRC_kwDOABII584qwu00",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 113,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c308ceba can omit the comment line 113 that is redundant with line 114, and:\r\n```suggestion\r\n        self.log.info('Check transaction times')\r\n```\r\n\r\nsame for lines 149-150 below",
      "created_at": "2021-09-28T09:57:19Z",
      "updated_at": "2021-09-28T10:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717417780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717417780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717420720",
      "pull_request_review_id": 765219699,
      "id": 717420720,
      "node_id": "PRRC_kwDOABII584qwviw",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 108,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c nit, can omit the comment on line 107 and move it into line 108\r\n```suggestion\r\n        self.log.info('Check user's final balance and transaction count')\r\n```",
      "created_at": "2021-09-28T10:01:04Z",
      "updated_at": "2021-09-28T10:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717420720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717420720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717874691",
      "pull_request_review_id": 765842391,
      "id": 717874691,
      "node_id": "PRRC_kwDOABII584qyeYD",
      "diff_hunk": "@@ -503,7 +503,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! @return true if wtx is changed and needs to be saved to disk, otherwise false\n     using UpdateWalletTxFn = std::function<bool(CWalletTx& wtx, bool new_tx)>;\n \n-    CWalletTx* AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx=nullptr, bool fFlushOnClose=true);\n+    CWalletTx* AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx=nullptr, bool fFlushOnClose=true, bool rescanning_old_block=false);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 32,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "22b9a92cd42c7ea84feea041e70906df709dbe79",
      "in_reply_to_id": 717174612,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T18:54:28Z",
      "updated_at": "2021-09-28T18:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717874691",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717874691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717878368",
      "pull_request_review_id": 765847323,
      "id": 717878368,
      "node_id": "PRRC_kwDOABII584qyfRg",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 73,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": 717176321,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T18:59:38Z",
      "updated_at": "2021-09-28T18:59:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717878368",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717878368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717878892",
      "pull_request_review_id": 765848033,
      "id": 717878892,
      "node_id": "PRRC_kwDOABII584qyfZs",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == wo1:\n+                assert_equal(tx['blocktime'], cur_time + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days)\n+            elif tx['address'] == wo2:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days)\n+            elif tx['address'] == wo3:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days + ten_days)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 127,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": 717177012,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:00:22Z",
      "updated_at": "2021-09-28T19:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717878892",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717878892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717879367",
      "pull_request_review_id": 765848688,
      "id": 717879367,
      "node_id": "PRRC_kwDOABII584qyfhH",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == wo1:\n+                assert_equal(tx['blocktime'], cur_time + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days)\n+            elif tx['address'] == wo2:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days)\n+            elif tx['address'] == wo3:\n+                assert_equal(tx['blocktime'], cur_time + ten_days + ten_days + ten_days)\n+                assert_equal(tx['time'], cur_time + ten_days + ten_days + ten_days)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importaddress(wo1, rescan=False)\n+        restorewo_wallet.importaddress(wo2, rescan=False)\n+        restorewo_wallet.importaddress(wo3, rescan=False)\n+\n+        # check user has 0 balance and no transaction",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 134,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "c308ceba94e0d8fced7cf70ec0227f7f0d80cf8c",
      "in_reply_to_id": 717177145,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:01:03Z",
      "updated_at": "2021-09-28T19:01:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717879367",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717879367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717880927",
      "pull_request_review_id": 765850860,
      "id": 717880927,
      "node_id": "PRRC_kwDOABII584qyf5f",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 78,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": 717412449,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:03:18Z",
      "updated_at": "2021-09-28T19:03:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717880927",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717880927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717884480",
      "pull_request_review_id": 765856089,
      "id": 717884480,
      "node_id": "PRRC_kwDOABII584qygxA",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 113,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": 717417780,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:08:38Z",
      "updated_at": "2021-09-28T19:08:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717884480",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717884480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717885920",
      "pull_request_review_id": 765857966,
      "id": 717885920,
      "node_id": "PRRC_kwDOABII584qyhHg",
      "diff_hunk": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        initial_mine = 101\n+        minernode.generatetoaddress(initial_mine, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days)\n+        usernode.setmocktime(cur_time + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(cur_time + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')",
      "path": "test/functional/wallet_transactiontime_rescan.py",
      "position": null,
      "original_position": 108,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": 717420720,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:10:43Z",
      "updated_at": "2021-09-28T19:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717885920",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717885920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717895536",
      "pull_request_review_id": 765870630,
      "id": 717895536,
      "node_id": "PRRC_kwDOABII584qyjdw",
      "diff_hunk": "@@ -271,8 +271,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * abandoned is an indication that it is not safe to be considered abandoned.\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n+     *\n+     * Should be called with rescanning_old_block set to true, if the transaction is\n+     * not discovered in realtime, but during a rescan of old blocks.",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 6,
      "commit_id": "240ea294d5e899a906f213f039b21e94c24d6018",
      "original_commit_id": "b92d5522782a8d56f71f9ed4d04dbb068b9d65e6",
      "in_reply_to_id": 717413240,
      "user": {
        "login": "BitcoinTsunami",
        "id": 75384375,
        "node_id": "MDQ6VXNlcjc1Mzg0Mzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/75384375?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinTsunami",
        "html_url": "https://github.com/BitcoinTsunami",
        "followers_url": "https://api.github.com/users/BitcoinTsunami/followers",
        "following_url": "https://api.github.com/users/BitcoinTsunami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinTsunami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinTsunami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinTsunami/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinTsunami/orgs",
        "repos_url": "https://api.github.com/users/BitcoinTsunami/repos",
        "events_url": "https://api.github.com/users/BitcoinTsunami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinTsunami/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done locally, not pushed yet",
      "created_at": "2021-09-28T19:25:34Z",
      "updated_at": "2021-09-28T19:25:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r717895536",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717895536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    }
  ]
}