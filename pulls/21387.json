{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
    "id": 586692506,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTg2NjkyNTA2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21387",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21387.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21387.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
    "number": 21387,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "p2p: Refactor sock to add I2P fuzz and unit tests",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Change the networking code and the I2P code to be fully mockable and use `FuzzedSocket` to fuzz the I2P methods `Listen()`, `Accept()` and `Connect()`.\r\n\r\nAdd a mocked `Sock` implementation that returns a predefined data on reads and use it for a regression unit test for the bug fixed in https://github.com/bitcoin/bitcoin/pull/21407.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2021-03-08T11:17:22Z",
    "updated_at": "2022-06-09T15:16:52Z",
    "closed_at": "2021-03-30T15:41:38Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-03-30T15:41:38Z",
    "merge_commit_sha": "f9e86d89660002d3dd17211d8b030a47b95d2fa2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vasild:i2p_tests",
      "ref": "i2p_tests",
      "sha": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 211824,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:22:48Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1b6c463e033f861561d1a46ccf7eec069bbac09f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 344,
    "deletions": 87,
    "changed_files": 12,
    "commits": 8,
    "review_comments": 33,
    "comments": 15
  },
  "events": [
    {
      "event": "labeled",
      "id": 4420734634,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0MjA3MzQ2MzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4420734634",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T11:18:44Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 4420734635,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0MjA3MzQ2MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4420734635",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T11:18:44Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 792687216,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjY4NzIxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792687216",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T11:20:05Z",
      "updated_at": "2021-03-08T11:20:05Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-792687216",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "reviewed",
      "id": 606194599,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MTk0NTk5",
      "url": null,
      "actor": null,
      "commit_id": "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-606194599",
      "submitted_at": "2021-03-08T11:25:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "reviewed",
      "id": 606203859,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MjAzODU5",
      "url": null,
      "actor": null,
      "commit_id": "ed7af727d36734874234d30a8f02cdb8506cef55",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-606203859",
      "submitted_at": "2021-03-08T11:43:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4421074440,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQyMTA3NDQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4421074440",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T12:41:56Z"
    },
    {
      "event": "reviewed",
      "id": 606256672,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MjU2Njcy",
      "url": null,
      "actor": null,
      "commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-606256672",
      "submitted_at": "2021-03-08T12:52:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "commented",
      "id": 792944472,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mjk0NDQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792944472",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T17:46:12Z",
      "updated_at": "2021-03-08T17:46:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nThanks for improving `FuzzedSock` with `connect`, `getsockopt` and `MSG_PEEK` (`recv`)  support! :)\r\n\r\nVery happy to see the I2P code being thoroughly fuzzed before landing in a release! \"Fuzz before release\" is a nice high bar I think we should try to aim for going forward for new features :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-792944472",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "reviewed",
      "id": 606605336,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2NjA1MzM2",
      "url": null,
      "actor": null,
      "commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-606605336",
      "submitted_at": "2021-03-08T18:53:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "commented",
      "id": 793009873,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzAwOTg3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793009873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T19:23:21Z",
      "updated_at": "2021-03-23T00:06:00Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21506 (p2p, refactor: make NetPermissionFlags an enum class by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-793009873",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4426659649,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQyNjY1OTY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4426659649",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-09T09:35:01Z"
    },
    {
      "event": "commented",
      "id": 793642544,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzY0MjU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793642544",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-09T09:53:22Z",
      "updated_at": "2021-03-09T09:53:22Z",
      "author_association": "MEMBER",
      "body": "`a6c20d2b8...933d181a8`: avoid calling `memcpy()` with `NULL` argument even if `size` is `0`",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-793642544",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "commented",
      "id": 795334306,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTMzNDMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795334306",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-10T12:17:48Z",
      "updated_at": "2021-03-10T12:20:41Z",
      "author_association": "MEMBER",
      "body": "Saw this OOM error three times, but only with  `../qa-assets/fuzz_seed_corpus/` (git pulled the latest head)\r\n\r\n<details><summary>fuzz output</summary><p>\r\n\r\n```\r\n$ FUZZ=i2p src/test/fuzz/fuzz ../qa-assets/fuzz_seed_corpus/\r\nINFO: Seed: 2309095707\r\nINFO: Loaded 1 modules   (642728 inline 8-bit counters): 642728 [0x55bbf8e17668, 0x55bbf8eb4510), \r\nINFO: Loaded 1 PC tables (642728 PCs): 642728 [0x55bbf8eb4510,0x55bbf9882f90), \r\nINFO:   237105 files found in ../qa-assets/fuzz_seed_corpus/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 237105 min: 1b max: 3986616b total: 4147898382b rss: 359Mb\r\n#4096\tpulse  cov: 1461 ft: 1820 corp: 8/29b exec/s: 2048 rss: 445Mb\r\n#8192\tpulse  cov: 1862 ft: 2571 corp: 23/136b exec/s: 2048 rss: 520Mb\r\n#16384\tpulse  cov: 2655 ft: 4120 corp: 38/278b exec/s: 2340 rss: 659Mb\r\n#32768\tpulse  cov: 2749 ft: 5425 corp: 81/926b exec/s: 2730 rss: 722Mb\r\n#65536\tpulse  cov: 2813 ft: 6711 corp: 132/2841b exec/s: 2849 rss: 722Mb\r\n#131072\tpulse  cov: 2911 ft: 8428 corp: 169/7173b exec/s: 2730 rss: 722Mb\r\n==16390== ERROR: libFuzzer: out-of-memory (used: 2191Mb; limit: 2048Mb)\r\n   To change the out-of-memory limit use -rss_limit_mb=<N>\r\n\r\nLive Heap Allocations: 89301481 bytes in 242997 chunks; quarantined: 245829231 bytes in 30252 chunks; 1909049 other chunks; total chunks: 2182298; showing top 95% (at most 8 unique contexts)\r\n22746576 byte(s) (25%) in 237105 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c23aac in fuzzer::ReadCorpora(std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&, std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6eaac)\r\n    #3 0x55bbf4c23672 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6e672)\r\n    #4 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #5 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n21499328 byte(s) (24%) in 12 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #3 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n16777216 byte(s) (18%) in 1 allocation(s)\r\n    #0 0x55bbf4d28c3d in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d73c3d)\r\n    #1 0x55bbf4e228c5 in __gnu_cxx::new_allocator<uint256>::allocate(unsigned long, void const*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:115:27\r\n    #2 0x55bbf4e228c5 in std::allocator_traits<std::allocator<uint256> >::allocate(std::allocator<uint256>&, unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:460:20\r\n    #3 0x55bbf4e228c5 in std::_Vector_base<uint256, std::allocator<uint256> >::_M_allocate(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:346:20\r\n    #4 0x55bbf575d27a in std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:635:34\r\n    #5 0x55bbf575cdd2 in std::vector<uint256, std::allocator<uint256> >::resize(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:940:4\r\n    #6 0x55bbf575c623 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup(unsigned int) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:344:15\r\n    #7 0x55bbf59809e6 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:368:16\r\n    #8 0x55bbf59809e6 in InitScriptExecutionCache() /home/jon/projects/bitcoin/bitcoin/src/validation.cpp:1468:44\r\n    #9 0x55bbf607ba7f in BasicTestingSetup::BasicTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/test/util/setup_common.cpp:110:5\r\n    #10 0x55bbf4dc2187 in std::_MakeUniq<BasicTestingSetup const>::__single_object std::make_unique<BasicTestingSetup const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/unique_ptr.h:962:34\r\n    #11 0x55bbf4dbe382 in std::unique_ptr<BasicTestingSetup const, std::default_delete<BasicTestingSetup const> > MakeNoLogFileContext<BasicTestingSetup const>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/./test/util/setup_common.h:170:12\r\n    #12 0x55bbf4fe4723 in initialize_i2p() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/i2p.cpp:17:39\r\n    #13 0x55bbf4d2f80c in void std::__invoke_impl<void, void (*&)()>(std::__invoke_other, void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #14 0x55bbf4d2f80c in std::enable_if<is_invocable_r_v<void, void (*&)()>, void>::type std::__invoke_r<void, void (*&)()>(void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #15 0x55bbf4d2f80c in std::_Function_handler<void (), void (*)()>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #16 0x55bbf531c54c in std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #17 0x55bbf66a3c92 in initialize() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:44:5\r\n    #18 0x55bbf66a51cd in LLVMFuzzerInitialize /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:70:5\r\n    #19 0x55bbf4c218ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6c8ac)\r\n    #20 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #21 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n16777216 byte(s) (18%) in 1 allocation(s)\r\n    #0 0x55bbf4d28c3d in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d73c3d)\r\n    #1 0x55bbf4e228c5 in __gnu_cxx::new_allocator<uint256>::allocate(unsigned long, void const*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:115:27\r\n    #2 0x55bbf4e228c5 in std::allocator_traits<std::allocator<uint256> >::allocate(std::allocator<uint256>&, unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:460:20\r\n    #3 0x55bbf4e228c5 in std::_Vector_base<uint256, std::allocator<uint256> >::_M_allocate(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:346:20\r\n    #4 0x55bbf575d27a in std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:635:34\r\n    #5 0x55bbf575cdd2 in std::vector<uint256, std::allocator<uint256> >::resize(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:940:4\r\n    #6 0x55bbf575c623 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup(unsigned int) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:344:15\r\n    #7 0x55bbf5759dc2 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:368:16\r\n    #8 0x55bbf5759dc2 in (anonymous namespace)::CSignatureCache::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/script/sigcache.cpp:80:25\r\n    #9 0x55bbf5759dc2 in InitSignatureCache() /home/jon/projects/bitcoin/bitcoin/src/script/sigcache.cpp:100:36\r\n    #10 0x55bbf607ba6f in BasicTestingSetup::BasicTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/test/util/setup_common.cpp:109:5\r\n    #11 0x55bbf4dc2187 in std::_MakeUniq<BasicTestingSetup const>::__single_object std::make_unique<BasicTestingSetup const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/unique_ptr.h:962:34\r\n    #12 0x55bbf4dbe382 in std::unique_ptr<BasicTestingSetup const, std::default_delete<BasicTestingSetup const> > MakeNoLogFileContext<BasicTestingSetup const>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/./test/util/setup_common.h:170:12\r\n    #13 0x55bbf4fe4723 in initialize_i2p() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/i2p.cpp:17:39\r\n    #14 0x55bbf4d2f80c in void std::__invoke_impl<void, void (*&)()>(std::__invoke_other, void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #15 0x55bbf4d2f80c in std::enable_if<is_invocable_r_v<void, void (*&)()>, void>::type std::__invoke_r<void, void (*&)()>(void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #16 0x55bbf4d2f80c in std::_Function_handler<void (), void (*)()>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #17 0x55bbf531c54c in std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #18 0x55bbf66a3c92 in initialize() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:44:5\r\n    #19 0x55bbf66a51cd in LLVMFuzzerInitialize /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:70:5\r\n    #20 0x55bbf4c218ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6c8ac)\r\n    #21 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #22 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n8388608 byte(s) (9%) in 1 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c2f807 in fuzzer::GetSizedFilesFromDir(std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > const&, std::Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >*) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c7a807)\r\n    #3 0x55bbf4c23aac in fuzzer::ReadCorpora(std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&, std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6eaac)\r\n    #4 0x55bbf4c23672 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6e672)\r\n    #5 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #6 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n\r\n\r\nartifact_prefix='./'; Test unit written to ./oom-da39a3ee5e6b4b0d3255bfef95601890afd80709\r\nBase64: \r\nSUMMARY: libFuzzer: out-of-memory\r\n```\r\n</p></details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-795334306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "commented",
      "id": 796982444,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5Njk4MjQ0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796982444",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T19:23:50Z",
      "updated_at": "2021-03-11T19:23:50Z",
      "author_association": "MEMBER",
      "body": "Had the same OOM issue today with another fuzz PR, so I'm proceeding on the assumption that it's a regression that is not related to this PR.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-796982444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "reviewed",
      "id": 610167469,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwMTY3NDY5",
      "url": null,
      "actor": null,
      "commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Built and reviewed each commit up to 34c199db11b36eee91e56cdd046c090f62da18d6. \r\n\r\nIn the 3rd commit, \"avoid repeated errors,\" it looks like the commit message should be \"to retry the operation.\" e.g. s/to/the/",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-610167469",
      "submitted_at": "2021-03-11T21:02:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "commented",
      "id": 797314843,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzMxNDg0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797314843",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T08:12:20Z",
      "updated_at": "2021-03-12T08:12:20Z",
      "author_association": "MEMBER",
      "body": "> Had the same OOM issue today with another fuzz PR\r\n\r\nCan you reproduce it? E.g. `FUZZ=i2p src/test/fuzz/fuzz ./oom-da39a3ee5e6b4b0d3255bfef95601890afd80709`",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797314843",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "commented",
      "id": 797492455,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzQ5MjQ1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797492455",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T13:32:24Z",
      "updated_at": "2021-03-12T13:32:24Z",
      "author_association": "MEMBER",
      "body": "```\r\nINFO: Seed: 3949145381\r\nINFO: Loaded 1 modules   (643885 inline 8-bit counters): 643885 [0x56188117c288, 0x5618812195b5), \r\nINFO: Loaded 1 PC tables (643885 PCs): 643885 [0x5618812195b8,0x561881bec888), \r\nsrc/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: oom-da39a3ee5e6b4b0d3255bfef95601890afd80709\r\nExecuted oom-da39a3ee5e6b4b0d3255bfef95601890afd80709 in 0 ms\r\n***\r\n*** NOTE: fuzzing was not performed, you have only\r\n***       executed the target code on a fixed set of inputs.\r\n***\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797492455",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "reviewed",
      "id": 610813459,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwODEzNDU5",
      "url": null,
      "actor": null,
      "commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 933d181a8c0c41318204b1657765d582418a80a1 modulo a few thoughts/questions above",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-610813459",
      "submitted_at": "2021-03-12T14:21:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4451737854,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ1MTczNzg1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4451737854",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T16:59:53Z"
    },
    {
      "event": "commented",
      "id": 797627661,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzYyNzY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797627661",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T17:07:25Z",
      "updated_at": "2021-03-12T17:07:25Z",
      "author_association": "MEMBER",
      "body": "`933d181a8...7c6fc2de5`: address suggestions and also fuzz the `IsConnected()` method of `Sock` / `FuzzedSock`.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797627661",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4451825024,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ1MTgyNTAyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4451825024",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T17:19:32Z"
    },
    {
      "event": "commented",
      "id": 797636166,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzYzNjE2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797636166",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T17:20:58Z",
      "updated_at": "2021-03-12T17:20:58Z",
      "author_association": "MEMBER",
      "body": "`7c6fc2de5...23c861d6f`: fix Windows CI",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797636166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "commented",
      "id": 797680919,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzY4MDkxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797680919",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T18:50:54Z",
      "updated_at": "2021-03-12T18:50:54Z",
      "author_association": "MEMBER",
      "body": "re-ACK 23c861d6ff995b7e6034d4bec6af2f6a3d595dca",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797680919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "labeled",
      "id": 4463995206,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NjM5OTUyMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4463995206",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T11:37:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjA1YzQ5YWRlNzI5MzExYTBmNDM4OGExMDk1MzBmZjhkMGVkMWY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b05c49ade729311a0f4388a109530ff8d0ed1f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b05c49ade729311a0f4388a109530ff8d0ed1f9",
      "tree": {
        "sha": "a1c7de169f42543e66144f3c6b9bcb6cae97e72a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1c7de169f42543e66144f3c6b9bcb6cae97e72a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a1c7de169f42543e66144f3c6b9bcb6cae97e72a\nparent 1b6c463e033f861561d1a46ccf7eec069bbac09f\nauthor Vasil Dimov <vd@FreeBSD.org> 1614870333 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899205 +0100\n\nfuzz: implement unimplemented FuzzedSock methods\n\nWe want `Get()` to always return the same value, otherwise it will look\nlike the `FuzzedSock` implementation itself is broken. So assign\n`m_socket` a random number in the `FuzzedSock` constructor.\n\nThere is nothing to fuzz about the `Get()` and `Release()` methods, so\nuse the ones from the base class `Sock`.\n\n`Reset()` is just setting our socket to `INVALID_SOCKET`. We don't want\nto use the base `Reset()` because it will close `m_socket` and given\nthat our `m_socket` is just a random number it may end up closing a real\nopened file descriptor if it coincides with our random `m_socket`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQqkUACgkQVN8G9ktV\ny7+8jh/+NzkKXPjaJ+ZIIKUULB+lg9KdA9cl7TrMQtImPbUqTqUs8BJYOQYxXO06\nm/9EnrV0wAE4sQ0Q76d89qEtOoZhX5Xuiyu4hhLKdcVEO96f4aUSmn7hsSyzK9AS\n9WCcQ5DNwIr/73H6iMvO25fyFVYKDS88aQwLTcjYQLv30wqK9QijKL5X2jUmYJUU\nLX+acl+qUXzdJXrAV7ts01ejaWMHzYNZ95PiEY+oKI5CN2SdSq4NfiRqFiUgt+ZE\nPz+/3wdcCaSVA9amNmm+INbZUdZW/QveyRqW05aOOB/+yEEAJ8sjR3evnOAab2ym\n9J7cptxJ5bHgixznA3MW6B+LN2rCOnZx+s2PnmjUJbP3n07ROvAARKXZZ+ibRsB8\nSu6EXXO38ulte71Gvnqy5LDCpF0i2Mgn2G7v/8vjdHMWMfzGIxxx/IVkjr+CrmGC\nbdYZhJXXCIZ7/giCjKSmPjeZBhL3wzcB3nUJCb2Duty+hz/CsdCAQpIfLfKg/L6W\nSP3A+yc6Jvi4Mkj15K6ZgQuHfYn5IywH25EL4zs/K+t6a9RwTmNrHRZ7TxS+PCPk\noGtPeoaYwH/V+A1u+z2FgRjkSchx8hdrMkXLbDSlyciz4oZo8UeAxRQdp8cZWqXI\n8IUs7P3Dkb8uURsK/JRCjNUal8fs7dbRTgtigj83harovDDlWRF7E8RPGV2iTBbw\n/TF9hGokUS1qhsY9qcATwQdfm9Ww1H7qlr4uNn023ZT8gQ+I7GwNYiZtkjk1WhUO\ntfftMJ+iDKiMCjv0aDleDAlBvt/anaMl7mg8uRx41dfl0HRzwjLM5hmSdgoZ6OSm\nXrfl0/A0bOmhqvok+I+opZZtMdIwAgUnprNmIzv69E/gU+25+vTTKGoRF4x5d4Gl\nvqxSi/NPKZBGku6j0kDgQ3RoDp3MZWmlNWlnU/cj51YmSbv/L6uEt4ovn0Po17XF\nCS7YI3hrDVSeSt+KEU+0A90Hp+tnbl6UMYm/urq8noDPX526pu5rsn88fWmeNn64\noIq50pfGDbZFvgDmZOgY9gzPVh9AfShhSEBcbxBnrWAzP1WUhNLfg6M4+icXbxij\nP9O/M9t+oXUy1sIMeN+lBJFRCMPAIlcopQS0oFSPRYFX6UeARvhQA1LrW9SHgoHV\nFzvO3r5CHbPumCZZDbjPBKDFwLAW5xOJjbnKHlg5JWt89aVgnoCZrTo3bm+3464i\nB0yaqErHi7lq3iUcOl0OVzd26jWHtE61CMLjIPPdnq9x4EbeEPv1G8P96FqrjgR5\nVjhJuwyxofopgYvZZFdbXns2vUs08mgHL7Jil13LyRzvzpFMy0rngCX/pauqL/qb\nV1sjVGZz8rxX9eIgV+axpzJk8g/V7A==\n=pEdS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b6c463e033f861561d1a46ccf7eec069bbac09f",
          "sha": "1b6c463e033f861561d1a46ccf7eec069bbac09f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1b6c463e033f861561d1a46ccf7eec069bbac09f"
        }
      ],
      "message": "fuzz: implement unimplemented FuzzedSock methods\n\nWe want `Get()` to always return the same value, otherwise it will look\nlike the `FuzzedSock` implementation itself is broken. So assign\n`m_socket` a random number in the `FuzzedSock` constructor.\n\nThere is nothing to fuzz about the `Get()` and `Release()` methods, so\nuse the ones from the base class `Sock`.\n\n`Reset()` is just setting our socket to `INVALID_SOCKET`. We don't want\nto use the base `Reset()` because it will close `m_socket` and given\nthat our `m_socket` is just a random number it may end up closing a real\nopened file descriptor if it coincides with our random `m_socket`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:53:25Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-04T15:05:33Z"
      },
      "sha": "9b05c49ade729311a0f4388a109530ff8d0ed1f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDg4ZjgzZDAxNmU3ZWJiNmU2YWE1NTllNjMyNmZhMGVmMGQ2Mjgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3088f83d016e7ebb6e6aa559e6326fa0ef0d6282",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3088f83d016e7ebb6e6aa559e6326fa0ef0d6282",
      "tree": {
        "sha": "adc9fcd476361d270d69c237b5eda97e08edf6dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adc9fcd476361d270d69c237b5eda97e08edf6dc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree adc9fcd476361d270d69c237b5eda97e08edf6dc\nparent 9b05c49ade729311a0f4388a109530ff8d0ed1f9\nauthor Vasil Dimov <vd@FreeBSD.org> 1614952249 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899205 +0100\n\nfuzz: extend FuzzedSock::Recv() to support MSG_PEEK\n\nA conforming `recv(2)` call is supposed to return the same data on a\ncall following `recv(..., MSG_PEEK)`. Extend `FuzzedSock::Recv()` to do\nthat.\n\nFor simplicity we only return 1 byte when `MSG_PEEK` is used. If we\nwould return a buffer of N bytes, then we would have to keep track how\nmany of them were consumed on subsequent non-`MSG_PEEK` calls.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQqkUACgkQVN8G9ktV\ny78hwR/+LNNAIMlQZ0x/pKF3GB9Ua2uKcLNhd78a7tpmWIkrJ0BYziwhzfYRU3ok\nsKKZwcvlxHJKO3XUOrxGaCttk2SV9bUQ6iDFNm1R8Y9T0yLhharEBKFaPgIHOF0W\njw7oolp+vbynysOhSzxJNPjaVO4YSM4uNaMhbPagCRJljn8Re/930hY3cGszHc36\n0LTw+ZcU4YyVe8uJcuiv9EVtTSymK6DDsbgIbS5TvS4bec+wKmgKAFdH3yg8xK7i\nKOfTUWqVmq7fTNFX5YmTkQjImKdtSxdmEX7OOd10Je8hXiupyCE6cIYEToIaTqcb\nb61DKq72e4eQwIuFs8RHMTtlLuT7KSQtbKkdC8zoi+hUFZyJnWQfMKX3t39GCvml\ne0KVmyvHac8IXI4zbMWQpyp/bauZQZaH2MlayPbZVabJozyTNpDWuowL1UJdMI+m\nhTm7ygYwAYCvedVL6gxpwr6A/DksQCL9tO228BstVyf3PjX0sKP1BZ0TJaDk6Iln\n8zRJnmFyKgluYy0vJSBMoXSNbO65y/GPjqVKB+Irhp7fa1nOvIh85lrm3DmQ9Wpj\nUA/x3rP1fiK1kmXblsmppS24Gv6EDsr79wZD2WNi5M77KlLA06Z777euaX6aaO2k\nXhJf89rOwPUAQTSAahfUPtEnYTPY28ZPjYruTbRggn9yG6hP/JnasliwWfVNmDgM\n+l3J0DbMFdizwKbLxDSEQUC8wylOZj0PbaMiojEOkJvoS0SF1ZFjIV5HNWP23tl4\nfisWKWK54g8iiQc19DRtTEbtl880CR2QknVCetj3l2iTxqzooYslk8yBFjdFu3R0\nUABp+oIYlDTvp/8GKn8CAXoawJ3d9FE+rLHRuMNpzN8Rru48GtJs4er+l7hEHu6M\nY9HqBeoHvTN/LpTtKi1ZlTKCcFn0RvhJrMVYyZQCvBKNjjvkUGFqH+uJQmY8teWI\nrpmKCt75LZUO8C8lwEWHQNZCcLkF+ivwWVH9qItk6JKz16A0WTca3u3Yrzb89hmO\nLBCdDHuiqrQ3rafd7V+NG5vbg6hTh9DN9+UvS4JxxDdH0b5bAg9B+7uQu72oISgz\nLoZ93z3w/7qGyGByFByFj2CI71mtbsUfi/n42H+h6rNrnBLy+PlSsZqnoi4ITj6y\nImKGl3EWyehIzowiRtiGgv8Cs3ozVUFRGpnUm/Uu2SEp2PBRpD8A6/SK5szonbNp\nvTKXLHtW76F+2zBxmYQVIDYTl0bHUwGL8ImNJRPlWFdrLu8TX3c6/qWvyQb5VQ7b\ntvs8GTuQ2X2hLu9BxKjvCLiZKr9p/eLD7OyUDJD2KqyYJQOtJ2QCNzTDNXcx1Esd\n2eitTwVZnM2Lz8jY+JTT0M89ICodfg==\n=suIT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b05c49ade729311a0f4388a109530ff8d0ed1f9",
          "sha": "9b05c49ade729311a0f4388a109530ff8d0ed1f9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b05c49ade729311a0f4388a109530ff8d0ed1f9"
        }
      ],
      "message": "fuzz: extend FuzzedSock::Recv() to support MSG_PEEK\n\nA conforming `recv(2)` call is supposed to return the same data on a\ncall following `recv(..., MSG_PEEK)`. Extend `FuzzedSock::Recv()` to do\nthat.\n\nFor simplicity we only return 1 byte when `MSG_PEEK` is used. If we\nwould return a buffer of N bytes, then we would have to keep track how\nmany of them were consumed on subsequent non-`MSG_PEEK` calls.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:53:25Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-05T13:50:49Z"
      },
      "sha": "3088f83d016e7ebb6e6aa559e6326fa0ef0d6282"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTg4N2Q0OWIyYjM5ZTU5ZDdjY2U4ZTlkNWI4OWMyMWFkNjk0Zjhi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b",
      "tree": {
        "sha": "f2150d6983ae652da621ed6ef2b396838ca5be45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2150d6983ae652da621ed6ef2b396838ca5be45"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f2150d6983ae652da621ed6ef2b396838ca5be45\nparent 3088f83d016e7ebb6e6aa559e6326fa0ef0d6282\nauthor Vasil Dimov <vd@FreeBSD.org> 1615200144 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899206 +0100\n\nfuzz: avoid FuzzedSock::Recv() repeated errors with EAGAIN\n\nIf `recv(2)` returns an error (`-1`) and sets `errno` to a temporary\nerror like `EAGAIN` a proper application code is expected to retry the\noperation.\n\nIf the fuzz data is exhausted, then `FuzzedSock::Recv()` will keep\nreturning `-1` and setting `errno` to the first element of\n`recv_errnos[]` which happened to be `EAGAIN`. This may continue forever\nor cause the fuzz test to run for a long time before some higher level\napplication \"receive timeout\" is triggered.\n\nThus, put `ECONNREFUSED` as first element of `recv_errnos[]`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQqkYACgkQVN8G9ktV\ny7+GiCAApqXP6VeHe+x5qzFmOCvZqGSMJ71M2ftAc7W6rQkbSguT0fMi1sZyc/MU\nB7XL5So22ibBLmIn3e81kkf3oMuCQKmJkDn6uYGrZYvI2Sqr8mEkGH4Yl85SvV7N\nJpg51CSXt482fMKFTHb3bR15XMJpw49YYuBGX4HtPJW7DM7uS9uhcB8ktbV/BD4G\nS8hHu63q1ujwLw+LLZ6mcJ3Ak8c6zfaguVi2xrS/NnRuuiVimrqR/MYJoILWAWTT\n1jEHd0fI893hs/kW7hZvOp8Ph9sKFRrnJ0Pga+k0bRxdhiTnI4tp4a/uo/9D3aTR\nHiThPCaJd1hkuDz3ptORH0dBnAT0hziaAVYVlDV/TJqeNRsCnajY+uLizCEKjMoq\n+agNusHbGOvfXhJWnmb1bfOdftCC4wBQCQJ6E6QzoOJTdZzwRpCWPYZupsud5zdn\nspl3AG/qjJjJnpBZd/3G/ezOL5Ys4vDfKSdWSzMgT8q4lu60Ywza4gWbj9WT5V47\ndFbVHIQpi3PTC4fquvJuU0IvsXgTaR0UKAEJ0Qn5iNK81KGBxc8s4SRsWJWSbCuD\nb1xjzb/KqpEnWlXvn/VnntnfTls7qpPkq9aHuJG1Yo9jFDn2cMXd/fi4dJ5iSB2W\nt2YU8wHbb/vXVxbvqGYhXCZjFgmE/+GXE1Hp8HLFY18H71JJ3golVOLiNXaiHtiJ\n2QGafcKGBoU3LWOjlgaBn+o2wwzVt0/8sbH3yPimFOzQp8hYHy89W+CJT5H/wTVF\neSDhCuCbiCNAEapQ6bnSZfBIZN7Dtk1WRxFkB/VF0LimSn28hYYKaR5feFDXQ8iS\nZhGLWqNb+FNJhrfUSPs3GhA3IA2t0VEAW61or+m6Y1yJbtfaTleDrejjDnc/zI0j\n5/+QJD5SM0V4RqYdXC1tmS54f4fvtIwo7fvrlRCfYq/50w5o4/OmOpMWykMK+NOb\nZEq+WW7XGMjnoKzWK/AL4zHlLdBIUhaNPkNCLv8jhJOgiDS4k9YZlwK7n3v5IKos\n7s+QrvQeGcGf4P8ofIHtzmDpObonbUDl20sJYb50+fDH1m/r3akobxyWJLWUMSjK\nvMWZxWHLCoqGKXmgRNeJDZWMvXSjeiFCpp3inSCfAUkiaGRjWZXh6KJp4jKmZ7mt\nlG2yY7s4JfUfqP8b48m9l338+11H0FhDBYTFCNT3+GT7eCmzghJDX6whrSo+GyY8\nhx1v3wPVGftNSGGh4cXelibKfoVTYRLF9m/nXlmt3upTuz6cLBLChM5bxQmUdQ0p\nEAE9RRmsmGH86acGjDr16udyB7Le/mJs+H8rPDt84FJRkcCLIEqfCrIBSQtiy+Pq\nCLaErKlKRynYUXNVkp1+yPAddIlefw==\n=nKzq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3088f83d016e7ebb6e6aa559e6326fa0ef0d6282",
          "sha": "3088f83d016e7ebb6e6aa559e6326fa0ef0d6282",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3088f83d016e7ebb6e6aa559e6326fa0ef0d6282"
        }
      ],
      "message": "fuzz: avoid FuzzedSock::Recv() repeated errors with EAGAIN\n\nIf `recv(2)` returns an error (`-1`) and sets `errno` to a temporary\nerror like `EAGAIN` a proper application code is expected to retry the\noperation.\n\nIf the fuzz data is exhausted, then `FuzzedSock::Recv()` will keep\nreturning `-1` and setting `errno` to the first element of\n`recv_errnos[]` which happened to be `EAGAIN`. This may continue forever\nor cause the fuzz test to run for a long time before some higher level\napplication \"receive timeout\" is triggered.\n\nThus, put `ECONNREFUSED` as first element of `recv_errnos[]`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:53:26Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-08T10:42:24Z"
      },
      "sha": "5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTg2MTEwMGY4NWZlZjc3YjAwZjU1ZGNkZjAxZmZiNGEyYTExMmQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5861100f85fef77b00f55dcdf01ffb4a2a112d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5861100f85fef77b00f55dcdf01ffb4a2a112d8",
      "tree": {
        "sha": "1dfc171b9c334247cd65a994bb771a2f58468b44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1dfc171b9c334247cd65a994bb771a2f58468b44"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1dfc171b9c334247cd65a994bb771a2f58468b44\nparent 5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b\nauthor Vasil Dimov <vd@FreeBSD.org> 1614958183 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899206 +0100\n\nnet: add connect() and getsockopt() wrappers to Sock\n\nExtend the `Sock` class with wrappers to `connect()` and `getsockopt()`.\n\nThis will make it possible to mock code which uses those.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQqkYACgkQVN8G9ktV\ny78aNx//TwLoLk9MQ12lEDFHaOw8XXHy8YwdsRa2NDSR2nUM8BKgNWOy1IkkIxHN\ncyH+4T7YKu9sQIKOq8d3x+UK+/zW82Y0s4DX2lJ/ooFpMMk17lJw41ye0y4gCcR+\nR0FRsiy+ywAyZ9zk7/trnvM2gpnMlwDKJPeVAdzYQ3enCU/7bssByo9rXQqXYmNp\npl11heTGyGhXZb4xxZvdAIokUL7q2qoPFEsGKqylEZCLoWrJ/4viah+9txswL7qu\nmgK4lkJOABwo3v4RE2D0/8ocHDzx+0dn/gWQfuMTsCyF1aRCctUF6L5ZdePoDi7q\n5mYT0DUTtzyyhSGqTe6jM4oSiX2OqruFSVASiHpDNazC+wvlTspcT53y/xxVwKwP\nafuYHeqCwm/OBYLsjDUFrxcl2zuD1wesh6uCQ+MI4A0A6pDD1mQeucmoicmt6bT0\n+ZPKX8GypP9IdmfCOypc+op7ey8Y09waiSndwKdXDBtmSsVReLnm8w+oH614RJEs\naGbhYxjuTTrumj9hzK5R/Co1HMfOsjsfLGj+bI4mxI5QsyBIoxl5jrUh1gT1n5WD\nr4dub5kbhpmuaogLbVZoJGahPlyIVMPxB9L47KuJiGgBVYoEkAPHwB9LfW3X+kei\n/PXK97vR5brdfUEsOrdWyxEBlU3NG1QFujfph4H8t3gedeSxNvmSOflSjwWX/FOr\nnL+s94oiWuw6uHvNy72s1jzWsh0DI8sxEZWz8LC4PQwQ1fbo+L0XWMi7uKEjNUz2\nj6VWsBAVaLsxWH3SDcE3TNHL2bn4KlTp2qBahf3eTouTF5LiptZEodpSDMfX9Qj2\n6KeG4+aoq33mWz/A5MgbGvkt3NUSMkWXUWnFooC3EuCk28Vaqgk8/MvvQ5/rWff4\nQa76npTqqWU3sAo+6UCZZSV9eYr8V/dyLe9z9WZTTEJrvIZBY5tW3giRUuo50Ar4\nnKqg4TPATHyblOBb9gwKxNNWLChI8YEL0vjtvognapmhX+JcZJMP9oepAwBMZ13/\nY7NGzASOGccH+fDxuODcmZegoV1qWUtwBAlX4uGPKbwkdwPqdIRaJJDxja2ANi5X\neHMlPqxBJFO1gL6Ur0GxyJ5iqsBqcR/jGoBXAErTBifBsnkKrtx1MiYW6oEcSt8F\nHWn1BUAPnyiqBcrWxoi+DTHcGlNbveIw/+O6SwkKltkoIYzsdr6F8r3Eg1aEZrAI\nTungxh7n1BmSt7cKm0bbaiwreAS06btTajM1s6BPyO34klWmw4AnCOQqgFDRM4ZD\nCyqdjpeXrEmfmbjJrdKQY5DfAGaRT/5vjcM+hhJpZlD4k4pspKF0zrFQwfV8TBwk\nPKmCeGX3HW4EowUJoMFzyKd3ihg3Mw==\n=7nSN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b",
          "sha": "5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5a887d49b2b39e59d7cce8e9d5b89c21ad694f8b"
        }
      ],
      "message": "net: add connect() and getsockopt() wrappers to Sock\n\nExtend the `Sock` class with wrappers to `connect()` and `getsockopt()`.\n\nThis will make it possible to mock code which uses those.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:53:26Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-05T15:29:43Z"
      },
      "sha": "b5861100f85fef77b00f55dcdf01ffb4a2a112d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmQzNjBiNWE4OGQ5MDU3YjZjMDliNjFjZDY5ZTQyNmM3YTI0MTJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d360b5a88d9057b6c09b61cd69e426c7a2412d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82d360b5a88d9057b6c09b61cd69e426c7a2412d",
      "tree": {
        "sha": "8a60f973c2155fa870c30e7919e869cdaee36d0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a60f973c2155fa870c30e7919e869cdaee36d0c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8a60f973c2155fa870c30e7919e869cdaee36d0c\nparent b5861100f85fef77b00f55dcdf01ffb4a2a112d8\nauthor Vasil Dimov <vd@FreeBSD.org> 1614960119 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899503 +0100\n\nnet: change ConnectSocketDirectly() to take a Sock argument\n\nChange `ConnectSocketDirectly()` to take a `Sock` argument instead of a\nbare `SOCKET`. With this, use the `Sock`'s (possibly mocked) methods\n`Connect()`, `Wait()` and `GetSockOpt()` instead of calling the OS\nfunctions directly.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQq3IACgkQVN8G9ktV\ny7/Gux//VmnlmUbFlabKWQStusMa4ymDQHSj0qoIPvbQ5Xc5r47tU1F+XJa7RZ3Q\nmyG/E84HU7+iT+SwV8LvnAL4+9/PtIufe9jblqVSOZKt1Mk0XXcLLwFOdV2i4lh3\ne5p4+PMXqmA10dwwVCzg+crs1fcHWduzBiGmuWL/9efTxrjOnEzorREeJ1nHjkIc\nzB7ntX+eGzxF5Iv78/24TcGQyvgaXHTVx2miwuq8WcM7E2AmkjtrppW6FHtQLJop\nzSea1UNszkZd9/GGluUR5HWiEdGpjkFlsuNNxfeSWOt3zCAcYl254x3+pw9WU9vn\n7jm0vOZzliXACYwJorO2+95Sv3gWztcPjBTqwA448pB0xStz+jrUFa5AizTONchh\n/c2Y+0+IO1IZLm3NHBecBECw5ex59qMgFf7Yxa/i0jXevMmLcOHHHDvYEEKWV/xE\nhGSO1DbHUZI240g691URxrotCXKAAavve+8L3Kdemm5I/L88dj8vvtU1BnmPCQa6\nYxYlmOGIUCgiwdFY8eaVgZ3z+87RoH+Os4g09+EaWggsJd/3mkDQ2pzQ//TyIMGs\nfflQ2c8uk4RPBC3yZv0j1/gys7L61Z+/txG7h7q7bpcYJRDyJlAHDLhioh62cM6W\nLfJnXw983MRiogbhV4aWdfOs0w3dmFcwM0yR91AkqxEINByw9/0+KaTBtC9GhJlY\nUu90G6F+YHnWGCUm7Zfibh+8rQ4WgnqP6THsC56BP2ClGE6ojtcGjdpccaQ/R85T\nwubywL7YiTCZnz9sIUz+ADOCPeTWihu+AmG9IEYbUV7FkBo5tAxOuRvQlXvYByzZ\nDQ0GYlsXNn7rwxgFs+pEtuPHlui1K4R/7ZEsjQnolMb+ftH1nP+DTbeZz8jtGs5C\nYx7fGmxK2Sr6dFkUzKX0B1VGJ13gLQnCHAV8/rouw4OqR8UoFFBjJwjYIwGiwy0d\nv7H0e86hhbyzXOV1KT3o40eYsZZQAflmZ5uzxUNbg8fs861R2Ok+hhfVTg8IdO8I\n5lhG4Ar+zA5mu94O2fytnkFKtXkUJqPiHdTOqNCGPC0WzCdwkT1xTMk/hvWfmduC\n7CYjNebQw1x4mBzLeuTRRYaOENpOeMUYHcPSrLXnU1Nv8L9FzMykdwvqDaduyRyv\na5BFmKKJ2aZWRlY/iEwmgyi4M2CS7T7tlinmTVGMhzkydbMKXh/677ziCugiXhQV\nlm5YzVOPdhE+nUDk4pwiLsbV70KP73utdCwPs+aGCUxf208U67dHe/m/4RyjaMff\nGQvagVRKQ0i2IsLLYqI7T1SXCcFjvUjlBU2bl9Wl0rP3/AXPTiJgCs8cF8aiQmyi\nYg3qkJ1FPKn2Hj8/xWxaezN6kInfJA==\n=SMaC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5861100f85fef77b00f55dcdf01ffb4a2a112d8",
          "sha": "b5861100f85fef77b00f55dcdf01ffb4a2a112d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5861100f85fef77b00f55dcdf01ffb4a2a112d8"
        }
      ],
      "message": "net: change ConnectSocketDirectly() to take a Sock argument\n\nChange `ConnectSocketDirectly()` to take a `Sock` argument instead of a\nbare `SOCKET`. With this, use the `Sock`'s (possibly mocked) methods\n`Connect()`, `Wait()` and `GetSockOpt()` instead of calling the OS\nfunctions directly.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:58:23Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-05T16:01:59Z"
      },
      "sha": "82d360b5a88d9057b6c09b61cd69e426c7a2412d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTQ3ZTQ0ZGUwY2JkNzllOTlkODgzNDQzYTlhYzQ0MWQ4YzY5NzEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9947e44de0cbd79e99d883443a9ac441d8c69713",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9947e44de0cbd79e99d883443a9ac441d8c69713",
      "tree": {
        "sha": "8d60e4c979aa3fe1cf383e108a4b35b42df63614",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d60e4c979aa3fe1cf383e108a4b35b42df63614"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8d60e4c979aa3fe1cf383e108a4b35b42df63614\nparent 82d360b5a88d9057b6c09b61cd69e426c7a2412d\nauthor Vasil Dimov <vd@FreeBSD.org> 1614864709 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615899558 +0100\n\ni2p: use pointers to Sock to accommodate mocking\n\nChange the types of `i2p::Connection::sock` and\n`i2p::sam::Session::m_control_sock` from `Sock` to\n`std::unique_ptr<Sock>`.\n\nUsing pointers would allow us to sneak `FuzzedSock` instead of `Sock`\nand have the methods of the former called.\n\nAfter this change a test only needs to replace `CreateSock()` with\na function that returns `FuzzedSock`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQq6kACgkQVN8G9ktV\ny78XIB//V36BwAW4aXgxblNUZrArXeP7YGKm7Th12wMcF5EGBW9OooATgxcaLLIX\nA0Wxs+OJLMUlrBgNB4WFzLIzUAdoTBwIvhewmyqy630tI5YshsNg6l2sv4yVrT2+\nfawn20pkvzucR4pfSEeW1jymWOryuivIQ1U4NPsYykCMWi6ol9GshsQfyKWdMUtX\nLENkg5q4orq9Z6aNFtXHQB0n0oTKOK/n/JWWp8543Fbf/XPWXxqN67qTwu+yLL5k\nyhUa/ZG0jRKp+jt8xIlrFINDxIvJVOEWNt07lUZEOyAvBznzyz6bE8gEe6ggz2wY\nZtPiN81BfnF9t/VIgDmLpd8q6WSnw7fHjlOyYXlL6ugNd6m/gDom+S3ZW0Bi48h7\n98Rst4IdXYz4dI5Gj2RJUlamThmfgghRjTYYcXInHwtd4XwBtkeY0do2jqpa5Uuw\ngeVqlqGXkb2fNUT+Z0HF+S/db9mvT3imXoJgpSmbFikhRvhyux7R18eU6cQ9ViQn\nxI1l/8UgdVIO54JKCfDw4er1jbs73HPxL2AU9r8FEmoKrcNv3q0JbBLB8RbOHYq9\nu89C/GzBfoQZ5FHmtQXKkJb6JhQgyan19Jjeeyj1PDw7fFDQzQ88ZJjqbqvGYz0q\nW+fnt614n5gut/iMvd8nkz19E6HxHbBWxPO4s4s4ZKuMVWLqXzh+GMOOHnXuhB/K\niQUz+ZsjDhTavFdUpc9QnjWhSbwsVTz2/DRROeGVuj+hTW4x+ahgrG2SwBC1iCUE\nMwFWjLlxze+cLYs9Eo9e7YJ7UGjtsqxVB0VYVxM90XAcJNIMvGgWNY9pGnC8gUsi\nM1rP3oJeBgTaafUusdlyIpo3m0N5zCbopqWP3yx7+00pQ9swJkbhFKoEZChlSDBk\n5nw/IJST/Mmqxg9bzWhWIDBIHK77bTc9/zP86GUBoEFaDzGKHFNyM5Rx7bTXpwkM\nQ3X8YkXBDuX2u8dP4BWLNqFi2AbR605W46/s9RfUWEHQomOj4B4tiG946hh/5IHL\npZVO3o0UEvlDEM5PNdiffXVz0jInfhMV0oNH571d43nsjzPlk3ugFvGaWk0mUEXf\nzeL3yk/f3rWwVmFLD9rUZTA/7zFs3KsHhTSne/opz9CI/7GAJB7uZwwLgtcsebNB\nj6lWbUQN+ird4/v7dml5PRnGhFJPWhVMBeVwyYKH8yYYh5cFbT79aofu76hG8dMb\nAH7JdVKk69Q4dW+ZTJRFk0/zqzetJ3IEk8sGjvybZQzFZW1kNTqI3NJmkOzMRjvD\nvqgGcwxllM6kuERNmVHUlFxOix7wewgMQCPpY5e3SNJo1W+5N7gV4Rlt5iUoBL12\nfCUNlz2saUs8g10f7AwHTWXVfGM9RQ==\n=KjJg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d360b5a88d9057b6c09b61cd69e426c7a2412d",
          "sha": "82d360b5a88d9057b6c09b61cd69e426c7a2412d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82d360b5a88d9057b6c09b61cd69e426c7a2412d"
        }
      ],
      "message": "i2p: use pointers to Sock to accommodate mocking\n\nChange the types of `i2p::Connection::sock` and\n`i2p::sam::Session::m_control_sock` from `Sock` to\n`std::unique_ptr<Sock>`.\n\nUsing pointers would allow us to sneak `FuzzedSock` instead of `Sock`\nand have the methods of the former called.\n\nAfter this change a test only needs to replace `CreateSock()` with\na function that returns `FuzzedSock`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T12:59:18Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-04T13:31:49Z"
      },
      "sha": "9947e44de0cbd79e99d883443a9ac441d8c69713"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDhhYzc3OTcwODMyMmUxMjM1ZTgyM2VkZmM5YzhmNmUyZGQ2NWU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d8ac779708322e1235e823edfc9c8f6e2dd65e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d8ac779708322e1235e823edfc9c8f6e2dd65e4",
      "tree": {
        "sha": "a9e4f8fafdac51d85a708a2de9331e243a07874e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9e4f8fafdac51d85a708a2de9331e243a07874e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a9e4f8fafdac51d85a708a2de9331e243a07874e\nparent 9947e44de0cbd79e99d883443a9ac441d8c69713\nauthor Vasil Dimov <vd@FreeBSD.org> 1614868331 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615903118 +0100\n\nfuzz: add tests for the I2P Session public interface\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQuY4ACgkQVN8G9ktV\ny79RGSAApSCukeAp7RJ9sgvzgx9FSQAh/Ku74BdPseTZpJeryhDd+n4qE2TuzocH\n8mNC+9Zqnig64BgZ+RYn3WG1f+W3fE3GTzbm/bL0wPa9mYR3rNz1n0jAvQWnLhj/\nrLWhtoevsIEpH1/F46pcWrW79OxFcwsEDDtUyANvgPPJS5csTPbn/wGHaXJ3cnN9\nTARwl2VnT/hgrPAavJNYxpE+Fg3gp4aOOmYycgFyat8FIRN6m/xLzD9C8ifR6B96\nBBmMP+rs4nRNtH+MYeliu+SshINCZk1IHQadh+TX0A2lXcnXWDlV9ogr8Bp8SHFO\nYfzXmPL1FaP8qwFkSEFGoPunB2xvnKaKQXOVcznbbhDs0I2kRbLFfyZEXKTHcmRd\nNWDGwZl/zx1GNZsM/TuyZwj0SbhX0/kkrB2ljhaRTEby1MiulfBaX8kJ5L0MIEd0\niKpYjLXun3jVkr+WMoF28KMRqLIuL8/MtzAL/1iNb/qlbsgz1tyJhjhZfBtl5hLk\nLY20nZIOaA7IBjQGeE5iRJcXYwnj59oU3EG6qHjf1Dy7nmvWcuZskwM3Wr0iMjaz\nF51FVCJ/rLVDUGxUnlyARDMRjdpYV6PxlV6lU87FaRLuz9nucnDhydauYI0LPRCO\nCaDxDKoxZUuhH6U7Tqno+lXIbDPBFuA/P48iCA+crdBoh13SlJ8ITIGcFhmQ8D0d\nescee1giv5VDH3xYbrRReFoD/IC7zXEJTSjYW8aELWa0pnqdM/W9rpCko291VMQL\nwltDTjMlCN6KnWdc/gpoJbWBj8doRObo68Ixp3X1MAiT6+FxMeqYq3Uv3sCvza03\nYphouly5Nxz12A9Ce7YZX/t2dLLdkFadqBKU4gSDROVRVggKukgxQOTe9KTPYqP2\nX+KHcePgwg/tWGdljQJJHHfbR97zdQEW14V4mXJaBeV/r8yhZnws3w6VFpdKK7if\nTaI/nJIrpfXgPqhGFF+YPJxXBjuv9SVAOzkSeoUuzQIxAILReDD3BuOKf/FFocDm\nrdTlH06Tv7kQzK2CsdP1xmc7xuNF3gUeR7EBBNnd4y0yewk/ns/kzup+7wgXlSXC\n2vD5Q2eqt5Y1RxNn/yYTaHbbyfP1Ae0gFRDjmOOkLdVCCYdPHBvs7EfPNhfGZC4S\nDAOnFbcMEvfEVjiCN1vEoAYthTREg6fSU7jUwFlLWq5etPin8yRZPcfHQG9dScDD\nBQhDFsTfeGPzipdJAvaI96e9paYKm8HVsQzwkyTgO6RGyIvHqR1yRik2M8H+hAMK\ncJRkiw5JzUINNH4O01BjDO/DoBxgZEXpekmq5EORnkxAU0H7IhxC/WsfBsKgvvaV\nLyOZ+UOkSnyfYlnQKOh08daoJ+NT1A==\n=RbV1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9947e44de0cbd79e99d883443a9ac441d8c69713",
          "sha": "9947e44de0cbd79e99d883443a9ac441d8c69713",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9947e44de0cbd79e99d883443a9ac441d8c69713"
        }
      ],
      "message": "fuzz: add tests for the I2P Session public interface",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T13:58:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-04T14:32:11Z"
      },
      "sha": "2d8ac779708322e1235e823edfc9c8f6e2dd65e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDMxNmEzN2NiMDJjZjhhOWE4YjJjYmQ0ZDcxNTNmZmE1N2U3ZWM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "tree": {
        "sha": "19db70f0951663b02a31139f8afe47cc1d2c7f0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19db70f0951663b02a31139f8afe47cc1d2c7f0f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 19db70f0951663b02a31139f8afe47cc1d2c7f0f\nparent 2d8ac779708322e1235e823edfc9c8f6e2dd65e4\nauthor Vasil Dimov <vd@FreeBSD.org> 1615476442 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1615903118 +0100\n\ntest: add I2P test for a runaway SAM proxy\n\nAdd a regression test for https://github.com/bitcoin/bitcoin/pull/21407.\n\nThe test creates a socket that, upon read, returns some data, but never\nthe expected terminator `\\n`, injects that socket into the I2P code and\nexpects `i2p::sam::Session::Connect()` to fail, printing a specific\nerror message to the log.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmBQuY4ACgkQVN8G9ktV\ny7/Y+R//YZ95D+Cvt45oTQ9KjquL8aAxEyMAMAGYVhEw7Vtq/vPShj4LPFIE43dx\nfQQ1TBU9Ny7nns0jHjfGKy2SZdZMrJJDlejN4K6EWNjN+h0yrvTDlVlGXJKd9xEw\noXt44XEXzntnGoYJ4nTEyIDZTJB+9P3YBSa2CSOotrY8za2afnkVLRG8bCil/i7/\niPbgRNj89cFJCyRscmqi4EZs0jFJVZVqpvcBqFSHVDCOewr8DDohUAxBWf1x2jqO\n0hxBms4ZTVrftANfXl56AbuGdpTozECiYxYW4c0atYkKCR7ZBmus8KjErKbiysxY\n0s2twTNy0BBRnWgFBtkFvmFrrm0xVGpsRXFVSIdwH5RIYVMs7u3p8GJzEU59R2Fw\nU+fg9quNEd0+scI6Ngm7yz08VRfE3jrvyjD/hWeCWQfEh5ZTWf9IvmW1J7W7fn1t\nK8w6v3+LTHrHZTnZUIA7/8g7nMN941Kahh0aTNcJSKW5QEEdbKlYLi1kXRNqxKBb\n4x0p4NDLEP19bX0m/JDPStYSTe95WA3U33I89XmF/jVoQFILmGK78oKVcA8ZMRSx\nTliDH5bZMF0wKuwa1/B1FKBN5Pc5NnXKHE2zRGrNTeeTSSb/JfZaVdI0ekDR0xqJ\nAyTy9Ge3ut46c7+Yi2F7p9l9ChubDF989z7dt4e/NoVaVcFGAAb5KyXtc1IB2ctf\nBIvGlX8cR7kIG3XENOahZdIYdPQovOwIOSpIqjY5vn02HV/l9+COhdtWyXj/pYwp\nv5SYryVykUdmZXXlnlJxtSZiStua7DtqZ4aNuoBCfyL0NuJ6MdmwvBYaRu7PUHC6\nDPpBEObxslIROCSZ6O46jrfRblt4bhAgHg6E5Ad2BZ35JkVUpHii/1+2pq0hGEwI\nXAODBJRx0i8RRGrew0iduhbsIbxbVFRuv4N6wrbGfX9hDDP0Ht1L4XA771ZFlfUf\n/gGO+ppwUc1PaXc7FXuDZykWXa44jlu/fZ3fI4l8WMMSKFG2/XojOE7tndSLdGXi\neqJZ0Ch+hjKtSyyZwoe+FeftvZv56EUT5jjKx6gLqJqW0440HPVzlwfXnubc8Vke\nW5vm3/Txk/2rPm+rE4hf6Go2TEt2A6WLQXSa9PlnSQ4YR84MQusAl0XB2jaVmriX\n6OZ+O3EZSSeWw6eRuy7WjcbJO6ITkxl1PW1QsaSrQ8m3+qAIQJOkYXBqQUQWPs+w\no+j8S01VTuBOVsP2NCjTX3gH/mVlZySJAFLKY6tYtvi3ImQFrCvW2Y7QRbs2hx/O\n0ewTAFVQ6YCIv9mQm90hbRdnXytDmpBHrtjxHbNIRZxM+p23MAM5w9AqlBeZ+5qe\nE4cDvKBiN+lP/VeLqYRhmQCcBGkISg==\n=Nski\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d8ac779708322e1235e823edfc9c8f6e2dd65e4",
          "sha": "2d8ac779708322e1235e823edfc9c8f6e2dd65e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d8ac779708322e1235e823edfc9c8f6e2dd65e4"
        }
      ],
      "message": "test: add I2P test for a runaway SAM proxy\n\nAdd a regression test for https://github.com/bitcoin/bitcoin/pull/21407.\n\nThe test creates a socket that, upon read, returns some data, but never\nthe expected terminator `\\n`, injects that socket into the I2P code and\nexpects `i2p::sam::Session::Connect()` to fail, printing a specific\nerror message to the log.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-16T13:58:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-03-11T15:27:22Z"
      },
      "sha": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4464726277,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ2NDcyNjI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4464726277",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T14:00:13Z"
    },
    {
      "event": "commented",
      "id": 800283578,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDI4MzU3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800283578",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T14:02:18Z",
      "updated_at": "2021-03-16T14:02:18Z",
      "author_association": "MEMBER",
      "body": "`23c861d6f...40316a37c`:\r\n\r\n* rebase due to conflicts\r\n* expect that `Sock` methods `RecvUntilTerminator()` and `SendComplete()` could throw an exception when using fuzzed socket. After all a fuzzed socket may return an error at any time.\r\n* add a regression test for the bug fixed in https://github.com/bitcoin/bitcoin/pull/21407.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-800283578",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "renamed",
      "id": 4464982308,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDQ2NDk4MjMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4464982308",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T14:41:14Z",
      "rename": {
        "from": "fuzz: test the I2P Session public interface",
        "to": "test: add I2P fuzz and unit tests"
      }
    },
    {
      "event": "unlabeled",
      "id": 4465427544,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ2NTQyNzU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4465427544",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T15:52:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 613436532,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEzNDM2NTMy",
      "url": null,
      "actor": null,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for adding the regression test. \r\n\r\nre-ACK 40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5 reviewed `git range-diff 01bb3afb 23c861d 40316a3` and the new unit test commit, debug built, ran unit tests, ran bitcoind with an I2P service and network operation with seven I2P peers (2 in, 5 out) is looking nominal",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-613436532",
      "submitted_at": "2021-03-16T16:02:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "unlabeled",
      "id": 4474334903,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3NDMzNDkwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474334903",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:50:42Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "unlabeled",
      "id": 4474334905,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3NDMzNDkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474334905",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:50:42Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 4474345605,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NzQzNDU2MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474345605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:53:23Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 4474345607,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NzQzNDU2MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474345607",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:53:23Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 4474345610,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NzQzNDU2MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474345610",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:53:23Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 4474359853,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3NDM1OTg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474359853",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:57:05Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 4474359854,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3NDM1OTg1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474359854",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:57:05Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 4474362771,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NzQzNjI3NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4474362771",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-18T07:57:45Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 803478375,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQ3ODM3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803478375",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T23:31:16Z",
      "updated_at": "2021-03-20T23:31:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK 40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5\r\n\r\nGreat fuzzing work @vasild!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803478375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "mentioned",
      "id": 4486115674,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ4NjExNTY3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4486115674",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T23:31:16Z"
    },
    {
      "event": "subscribed",
      "id": 4486115675,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0ODYxMTU2NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4486115675",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T23:31:16Z"
    },
    {
      "event": "renamed",
      "id": 4488226897,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDQ4ODIyNjg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4488226897",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T06:55:16Z",
      "rename": {
        "from": "test: add I2P fuzz and unit tests",
        "to": "p2p: Refactor sock to add I2P fuzz and unit tests"
      }
    },
    {
      "event": "commented",
      "id": 803812017,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzgxMjAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803812017",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T06:55:36Z",
      "updated_at": "2021-03-22T06:55:36Z",
      "author_association": "MEMBER",
      "body": "(Changed title, because this is not test-only)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803812017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "commented",
      "id": 803812074,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzgxMjA3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803812074",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T06:55:42Z",
      "updated_at": "2021-03-22T06:55:42Z",
      "author_association": "MEMBER",
      "body": "Concept ACK 40316a37cb",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803812074",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21387"
    },
    {
      "event": "review_requested",
      "id": 4526822100,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50NDUyNjgyMjEwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4526822100",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T11:01:28Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 624418617,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0NDE4NjE3",
      "url": null,
      "actor": null,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5\r\n\r\nI like how this gets rid of a `#ifdef USE_POLL` in the connect logic.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-624418617",
      "submitted_at": "2021-03-30T15:39:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "merged",
      "id": 4528623631,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDUyODYyMzYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4528623631",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f9e86d89660002d3dd17211d8b030a47b95d2fa2",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9e86d89660002d3dd17211d8b030a47b95d2fa2",
      "created_at": "2021-03-30T15:41:38Z"
    },
    {
      "event": "closed",
      "id": 4528623671,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDUyODYyMzY3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4528623671",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T15:41:38Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4528636480,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTI4NjM2NDgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4528636480",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T15:43:35Z"
    },
    {
      "event": "referenced",
      "id": 4529895833,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1Mjk4OTU4MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4529895833",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "47d2859a47cc239c81cad87721324f7dc8e484a2",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/47d2859a47cc239c81cad87721324f7dc8e484a2",
      "created_at": "2021-03-30T19:27:48Z"
    },
    {
      "event": "referenced",
      "id": 6077153176,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAFqOf-Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6077153176",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "de38a2d80d0f41371a77841ad348511f6d0d5c02",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/de38a2d80d0f41371a77841ad348511f6d0d5c02",
      "created_at": "2022-02-15T18:11:21Z"
    },
    {
      "event": "reviewed",
      "id": 1001035309,
      "node_id": "PRR_kwDOABII5847qpYt",
      "url": null,
      "actor": null,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#pullrequestreview-1001035309",
      "submitted_at": "2022-06-09T09:42:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
    },
    {
      "event": "referenced",
      "id": 9018181236,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZhoZ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9018181236",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77ec46822904faf04922d5e09be65a3f90be69ac",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/77ec46822904faf04922d5e09be65a3f90be69ac",
      "created_at": "2023-04-16T19:58:54Z"
    },
    {
      "event": "referenced",
      "id": 9018183623,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZho_H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9018183623",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "380149f2c3be4f913799ea073540dc52f07636c8",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/380149f2c3be4f913799ea073540dc52f07636c8",
      "created_at": "2023-04-16T20:00:40Z"
    },
    {
      "event": "referenced",
      "id": 9021462715,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZuJi7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9021462715",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bde3fa91299749c8123c1fd6f0761b4fb6370f84",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/bde3fa91299749c8123c1fd6f0761b4fb6370f84",
      "created_at": "2023-04-17T08:30:19Z"
    },
    {
      "event": "referenced",
      "id": 9021471812,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZuLxE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9021471812",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b449c6dc60e5ff0f8bdc2371358a2e0451e3873a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b449c6dc60e5ff0f8bdc2371358a2e0451e3873a",
      "created_at": "2023-04-17T08:31:22Z"
    },
    {
      "event": "referenced",
      "id": 9021525563,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZuY47",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9021525563",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "308095791df1fbb17f518e8ee2d1b4d3a91fea52",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/308095791df1fbb17f518e8ee2d1b4d3a91fea52",
      "created_at": "2023-04-17T08:37:09Z"
    },
    {
      "event": "referenced",
      "id": 9021548566,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZuegW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9021548566",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ab652a7a18d232088b60f7ae09b39b4c7fd54a51",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/ab652a7a18d232088b60f7ae09b39b4c7fd54a51",
      "created_at": "2023-04-17T08:39:37Z"
    },
    {
      "event": "referenced",
      "id": 9025731068,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIZ-bn8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9025731068",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a3fac549fbe5a368d1d7e4b223775eeac2fe51a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8a3fac549fbe5a368d1d7e4b223775eeac2fe51a",
      "created_at": "2023-04-17T14:59:34Z"
    },
    {
      "event": "referenced",
      "id": 9026715305,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIaCL6p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9026715305",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6d012ced63c1fcf409d6d535de59dc710da7c3d0",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/6d012ced63c1fcf409d6d535de59dc710da7c3d0",
      "created_at": "2023-04-17T16:22:10Z"
    },
    {
      "event": "referenced",
      "id": 9096405291,
      "node_id": "REFE_lADOABII584xJEcJzwAAAAIeMCEr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9096405291",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b095ac573b89d6898168bb9fda2abf7622ddec09",
      "commit_url": "https://api.github.com/repos/Empact/bitcoin/commits/b095ac573b89d6898168bb9fda2abf7622ddec09",
      "created_at": "2023-04-25T20:37:15Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589351441",
      "pull_request_review_id": 606194599,
      "id": 589351441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM1MTQ0MQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "path": "src/netbase.cpp",
      "position": 40,
      "original_position": 48,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to reviewers: this old code was inconsistent with the events it requested depending on which function was used - it requested \"in\" or \"out\" (`POLLIN | POLLOUT`) when using `poll()` but only \"out\" when using `select()` (did not pass `fdset` as 2'nd arg to `select()`).\r\n\r\nThis is now replaced by `Sock::Wait(..., requested Sock::RECV | Sock::SEND)` which, if ends up calling `select()`, will ask it for both \"in\" and \"out\".\r\n\r\nI think this is ok.",
      "created_at": "2021-03-08T11:23:56Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589351441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589351441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": 564,
      "original_start_line": 645,
      "start_side": "LEFT",
      "line": 575,
      "original_line": 575,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589358838",
      "pull_request_review_id": 606203859,
      "id": 589358838,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM1ODgzOA==",
      "diff_hunk": "@@ -155,6 +155,8 @@ class Sock\n      * Contained socket. `INVALID_SOCKET` designates the object is empty.\n      */\n     SOCKET m_socket;\n+\n+    friend class FuzzedSock;",
      "path": "src/util/sock.h",
      "position": null,
      "original_position": 5,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "ed7af727d36734874234d30a8f02cdb8506cef55",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit in the first commit: Wouldn't it be better to change `private` to `protected`? This would allow other tests to mock `m_socket` without having to enumerate all \"friend\" test classes here",
      "created_at": "2021-03-08T11:37:43Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589358838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589358838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589360815",
      "pull_request_review_id": 606203859,
      "id": 589360815,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM2MDgxNQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "path": "src/netbase.cpp",
      "position": 40,
      "original_position": 48,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "in_reply_to_id": 589351441,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it might be good to split the non-fuzz \"refactors\" out into their own pull",
      "created_at": "2021-03-08T11:41:33Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589360815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589360815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": 564,
      "original_start_line": 645,
      "start_side": "LEFT",
      "line": 575,
      "original_line": 575,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393703",
      "pull_request_review_id": 606250305,
      "id": 589393703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5MzcwMw==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "path": "src/netbase.cpp",
      "position": 40,
      "original_position": 48,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "in_reply_to_id": 589351441,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lets see which are the non-fuzz refactors:\r\n\r\n```\r\n[7] i2p: add fuzz tests on the I2P Session public interface\r\n[6] i2p: use pointers to Sock to accommodate mocking\r\n[5] net: change ConnectSocketDirectly() to take a Sock argument\r\n[4] net: add connect() and getsockopt() wrappers to Sock\r\n[3] fuzz: avoid FuzzedSock::Recv() repeated errors with EAGAIN\r\n[2] fuzz: extend FuzzedSock::Recv() to support MSG_PEEK\r\n[1] fuzz: implement unimplemented FuzzedSock methods\r\n```\r\n\r\n`1-3` are obviously fuzz. `4` touches `FuzzedSocket`. `7` adds fuzz tests. So only `5` and `6` remain. `5` depends on the previous commits. `6` is non-fuzz, does not depend on the previous commits and can be extracted, but `7` depends on it.\r\nSo a split can be:\r\nPR-A: 6\r\nPR-B: 1-5, 7\r\n\r\nI think it is not worth to split, given that 6 is a small mechanical change.\r\n",
      "created_at": "2021-03-08T12:43:30Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": 564,
      "original_start_line": 645,
      "start_side": "LEFT",
      "line": 575,
      "original_line": 575,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393794",
      "pull_request_review_id": 606250441,
      "id": 589393794,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5Mzc5NA==",
      "diff_hunk": "@@ -155,6 +155,8 @@ class Sock\n      * Contained socket. `INVALID_SOCKET` designates the object is empty.\n      */\n     SOCKET m_socket;\n+\n+    friend class FuzzedSock;",
      "path": "src/util/sock.h",
      "position": null,
      "original_position": 5,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "ed7af727d36734874234d30a8f02cdb8506cef55",
      "in_reply_to_id": 589358838,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-08T12:43:43Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589398727",
      "pull_request_review_id": 606256672,
      "id": 589398727,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5ODcyNw==",
      "diff_hunk": "@@ -534,36 +534,37 @@ class FuzzedSock : public Sock\n {\n     FuzzedDataProvider& m_fuzzed_data_provider;\n \n+    /**\n+     * Data to return when `MSG_PEEK` is used as a `Recv()` flag.\n+     * If `MSG_PEEK` is used, then our `Recv()` returns some random data as usual, but on the next\n+     * `Recv()` call we must return the same data, thus we remember it here.\n+     */\n+    mutable std::optional<uint8_t> m_peek_data;",
      "path": "src/test/fuzz/util.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Either this should be `mutable` or the `const` qualifier should be removed from `Sock::Recv()` (and `Sock::Send()` for consistency). I don't have a strong opinion. I chose `mutable` because it is a smaller change and did not require modifying existing code.",
      "created_at": "2021-03-08T12:52:19Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589398727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589398727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 563,
      "original_line": 563,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589667320",
      "pull_request_review_id": 606605336,
      "id": 589667320,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTY2NzMyMA==",
      "diff_hunk": "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 145,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Builds cleanly at a6c20d2b88ea92, but I'm seeing a UBSan runtime error when starting the fuzzer (same error for each of 3 times):\r\n\r\n ```\r\n$ clang --version\r\nclang version 9.0.1-16 \r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\n\r\n$ FUZZ=i2p src/test/fuzz/fuzz ../qa-assets/fuzz_seed_corpus/\r\nINFO: Seed: 3673367385\r\nINFO: Loaded 1 modules   (642733 inline 8-bit counters): 642733 [0x55abe383e4c8, 0x55abe38db375), \r\nINFO: Loaded 1 PC tables (642733 PCs): 642733 [0x55abe38db378,0x55abe42a9e48), \r\nINFO:   132706 files found in ../qa-assets/fuzz_seed_corpus/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 132706 min: 1b max: 3986616b total: 1882953565b rss: 284Mb\r\n#4096\tpulse  cov: 1773 ft: 2176 corp: 11/47b exec/s: 2048 rss: 366Mb\r\n\r\ntest/fuzz/util.h:703:30: runtime error: null pointer passed as argument 2, which is declared to never be null\r\n/usr/include/string.h:44:28: note: nonnull attribute specified here\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior test/fuzz/util.h:703:30 in \r\n\r\n#8192\tpulse  cov: 2600 ft: 3813 corp: 32/219b exec/s: 2730 rss: 441Mb\r\n#16384\tpulse  cov: 2655 ft: 4890 corp: 70/750b exec/s: 2730 rss: 586Mb\r\n#32768\tpulse  cov: 2773 ft: 6429 corp: 111/2011b exec/s: 2730 rss: 649Mb\r\n#65536\tpulse  cov: 2794 ft: 7344 corp: 142/4922b exec/s: 2849 rss: 649Mb\r\n#131072\tpulse  cov: 2890 ft: 8189 corp: 162/47Kb exec/s: 2473 rss: 1271Mb\r\n#132707\tINITED cov: 2890 ft: 8189 corp: 162/47Kb exec/s: 2249 rss: 1271Mb\r\n#132896\tREDUCE cov: 2890 ft: 8189 corp: 162/46Kb lim: 14309 exec/s: 2214 rss: 1271Mb L: 13800/13800 MS: 4 ChangeBinInt-ChangeByte-ChangeByte-EraseBytes-\r\n.../...\r\n#204032\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14413 exec/s: 2147 rss: 1271Mb L: 62/2551 MS: 2 ChangeBinInt-EraseBytes-\r\n#206627\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14426 exec/s: 2152 rss: 1271Mb L: 66/2551 MS: 5 InsertByte-PersAutoDict-ChangeByte-EraseBytes-PersAutoDict- DE: \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1a\"-\"\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"-\r\n#207638\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14426 exec/s: 2162 rss: 1271Mb L: 102/2551 MS: 1 EraseBytes-\r\n```\r\n",
      "created_at": "2021-03-08T18:53:22Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589667320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589667320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 703,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590150134",
      "pull_request_review_id": 607211575,
      "id": 590150134,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDE1MDEzNA==",
      "diff_hunk": "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 145,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "in_reply_to_id": 589667320,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks! I did not see this because my `memcpy()` does not have the nonnull attribute.\r\n\r\nOff-topic: the nonnull attribute has this speciality - the compiler assumes that the parameter will never be null and may eliminate branches in the function that check for that. For example:\r\n\r\n```cpp\r\nvoid func(char* buf) __nonnull(1)\r\n{\r\n    if (buf == nullptr) {\r\n        // take action\r\n        return;\r\n    }\r\n    buf[0] = 1;\r\n}\r\n```\r\n\r\nCompiler optimization may reduce this to:\r\n\r\n```cpp\r\nvoid func(char* buf) __nonnull(1)\r\n{\r\n    buf[0] = 1;\r\n}\r\n```\r\n\r\nIt looks reasonable, given that code like `func(nullptr);` will not compile. However, if the value of the argument is determined at runtime and may still end up being `nullptr`, then the compiler has no way to detect this during compilation. So the line `buf[0] = 1;` may still be executed with `buf` being `nullptr` even though the source code checks for that just above, leading to some nice \"wtf\" moments.\r\n\r\nUbsan alleviates this.",
      "created_at": "2021-03-09T09:52:11Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r590150134",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590150134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 703,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591426204",
      "pull_request_review_id": 608640187,
      "id": 591426204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTQyNjIwNA==",
      "diff_hunk": "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 145,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "in_reply_to_id": 589667320,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. Runs without the error now.",
      "created_at": "2021-03-10T12:09:51Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r591426204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591426204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 703,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592677389",
      "pull_request_review_id": 610167469,
      "id": 592677389,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3NzM4OQ==",
      "diff_hunk": "@@ -620,8 +624,26 @@ class FuzzedSock : public Sock\n             }\n             return r;\n         }\n-        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n-            m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        std::vector<uint8_t> random_bytes;\n+        bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n+        if (m_peek_data.has_value()) {\n+            // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n+            random_bytes.assign(1, m_peek_data.value());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 77,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e944970 nit, can alternatively omit the `count` argument with an initializer list\r\n```suggestion\r\n            random_bytes.assign({m_peek_data.value()});\r\n```",
      "created_at": "2021-03-11T19:53:28Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592677389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592677389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 631,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592691628",
      "pull_request_review_id": 610167469,
      "id": 592691628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY5MTYyOA==",
      "diff_hunk": "@@ -90,6 +90,19 @@ class Sock\n      */\n     virtual ssize_t Recv(void* buf, size_t len, int flags) const;\n \n+    /**\n+     * connect(2) wrapper. Equivalent to `connect(this->Get(), addr, addrlen)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Connect(const sockaddr* addr, socklen_t addr_len) const;\n+\n+    /**\n+     * getsockopt(2) wrapper. Equivalent to\n+     * `getsockopt(this->Get(), level, opt_name, opt_val, opt_len)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const;",
      "path": "src/util/sock.h",
      "position": null,
      "original_position": 15,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3e5afb3b\r\n\r\nmember function naming: `s/Getsockopt/GetSockOpt/`\r\n\r\nnit, in the Doxygen docs: `s/unit-tested/unit tested/` lines 95 and 102\r\n",
      "created_at": "2021-03-11T20:16:40Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592691628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592691628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592695756",
      "pull_request_review_id": 610167469,
      "id": 592695756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY5NTc1Ng==",
      "diff_hunk": "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "path": "src/test/fuzz/util.h",
      "position": 109,
      "original_position": 109,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3e5afb3bf0db02ad3fc00afe431f64f3dcd0d3b1\r\n```suggestion\r\n    int Connect(const sockaddr* addr, socklen_t addr_len) const override\r\n```",
      "created_at": "2021-03-11T20:23:23Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592695756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592695756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 688,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592710461",
      "pull_request_review_id": 610167469,
      "id": 592710461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxMDQ2MQ==",
      "diff_hunk": "@@ -633,7 +633,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n     }\n \n     // Connect to the addrConnect service on the hSocket socket.\n-    if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n+    if (sock.Connect((struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "34c199db11b36eee91e56cdd046c090f62da18d6\r\n```suggestion\r\n    if (sock.Connect(reinterpret_cast<struct sockaddr*>(&sockaddr), len) == SOCKET_ERROR)\r\n```",
      "created_at": "2021-03-11T20:47:14Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592710461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592710461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592715679",
      "pull_request_review_id": 610167469,
      "id": 592715679,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxNTY3OQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "34c199db11b36eee91e56cdd046c090f62da18d6\r\n```suggestion\r\n            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, static_cast<sockopt_arg_type>(&sockerr), &sockerr_len) ==\r\n```\r\n",
      "created_at": "2021-03-11T20:56:11Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592715679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592715679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592717790",
      "pull_request_review_id": 610167469,
      "id": 592717790,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxNzc5MA==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "path": "src/netbase.cpp",
      "position": 74,
      "original_position": 82,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "34c199db11b36eee91e56cdd046c090f62da18d6 Should `sockerr` be initialized with a value?",
      "created_at": "2021-03-11T20:59:33Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592717790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592717790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593196080",
      "pull_request_review_id": 610813459,
      "id": 593196080,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzE5NjA4MA==",
      "diff_hunk": "@@ -370,12 +372,12 @@ void Session::CreateIfNotCreatedAlready()\n               m_my_addr.ToString());\n }\n \n-Sock Session::StreamAccept()\n+std::unique_ptr<Sock> Session::StreamAccept()\n {\n-    Sock sock = Hello();\n+    auto sock = Hello();",
      "path": "src/i2p.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5ac2bc1 Verified this line and line 352 compile when replaced with explicit typing and braced initialization `std::unique_ptr<Sock> sock{Hello()};` (which would save people time in looking up the type)",
      "created_at": "2021-03-12T14:04:57Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593196080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593196080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": 377,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593203017",
      "pull_request_review_id": 610813459,
      "id": 593203017,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzIwMzAxNw==",
      "diff_hunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create a fuzzed socket.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    CService sam_proxy;",
      "path": "src/test/fuzz/i2p.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "933d181a nit, `sam_proxy` here and `to` on line 43 below can both be `const` (to show intention)",
      "created_at": "2021-03-12T14:14:44Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593203017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593203017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322760",
      "pull_request_review_id": 610982731,
      "id": 593322760,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyMjc2MA==",
      "diff_hunk": "@@ -620,8 +624,26 @@ class FuzzedSock : public Sock\n             }\n             return r;\n         }\n-        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n-            m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        std::vector<uint8_t> random_bytes;\n+        bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n+        if (m_peek_data.has_value()) {\n+            // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n+            random_bytes.assign(1, m_peek_data.value());",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 77,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592677389,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-12T17:00:08Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 631,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322872",
      "pull_request_review_id": 610982898,
      "id": 593322872,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyMjg3Mg==",
      "diff_hunk": "@@ -90,6 +90,19 @@ class Sock\n      */\n     virtual ssize_t Recv(void* buf, size_t len, int flags) const;\n \n+    /**\n+     * connect(2) wrapper. Equivalent to `connect(this->Get(), addr, addrlen)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Connect(const sockaddr* addr, socklen_t addr_len) const;\n+\n+    /**\n+     * getsockopt(2) wrapper. Equivalent to\n+     * `getsockopt(this->Get(), level, opt_name, opt_val, opt_len)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const;",
      "path": "src/util/sock.h",
      "position": null,
      "original_position": 15,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592691628,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-12T17:00:18Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325238",
      "pull_request_review_id": 610986257,
      "id": 593325238,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTIzOA==",
      "diff_hunk": "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "path": "src/test/fuzz/util.h",
      "position": 109,
      "original_position": 109,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592695756,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why? It is a bit shorter without the parameter names. Omitting parameter names if they are not used I think is a good practice because it makes it obvious that they are not used.\r\n\r\nAlso, specifying parameter names and not using those parameters in the function will produce a compiler warning with `-Wunused-parameter` (which is explicitly disabled in Bitcoin Core, I guess because of so many functions that violate it that it is hard to fix).",
      "created_at": "2021-03-12T17:04:16Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 688,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325381",
      "pull_request_review_id": 610986477,
      "id": 593325381,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTM4MQ==",
      "diff_hunk": "@@ -633,7 +633,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n     }\n \n     // Connect to the addrConnect service on the hSocket socket.\n-    if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n+    if (sock.Connect((struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592710461,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-12T17:04:30Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325452",
      "pull_request_review_id": 610986602,
      "id": 593325452,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTQ1Mg==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592715679,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-12T17:04:38Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326447",
      "pull_request_review_id": 610987789,
      "id": 593326447,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNjQ0Nw==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "path": "src/netbase.cpp",
      "position": 74,
      "original_position": 82,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592717790,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think so - `getsockopt()` will set it (if it returns `0`). The previous code abused `nRet` which contained a leftover value from the call to `select()`.",
      "created_at": "2021-03-12T17:06:00Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326687",
      "pull_request_review_id": 610988169,
      "id": 593326687,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNjY4Nw==",
      "diff_hunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create a fuzzed socket.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    CService sam_proxy;",
      "path": "src/test/fuzz/i2p.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 593203017,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-03-12T17:06:25Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593335641",
      "pull_request_review_id": 610999794,
      "id": 593335641,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMzNTY0MQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592715679,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Broke the windows build. Reverted.\r\n```\r\nnetbase.cpp:663:81: error: invalid static_cast from type ‘int*’ to type ‘sockopt_arg_type’ {aka ‘char*’}\r\n  663 |                     SOL_SOCKET, SO_ERROR, static_cast<sockopt_arg_type>(&sockerr), &sockerr_len) ==\r\n      |                                                                                 ^\r\n```",
      "created_at": "2021-03-12T17:20:34Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593335641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593335641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593350667",
      "pull_request_review_id": 611019339,
      "id": 593350667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1MDY2Nw==",
      "diff_hunk": "@@ -534,36 +534,37 @@ class FuzzedSock : public Sock\n {\n     FuzzedDataProvider& m_fuzzed_data_provider;\n \n+    /**\n+     * Data to return when `MSG_PEEK` is used as a `Recv()` flag.\n+     * If `MSG_PEEK` is used, then our `Recv()` returns some random data as usual, but on the next\n+     * `Recv()` call we must return the same data, thus we remember it here.\n+     */\n+    mutable std::optional<uint8_t> m_peek_data;",
      "path": "src/test/fuzz/util.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "in_reply_to_id": 589398727,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removing `const` is not feasible (an avalanche of changes, not worth it).",
      "created_at": "2021-03-12T17:44:33Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593350667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593350667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 563,
      "original_line": 563,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593358721",
      "pull_request_review_id": 611029870,
      "id": 593358721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1ODcyMQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592715679,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We should probably use `reinterpret_cast` to signal that this is an ugly and non-portable cast (based on typedefs in `compat.h`). It doesn't have to be done in this PR. There are related cases.",
      "created_at": "2021-03-12T17:58:17Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593358721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593358721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593359156",
      "pull_request_review_id": 611030390,
      "id": 593359156,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1OTE1Ng==",
      "diff_hunk": "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "path": "src/test/fuzz/util.h",
      "position": 109,
      "original_position": 109,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592695756,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the explanation.",
      "created_at": "2021-03-12T17:58:56Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593359156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593359156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 688,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593376959",
      "pull_request_review_id": 611058652,
      "id": 593376959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM3Njk1OQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "path": "src/netbase.cpp",
      "position": 74,
      "original_position": 82,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592717790,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, it looks like `getsockopt` will set both `sockerr` and `sockerr_len`. I was curious what `sizeof` would return on an uninitialized `int` on my implementation/compiler:\r\n\r\n\r\n```c++\r\n#include <iostream>\r\n#include <sys/socket.h>\r\n\r\nint main()\r\n{\r\n    int sockerr;\r\n    socklen_t sockerr_len{sizeof(sockerr)};\r\n\r\n    std::cout << \"sockerr: \" << sockerr << '\\n';\r\n    std::cout << \"size_of(sockerr): \" << sizeof(sockerr) << '\\n';\r\n    std::cout << \"sockerr_len: \" << sockerr_len << '\\n';\r\n\r\n    return 0;\r\n}\r\n```\r\n```\r\nsockerr: 0\r\nsize_of(sockerr): 4\r\nsockerr_len: 4\r\n```",
      "created_at": "2021-03-12T18:48:52Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593376959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593376959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593615829",
      "pull_request_review_id": 611569527,
      "id": 593615829,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzYxNTgyOQ==",
      "diff_hunk": "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "path": "src/netbase.cpp",
      "position": 74,
      "original_position": 82,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "933d181a8c0c41318204b1657765d582418a80a1",
      "in_reply_to_id": 592717790,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`sizeof()` does not read the value, can be used safely without triggering any ubsan or valgrind warnings on uninitialized variables.",
      "created_at": "2021-03-13T05:33:21Z",
      "updated_at": "2021-03-16T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593615829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593615829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893296736",
      "pull_request_review_id": 1001035309,
      "id": 893296736,
      "node_id": "PRRC_kwDOABII5841PqBg",
      "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "path": "src/test/fuzz/i2p.cpp",
      "position": 51,
      "original_position": 51,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this is never reached?\r\n\r\nhttps://marcofalke.github.io/btc_cov/fuzz.coverage/src/test/fuzz/i2p.cpp.gcov.html",
      "created_at": "2022-06-09T09:42:49Z",
      "updated_at": "2022-06-09T09:42:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893296736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893296736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893611842",
      "pull_request_review_id": 1001485752,
      "id": 893611842,
      "node_id": "PRRC_kwDOABII5841Q29C",
      "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "path": "src/test/fuzz/i2p.cpp",
      "position": 51,
      "original_position": 51,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "in_reply_to_id": 893296736,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well, it would be executed, but for `Connect()` to return `true` the fuzzed sock must return some meaningful data, which I guess has a very very low chance of happening.\r\n\r\nEdit: now I remember I was considering crafting a custom fuzz-corpus data input which would contain the meaningful data at the right offsets so that `Connect()` will succeed. I gave up because that would be difficult to maintain because the binary \"magic\" corpus data would have to be adjusted every time this test is modified to add or remove calls that consume fuzz data before `Connect()` is called. Also, that would not be fuzzing so much, but rather some kind of unit testing.",
      "created_at": "2022-06-09T14:55:59Z",
      "updated_at": "2022-06-09T15:00:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893611842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893611842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893637770",
      "pull_request_review_id": 1001533944,
      "id": 893637770,
      "node_id": "PRRC_kwDOABII5841Q9SK",
      "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "path": "src/test/fuzz/i2p.cpp",
      "position": 51,
      "original_position": 51,
      "commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_commit_id": "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "in_reply_to_id": 893296736,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There'd also be a middle way to teach the fuzz engine a meaningful format or snippets. This can be achieved with a dict, a custom mutator, or with some code in the fuzz target (CallOneOf(...))",
      "created_at": "2022-06-09T15:16:52Z",
      "updated_at": "2022-06-09T15:16:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893637770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893637770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    }
  ]
}