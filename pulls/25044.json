{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044",
    "id": 924696012,
    "node_id": "PR_kwDOABII5843Hb3M",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25044",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25044.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25044.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e8959000b63db4f2a21579fd4be27618c5fbd5b9",
    "number": 25044,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Use MiniWallet in rpc_rawtransaction.py",
    "user": {
      "login": "danielabrozzoni",
      "id": 25042473,
      "node_id": "MDQ6VXNlcjI1MDQyNDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielabrozzoni",
      "html_url": "https://github.com/danielabrozzoni",
      "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
      "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
      "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
      "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
      "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR allows `rpc_rawtransaction.py` to be run even without the Core wallet by using the MiniWallet instead, as proposed in https://github.com/bitcoin/bitcoin/issues/20078.\r\nThis test was previously run twice, once with `--legacy-wallet` and once with\r\n`--descriptors`. Since this would have meant running the same test twice\r\nif the wallet wasn't compiled, now we run it just once with the legacy\r\nwallet.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2022-04-30T17:29:07Z",
    "updated_at": "2023-01-24T08:02:49Z",
    "closed_at": "2022-05-30T14:59:56Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-05-30T14:59:56Z",
    "merge_commit_sha": "269fa667f24850602be07d360af1541cfb17359b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "danielabrozzoni:test_rawtransaction_miniwallet",
      "ref": "test_rawtransaction_miniwallet",
      "sha": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 487334034,
        "node_id": "R_kgDOHQwgkg",
        "name": "bitcoin",
        "full_name": "danielabrozzoni/bitcoin",
        "owner": {
          "login": "danielabrozzoni",
          "id": 25042473,
          "node_id": "MDQ6VXNlcjI1MDQyNDcz",
          "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/danielabrozzoni",
          "html_url": "https://github.com/danielabrozzoni",
          "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
          "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
          "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
          "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
          "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/danielabrozzoni/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/danielabrozzoni/bitcoin",
        "archive_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/events",
        "forks_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/danielabrozzoni/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:danielabrozzoni/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/danielabrozzoni/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/danielabrozzoni/bitcoin/hooks",
        "svn_url": "https://github.com/danielabrozzoni/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 207520,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-05-30T15:34:32Z",
        "created_at": "2022-04-30T17:02:30Z",
        "updated_at": "2022-04-30T16:28:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ad9e5eaf77bf7e19a926a43407c88386a8a1e58f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 93,
    "deletions": 119,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 42,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 6528307833,
      "node_id": "LE_lADOABII585I1GzlzwAAAAGFHhJ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6528307833",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T17:29:30Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1114042785,
      "node_id": "IC_kwDOABII585CZvGh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114042785",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T19:37:36Z",
      "updated_at": "2022-04-30T19:37:36Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/pull/25044/checks?check_run_id=6241399894:\r\n```bash\r\n\r\n85/242 - \u001b[1mrpc_rawtransaction.py --legacy-wallet\u001b[0m failed, Duration: 2 s\r\n\r\n\u001b[0m2022-04-30T17:43:46.674000Z TestFramework (INFO): Initializing test directory /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_₿_🏃_20220430_174259/rpc_rawtransaction_151\r\n2022-04-30T17:43:47.170000Z TestFramework (INFO): Prepare some coins for multiple *rawtransaction commands\r\n2022-04-30T17:43:48.329000Z TestFramework (INFO): Test getrawtransaction with -txindex\r\n2022-04-30T17:43:48.333000Z TestFramework (INFO): Test getrawtransaction without -txindex\r\n2022-04-30T17:43:48.337000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 133, in main\r\n    self.run_test()\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/rpc_rawtransaction.py\", line 86, in run_test\r\n    self.getrawtransaction_tests()\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/rpc_rawtransaction.py\", line 143, in getrawtransaction_tests\r\n    tx = self.wallet.send_self_transfer(from_node=self.nodes[2])['txid']\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/wallet.py\", line 171, in send_self_transfer\r\n    tx = self.create_self_transfer(**kwargs)\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/wallet.py\", line 264, in create_self_transfer\r\n    assert_equal(mempool_valid, tx_info['allowed'])\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 51, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(True == False)\r\n2022-04-30T17:43:48.389000Z TestFramework (INFO): Stopping nodes\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1114042785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "convert_to_draft",
      "id": 6528449158,
      "node_id": "CTDE_lADOABII585I1GzlzwAAAAGFIDqG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6528449158",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T20:09:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6528459404,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGFIGKM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6528459404",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T20:22:25Z"
    },
    {
      "event": "commented",
      "id": 1114051620,
      "node_id": "IC_kwDOABII585CZxQk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114051620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T20:47:14Z",
      "updated_at": "2022-05-23T23:17:16Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23319](https://github.com/bitcoin/bitcoin/pull/23319) (rpc: Return fee and prevout (utxos) to getrawtransaction by dougEfresh)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1114051620",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6528516278,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGFIUC2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6528516278",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T21:32:49Z"
    },
    {
      "event": "ready_for_review",
      "id": 6529213983,
      "node_id": "RFRE_lADOABII585I1GzlzwAAAAGFK-Yf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6529213983",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-01T09:21:09Z"
    },
    {
      "event": "commented",
      "id": 1114182326,
      "node_id": "IC_kwDOABII585CaRK2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114182326",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-01T09:21:41Z",
      "updated_at": "2022-05-03T09:22:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ops :(\r\nShould be ok now, thanks!",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1114182326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "commented",
      "id": 1116208667,
      "node_id": "IC_kwDOABII585Ch_4b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116208667",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T15:06:16Z",
      "updated_at": "2022-05-03T15:06:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, will review after our seminar tomorrow :)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1116208667",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "reviewed",
      "id": 961018633,
      "node_id": "PRR_kwDOABII5845R_sJ",
      "url": null,
      "actor": null,
      "commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/25044/commits/f9d5b497727bbb1e0b8851bb37abffaa51e08c27\r\n\r\nwith a small comment!",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-961018633",
      "submitted_at": "2022-05-03T20:29:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "reviewed",
      "id": 961502113,
      "node_id": "PRR_kwDOABII5845T1uh",
      "url": null,
      "actor": null,
      "commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK f9d5b49.",
      "user": {
        "login": "ayush933",
        "id": 21211904,
        "node_id": "MDQ6VXNlcjIxMjExOTA0",
        "avatar_url": "https://avatars.githubusercontent.com/u/21211904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ayush933",
        "html_url": "https://github.com/ayush933",
        "followers_url": "https://api.github.com/users/ayush933/followers",
        "following_url": "https://api.github.com/users/ayush933/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ayush933/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ayush933/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ayush933/subscriptions",
        "organizations_url": "https://api.github.com/users/ayush933/orgs",
        "repos_url": "https://api.github.com/users/ayush933/repos",
        "events_url": "https://api.github.com/users/ayush933/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ayush933/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-961502113",
      "submitted_at": "2022-05-04T08:36:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "reviewed",
      "id": 961520368,
      "node_id": "PRR_kwDOABII5845T6Lw",
      "url": null,
      "actor": null,
      "commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-961520368",
      "submitted_at": "2022-05-04T08:52:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "reviewed",
      "id": 961759298,
      "node_id": "PRR_kwDOABII5845U0hC",
      "url": null,
      "actor": null,
      "commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK,\r\n\r\nand warm welcome as a new contributor!",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-961759298",
      "submitted_at": "2022-05-04T12:26:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "reviewed",
      "id": 961775587,
      "node_id": "PRR_kwDOABII5845U4fj",
      "url": null,
      "actor": null,
      "commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-961775587",
      "submitted_at": "2022-05-04T12:35:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6556794284,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGG0L2s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6556794284",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T14:00:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6557699554,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGG3o3i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6557699554",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T15:53:32Z"
    },
    {
      "event": "reviewed",
      "id": 975300366,
      "node_id": "PRR_kwDOABII5846IecO",
      "url": null,
      "actor": null,
      "commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I'm not familiar with reviewing the \"convert tests to use MiniWallet\" pulls, but poked around a bit and this LGTM.\r\n  \r\nACK 6672cebfb10da112eaca29b4ff0a0a4438749624 this pull also speeds up the test from 17-20 to 12-13 seconds for me\r\n\r\n\r\nA few minor comments follow, feel free to pick/choose/ignore, happy to re-ACK if you take any.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-975300366",
      "submitted_at": "2022-05-17T11:57:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6626407978,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGK9vYq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6626407978",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T17:35:07Z"
    },
    {
      "event": "reviewed",
      "id": 976828507,
      "node_id": "PRR_kwDOABII5846OThb",
      "url": null,
      "actor": null,
      "commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "LGTM.\r\n\r\nLeft some ideas/questions.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-976828507",
      "submitted_at": "2022-05-18T12:04:50Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "commented",
      "id": 1133259620,
      "node_id": "IC_kwDOABII585DjCtk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133259620",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T19:37:29Z",
      "updated_at": "2022-05-20T19:37:29Z",
      "author_association": "MEMBER",
      "body": "ACK 66dfa27fe8d68a423ce7e64da05090f1b410fcdc\r\n\r\nmodulo addressing the feedback here or in a follow-up",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1133259620",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6691289125,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGO1Pgl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6691289125",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T09:28:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6691332065,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGO1Z_h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6691332065",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T09:35:51Z"
    },
    {
      "event": "reviewed",
      "id": 987404760,
      "node_id": "PRR_kwDOABII58462pnY",
      "url": null,
      "actor": null,
      "commit_id": "ddf22ff911a354b34411d029572339a2e3d03261",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-987404760",
      "submitted_at": "2022-05-27T11:47:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6692370753,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGO5XlB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6692370753",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T12:50:30Z"
    },
    {
      "event": "reviewed",
      "id": 988529535,
      "node_id": "PRR_kwDOABII584668N_",
      "url": null,
      "actor": null,
      "commit_id": "5a6cd726cc56ca26b7af01322d1a344df86cebf6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 5a6cd726cc56ca26b7af01322d1a344df86cebf6\r\nTested on macOS 10.15.7 with `--disable-wallet`, `--without-bdb` and `--enable-wallet` and tests run/skip as expected.\r\n\r\nI am not yet familiar with test nodes overhead, but based on my test runs, there is no apparent reason for 4 nodes and this can run a bit faster with 3 nodes (minor changes needed on L58,L62,L101,L139).",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-988529535",
      "submitted_at": "2022-05-28T14:59:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6701577621,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGPcfWV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6701577621",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T09:52:23Z"
    },
    {
      "event": "commented",
      "id": 1141120702,
      "node_id": "IC_kwDOABII585EBB6-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141120702",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T12:50:15Z",
      "updated_at": "2022-05-30T12:50:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for your review @kouloumos! You're right, the 4th node is useless - I updated the code to use only 3 nodes, (and also removed the useless `sync_all`), and it runs slightly faster.\r\n\r\nBefore:\r\n`test/functional/rpc_rawtransaction.py  2.12s user 0.64s system 27% cpu 10.121 total`\r\nAfter:\r\n`test/functional/rpc_rawtransaction.py  1.58s user 0.46s system 26% cpu 7.798 total`\r\n",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1141120702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "mentioned",
      "id": 6702820091,
      "node_id": "MEE_lADOABII585I1GzlzwAAAAGPhOr7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6702820091",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T12:50:16Z"
    },
    {
      "event": "subscribed",
      "id": 6702820099,
      "node_id": "SE_lADOABII585I1GzlzwAAAAGPhOsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6702820099",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T12:50:16Z"
    },
    {
      "event": "reviewed",
      "id": 989374076,
      "node_id": "PRR_kwDOABII5846-KZ8",
      "url": null,
      "actor": null,
      "commit_id": "813b643e36bd3bf2a21156ed83a30b33d7703167",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#pullrequestreview-989374076",
      "submitted_at": "2022-05-30T13:42:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
    },
    {
      "event": "commented",
      "id": 1141185937,
      "node_id": "IC_kwDOABII585EBR2R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141185937",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T13:52:19Z",
      "updated_at": "2022-05-30T13:52:19Z",
      "author_association": "MEMBER",
      "body": "ACK 813b643e36bd3bf2a21156ed83a30b33d7703167 per `git diff 66dfa27 813b643` modulo a comment or two ",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1141185937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5MzA0NmMxMGI0ZDRlMTM5Y2Q3YjQxNzkxYWQxYmZlOTI1MzUxZTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e93046c10b4d4e139cd7b41791ad1bfe925351e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e93046c10b4d4e139cd7b41791ad1bfe925351e2",
      "tree": {
        "sha": "963d04fa25b47237c31410b2d4b5d91b76f340e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963d04fa25b47237c31410b2d4b5d91b76f340e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 963d04fa25b47237c31410b2d4b5d91b76f340e5\nparent 1ab389b1bac1378e17b13a4c4a81c24b92745cfb\nauthor Daniela Brozzoni <danielabrozzoni@protonmail.com> 1653600866 +0100\ncommitter Daniela Brozzoni <danielabrozzoni@protonmail.com> 1653920717 +0200\n\nMOVEONLY: Move signrawtransactionwithwallet test\n\nPut signrawtransactionwithwallet_tests in rpc_signrawtransaction.py,\nas the test is mainly testing the signrawtransaction RPC.\nReview with `git show --color-moved=dimmed-zebra`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZkx/loNGWB3axvvxfeTx/c7Qq4cFAmKU080ACgkQfeTx/c7Q\nq4fpWhAAokpOm9rptGp9SOIlzbRGJkhXWRCYOeoe3xZLVHgB1XnMf/xfEBzhOMEA\nMcIF9ix23xQfpfWJD0zAgv15M06soIku7TAp3s5vBWfRXaq2kS1EPrKfGUhYOfgY\ntoAQdpslWos1ZdIRYmWNEnFLSEHZ1YgPMxzVJdgbdPmp7BeqKx/2h2BpyeYiKBr7\nAq0BAtBq4s5ZW7ikMx6f/cshXBZSaHxQRFJgIH9wjNOZPu1eP1O8BRe2+GrRSsqS\nFSqpe60TQJLAiFq7cKBtii1QF1o1SsjzbYDEfTzqZXhSmq2dpnjrpBUkSaRwaLpm\nNSHA8Y77lAfFUbPQz6Ewchfuyz+O7BcArthtiLulp96J9oA1Tg8D4RNbqbKxTg5T\nEllwdOPO2wlSxFMg33BB7Vyt5eJHpRhSECK1/PJl1w4x8jsLojDWQlOwhylpUaS4\nfn6gRCBiwEV5Fe2YThBgiQWV8FPGbVr0cuFWKOa2AXqS14gylTPvrmpKabB1epXR\n573C/WcjsOJzPX38x2t50tfrwfV+GiRP906m9I3LXe/kig+ggfeboVzU7/lEpD2t\nx71wK7dljf3oPFPkt6Fgy0p7fhWU/wmMFGmOW7XzVkOQ0gHaJhOzbG6tNoeZ2hwt\nwfI1hRXDmRSSTB2BVlnx76gIbwzDVjReMW6KtsuuQ/ipQu0978I=\n=xpN9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ab389b1bac1378e17b13a4c4a81c24b92745cfb",
          "sha": "1ab389b1bac1378e17b13a4c4a81c24b92745cfb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1ab389b1bac1378e17b13a4c4a81c24b92745cfb"
        }
      ],
      "message": "MOVEONLY: Move signrawtransactionwithwallet test\n\nPut signrawtransactionwithwallet_tests in rpc_signrawtransaction.py,\nas the test is mainly testing the signrawtransaction RPC.\nReview with `git show --color-moved=dimmed-zebra`",
      "committer": {
        "name": "Daniela Brozzoni",
        "email": "danielabrozzoni@protonmail.com",
        "date": "2022-05-30T14:25:17Z"
      },
      "author": {
        "name": "Daniela Brozzoni",
        "email": "danielabrozzoni@protonmail.com",
        "date": "2022-05-26T21:34:26Z"
      },
      "sha": "e93046c10b4d4e139cd7b41791ad1bfe925351e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4OTU5MDAwYjYzZGI0ZjJhMjE1NzlmZDRiZTI3NjE4YzVmYmQ1Yjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "tree": {
        "sha": "b8af7a1d88f5d55c438be8e3a418810c5e12ef10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8af7a1d88f5d55c438be8e3a418810c5e12ef10"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8af7a1d88f5d55c438be8e3a418810c5e12ef10\nparent e93046c10b4d4e139cd7b41791ad1bfe925351e2\nauthor Daniela Brozzoni <danielabrozzoni@protonmail.com> 1650047689 +0200\ncommitter Daniela Brozzoni <danielabrozzoni@protonmail.com> 1653920718 +0200\n\ntest: Use MiniWallet in rpc_rawtransaction.py\n\nThis test was previously run twice, once with `--legacy-wallet` and once with\n`--descriptors`.\nNow we run it only with `--legacy-wallet`, as all the tests has been\nported to the MiniWallet but `raw_multisig_transaction_legacy_tests`,\nwhich can be run only with the legacy wallet.\nWe also decrease the number of nodes used from 4 to 3, making the test\nrun slightly faster.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZkx/loNGWB3axvvxfeTx/c7Qq4cFAmKU084ACgkQfeTx/c7Q\nq4fCuQ//e2GhCRHRzk6sQOKyHs4tpkvnzNk1Dlix44EbdLRZUQhd+ZeXetcCjii0\nggoQesDvQy8BLjHbgzdvhIzKKpYTaklwmTAJFiR0qOUofnybYwxrQdNN19Bi0tx8\nt6F4yNgtD9jff/4AcZ66DtL05sbaQ0KDdjb3iUfTdcjay40l/KzUhSSA4j6kn5kK\nNij3m/bu9tcJl782phGwd9zsjZh1/bpZ56E1SCguEt4IiMNUJo50dSFumbE98Q33\n0LBYy3rBV+5pgkJk8yOVSoBxqEuFwkh9oqVpERk2zPRcYg67ofGDcGdQcJj9asD9\n6qy0uEfzCmZd7zbbKTeSgv/P89wHUDhSzIrAJ9S9tcSeez27mPJ58QS+c/4m18Y6\nq/4rDoL59bS76Ou03PGqYS1JL4rurWkabTUNcYRZdQEWR3RcW1h8equJhVkSdaM3\n2tyx9l9+hvfp+Ze7fE9ORpAAPaiySrNFQG/wNr5259DjC8pF4Me2tF3gSovGE1rr\nZOOamEwGFcpbuuYRRxTEFGIPkefed3K1rcdkgL7HMs+8b+9yp9NLG7KIwCI28cxi\n4eSJ/hLNcA0KMe0s9rlRCYd7QNa0B7ylf8Tk2pZGwtXxcpGPS/PIa1jAIV2/ZOIt\nIPpPLyds9lzpuCCAnNYi4zl3u0EvJhJrxxF0gYTlTe+KO49054o=\n=Vtxi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e93046c10b4d4e139cd7b41791ad1bfe925351e2",
          "sha": "e93046c10b4d4e139cd7b41791ad1bfe925351e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e93046c10b4d4e139cd7b41791ad1bfe925351e2"
        }
      ],
      "message": "test: Use MiniWallet in rpc_rawtransaction.py\n\nThis test was previously run twice, once with `--legacy-wallet` and once with\n`--descriptors`.\nNow we run it only with `--legacy-wallet`, as all the tests has been\nported to the MiniWallet but `raw_multisig_transaction_legacy_tests`,\nwhich can be run only with the legacy wallet.\nWe also decrease the number of nodes used from 4 to 3, making the test\nrun slightly faster.",
      "committer": {
        "name": "Daniela Brozzoni",
        "email": "danielabrozzoni@protonmail.com",
        "date": "2022-05-30T14:25:18Z"
      },
      "author": {
        "name": "Daniela Brozzoni",
        "email": "danielabrozzoni@protonmail.com",
        "date": "2022-04-15T18:34:49Z"
      },
      "sha": "e8959000b63db4f2a21579fd4be27618c5fbd5b9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6703535866,
      "node_id": "HRFPE_lADOABII585I1GzlzwAAAAGPj9b6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6703535866",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T14:26:58Z"
    },
    {
      "event": "commented",
      "id": 1141226513,
      "node_id": "IC_kwDOABII585EBbwR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141226513",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T14:31:21Z",
      "updated_at": "2022-05-30T14:31:21Z",
      "author_association": "MEMBER",
      "body": "ACK e8959000b63db4f2a21579fd4be27618c5fbd5b9 ",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1141226513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "merged",
      "id": 6703758797,
      "node_id": "ME_lADOABII585I1GzlzwAAAAGPkz3N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6703758797",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "269fa667f24850602be07d360af1541cfb17359b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269fa667f24850602be07d360af1541cfb17359b",
      "created_at": "2022-05-30T14:59:56Z"
    },
    {
      "event": "closed",
      "id": 6703758832,
      "node_id": "CE_lADOABII585I1GzlzwAAAAGPkz3w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6703758832",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T14:59:57Z"
    },
    {
      "event": "commented",
      "id": 1141280697,
      "node_id": "IC_kwDOABII585EBo-5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141280697",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T15:27:43Z",
      "updated_at": "2022-05-30T15:28:35Z",
      "author_association": "MEMBER",
      "body": "Some further ideas on this test: It looks like it can be speed up by removing `sync_all` calls, as it is not needed to sync txs when a block is mined on the node that already has the tx. Also, some unused symbols can be removed. Maybe the test should be split up to avoid the re-use of symbols?\r\n\r\n```diff\r\ndiff --git a/test/functional/rpc_rawtransaction.py b/test/functional/rpc_rawtransaction.py\r\nindex fecb8310b9..31a5002528 100755\r\n--- a/test/functional/rpc_rawtransaction.py\r\n+++ b/test/functional/rpc_rawtransaction.py\r\n@@ -366,5 +366,4 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n         # send 1.2 BTC to msig adr\r\n         txId = self.nodes[0].sendtoaddress(mSigObj, 1.2)\r\n-        self.sync_all()\r\n         self.generate(self.nodes[0], 1)\r\n         # node2 has both keys of the 2of2 ms addr, tx should affect the balance\r\n@@ -387,5 +386,4 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n         decTx = self.nodes[0].gettransaction(txId)\r\n         rawTx = self.nodes[0].decoderawtransaction(decTx['hex'])\r\n-        self.sync_all()\r\n         self.generate(self.nodes[0], 1)\r\n \r\n@@ -407,7 +405,5 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n         rawTxSigned = self.nodes[2].signrawtransactionwithwallet(rawTx, inputs)\r\n         assert_equal(rawTxSigned['complete'], True)  # node2 can sign the tx compl., own two of three keys\r\n-        self.nodes[2].sendrawtransaction(rawTxSigned['hex'])\r\n-        rawTx = self.nodes[0].decoderawtransaction(rawTxSigned['hex'])\r\n-        self.sync_all()\r\n+        self.nodes[0].sendrawtransaction(rawTxSigned['hex'])\r\n         self.generate(self.nodes[0], 1)\r\n         assert_equal(self.nodes[0].getbalance(), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\r\n@@ -426,7 +422,4 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n \r\n         txId = self.nodes[0].sendtoaddress(mSigObj, 2.2)\r\n-        decTx = self.nodes[0].gettransaction(txId)\r\n-        rawTx2 = self.nodes[0].decoderawtransaction(decTx['hex'])\r\n-        self.sync_all()\r\n         self.generate(self.nodes[0], 1)\r\n \r\n@@ -450,7 +443,5 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n         rawTxComb = self.nodes[2].combinerawtransaction([rawTxPartialSigned1['hex'], rawTxPartialSigned2['hex']])\r\n         self.log.debug(rawTxComb)\r\n-        self.nodes[2].sendrawtransaction(rawTxComb)\r\n-        rawTx2 = self.nodes[0].decoderawtransaction(rawTxComb)\r\n-        self.sync_all()\r\n+        self.nodes[0].sendrawtransaction(rawTxComb)\r\n         self.generate(self.nodes[0], 1)\r\n         assert_equal(self.nodes[0].getbalance(), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\r\n```\r\n\r\nEDIT: Leave a comment here in this thread, if you started working on the previous comment, to avoid duplicate work.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1141280697",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "head_ref_deleted",
      "id": 6703979110,
      "node_id": "HRDE_lADOABII585I1GzlzwAAAAGPlppm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6703979110",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T15:34:32Z"
    },
    {
      "event": "commented",
      "id": 1141347401,
      "node_id": "IC_kwDOABII585EB5RJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141347401",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T16:54:43Z",
      "updated_at": "2022-05-30T16:54:43Z",
      "author_association": "MEMBER",
      "body": "There is the Part 2 of https://github.com/bitcoin/bitcoin/pull/22437 (initially #24113 before it was chopped to bugfix only) that I was planning to repropose after updating for the changes here. Won't do it right away so it can be used if anyone wants to:   https://github.com/jonatack/bitcoin/commits/improve-getrawtransaction-tests-part-2",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#issuecomment-1141347401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25044"
    },
    {
      "event": "locked",
      "id": 8341497482,
      "node_id": "LOE_lADOABII585I1GzlzwAAAAHxMSaK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8341497482",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T08:02:28Z"
    },
    {
      "event": "comment_deleted",
      "id": 8341499055,
      "node_id": "CDE_lADOABII585I1GzlzwAAAAHxMSyv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8341499055",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T08:02:43Z"
    },
    {
      "event": "comment_deleted",
      "id": 8341499664,
      "node_id": "CDE_lADOABII585I1GzlzwAAAAHxMS8Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8341499664",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T08:02:49Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864206436",
      "pull_request_review_id": 961018633,
      "id": 864206436,
      "node_id": "PRRC_kwDOABII584zgr5k",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 15,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": null,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        self.requires_wallet = self.is_wallet_compiled()\r\n```",
      "created_at": "2022-05-03T20:27:04Z",
      "updated_at": "2022-05-03T20:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r864206436",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864206436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864592742",
      "pull_request_review_id": 961520368,
      "id": 864592742,
      "node_id": "PRRC_kwDOABII584ziKNm",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Interesting. I think the goal of this change it to not run the test at all to avoid wasting resources if a specific wallet type is requested, but not available?\r\n\r\nHowever, the test will still run twice when the wallet isn't compiled: https://cirrus-ci.com/task/5291414786408448?logs=ci#L3574\r\n\r\nI think it might be better to fix this by removing this whole method and also consolidate the two tasks into one:\r\n\r\n```\r\n$ git grep 'rpc_rawtransaction.py'\r\ntest/functional/test_runner.py:    'rpc_rawtransaction.py --legacy-wallet',\r\ntest/functional/test_runner.py:    'rpc_rawtransaction.py --descriptors',\r\n",
      "created_at": "2022-05-04T08:52:17Z",
      "updated_at": "2022-05-04T08:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r864592742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864592742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864593062",
      "pull_request_review_id": 961520368,
      "id": 864593062,
      "node_id": "PRRC_kwDOABII584ziKSm",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():\n+            self.generate(self.nodes[2], 1)\n+            self.generate(self.nodes[0], COINBASE_MATURITY + 1)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 43,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are those two calls needed?",
      "created_at": "2022-05-04T08:52:37Z",
      "updated_at": "2022-05-04T08:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r864593062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864593062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864765750",
      "pull_request_review_id": 961759298,
      "id": 864765750,
      "node_id": "PRRC_kwDOABII584zi0c2",
      "diff_hunk": "@@ -24,8 +24,8 @@\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n-    find_vout_for_address,\n )\n+from test_framework.wallet import MiniWallet, getnewdestination",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 6,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\nfrom test_framework.wallet import (\r\n    MiniWallet,\r\n    getnewdestination,\r\n)\r\n```\r\n(that way, potential merge conflicts can be resolved easier)",
      "created_at": "2022-05-04T12:22:13Z",
      "updated_at": "2022-05-04T12:26:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r864765750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864765750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864777664",
      "pull_request_review_id": 961775587,
      "id": 864777664,
      "node_id": "PRRC_kwDOABII584zi3XA",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if self.requires_wallet:\r\n```\r\n\r\nmaybe you can avoid calls to `is_wallet_compiled()` since you defined a var for it in `set_test_params`:\r\n```py\r\nif self.is_wallet_compiled():\r\n    self.requires_wallet = True\r\n```",
      "created_at": "2022-05-04T12:35:59Z",
      "updated_at": "2022-05-04T12:35:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r864777664",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864777664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866037887",
      "pull_request_review_id": 963555242,
      "id": 866037887,
      "node_id": "PRRC_kwDOABII584znrB_",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():\n+            self.generate(self.nodes[2], 1)\n+            self.generate(self.nodes[0], COINBASE_MATURITY + 1)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 43,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864593062,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Those two were already in the test:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fcf6c8f4eb217763545ede1766831a6b93f583bd/test/functional/rpc_rawtransaction.py#L75-L80\r\n\r\nBut yeah, you're right, I can just drop them:\r\n- It seems to me that generating from `nodes[2]` was never really needed\r\n- Generating from `nodes[0]` is not needed anymore (I'm already doing it a couple of lines above, to make sure that all the `self.wallet` utxos are mature)",
      "created_at": "2022-05-05T15:27:59Z",
      "updated_at": "2022-05-05T15:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r866037887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866037887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866039346",
      "pull_request_review_id": 963556808,
      "id": 866039346,
      "node_id": "PRRC_kwDOABII584znrYy",
      "diff_hunk": "@@ -24,8 +24,8 @@\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n-    find_vout_for_address,\n )\n+from test_framework.wallet import MiniWallet, getnewdestination",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 6,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864765750,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated, thanks :) ",
      "created_at": "2022-05-05T15:28:53Z",
      "updated_at": "2022-05-05T15:28:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r866039346",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866039346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866040236",
      "pull_request_review_id": 963557874,
      "id": 866040236,
      "node_id": "PRRC_kwDOABII584znrms",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864777664,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, right! I just updated it, thank you :) ",
      "created_at": "2022-05-05T15:29:20Z",
      "updated_at": "2022-05-05T15:29:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r866040236",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866040236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866043922",
      "pull_request_review_id": 963562747,
      "id": 866043922,
      "node_id": "PRRC_kwDOABII584znsgS",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():\n+            self.generate(self.nodes[2], 1)\n+            self.generate(self.nodes[0], COINBASE_MATURITY + 1)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 43,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864593062,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, you are adding them *twice*? Whereas before they were only there once?",
      "created_at": "2022-05-05T15:32:15Z",
      "updated_at": "2022-05-05T15:32:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r866043922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866043922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866074588",
      "pull_request_review_id": 963609277,
      "id": 866074588,
      "node_id": "PRRC_kwDOABII584znz_c",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n+        if self.is_wallet_compiled():\n+            self.generate(self.nodes[2], 1)\n+            self.generate(self.nodes[0], COINBASE_MATURITY + 1)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 43,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864593062,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I was doing `self.generate(self.nodes[0], COINBASE_MATURITY + 1)` twice without a real reason :)\r\n\r\nIt should be better now, thanks!",
      "created_at": "2022-05-05T16:02:18Z",
      "updated_at": "2022-05-05T16:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r866074588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866074588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867398439",
      "pull_request_review_id": 965366049,
      "id": 867398439,
      "node_id": "PRRC_kwDOABII584zs3Mn",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think the goal of this change it to not run the test at all to avoid wasting resources if a specific wallet type is requested, but not available?\r\n\r\nIt's more that without this function if you try to run the test with `--descriptors` but without having sqlite compiled (or, viceversa, `legacy` but no bdb) the whole test fails... \r\n\r\n```\r\n❯ ./configure --without-bdb\r\n❯ make -j 9\r\n❯ ./test/functional/rpc_rawtransaction.py --legacy-wallet\r\n2022-05-07T21:43:41.365000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_7w6fc454\r\n2022-05-07T21:43:41.641000Z TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.setup()\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 295, in setup\r\n    self.setup_network()\r\n  File \"/home/daniela/Developer/bitcoin/./test/functional/rpc_rawtransaction.py\", line 72, in setup_network\r\n    super().setup_network()\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 389, in setup_network\r\n    self.setup_nodes()\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 416, in setup_nodes\r\n    self.import_deterministic_coinbase_privkeys()\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 433, in import_deterministic_coinbase_privkeys\r\n    self.init_wallet(node=i)\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_framework.py\", line 440, in init_wallet\r\n    n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/test_node.py\", line 753, in createwallet\r\n    return self.__getattr__('createwallet')(wallet_name, disable_private_keys, blank, passphrase, avoid_reuse, descriptors, load_on_startup, external_signer)\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/daniela/Developer/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: Compiled without bdb support (required for legacy wallets) (-4)\r\n2022-05-07T21:43:41.694000Z TestFramework (INFO): Stopping nodes\r\n2022-05-07T21:43:41.800000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_7w6fc454\r\n2022-05-07T21:43:41.800000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_7w6fc454/test_framework.log\r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR): \r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR): Hint: Call /home/daniela/Developer/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_7w6fc454' to consolidate all logs\r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR): \r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2022-05-07T21:43:41.801000Z TestFramework (ERROR):\r\n```\r\n\r\n> I think it might be better to fix this by removing this whole method and also consolidate the two tasks into one:\r\n\r\nI've given a bit of thought to this, but I really don't know how I would do that... `self.signrawtransactionwithwallet_tests` still has to use the Core wallet, shouldn't we test it with both the legacy and the descriptor wallet?",
      "created_at": "2022-05-07T21:50:06Z",
      "updated_at": "2022-05-07T21:50:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r867398439",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867398439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867438702",
      "pull_request_review_id": 965397264,
      "id": 867438702,
      "node_id": "PRRC_kwDOABII584ztBBu",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can execute the subtests conditionally\r\n\r\n```\r\nif sqlite:\r\n  do_sqlite_test()\r\ntest()",
      "created_at": "2022-05-08T05:47:13Z",
      "updated_at": "2022-05-08T05:47:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r867438702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867438702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873149491",
      "pull_request_review_id": 973157060,
      "id": 873149491,
      "node_id": "PRRC_kwDOABII5840CzQz",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm sorry, I really can't figure out how to do this without massively changing the `test_framework.py` code. To me it seems that you can't in a single run test both with the descriptors and the legacy wallet...",
      "created_at": "2022-05-15T10:52:21Z",
      "updated_at": "2022-05-15T10:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r873149491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873149491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873197210",
      "pull_request_review_id": 973196783,
      "id": 873197210,
      "node_id": "PRRC_kwDOABII5840C-6a",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right. This should only be possible when both the descriptor wallet and legacy wallet are compiled (and this test is slightly rewritten).\r\n\r\nHowever, I think it is fine to simply run just one (either sqlite or bdb).\r\n\r\nThis means that any sqlite test case line of code will need to be guarded by a check that checks for sqlite (and the same for bdb). This should not need any framework changes.",
      "created_at": "2022-05-15T17:04:30Z",
      "updated_at": "2022-05-15T17:04:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r873197210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873197210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873197621",
      "pull_request_review_id": 973197082,
      "id": 873197621,
      "node_id": "PRRC_kwDOABII5840C_A1",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unless of course the test is largely monolithic (most lines depend on previous lines), so conditional execution is not straightforward.",
      "created_at": "2022-05-15T17:08:11Z",
      "updated_at": "2022-05-15T17:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r873197621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873197621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874695633",
      "pull_request_review_id": 975300366,
      "id": 874695633,
      "node_id": "PRRC_kwDOABII5840IsvR",
      "diff_hunk": "@@ -310,71 +311,49 @@ def signrawtransactionwithwallet_tests(self):\n \n     def sendrawtransaction_tests(self):\n         self.log.info(\"Test sendrawtransaction with missing input\")\n-        inputs = [{'txid': TXID, 'vout': 1}]  # won't exist\n-        outputs = {self.nodes[0].getnewaddress(): 4.998}\n-        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n-        rawtx = self.nodes[2].signrawtransactionwithwallet(rawtx)\n+        utxo_to_spend = {'txid': TXID, 'vout': 1, 'value': 15}  # won't exist\n+        rawtx = self.wallet.create_self_transfer(mempool_valid=False, utxo_to_spend=utxo_to_spend)\n         assert_raises_rpc_error(-25, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n     def sendrawtransaction_testmempoolaccept_tests(self):\n         self.log.info(\"Test sendrawtransaction/testmempoolaccept with maxfeerate\")\n         fee_exceeds_max = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n \n         # Test a transaction with a small fee.\n-        txId = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n-        rawTx = self.nodes[0].getrawtransaction(txId, True)\n-        vout = next(o for o in rawTx['vout'] if o['value'] == Decimal('1.00000000'))\n-\n-        self.sync_all()\n-        inputs = [{\"txid\": txId, \"vout\": vout['n']}]\n-        # Fee 10,000 satoshis, (1 - (10000 sat * 0.00000001 BTC/sat)) = 0.9999\n-        outputs = {self.nodes[0].getnewaddress(): Decimal(\"0.99990000\")}\n-        rawTx = self.nodes[2].createrawtransaction(inputs, outputs)\n-        rawTxSigned = self.nodes[2].signrawtransactionwithwallet(rawTx)\n-        assert_equal(rawTxSigned['complete'], True)\n-        # Fee 10,000 satoshis, ~100 b transaction, fee rate should land around 100 sat/byte = 0.00100000 BTC/kB\n+        # Fee rate is 0.00100000 BTC/kB",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 162,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit here and line 337 below\r\n```suggestion\r\n        # Fee rate is 0.00100000 BTC/kvB\r\n```",
      "created_at": "2022-05-17T11:25:55Z",
      "updated_at": "2022-05-17T11:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874695633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874695633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874703318",
      "pull_request_review_id": 975300366,
      "id": 874703318,
      "node_id": "PRRC_kwDOABII5840IunW",
      "diff_hunk": "@@ -62,44 +64,43 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_wallet_compiled()\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.requires_wallet:\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()\n \n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:\n+            self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet and not self.options.descriptors:\n             self.raw_multisig_transaction_legacy_tests()\n \n     def getrawtransaction_tests(self):\n-        addr = self.nodes[1].getnewaddress()\n-        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        tx = self.wallet.send_self_transfer(from_node=self.nodes[1])\n+        self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        vout = find_vout_for_address(self.nodes[1], txid, addr)\n-        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n-        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n-        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n-        self.generateblock(self.nodes[0], output=self.nodes[0].getnewaddress(), transactions=[rawTxSigned['hex']])\n+        txId = tx[\"txid\"]",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 69,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, consistency with your changes\r\n```suggestion\r\n        txId = tx['txid']\r\n```",
      "created_at": "2022-05-17T11:35:34Z",
      "updated_at": "2022-05-17T11:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874703318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874703318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874708737",
      "pull_request_review_id": 975300366,
      "id": 874708737,
      "node_id": "PRRC_kwDOABII5840Iv8B",
      "diff_hunk": "@@ -200,20 +201,20 @@ def createrawtransaction_tests(self):\n         # sequence number out of range\n         for invalid_seq in [-1, 4294967296]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': invalid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             assert_raises_rpc_error(-8, 'Invalid parameter, sequence number is out of range',\n                                     self.nodes[0].createrawtransaction, inputs, outputs)\n         # with valid sequence number\n         for valid_seq in [1000, 4294967294]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': valid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 120,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, not sure how obvious it is to readers that `getnewdestination()[2]` is an address without looking up the function, so (here and just above) this might be clearer\r\n```diff\r\n-            outputs = {getnewdestination()[2]: 1}\r\n-            rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\r\n+            address = getnewdestination()[2]\r\n+            rawtx = self.nodes[0].createrawtransaction(inputs=inputs, outputs={address: 1})\r\n```\r\n",
      "created_at": "2022-05-17T11:42:00Z",
      "updated_at": "2022-05-17T11:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874708737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874708737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874710885",
      "pull_request_review_id": 975300366,
      "id": 874710885,
      "node_id": "PRRC_kwDOABII5840Iwdl",
      "diff_hunk": "@@ -200,20 +201,20 @@ def createrawtransaction_tests(self):\n         # sequence number out of range\n         for invalid_seq in [-1, 4294967296]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': invalid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             assert_raises_rpc_error(-8, 'Invalid parameter, sequence number is out of range',\n                                     self.nodes[0].createrawtransaction, inputs, outputs)\n         # with valid sequence number\n         for valid_seq in [1000, 4294967294]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': valid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n             decrawtx = self.nodes[0].decoderawtransaction(rawtx)\n             assert_equal(decrawtx['vin'][0]['sequence'], valid_seq)\n \n         # Test `createrawtransaction` invalid `outputs`\n-        address = self.nodes[0].getnewaddress()\n-        address2 = self.nodes[0].getnewaddress()\n+        address = getnewdestination()[2]\n+        address2 = getnewdestination()[2]",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 129,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, since you are touching this maybe move `address2` to where it is first used\r\n```diff\r\n         address = getnewdestination()[2]\r\n-        address2 = getnewdestination()[2]\r\n         assert_raises_rpc_error(-1, \"JSON value is not an array as expected\", self.nodes[0].createrawtransaction, [], 'foo')\r\n         self.nodes[0].createrawtransaction(inputs=[], outputs={})  # Should not throw for backwards compatibility\r\n         self.nodes[0].createrawtransaction(inputs=[], outputs=[])\r\n@@ -246,6 +242,7 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n             self.nodes[2].createrawtransaction(inputs=[{'txid': TXID, 'vout': 9}], outputs=[{address: 99}]),\r\n         )\r\n         # Two outputs\r\n+        address2 = getnewdestination()[2]\r\n         tx = tx_from_hex(self.nodes[2].createrawtransaction(inputs=[{'txid': TXID, 'vout': 9}], outputs=OrderedDict([(address, 99), (address2, 99)])))\r\n```\r\n",
      "created_at": "2022-05-17T11:44:32Z",
      "updated_at": "2022-05-17T11:57:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874710885",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874710885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874820566",
      "pull_request_review_id": 975479510,
      "id": 874820566,
      "node_id": "PRRC_kwDOABII5840JLPW",
      "diff_hunk": "@@ -200,20 +201,20 @@ def createrawtransaction_tests(self):\n         # sequence number out of range\n         for invalid_seq in [-1, 4294967296]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': invalid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             assert_raises_rpc_error(-8, 'Invalid parameter, sequence number is out of range',\n                                     self.nodes[0].createrawtransaction, inputs, outputs)\n         # with valid sequence number\n         for valid_seq in [1000, 4294967294]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': valid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 120,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": 874708737,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this is unclear, it might be clearer to change this everywhere where`getnewdestination` is used (in a separate pull)?",
      "created_at": "2022-05-17T13:32:08Z",
      "updated_at": "2022-05-17T13:32:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874820566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874820566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874821317",
      "pull_request_review_id": 975480570,
      "id": 874821317,
      "node_id": "PRRC_kwDOABII5840JLbF",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Let me know if you are stuck on this and I can take a closer look myself.",
      "created_at": "2022-05-17T13:32:49Z",
      "updated_at": "2022-05-17T13:32:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874821317",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874821317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874822912",
      "pull_request_review_id": 975482857,
      "id": 874822912,
      "node_id": "PRRC_kwDOABII5840JL0A",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm working on it, I'll let you know, thanks 😄 ",
      "created_at": "2022-05-17T13:34:09Z",
      "updated_at": "2022-05-17T13:34:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874822912",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874822912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874835621",
      "pull_request_review_id": 975501668,
      "id": 874835621,
      "node_id": "PRRC_kwDOABII5840JO6l",
      "diff_hunk": "@@ -200,20 +201,20 @@ def createrawtransaction_tests(self):\n         # sequence number out of range\n         for invalid_seq in [-1, 4294967296]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': invalid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             assert_raises_rpc_error(-8, 'Invalid parameter, sequence number is out of range',\n                                     self.nodes[0].createrawtransaction, inputs, outputs)\n         # with valid sequence number\n         for valid_seq in [1000, 4294967294]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': valid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 120,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": 874708737,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, and/or maybe have it return a dict: `getnewdestination()['address']`",
      "created_at": "2022-05-17T13:44:24Z",
      "updated_at": "2022-05-17T13:44:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r874835621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874835621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875697962",
      "pull_request_review_id": 976673290,
      "id": 875697962,
      "node_id": "PRRC_kwDOABII5840Mhcq",
      "diff_hunk": "@@ -62,44 +62,51 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n         self.supports_cli = False\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        if self.is_wallet_compiled():\n+            if self.options.descriptors:\n+                self.skip_if_no_sqlite()\n+            else:\n+                self.skip_if_no_bdb()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "f9d5b497727bbb1e0b8851bb37abffaa51e08c27",
      "in_reply_to_id": 864592742,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be ok now :)",
      "created_at": "2022-05-18T09:50:08Z",
      "updated_at": "2022-05-18T09:50:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r875697962",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875697962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875699507",
      "pull_request_review_id": 976675487,
      "id": 875699507,
      "node_id": "PRRC_kwDOABII5840Mh0z",
      "diff_hunk": "@@ -200,20 +201,20 @@ def createrawtransaction_tests(self):\n         # sequence number out of range\n         for invalid_seq in [-1, 4294967296]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': invalid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}\n             assert_raises_rpc_error(-8, 'Invalid parameter, sequence number is out of range',\n                                     self.nodes[0].createrawtransaction, inputs, outputs)\n         # with valid sequence number\n         for valid_seq in [1000, 4294967294]:\n             inputs = [{'txid': TXID, 'vout': 1, 'sequence': valid_seq}]\n-            outputs = {self.nodes[0].getnewaddress(): 1}\n+            outputs = {getnewdestination()[2]: 1}",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 120,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "6672cebfb10da112eaca29b4ff0a0a4438749624",
      "in_reply_to_id": 874708737,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks!\r\nFrom a quick `git grep` it seems to me the usage of `getnewdestination` is clear in the other tests:\r\n```\r\ntest/functional/feature_coinstatsindex.py:    getnewdestination,\r\ntest/functional/feature_coinstatsindex.py:        reorg_blocks = self.generatetoaddress(index_node, 2, getnewdestination()[2])\r\ntest/functional/interface_rest.py:    getnewdestination,\r\ntest/functional/interface_rest.py:        txid, _ = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=int(0.1 * COIN))\r\ntest/functional/interface_rest.py:        txid, _ = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=int(0.1 * COIN))\r\ntest/functional/p2p_filter.py:    getnewdestination,\r\ntest/functional/p2p_filter.py:        block_hash = self.generatetoscriptpubkey(getnewdestination()[1])\r\ntest/functional/p2p_filter.py:        self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=7 * COIN)\r\ntest/functional/p2p_filter.py:            txid, _ = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=7 * COIN)\r\ntest/functional/p2p_filter.py:            block_hash = self.generatetoscriptpubkey(getnewdestination()[1])\r\ntest/functional/rpc_createmultisig.py:    getnewdestination,\r\ntest/functional/rpc_createmultisig.py:            self.final = getnewdestination()[2]\r\ntest/functional/rpc_createmultisig.py:        pk0 = getnewdestination()[0].hex()\r\ntest/functional/rpc_createmultisig.py:        pk1 = getnewdestination()[0].hex()\r\ntest/functional/rpc_createmultisig.py:        pk2 = getnewdestination()[0].hex()\r\ntest/functional/rpc_rawtransaction.py:    getnewdestination,\r\ntest/functional/rpc_rawtransaction.py:            address = getnewdestination()[2]\r\ntest/functional/rpc_rawtransaction.py:            address = getnewdestination()[2]\r\ntest/functional/rpc_rawtransaction.py:        address = getnewdestination()[2]\r\ntest/functional/rpc_rawtransaction.py:        address2 = getnewdestination()[2]\r\ntest/functional/rpc_scantxoutset.py:    getnewdestination,\r\ntest/functional/rpc_scantxoutset.py:        pubk1, spk_P2SH_SEGWIT, addr_P2SH_SEGWIT = getnewdestination(\"p2sh-segwit\")\r\ntest/functional/rpc_scantxoutset.py:        pubk2, spk_LEGACY, addr_LEGACY = getnewdestination(\"legacy\")\r\ntest/functional/rpc_scantxoutset.py:        pubk3, spk_BECH32, addr_BECH32 = getnewdestination(\"bech32\")\r\ntest/functional/test_framework/wallet.py:def getnewdestination(address_type='bech32'):\r\n```",
      "created_at": "2022-05-18T09:51:49Z",
      "updated_at": "2022-05-18T09:51:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r875699507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875699507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875806353",
      "pull_request_review_id": 976828507,
      "id": 875806353,
      "node_id": "PRRC_kwDOABII5840M76R",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:\n+            self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 48,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm. Does this mean this test won't be run even if the bdb is compiled, unless the user specifies `--legacy-wallet`?\r\n\r\nI think it would be better to just run this test if bdb is compiled, no?",
      "created_at": "2022-05-18T11:59:49Z",
      "updated_at": "2022-05-18T12:04:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r875806353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875806353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875810492",
      "pull_request_review_id": 976828507,
      "id": 875810492,
      "node_id": "PRRC_kwDOABII5840M868",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm. I guess it is not possible to just run the test with the wallet that was compiled, since this will break if both bdb and sqlite are compiled.\r\n\r\nAn alternative would be to duplicate the test here once for sqlite and once with bdb? Otherwise, a user will need to run the whole test twice just to test both wallet implementations.\r\n\r\nAnother alternative would be to move this to one of the wallet tests?",
      "created_at": "2022-05-18T12:04:37Z",
      "updated_at": "2022-05-18T12:04:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r875810492",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875810492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876111046",
      "pull_request_review_id": 977272138,
      "id": 876111046,
      "node_id": "PRRC_kwDOABII5840OGTG",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just realized I can create the wallets manually inside the tests:\r\n```python\r\n    def signrawtransactionwithwallet_tests(self):\r\n        for descriptors in [True, False]:\r\n            if not descriptors and not self.is_bdb_compiled():\r\n                pass\r\n            if descriptors and not self.is_sqlite_compiled():\r\n                pass\r\n            wallet_name = \"descriptors\" if descriptors else \"legacy\"\r\n            self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=descriptors)\r\n            wallet = self.nodes[0].get_wallet_rpc(wallet_name)\r\n            for type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\r\n                # etc...\r\n```\r\n\r\nThis tests all the wallets that's compiled for, but I'm not sure if it's clean - maybe moving those in the wallet tests, as you suggested, is cleaner?",
      "created_at": "2022-05-18T16:34:39Z",
      "updated_at": "2022-05-18T16:34:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r876111046",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876111046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878659716",
      "pull_request_review_id": 980799595,
      "id": 878659716,
      "node_id": "PRRC_kwDOABII5840X0iE",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it might be cleaner, but a bit more work.",
      "created_at": "2022-05-21T07:34:59Z",
      "updated_at": "2022-05-21T07:34:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r878659716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878659716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881631374",
      "pull_request_review_id": 984780423,
      "id": 881631374,
      "node_id": "PRRC_kwDOABII5840jKCO",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not exactly an immediate solution, but is there a reason that `signrawtransactionwithwallet_tests` are not part of `rpc_signrawtransaction.py`? From my understanding, this issue will also come up for [anyone tackling that non-wallet tests convertion](https://github.com/bitcoin/bitcoin/issues/20078#issuecomment-1059931323), so maybe an other alternative would be to move this to `rpc_signrawtransaction.py`?",
      "created_at": "2022-05-25T13:08:02Z",
      "updated_at": "2022-05-25T16:22:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r881631374",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881631374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881646263",
      "pull_request_review_id": 984802569,
      "id": 881646263,
      "node_id": "PRRC_kwDOABII5840jNq3",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, since `rpc_signrawtransaction.py` can't be converted to the MiniWallet (as all the tests in the file require the Core wallet), we could go with moving both `signrawtransactionwithwallet_tests` and `raw_multisig_transaction_legacy_tests`, I like it :) ",
      "created_at": "2022-05-25T13:21:36Z",
      "updated_at": "2022-05-25T13:21:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r881646263",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881646263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881699356",
      "pull_request_review_id": 984880110,
      "id": 881699356,
      "node_id": "PRRC_kwDOABII5840jaoc",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that part of `rpc_signrawtransaction.py` can be converted, similar to how `rpc_signmessage.py` was converted in https://github.com/bitcoin/bitcoin/pull/22641. So by moving `signrawtransactionwithwallet_tests` we'll need to deal with this issue only once (while imo moving the test to a more suitable location). \r\n\r\nI don't think that is neccesary to move `raw_multisig_transaction_legacy_tests` as it doesn't need more work, it just needs the previous `not self.options.descriptors` conditional clause instead of `self.requires_wallet`.",
      "created_at": "2022-05-25T14:06:51Z",
      "updated_at": "2022-05-25T14:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r881699356",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881699356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883540934",
      "pull_request_review_id": 987404760,
      "id": 883540934,
      "node_id": "PRRC_kwDOABII5840qcPG",
      "diff_hunk": "@@ -260,71 +256,49 @@ def createrawtransaction_tests(self):\n \n     def sendrawtransaction_tests(self):\n         self.log.info(\"Test sendrawtransaction with missing input\")\n-        inputs = [{'txid': TXID, 'vout': 1}]  # won't exist\n-        outputs = {self.nodes[0].getnewaddress(): 4.998}\n-        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n-        rawtx = self.nodes[2].signrawtransactionwithwallet(rawtx)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 211,
      "original_position": 139,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "ddf22ff911a354b34411d029572339a2e3d03261",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you can keep this test as-is and just remove this line and replace the call to getnewaddress",
      "created_at": "2022-05-27T11:47:14Z",
      "updated_at": "2022-05-27T11:47:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r883540934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883540934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 316,
      "original_line": 316,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883541038",
      "pull_request_review_id": 987404760,
      "id": 883541038,
      "node_id": "PRRC_kwDOABII5840qcQu",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:\n+            self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 48,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875806353,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "was this addressed?",
      "created_at": "2022-05-27T11:47:23Z",
      "updated_at": "2022-05-27T11:47:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r883541038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883541038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585292",
      "pull_request_review_id": 987467781,
      "id": 883585292,
      "node_id": "PRRC_kwDOABII5840qnEM",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:\n+            self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 48,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875806353,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't see this comment, sorry! \r\n\r\nIf you don't specify any flag, the `test_framework` will pick `self.options.descriptors` for you, preferring BDB if it's compiled:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/66bb4df4105945b907a81da0886a1206070554e1/test/functional/test_framework/test_framework.py#L215-L224\r\n\r\nIf you specify `--descriptors` instead, the test won't be run. \r\n\r\nSo, the test will be run if the user doesn't specify any flag and bdb is compiled, or if the user specifies `--legacy-wallet`",
      "created_at": "2022-05-27T12:51:16Z",
      "updated_at": "2022-05-27T12:51:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r883585292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585489",
      "pull_request_review_id": 987468039,
      "id": 883585489,
      "node_id": "PRRC_kwDOABII5840qnHR",
      "diff_hunk": "@@ -260,71 +256,49 @@ def createrawtransaction_tests(self):\n \n     def sendrawtransaction_tests(self):\n         self.log.info(\"Test sendrawtransaction with missing input\")\n-        inputs = [{'txid': TXID, 'vout': 1}]  # won't exist\n-        outputs = {self.nodes[0].getnewaddress(): 4.998}\n-        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n-        rawtx = self.nodes[2].signrawtransactionwithwallet(rawtx)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 211,
      "original_position": 139,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "ddf22ff911a354b34411d029572339a2e3d03261",
      "in_reply_to_id": 883540934,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, thanks! ",
      "created_at": "2022-05-27T12:51:29Z",
      "updated_at": "2022-05-27T12:51:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r883585489",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 316,
      "original_line": 316,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585735",
      "pull_request_review_id": 987468393,
      "id": 883585735,
      "node_id": "PRRC_kwDOABII5840qnLH",
      "diff_hunk": "@@ -62,44 +65,36 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n+        if self.requires_wallet:",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 41,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "66dfa27fe8d68a423ce7e64da05090f1b410fcdc",
      "in_reply_to_id": 875810492,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 76f0542a2ae4fd9af7f29d84d89eac1817d47871",
      "created_at": "2022-05-27T12:51:46Z",
      "updated_at": "2022-05-27T12:51:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r883585735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883585735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884144563",
      "pull_request_review_id": 988529535,
      "id": 884144563,
      "node_id": "PRRC_kwDOABII5840svmz",
      "diff_hunk": "@@ -62,44 +65,34 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet and not self.options.descriptors:\n             self.raw_multisig_transaction_legacy_tests()\n \n     def getrawtransaction_tests(self):\n-        addr = self.nodes[1].getnewaddress()\n-        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        tx = self.wallet.send_self_transfer(from_node=self.nodes[1])\n+        self.sync_all()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 53,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "5a6cd726cc56ca26b7af01322d1a344df86cebf6",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason that this is not `from_node=self.nodes[0]`? As that would remove the need for `self.sync_all()`. Or alternatively generate the block from `node[1]`.",
      "created_at": "2022-05-28T14:56:31Z",
      "updated_at": "2022-05-28T14:59:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r884144563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884144563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884165495",
      "pull_request_review_id": 988546784,
      "id": 884165495,
      "node_id": "PRRC_kwDOABII5840s0t3",
      "diff_hunk": "@@ -62,44 +65,34 @@ def set_test_params(self):\n         # whitelist all peers to speed up tx relay / mempool sync\n         for args in self.extra_args:\n             args.append(\"-whitelist=noban@127.0.0.1\")\n+        self.requires_wallet = self.is_specified_wallet_compiled()\n \n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n-        self.generate(self.nodes[2], 1)\n+        self.generate(self.wallet, 10)\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        for amount in [1.5, 1.0, 5.0]:\n-            self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n-        self.sync_all()\n-        self.generate(self.nodes[0], 5)\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n-        self.signrawtransactionwithwallet_tests()\n         self.sendrawtransaction_tests()\n         self.sendrawtransaction_testmempoolaccept_tests()\n         self.decoderawtransaction_tests()\n         self.transaction_version_number_tests()\n-        if not self.options.descriptors:\n+        if self.requires_wallet and not self.options.descriptors:\n             self.raw_multisig_transaction_legacy_tests()\n \n     def getrawtransaction_tests(self):\n-        addr = self.nodes[1].getnewaddress()\n-        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        tx = self.wallet.send_self_transfer(from_node=self.nodes[1])\n+        self.sync_all()",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": null,
      "original_position": 53,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "5a6cd726cc56ca26b7af01322d1a344df86cebf6",
      "in_reply_to_id": 884144563,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> As that would remove the need for self.sync_all()\r\n\r\nI think it would still be needed, as we're calling `getrawtransaction` below, and we want every node to be aware of the tx (`sync_all` syncs both the mempools and the blocks)\r\n\r\nEDIT: Oh, no, you're right. `generate` calls `sync_all` anyways, so sending from `node[0]` would need a `sync_all` less. Updating the code :) ",
      "created_at": "2022-05-28T18:36:10Z",
      "updated_at": "2022-05-28T18:42:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r884165495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884165495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884845737",
      "pull_request_review_id": 989374076,
      "id": 884845737,
      "node_id": "PRRC_kwDOABII5840vayp",
      "diff_hunk": "@@ -334,6 +334,56 @@ def test_signing_with_cltv(self):\n         assert_equal(signed[\"complete\"], True)\n         self.nodes[0].sendrawtransaction(signed[\"hex\"])\n \n+    def signrawtransactionwithwallet_tests(self):",
      "path": "test/functional/rpc_signrawtransaction.py",
      "position": null,
      "original_position": 4,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "813b643e36bd3bf2a21156ed83a30b33d7703167",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like the test could use renaming and the logging updated In the first commit? maybe something like this\r\n```diff\r\ndiff --git a/test/functional/rpc_signrawtransaction.py b/test/functional/rpc_signrawtransaction.py\r\nindex 29cb116793..8da2cfa72b 100755\r\n--- a/test/functional/rpc_signrawtransaction.py\r\n+++ b/test/functional/rpc_signrawtransaction.py\r\n@@ -334,10 +334,10 @@ class SignRawTransactionsTest(BitcoinTestFramework):\r\n         assert_equal(signed[\"complete\"], True)\r\n         self.nodes[0].sendrawtransaction(signed[\"hex\"])\r\n \r\n-    def signrawtransactionwithwallet_tests(self):\r\n+    def test_signing_with_missing_prevtx_info(self):\r\n         txid = \"1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000\"\r\n         for type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\r\n-            self.log.info(f\"Test signrawtransactionwithwallet with missing prevtx info ({type})\")\r\n+            self.log.info(f\"Test signing with missing prevtx info ({type})\")\r\n             addr = self.nodes[0].getnewaddress(\"\", type)\r\n             addrinfo = self.nodes[0].getaddressinfo(addr)\r\n             pubkey = addrinfo[\"scriptPubKey\"]\r\n@@ -393,7 +393,7 @@ class SignRawTransactionsTest(BitcoinTestFramework):\r\n         self.test_fully_signed_tx()\r\n         self.test_signing_with_csv()\r\n         self.test_signing_with_cltv()\r\n-        self.signrawtransactionwithwallet_tests()\r\n+        self.test_signing_with_missing_prevtx_info()\r\n```\r\n\r\n```\r\n$ test/functional/rpc_signrawtransaction.py \r\n2022-05-30T13:39:10.050000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_ukdy99c_\r\n2022-05-30T13:39:10.954000Z TestFramework (INFO): Test valid raw transaction with one input\r\n2022-05-30T13:39:10.958000Z TestFramework (INFO): Test script verification errors\r\n2022-05-30T13:39:10.969000Z TestFramework (INFO): Test signing transaction to P2SH-P2WSH addresses without wallet\r\n2022-05-30T13:39:12.667000Z TestFramework (INFO): Test with a P2PKH script as the witnessScript\r\n2022-05-30T13:39:12.822000Z TestFramework (INFO): Test with a P2PK script as the witnessScript\r\n2022-05-30T13:39:12.970000Z TestFramework (INFO): Test OP_1NEGATE (0x4f) satisfies BIP62 minimal push standardness rule\r\n2022-05-30T13:39:12.972000Z TestFramework (INFO): Test correct error reporting when trying to sign a locked output\r\n2022-05-30T13:39:13.519000Z TestFramework (INFO): Test signing a fully signed transaction does nothing\r\n2022-05-30T13:39:14.504000Z TestFramework (INFO): Test signing a transaction containing a fully signed CSV input\r\n2022-05-30T13:39:15.920000Z TestFramework (INFO): Test signing a transaction containing a fully signed CLTV input\r\n2022-05-30T13:39:16.368000Z TestFramework (INFO): Test signing with missing prevtx info (bech32)\r\n2022-05-30T13:39:16.458000Z TestFramework (INFO): Test signing with missing prevtx info (p2sh-segwit)\r\n2022-05-30T13:39:16.558000Z TestFramework (INFO): Test signing with missing prevtx info (legacy)\r\n2022-05-30T13:39:16.699000Z TestFramework (INFO): Stopping nodes\r\n2022-05-30T13:39:16.904000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_ukdy99c_ on exit\r\n2022-05-30T13:39:16.904000Z TestFramework (INFO): Tests successful\r\n```\r\n",
      "created_at": "2022-05-30T13:42:45Z",
      "updated_at": "2022-05-30T13:43:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r884845737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884845737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884849543",
      "pull_request_review_id": 989379512,
      "id": 884849543,
      "node_id": "PRRC_kwDOABII5840vbuH",
      "diff_hunk": "@@ -334,6 +334,56 @@ def test_signing_with_cltv(self):\n         assert_equal(signed[\"complete\"], True)\n         self.nodes[0].sendrawtransaction(signed[\"hex\"])\n \n+    def signrawtransactionwithwallet_tests(self):",
      "path": "test/functional/rpc_signrawtransaction.py",
      "position": null,
      "original_position": 4,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "813b643e36bd3bf2a21156ed83a30b33d7703167",
      "in_reply_to_id": 884845737,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also in the first commit\r\n```diff\r\ndiff --git a/test/functional/rpc_rawtransaction.py b/test/functional/rpc_rawtransaction.py\r\nindex fecb8310b9..54357ccd31 100755\r\n--- a/test/functional/rpc_rawtransaction.py\r\n+++ b/test/functional/rpc_rawtransaction.py\r\n@@ -7,7 +7,6 @@\r\n Test the following RPCs:\r\n    - getrawtransaction\r\n    - createrawtransaction\r\n-   - signrawtransactionwithwallet\r\n    - sendrawtransaction\r\n    - decoderawtransaction\r\n \"\"\"\r\n```\r\n\r\nEdit: hm, there are still a few in `raw_multisig_transaction_legacy_tests()` so perhaps never mind",
      "created_at": "2022-05-30T13:47:00Z",
      "updated_at": "2022-05-30T13:49:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r884849543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884849543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884886667",
      "pull_request_review_id": 989431394,
      "id": 884886667,
      "node_id": "PRRC_kwDOABII5840vkyL",
      "diff_hunk": "@@ -334,6 +334,56 @@ def test_signing_with_cltv(self):\n         assert_equal(signed[\"complete\"], True)\n         self.nodes[0].sendrawtransaction(signed[\"hex\"])\n \n+    def signrawtransactionwithwallet_tests(self):",
      "path": "test/functional/rpc_signrawtransaction.py",
      "position": null,
      "original_position": 4,
      "commit_id": "e8959000b63db4f2a21579fd4be27618c5fbd5b9",
      "original_commit_id": "813b643e36bd3bf2a21156ed83a30b33d7703167",
      "in_reply_to_id": 884845737,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Edit: hm, there are still a few in raw_multisig_transaction_legacy_tests() so perhaps never mind\r\n\r\nYeah, I'd say it's better to leave it :) ",
      "created_at": "2022-05-30T14:27:38Z",
      "updated_at": "2022-05-30T14:27:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25044#discussion_r884886667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884886667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    }
  ]
}