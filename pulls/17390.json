{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390",
    "id": 337082199,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3MDgyMTk5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17390",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17390.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17390.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/286f197704e82045c762d332aba5d1ac52e0212d",
    "number": 17390,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Add util_ArgParsing test",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ArgsManager test coverage for parsing of integer and boolean values is\r\ncurrently very poor and doesn't give us a way of knowing whether changes to\r\nArgsManager may unintentionally break backwards compatibility, so this adds a\r\nnew test to catch regressions.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-11-05T23:53:58Z",
    "updated_at": "2021-12-16T14:12:21Z",
    "closed_at": "2019-11-06T16:01:44Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-11-06T16:01:44Z",
    "merge_commit_sha": "286f197704e82045c762d332aba5d1ac52e0212d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/argparse-test",
      "ref": "pr/argparse-test",
      "sha": "286f197704e82045c762d332aba5d1ac52e0212d",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 8,
        "watchers_count": 8,
        "size": 229522,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:24Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2023-05-05T12:10:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "86771d431054efb780a2be4a83a6952530c14875",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 54,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 13,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODZmMTk3NzA0ZTgyMDQ1Yzc2MmQzMzJhYmE1ZDFhYzUyZTAyMTJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/286f197704e82045c762d332aba5d1ac52e0212d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/286f197704e82045c762d332aba5d1ac52e0212d",
      "tree": {
        "sha": "e96ac07356eca4d53bec32d29aa231cd05057db6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e96ac07356eca4d53bec32d29aa231cd05057db6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e204dc11b562c2cf31d320774a4dcbe49f3b6468",
          "sha": "e204dc11b562c2cf31d320774a4dcbe49f3b6468",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e204dc11b562c2cf31d320774a4dcbe49f3b6468"
        }
      ],
      "message": "Add util_ArgParsing test\n\nArgsManager test coverage for parsing of integer and boolean values is\ncurrently very poor and doesn't give us a way of knowing whether changes to\nArgsManager may unintentionally break backwards compatibility, so this adds a\nnew test to catch regressions.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-11-05T23:41:49Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-11-05T23:41:49Z"
      },
      "sha": "286f197704e82045c762d332aba5d1ac52e0212d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2773477351,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3MzQ3NzM1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773477351",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T00:13:19Z"
    },
    {
      "event": "labeled",
      "id": 2773537268,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzM1MzcyNjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773537268",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T00:43:06Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 312280729,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEyMjgwNzI5",
      "url": null,
      "actor": null,
      "commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#pullrequestreview-312280729",
      "submitted_at": "2019-11-06T09:08:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
    },
    {
      "event": "renamed",
      "id": 2775345397,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mjc3NTM0NTM5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775345397",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T13:40:10Z",
      "rename": {
        "from": "Add util_ArgParsing test",
        "to": "test: Add util_ArgParsing test"
      }
    },
    {
      "event": "commented",
      "id": 550312942,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDMxMjk0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550312942",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T13:40:16Z",
      "updated_at": "2019-11-06T13:40:16Z",
      "author_association": "MEMBER",
      "body": "ACK 9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550312942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2775474267,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3NTQ3NDI2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775474267",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T14:15:15Z"
    },
    {
      "event": "commented",
      "id": 550328156,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDMyODE1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550328156",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T14:15:55Z",
      "updated_at": "2019-11-06T15:02:11Z",
      "author_association": "MEMBER",
      "body": "Updated 9c1b60bc0793207295a8355df83ffcf094aa77c8 -> fc76edec6140be51cfc1b44900aaf0139fdc4950 ([`pr/argparse-test.2`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.2) -> [`pr/argparse-test.3`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/argparse-test.2..pr/argparse-test.3)) to make comment a little clearer and avoid `99999` special case for int parsing\r\nUpdated fc76edec6140be51cfc1b44900aaf0139fdc4950 -> 286f197704e82045c762d332aba5d1ac52e0212d ([`pr/argparse-test.3`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.3) -> [`pr/argparse-test.4`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/argparse-test.3..pr/argparse-test.4)) with a handful more test cases",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550328156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2775649678,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3NTY0OTY3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775649678",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T15:00:51Z"
    },
    {
      "event": "reviewed",
      "id": 312493248,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEyNDkzMjQ4",
      "url": null,
      "actor": null,
      "commit_id": "fc76edec6140be51cfc1b44900aaf0139fdc4950",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fc76edec6140be51cfc1b44900aaf0139fdc4950, agree that splitting the cases now will lead to unnecessary discussions in this PR which adds a nice test - and surprising results to me. Also agree that the best place to discuss whether a case should be changed is in the respective PR.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#pullrequestreview-312493248",
      "submitted_at": "2019-11-06T15:02:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
    },
    {
      "event": "commented",
      "id": 550350215,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM1MDIxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550350215",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T15:03:50Z",
      "updated_at": "2019-11-06T15:03:50Z",
      "author_association": "MEMBER",
      "body": "ACK 286f197, more surprising results 😱 ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550350215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390"
    },
    {
      "event": "commented",
      "id": 550376486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM3NjQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550376486",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T16:00:49Z",
      "updated_at": "2019-11-06T16:00:49Z",
      "author_association": "MEMBER",
      "body": "ACK 286f197704e82045c762d332aba5d1ac52e0212d",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550376486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17390"
    },
    {
      "event": "referenced",
      "id": 2775894936,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3NzU4OTQ5MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775894936",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6f4e2473579168dffd46d54fa1eedd287395200b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f4e2473579168dffd46d54fa1eedd287395200b",
      "created_at": "2019-11-06T16:01:43Z"
    },
    {
      "event": "merged",
      "id": 2775894995,
      "node_id": "MDExOk1lcmdlZEV2ZW50Mjc3NTg5NDk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775894995",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/286f197704e82045c762d332aba5d1ac52e0212d",
      "created_at": "2019-11-06T16:01:44Z"
    },
    {
      "event": "closed",
      "id": 2775895011,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mjc3NTg5NTAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2775895011",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T16:01:44Z"
    },
    {
      "event": "referenced",
      "id": 3959275253,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTkyNzUyNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3959275253",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "06cb9dd7803ed99bd5cd446973b6c41d249c7fd2",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/06cb9dd7803ed99bd5cd446973b6c41d249c7fd2",
      "created_at": "2020-11-04T20:05:08Z"
    },
    {
      "event": "referenced",
      "id": 4944317093,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQzMTcwOTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944317093",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ff4ac6e033222efc11562b3d824ff41b8d2890f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4ff4ac6e033222efc11562b3d824ff41b8d2890f",
      "created_at": "2021-06-27T21:04:23Z"
    },
    {
      "event": "referenced",
      "id": 4944491462,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQ0OTE0NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944491462",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a853a0d922898e35d25bfa6a1de2c36882e8720",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/8a853a0d922898e35d25bfa6a1de2c36882e8720",
      "created_at": "2021-06-28T00:24:42Z"
    },
    {
      "event": "referenced",
      "id": 4950405210,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTA0MDUyMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4950405210",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "95c3972474dc2c424693a8e288d74ebb9e1dfadb",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/95c3972474dc2c424693a8e288d74ebb9e1dfadb",
      "created_at": "2021-06-29T00:06:16Z"
    },
    {
      "event": "locked",
      "id": 5778626195,
      "node_id": "LOE_lADOABII584e4ht6zwAAAAFYbtaT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778626195",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:12:21Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342982604",
      "pull_request_review_id": 312280729,
      "id": 342982604,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mjk4MjYwNA==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I really don't like setting these in stone. Let's test desired behavior. Instead of adding tests for the current insane behavior (which relies on implementation details of `atoi`), I think we need to work on getting errors to the user for these.",
      "created_at": "2019-11-06T09:08:30Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r342982604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342982604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343065919",
      "pull_request_review_id": 312390933,
      "id": 343065919,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA2NTkxOQ==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is easier to review \"fixes\" when they are also documented with test changes.",
      "created_at": "2019-11-06T12:24:32Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343065919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343065919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343068269",
      "pull_request_review_id": 312394114,
      "id": 343068269,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA2ODI2OQ==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure about that. It could just as well bite anyone that dares to change this parsing in the future. This behavior was never documented so no one should be relying on it.\r\n(and a test is essentially \"this should work\" documentation)",
      "created_at": "2019-11-06T12:30:30Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343068269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343068269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343081284",
      "pull_request_review_id": 312411665,
      "id": 343081284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA4MTI4NA==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I really don't like setting these in stone. \r\n\r\nLike Marco is saying the goal of the test is to make it **easier** not harder to fix these confusing parsings in the future. Easier as a developer because you can test the effects of your change with a simple make check, easier as a reviewer to underand the change. Easier as a developer because after implementing the desired behavior you don't have to write a new test to gain coverage, but can just update a line in the existing test.\r\n\r\nI agree with laanwj's objection broadly that it would be bad to add tests which indirectly rely on parsing behaviors, because they would be fragile and difficult to update when parsing is cleaned up. But this is a simple, direct test added specifically so we can be confident that when we intend to make parsing changes, they work as expected, and that when we intend to make other changes, we don't unknowingly break parsing.\r\n\r\nI'm still planning on reviewing #17385 today, too. Vast majority of changes there look very good and can go a new pr even if #17385 won't be reopened.",
      "created_at": "2019-11-06T13:01:56Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343081284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343081284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343083742",
      "pull_request_review_id": 312415069,
      "id": 343083742,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA4Mzc0Mg==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK, fair enough. To be clear I agree with adding this test conceptually, and some of the additional cases like \"spaces around the argument should be ignored\" seem decent\r\nbut say, we probably don't want a test for \"what atoi regards as whitespace depends on your locale\" :cry: \r\nanyhow, if this is with the understanding that these aren't supposed to be guaranteed to be supported for the infinite future, I'm ok with this list\r\n",
      "created_at": "2019-11-06T13:08:00Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343083742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343083742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343088006",
      "pull_request_review_id": 312420822,
      "id": 343088006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA4ODAwNg==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe a comment that says the tests are fragile and meant to be removed could help?",
      "created_at": "2019-11-06T13:17:36Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343088006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343088006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343092555",
      "pull_request_review_id": 312426806,
      "id": 343092555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzA5MjU1NQ==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Maybe a comment that says the tests are fragile and meant to be removed could help?\r\n\r\nThere is a general comment already that \"Some of these cases could be ambiguous or surprising to users, and might be worth triggering errors or warning in the future\", but I could also note something like \"// Confusing parsing, should be changed or disallowed in the future\" on specific cases if desired.\r\n\r\n> but say, we probably don't want a test for \"what atoi regards as whitespace depends on your locale\" \r\n\r\nI didn't think of that but definitely agree.",
      "created_at": "2019-11-06T13:27:06Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343092555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343092555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343115184",
      "pull_request_review_id": 312458317,
      "id": 343115184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzExNTE4NA==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> \"// Confusing parsing, should be changed or disallowed in the future\" on specific cases if desired.\r\n\r\nI think that's a good idea, to split the list into \"normal\" and \"expected\" cases and \"parser details leaking through please don't do this\" cases.\r\n",
      "created_at": "2019-11-06T14:12:39Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343115184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343115184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343140341",
      "pull_request_review_id": 312493248,
      "id": 343140341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzE0MDM0MQ==",
      "diff_hunk": "@@ -231,6 +231,55 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);",
      "path": "src/test/util_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "fc76edec6140be51cfc1b44900aaf0139fdc4950",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, if you have to push again maybe include `BOOST_CHECK(error.empty());`.",
      "created_at": "2019-11-06T14:56:07Z",
      "updated_at": "2019-11-06T15:02:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343140341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343140341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 242,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343140407",
      "pull_request_review_id": 312493351,
      "id": 343140407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzE0MDQwNw==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > \"// Confusing parsing, should be changed or disallowed in the future\" on specific cases if desired.\r\n> \r\n> I think that's a good idea, to split the list into \"normal\" and \"expected\" cases and \"parser details leaking through please don't do this\" cases.\r\n\r\nI started to do this, but wasn't actually sure which specific cases people may want to change in the future, and figured it would be best to leave decisions to future PRs actually implementing fixes, rather than add my opinions or speculation here. For example I think leading and trailing spaces should probably just be ignored and not made into errors, and probably `5.0` and `5.5` should be errors but maybe `5.` should be allowed. Unclear whether numbers with extra leading 0's should be allowed because maybe they could be mistaken for octal. Personally I think it's strange to interpret empty string `\"\"` as true and space `\" \"` as false (especially when after #15934 and #16545 we could begin to treat `-flag` and `-flag=` distinctly), and I also think we could support `true` `false` `yes` `no` for boolean flags in the future, but who knows what people are doing with existing bools today. Basically people could have opinions about every single case here except maybe the `0` case. Even the `5` case could arguably trigger an error or warning in the future if specified as the value to a boolean flag.",
      "created_at": "2019-11-06T14:56:14Z",
      "updated_at": "2019-11-06T15:00:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343140407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343140407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343150286",
      "pull_request_review_id": 312507150,
      "id": 343150286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzE1MDI4Ng==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I also think we could support true false yes no for boolean flags in the future\r\n\r\nSure, but even in that case, they probably shouldn't all evaluate as 0/false. `5.` and even `5.0` such at least do what could be remotely expected (truncating decimal). Accepting faux hexadecimal is pretty bad though (which is why I initially commented on this line specifically)\r\n\r\nBut I agree this might not be the place for this discussion. I'm sorry for starting this in the first place. I honestly didn't know anyone had such strong opinions about this, and would have let this sleeping dog lie if I knew.",
      "created_at": "2019-11-06T15:13:17Z",
      "updated_at": "2019-11-06T15:13:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343150286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343150286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343171747",
      "pull_request_review_id": 312536765,
      "id": 343171747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzE3MTc0Nw==",
      "diff_hunk": "@@ -231,6 +231,53 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-value\", ArgsManager::ALLOW_ANY}});\n+    std::string arg = \"-value=\" + str;\n+    const char* argv[] = {\"ignored\", arg.c_str()};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", false), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetBoolArg(\"-value\", true), expected_bool);\n+    BOOST_CHECK_EQUAL(test.GetArg(\"-value\", 99999), expected_int);\n+}\n+\n+// Test bool and int parsing. Some of these cases could be ambiguous or\n+// surprising to users, and might be worth triggering errors or warning in the\n+// future. But for now basic test coverage is useful to avoid breaking backwards\n+// compatibility unintentionally.\n+BOOST_AUTO_TEST_CASE(util_ArgParsing)\n+{\n+    TestParse(\"\", true, 0);\n+    TestParse(\" \", false, 0);\n+    TestParse(\"0\", false, 0);\n+    TestParse(\"0 \", false, 0);\n+    TestParse(\" 0\", false, 0);\n+    TestParse(\"+0\", false, 0);\n+    TestParse(\"-0\", false, 0);\n+    TestParse(\"5\", true, 5);\n+    TestParse(\"5 \", true, 5);\n+    TestParse(\" 5\", true, 5);\n+    TestParse(\"+5\", true, 5);\n+    TestParse(\"-5\", true, -5);\n+    TestParse(\"0.0\", false, 0);\n+    TestParse(\"0.5\", false, 0);\n+    TestParse(\"5.0\", true, 5);\n+    TestParse(\"5.5\", true, 5);\n+    TestParse(\"x\", false, 0);\n+    TestParse(\"x0\", false, 0);\n+    TestParse(\"x5\", false, 0);\n+    TestParse(\"0x\", false, 0);\n+    TestParse(\"5x\", true, 5);",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 43,
      "commit_id": "286f197704e82045c762d332aba5d1ac52e0212d",
      "original_commit_id": "9c1b60bc0793207295a8355df83ffcf094aa77c8",
      "in_reply_to_id": 342982604,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I honestly didn't know anyone had such strong opinions about this, and would have let this sleeping dog lie if I knew.\r\n\r\nHeh, I will talk to you all day about settings. But thanks for starting this. Previously, I assumed we actually had pretty good test coverage for parsing settings strings. I think filling the gap can prevent confusing and potentially dangerous bugs like https://github.com/bitcoin/bitcoin/issues/14523#issuecomment-431605226 in the future.\r\n\r\n> > I also think we could support true false yes no for boolean flags in the future\r\n> \r\n> Sure, but even in that case, they probably shouldn't all evaluate as 0/false. \r\n\r\nOf course yes. By \"support\" I meant interpret `true` as `true` instead of `false`",
      "created_at": "2019-11-06T15:48:46Z",
      "updated_at": "2019-11-06T15:51:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343171747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343171747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17390"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    }
  ]
}