{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408",
    "id": 1470565,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3MDU2NQ==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1408",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/1408.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/1408.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1408",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1408/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e60084cae3add85c54878bd6f620b41f107dc691",
    "number": 1408,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "CHub Rev. 3",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Due to several changes in master that would require rethinking decisions made in the second revision of CBlockStore (#771) and thus very large code changes to rebase, I decided it was better to redo and manually rebase and re-commit the parts that remain relevant, also decreasing the total size of the changes to just those required to get CHub working on master.  Some of the more disturbing changes can be added later after merge.\n\nThis is early in the process, but I thought I'd get it in the queue and let people review the commits as they come in and give feedback, if they wish.\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2012-06-01T01:50:24Z",
    "updated_at": "2021-09-08T10:12:06Z",
    "closed_at": "2012-07-05T20:15:26Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "f12b1911a5c3217d067fd57e7fbea097b8beec32",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "TheBlueMatt:cblockstore",
      "ref": "cblockstore",
      "sha": "e60084cae3add85c54878bd6f620b41f107dc691",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1443291,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDQzMjkx",
        "name": "bitcoin",
        "full_name": "TheBlueMatt/bitcoin",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bitcoin",
        "description": "Bitcoin (dont fork from here, fork from bitcoin/bitcoin)",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bitcoin",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bitcoin",
        "homepage": "http://www.bitcoin.org/",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 171686,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:23Z",
        "created_at": "2011-03-05T14:14:49Z",
        "updated_at": "2022-12-15T18:21:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "da1103f4f8288cffc9ea475254fdeb258f04de77",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 578,
    "deletions": 243,
    "changed_files": 18,
    "commits": 17,
    "review_comments": 6,
    "comments": 2
  },
  "events": [
    {
      "event": "subscribed",
      "id": 16713839,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2NzEzODM5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16713839",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-01T01:50:24Z"
    },
    {
      "event": "subscribed",
      "id": 16741822,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2NzQxODIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16741822",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-01T12:27:15Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzE3MzA4MDp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 6074405,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzQ0MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6074405",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-02T02:43:03Z",
      "updated_at": "2012-06-04T16:12:18Z",
      "author_association": "MEMBER",
      "body": "Updated with all the feedback so far.  Any further work (aside from bug-fixes) will be done on other branches, so this branch is ready for review.  Take special note of the last commit (and its very long commit message).\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#issuecomment-6074405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1408"
    },
    {
      "event": "subscribed",
      "id": 17269841,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MjY5ODQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17269841",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-08T14:47:54Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzE3MzA4Mzp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzE3MzA4Njp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzdlM2FmOGJhYzc2YzAwYmMwNjA5NDM2NDlkZWJkYWI0MGUwMzQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/877e3af8bac76c00bc060943649debdab40e0344",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/877e3af8bac76c00bc060943649debdab40e0344",
      "tree": {
        "sha": "5749ad1ee14d33fcde07f1e3dcf573860cac57a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5749ad1ee14d33fcde07f1e3dcf573860cac57a4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/883a310904b3d36c9d74b887d47c14a072ebae7d",
          "sha": "883a310904b3d36c9d74b887d47c14a072ebae7d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/883a310904b3d36c9d74b887d47c14a072ebae7d"
        }
      ],
      "message": "Add a CHub for communication from p2p/wallet to blockstore.\n\nThe goal is for p2p code/wallet to only get information/communicate\ninformation about the blockchain through CHub, giving Bitcoin a\nmuch more clearly-defined structure and allowing for the removal\nof a ton of the current global mess.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:20:42Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-05-29T15:15:38Z"
      },
      "sha": "877e3af8bac76c00bc060943649debdab40e0344"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDJkMGYxNWEyZDdhZDc3NzkyODc2NDNjN2YwODdjYTU0NmUzYTI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c42d0f15a2d7ad7779287643c7f087ca546e3a25",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c42d0f15a2d7ad7779287643c7f087ca546e3a25",
      "tree": {
        "sha": "fe4f1706adf29237bf3e418fc37451ac7074af7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe4f1706adf29237bf3e418fc37451ac7074af7d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/877e3af8bac76c00bc060943649debdab40e0344",
          "sha": "877e3af8bac76c00bc060943649debdab40e0344",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/877e3af8bac76c00bc060943649debdab40e0344"
        }
      ],
      "message": "Add a basic CHubListener that can be extended.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:20:42Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T15:47:30Z"
      },
      "sha": "c42d0f15a2d7ad7779287643c7f087ca546e3a25"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDM1OTNjNTAwZjkzMWFhYjcyYWY1OTI5YTcyYmZjYzdjYTk5MzU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd3593c500f931aab72af5929a72bfcc7ca99355",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd3593c500f931aab72af5929a72bfcc7ca99355",
      "tree": {
        "sha": "8f6154598c7ea2d2bb82a600f61079be9c5c6f9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f6154598c7ea2d2bb82a600f61079be9c5c6f9d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c42d0f15a2d7ad7779287643c7f087ca546e3a25",
          "sha": "c42d0f15a2d7ad7779287643c7f087ca546e3a25",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c42d0f15a2d7ad7779287643c7f087ca546e3a25"
        }
      ],
      "message": "Add EmitBlock/CommitBlock functionality to CHub.\n\nReplacing ProcessBlock with EmitBlock, and creating callbacks for\nCommitBlock.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:21Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T00:45:00Z"
      },
      "sha": "dd3593c500f931aab72af5929a72bfcc7ca99355"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmQzOWE4ODczMDhmZDY1YjYyMDUxMzgwNDc3NTI4ZWY2ZjZiOWY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6d39a887308fd65b62051380477528ef6f6b9f6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d39a887308fd65b62051380477528ef6f6b9f6",
      "tree": {
        "sha": "0b62a999a63e580caacf1058e9f6c4b07319c2d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b62a999a63e580caacf1058e9f6c4b07319c2d4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd3593c500f931aab72af5929a72bfcc7ca99355",
          "sha": "dd3593c500f931aab72af5929a72bfcc7ca99355",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd3593c500f931aab72af5929a72bfcc7ca99355"
        }
      ],
      "message": "Fix typo",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:22Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T01:00:42Z"
      },
      "sha": "e6d39a887308fd65b62051380477528ef6f6b9f6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTljNTI4Y2VjNjg0OThkMjAyZjZmMTdkNTc4MjViZGNmODlkMGM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/159c528cec68498d202f6f17d57825bdcf89d0c5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/159c528cec68498d202f6f17d57825bdcf89d0c5",
      "tree": {
        "sha": "0ef1ac35b26268a4fa934763f3b331f57a9a22ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ef1ac35b26268a4fa934763f3b331f57a9a22ba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6d39a887308fd65b62051380477528ef6f6b9f6",
          "sha": "e6d39a887308fd65b62051380477528ef6f6b9f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d39a887308fd65b62051380477528ef6f6b9f6"
        }
      ],
      "message": "Add HandleCommitBlock to net.cpp & move stuff from main.cpp to it",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:23Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T01:21:59Z"
      },
      "sha": "159c528cec68498d202f6f17d57825bdcf89d0c5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGE0NDBhZTc5Y2Q4NjVlMjM1YjhjNTlhOGI0YWQ1OTc4MWNjNDJh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94a440ae79cd865e235b8c59a8b4ad59781cc42a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/94a440ae79cd865e235b8c59a8b4ad59781cc42a",
      "tree": {
        "sha": "11508385e1ca31fed5a6b545d08d31d2cf2d153a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11508385e1ca31fed5a6b545d08d31d2cf2d153a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/159c528cec68498d202f6f17d57825bdcf89d0c5",
          "sha": "159c528cec68498d202f6f17d57825bdcf89d0c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/159c528cec68498d202f6f17d57825bdcf89d0c5"
        }
      ],
      "message": "Remove uiInterface.NotifyBlocksChanged and replace with CommitBlock\n\nAlso rename NotifyBlocksChanged to NotifyNewBlock and remove from\nthe uiInterface signals list.\n\nThis removes some functionality, but NofiyBlocksChanged was not\nused anyway, so it shouldn't matter.  That said, if it is ever\nneeded, it would be fairly trivial to add a new callback for it\nin CHub.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:24Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T01:43:29Z"
      },
      "sha": "94a440ae79cd865e235b8c59a8b4ad59781cc42a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWFkMmU5OWJiYzQ4YjAzMTk3ZDM4OWQ1OTI0M2E5ZWZjMWFkZDI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aad2e99bbc48b03197d389d59243a9efc1add29",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1aad2e99bbc48b03197d389d59243a9efc1add29",
      "tree": {
        "sha": "ca27ab024da3f0a52462195983dcc0ef17c7c207",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca27ab024da3f0a52462195983dcc0ef17c7c207"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94a440ae79cd865e235b8c59a8b4ad59781cc42a",
          "sha": "94a440ae79cd865e235b8c59a8b4ad59781cc42a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/94a440ae79cd865e235b8c59a8b4ad59781cc42a"
        }
      ],
      "message": "Add EmitAlert/CommitAlert functionality to CHub.\n\nReplace ProcessAlert with calls to EmitAlert and create callbacks\nfor CommitAlert.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:25Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T02:03:49Z"
      },
      "sha": "1aad2e99bbc48b03197d389d59243a9efc1add29"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzY1ZWNhNzhjNDQ1OGZiYjg4ZWM1YzE2NDFkNjgyNmQ4MGQ4ZDY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5365eca78c4458fbb88ec5c1641d6826d80d8d68",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5365eca78c4458fbb88ec5c1641d6826d80d8d68",
      "tree": {
        "sha": "cc1a22f1111c64a35ba2e36ede92ad7940eda039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc1a22f1111c64a35ba2e36ede92ad7940eda039"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aad2e99bbc48b03197d389d59243a9efc1add29",
          "sha": "1aad2e99bbc48b03197d389d59243a9efc1add29",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1aad2e99bbc48b03197d389d59243a9efc1add29"
        }
      ],
      "message": "Use CommitAlert in qt/clientmodel.cpp",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:26Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T02:23:55Z"
      },
      "sha": "5365eca78c4458fbb88ec5c1641d6826d80d8d68"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGEwYmVkMWYyOWJkM2MwNDAxMTkxZWE5YzhlYTc0OWZmZjQzNmNl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7da0bed1f29bd3c0401191ea9c8ea749fff436ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7da0bed1f29bd3c0401191ea9c8ea749fff436ce",
      "tree": {
        "sha": "941c9cb687edff60a0ae5384bcd90710c38bf5c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/941c9cb687edff60a0ae5384bcd90710c38bf5c4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5365eca78c4458fbb88ec5c1641d6826d80d8d68",
          "sha": "5365eca78c4458fbb88ec5c1641d6826d80d8d68",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5365eca78c4458fbb88ec5c1641d6826d80d8d68"
        }
      ],
      "message": "Add RegisterRemoveAlert functionality to CHub.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:27Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T02:30:27Z"
      },
      "sha": "7da0bed1f29bd3c0401191ea9c8ea749fff436ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjZjMjA2NTYxMzY1NjY4ZjMxYTc1YzhlZjQ2ZDZhY2IxZThkMmYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f6c206561365668f31a75c8ef46d6acb1e8d2f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8f6c206561365668f31a75c8ef46d6acb1e8d2f3",
      "tree": {
        "sha": "150594ccdfac38e998b7e5d4cf4cb29ab1a71ac1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/150594ccdfac38e998b7e5d4cf4cb29ab1a71ac1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7da0bed1f29bd3c0401191ea9c8ea749fff436ce",
          "sha": "7da0bed1f29bd3c0401191ea9c8ea749fff436ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7da0bed1f29bd3c0401191ea9c8ea749fff436ce"
        }
      ],
      "message": "Replace NotifyAlertChanged with RegisterRemoveAlert.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:28Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T02:34:35Z"
      },
      "sha": "8f6c206561365668f31a75c8ef46d6acb1e8d2f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmMzMGRjYTFhMzkxOGVhYzg1ZDQ1NTMwODgxN2ZiZDMzZWM3MzQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6c30dca1a3918eac85d455308817fbd33ec7345",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6c30dca1a3918eac85d455308817fbd33ec7345",
      "tree": {
        "sha": "a1cc950b9806fab1b272207290b1cfdc0c876486",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1cc950b9806fab1b272207290b1cfdc0c876486"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f6c206561365668f31a75c8ef46d6acb1e8d2f3",
          "sha": "8f6c206561365668f31a75c8ef46d6acb1e8d2f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8f6c206561365668f31a75c8ef46d6acb1e8d2f3"
        }
      ],
      "message": "Convert Orphan Tx storage to CTransactions from CDataStreams.\n\nThere was no reason to use CDataStream as the transaction was\nalready being serialized/deserialized several times, with this\nchange, transactions coming in over network are deserialized once\nwhen received, and then only reserialized in the call to\nRelayMessage, which will be called in a callback thread, not\nblocking cs_main.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:30Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T23:12:27Z"
      },
      "sha": "c6c30dca1a3918eac85d455308817fbd33ec7345"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGM4OTA2NmE4MDQyZTQyY2EwNGVkYTE5NTkzYjRmYjRlMjNmZTMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dc89066a8042e42ca04eda19593b4fb4e23fe31",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9dc89066a8042e42ca04eda19593b4fb4e23fe31",
      "tree": {
        "sha": "f8d080f263170faa60906c21150f23350d8733a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8d080f263170faa60906c21150f23350d8733a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6c30dca1a3918eac85d455308817fbd33ec7345",
          "sha": "c6c30dca1a3918eac85d455308817fbd33ec7345",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6c30dca1a3918eac85d455308817fbd33ec7345"
        }
      ],
      "message": "Add a cs around mapAlreadyAskedFor.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:30Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T22:42:10Z"
      },
      "sha": "9dc89066a8042e42ca04eda19593b4fb4e23fe31"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzMzZWVjYTJjMzhiYjkwMjQyM2U5OWJkMjZiZWY1MDlhOTkwYjU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac33eeca2c38bb902423e99bd26bef509a990b58",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac33eeca2c38bb902423e99bd26bef509a990b58",
      "tree": {
        "sha": "642efb9af43dd459b8c98b9294b96a8838393c02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/642efb9af43dd459b8c98b9294b96a8838393c02"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dc89066a8042e42ca04eda19593b4fb4e23fe31",
          "sha": "9dc89066a8042e42ca04eda19593b4fb4e23fe31",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9dc89066a8042e42ca04eda19593b4fb4e23fe31"
        }
      ],
      "message": "Add basic EmitTransaction/CommitTransaction functionality to CHub.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-10T20:32:31Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T22:29:16Z"
      },
      "sha": "ac33eeca2c38bb902423e99bd26bef509a990b58"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmZiNjBmNjRkYzY4ZDFlZTU1OGIxNWVhMzJmOWU0NjkwZDRlMjhk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d",
      "tree": {
        "sha": "6fbffaa7ac32254b8951c8ec3e2811747297ff26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fbffaa7ac32254b8951c8ec3e2811747297ff26"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac33eeca2c38bb902423e99bd26bef509a990b58",
          "sha": "ac33eeca2c38bb902423e99bd26bef509a990b58",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac33eeca2c38bb902423e99bd26bef509a990b58"
        }
      ],
      "message": "Use EmitTransaction instead of AcceptToMemoryPool in sendrawtx.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-11T17:30:26Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T23:47:53Z"
      },
      "sha": "3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjc3YzkzZjIzNTNhYmQ3MWQyNWMyNjMyODc3YmVkOWQxYmRhMWVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c277c93f2353abd71d25c2632877bed9d1bda1ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c277c93f2353abd71d25c2632877bed9d1bda1ef",
      "tree": {
        "sha": "e0c9f603551548b39f27a88d3c85ef637dd85616",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0c9f603551548b39f27a88d3c85ef637dd85616"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d",
          "sha": "3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3bfb60f64dc68d1ee558b15ea32f9e4690d4e28d"
        }
      ],
      "message": "Add CWallet support for registering with a CHub.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-11T17:30:26Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T01:10:10Z"
      },
      "sha": "c277c93f2353abd71d25c2632877bed9d1bda1ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTZmZmJmZTlkYmMxMWI5NTk3NzYyYjkyOGM1NWRiMzQ4MGNkYmQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/916ffbfe9dbc11b9597762b928c55db3480cdbd9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/916ffbfe9dbc11b9597762b928c55db3480cdbd9",
      "tree": {
        "sha": "4ab954173767aacc0e1e686d1d640d3916fb1a08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ab954173767aacc0e1e686d1d640d3916fb1a08"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c277c93f2353abd71d25c2632877bed9d1bda1ef",
          "sha": "c277c93f2353abd71d25c2632877bed9d1bda1ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c277c93f2353abd71d25c2632877bed9d1bda1ef"
        }
      ],
      "message": "Use HandleCommitTransactionToMemoryPool instead of SyncWithWallets.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-11T17:30:28Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-01T23:41:48Z"
      },
      "sha": "916ffbfe9dbc11b9597762b928c55db3480cdbd9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjAwODRjYWUzYWRkODVjNTQ4NzhiZDZmNjIwYjQxZjEwN2RjNjkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e60084cae3add85c54878bd6f620b41f107dc691",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e60084cae3add85c54878bd6f620b41f107dc691",
      "tree": {
        "sha": "e6d11d62fab89e707fd2837a807baa1d7deee44b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6d11d62fab89e707fd2837a807baa1d7deee44b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/916ffbfe9dbc11b9597762b928c55db3480cdbd9",
          "sha": "916ffbfe9dbc11b9597762b928c55db3480cdbd9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/916ffbfe9dbc11b9597762b928c55db3480cdbd9"
        }
      ],
      "message": "Remove AcceptToMemoryPool and replace with EmitTransaction.\n\n * This removes not only CTransaction::AcceptToMemoryPool, but\n    also CMerkleTx::AcceptToMemoryPool. It also moves\n    CWalletTx::AcceptWalletTransaction to wallet.cpp\n\n * This adds a fCheckInputs flag to EmitTransaction, which is\n    similar to the fCheckInputs flag to AcceptToMemoryPool,\n    however, it has stricter guidlines that it should only be set\n    \"when transaction is a supporting tx for one of our own.\"\n    Additionally, \"fCheckInputs is ignored (and set to true)\n    if !IsInitialBlockDownload() && !fClient\"\n\n    As a part of these guidelines,\n    CWalletTx::AcceptWalletTransaction calls EmitTransaction with\n    fCheckInputs set to true (the default) on the final\n    transaction, whereas it used to call with fCheckInputs set to\n    false. This has the important side-effect of allowing wallet-\n    generated transactions to end up getting AddOrphanTx'd.\n    However, if a supporting transaction to one of our own had\n    previously been AddOrphanTx'd, it would immediately be added\n    to memory pool as it is \"a supporting tx for one of our own\"\n    and thus is re-added with fCheckInputs=false.\n\n    Note that the possibility of a wallet transaction getting\n    AddOrphanTx'd is very low, and should only happen if\n    a) a transaction's input is a generate and we are missing that\n       block (note that no transactions should be generated with a\n       generation input if we don't have that block anyway).\n    b) We match the !IsInitialBlockDownload() && !fClient check,\n       are not caught up to the latest block, and an input is in a\n       block we do not yet have (possible after the last\n       checkpoint). This situation is temporary and should resolve\n       itself once we catch up (though AddOrphanTx'd transactions\n       may be permanently orphaned).\n\n    Largely, these guidelines are there because there is no reason\n    to add a transaction without checking its inputs, as we have\n    those inputs available, and checking them as any other\n    transaction would provides additional sanity-checks.\n\n * A second EmitTransaction was added with tx of type CMerkleTx.\n    This keeps behavior of CMerkleTx::AcceptToMemoryPool the same\n    in fClient mode. Note that new behavior was invented for\n    CHub::EmitTransaction(CTransaction&...) in fClient mode,\n    namely that ClientConnectInputs is only checked if\n    fCheckInputs is true. This was chosen to make emitting a\n    transaction possible in fClient mode even if its inputs are\n    not available, but could be changed if support for that is not\n    needed when fClient mode is actually implemented.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-11T17:30:28Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-02T01:16:48Z"
      },
      "sha": "e60084cae3add85c54878bd6f620b41f107dc691"
    },
    {
      "event": "subscribed",
      "id": 18020601,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MDIwNjAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18020601",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-19T01:33:56Z"
    },
    {
      "event": "commented",
      "id": 6789402,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODk0MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6789402",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-07-05T20:15:26Z",
      "updated_at": "2012-07-05T20:15:26Z",
      "author_association": "MEMBER",
      "body": "This needs rebasing, and Im not going to keep rebasing this stuff without any interest in eventually merging.  If it ever gets interest, I may reopen.\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#issuecomment-6789402",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1408"
    },
    {
      "event": "closed",
      "id": 19425565,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTk0MjU1NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19425565",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-07-05T20:15:26Z"
    },
    {
      "event": "referenced",
      "id": 1372009672,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNzIwMDk2NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1372009672",
      "actor": {
        "login": "suprnurd",
        "id": 21205640,
        "node_id": "MDQ6VXNlcjIxMjA1NjQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/21205640?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/suprnurd",
        "html_url": "https://github.com/suprnurd",
        "followers_url": "https://api.github.com/users/suprnurd/followers",
        "following_url": "https://api.github.com/users/suprnurd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/suprnurd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/suprnurd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/suprnurd/subscriptions",
        "organizations_url": "https://api.github.com/users/suprnurd/orgs",
        "repos_url": "https://api.github.com/users/suprnurd/repos",
        "events_url": "https://api.github.com/users/suprnurd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/suprnurd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "559f8421b11fc3d2a3b53bc4173bdf1609aebc72",
      "commit_url": "https://api.github.com/repos/chaincoin-legacy/chaincoin/commits/559f8421b11fc3d2a3b53bc4173bdf1609aebc72",
      "created_at": "2017-12-05T06:49:52Z"
    },
    {
      "event": "referenced",
      "id": 2089789777,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwODk3ODk3Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2089789777",
      "actor": {
        "login": "lateminer",
        "id": 9951982,
        "node_id": "MDQ6VXNlcjk5NTE5ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9951982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lateminer",
        "html_url": "https://github.com/lateminer",
        "followers_url": "https://api.github.com/users/lateminer/followers",
        "following_url": "https://api.github.com/users/lateminer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lateminer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lateminer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lateminer/subscriptions",
        "organizations_url": "https://api.github.com/users/lateminer/orgs",
        "repos_url": "https://api.github.com/users/lateminer/repos",
        "events_url": "https://api.github.com/users/lateminer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lateminer/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ec0217a2ee2946cdb6788f3eabf2c4f4be946df4",
      "commit_url": "https://api.github.com/repos/lateminer/bitcoin/commits/ec0217a2ee2946cdb6788f3eabf2c4f4be946df4",
      "created_at": "2019-01-22T19:46:48Z"
    },
    {
      "event": "referenced",
      "id": 3308367866,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzMDgzNjc4NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3308367866",
      "actor": {
        "login": "lateminer",
        "id": 9951982,
        "node_id": "MDQ6VXNlcjk5NTE5ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9951982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lateminer",
        "html_url": "https://github.com/lateminer",
        "followers_url": "https://api.github.com/users/lateminer/followers",
        "following_url": "https://api.github.com/users/lateminer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lateminer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lateminer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lateminer/subscriptions",
        "organizations_url": "https://api.github.com/users/lateminer/orgs",
        "repos_url": "https://api.github.com/users/lateminer/repos",
        "events_url": "https://api.github.com/users/lateminer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lateminer/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8bd8c2ca939a48cc2d098afdddf109831e28b82d",
      "commit_url": "https://api.github.com/repos/lateminer/bitcoin/commits/8bd8c2ca939a48cc2d098afdddf109831e28b82d",
      "created_at": "2020-05-06T12:57:40Z"
    },
    {
      "event": "locked",
      "id": 5271277382,
      "node_id": "LOE_lADOABII584ASf_QzwAAAAE6MU9G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271277382",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:12:06Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914353",
      "pull_request_review_id": null,
      "id": 914353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNDM1Mw==",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#ifndef BITCOIN_BLOCKSTORE_H\n+#define BITCOIN_BLOCKSTORE_H\n+\n+// This API is considered stable ONLY for existing bitcoin codebases,\n+// any futher uses are not yet supported.\n+// This API is subject to change dramatically overnight, do not\n+// depend on it for anything.\n+",
      "path": "src/blockstore.h",
      "position": null,
      "original_position": 8,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "8ee69728898100400bcb8295c8666b8e101990e8",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the big-picture purpose of CBlockStore ?\nIs it for storing blocks in the database?\nBeing told about new blocks and keeping track of the best chain?\nBoth? Something else?\n\nAnd what's up with ProcessCallbacks-- I'm not seeing why that's necessary, or why BlockStore would expose threads, but maybe that's because I don't understand the big-picture purpose/design.\n",
      "created_at": "2012-06-01T12:27:15Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r914353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914376",
      "pull_request_review_id": null,
      "id": 914376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNDM3Ng==",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#ifndef BITCOIN_BLOCKSTORE_H\n+#define BITCOIN_BLOCKSTORE_H\n+\n+// This API is considered stable ONLY for existing bitcoin codebases,\n+// any futher uses are not yet supported.\n+// This API is subject to change dramatically overnight, do not\n+// depend on it for anything.\n+",
      "path": "src/blockstore.h",
      "position": null,
      "original_position": 8,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "8ee69728898100400bcb8295c8666b8e101990e8",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The purpose of CBlockStore is to act as a hub (oops, Im gonna rename it to CHub) between p2p, wallet and the block storage.  The block storage (including being told about new blocks, holding the chain (or not, if SPV)) will be hidden behind CHub, as seen by p2p and wallet.  A CHub can then callback to a CBlockStore/CSPVBlockStore/etc.  Eventually, you could even run p2p and wallet clients in separate processes for additional security, that is the long-long-long term goal.\nIn terms of exposing threads, that is more for added functionality later which cleans up the API a bit (when you need to run n regular threads, and possibly multiple callback threads).\n",
      "created_at": "2012-06-01T12:33:26Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r914376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951182",
      "pull_request_review_id": null,
      "id": 951182,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTE4Mg==",
      "diff_hunk": "@@ -57,7 +58,7 @@ class CKeyPool\n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n-class CWallet : public CCryptoKeyStore\n+class CWallet : public CCryptoKeyStore, public CHubListener",
      "path": "src/wallet.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "b8fe0a02623063f261b87d82fb0ace0b426706af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose CHubListener could be derived protected. No class except CWallet should be able to call RegisterWithHub and related functions. The callback functions in CHubListener can be made protected directly I suppose - they are only intended to be overridden, not to be called by anyone except via CHub's signals.\n",
      "created_at": "2012-06-08T14:47:54Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r951182",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 61,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951216",
      "pull_request_review_id": null,
      "id": 951216,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTIxNg==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+#ifndef BITCOIN_HUB_H\n+#define BITCOIN_HUB_H\n+\n+// This API is considered stable ONLY for existing bitcoin codebases,\n+// any futher uses are not yet supported.\n+// This API is subject to change dramatically overnight, do not\n+// depend on it for anything.\n+\n+#include <boost/signals2/signal.hpp>\n+#include <queue>\n+\n+#include \"uint256.h\"\n+#include \"sync.h\"\n+\n+class CBlock;\n+class CMerkleTx;\n+class CTransaction;\n+class CAlert;\n+\n+class CHubSignalTable\n+{\n+public:\n+    CCriticalSection cs_sigCommitBlock;\n+    boost::signals2::signal<void (const CBlock&)> sigCommitBlock;\n+\n+    CCriticalSection cs_sigCommitTransactionToMemoryPool;\n+    boost::signals2::signal<void (const CTransaction&)> sigCommitTransactionToMemoryPool;\n+\n+    CCriticalSection cs_sigCommitAlert;\n+    boost::signals2::signal<void (const CAlert&)> sigCommitAlert;\n+    CCriticalSection cs_sigRemoveAlert;\n+    boost::signals2::signal<void (const CAlert&)> sigRemoveAlert;\n+\n+    CCriticalSection cs_sigAskForBlocks;\n+    boost::signals2::signal<void (const uint256, const uint256)> sigAskForBlocks;\n+};\n+\n+class CHubCallback\n+{\n+public:\n+    virtual ~CHubCallback() {};\n+    virtual void Signal(CHubSignalTable& sigtable) =0;\n+};\n+\n+class CHub\n+{\n+private:\n+    CHubSignalTable sigtable;\n+\n+    CCriticalSection cs_callbacks;\n+    std::queue<CHubCallback*> queueCallbacks;\n+    CSemaphore sem_callbacks;\n+\n+    bool fProcessCallbacks;\n+    int nCallbackThreads;\n+\n+    void SubmitCallbackCommitBlock(const CBlock &block);\n+\n+    bool EmitTransactionInner(CTransaction& tx, bool fCheckInputs);\n+    void SubmitCallbackCommitTransactionToMemoryPool(const CTransaction &tx);\n+\n+    void SubmitCallbackCommitAlert(const CAlert &alert);\n+    void SubmitCallbackRemoveAlert(const CAlert &alert);\n+public:\n+//Util methods\n+    // Loops to process callbacks (do not call manually, automatically started in the constructor)\n+        void ProcessCallbacks();\n+    // Stop callback processing threads \n+    void StopProcessCallbacks();\n+\n+    CHub();\n+    ~CHub()  { StopProcessCallbacks(); }\n+\n+//Register methods\n+    // Register a handler (of the form void f(const CBlock& block)) to be called after every block commit\n+    void RegisterCommitBlock(boost::function<void (const CBlock&)> func) { LOCK(sigtable.cs_sigCommitBlock); sigtable.sigCommitBlock.connect(func); }\n+\n+    // Register a handler (of the form void f(const CTransaction& tx)) to be called after every transaction commit to memory pool\n+    void RegisterCommitTransactionToMemoryPool(boost::function<void (const CTransaction&)> func) { LOCK(sigtable.cs_sigCommitTransactionToMemoryPool); sigtable.sigCommitTransactionToMemoryPool.connect(func); }\n+\n+    // Register a handler (of the form void f(const CAlert& alert)) to be called after every alert commit\n+    void RegisterCommitAlert(boost::function<void (const CAlert&)> func) { LOCK(sigtable.cs_sigCommitAlert); sigtable.sigCommitAlert.connect(func); }\n+    // Register a handler (of the form void f(const CAlert& alert)) to be called after every alert cancel or expire\n+    void RegisterRemoveAlert(boost::function<void (const CAlert&)> func) { LOCK(sigtable.cs_sigRemoveAlert); sigtable.sigRemoveAlert.connect(func); }\n+\n+    // Register a handler (of the form void f(const uint256 hashEnd, const uint256 hashOriginator)) to be called when we need to ask for blocks up to hashEnd\n+    //   Should always start from the best block (GetBestBlockIndex())\n+    //   The receiver should check if it has a peer which is known to have a block with hash hashOriginator and if it does, it should\n+    //    send the block query to that node.\n+    void RegisterAskForBlocks(boost::function<void (const uint256, const uint256)> func) { LOCK(sigtable.cs_sigAskForBlocks); sigtable.sigAskForBlocks.connect(func); }\n+\n+//Blockchain access methods\n+    // Emit methods will verify the object, commit it to memory/disk and then place it in queue to\n+    //   be handled by listeners\n+    bool EmitBlock(CBlock& block);\n+    bool EmitAlert(CAlert& alert);\n+    // Emitting transactions already in a block is acceptable only if it is a supporting\n+    //   transaction for one of our own\n+    // fCheckInputs is ignored (and set to true) if !IsInitialBlockDownload() && !fClient\n+    // Only set fCheckInputs when tx is a supporting transaction for one of our own\n+    bool EmitTransaction(CMerkleTx& tx, bool fCheckInputs=true);\n+    bool EmitTransaction(CTransaction& tx, bool fCheckInputs=true);\n+\n+//Connected wallet/etc access methods\n+\n+    // Ask that any listeners who have access to ask other nodes for blocks\n+    // (ie net) ask for all blocks between GetBestBlockIndex() and hashEnd\n+    // If hashOriginator is specified, then a node which is known to have a block\n+    //   with that hash will be the one to get the block request, unless no connected\n+    //   nodes are known to have this block, in which case a random one will be queried.\n+    void AskForBlocks(const uint256 hashEnd, const uint256 hashOriginator);\n+};\n+\n+// A simple generic CHub Listening class which can be extended, if you wish",
      "path": "src/hub.h",
      "position": 114,
      "original_position": 114,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "b8fe0a02623063f261b87d82fb0ace0b426706af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps we could have a class CHubClient, which has a pointer to a CHub in a protected field, and public methods EmitSome, which forward to the connected CHub (or maybe the EmitSome method's implementations could even be moved to CHubCLient). class CHubListener could then extend CHubClient and reuse the phub pointer in it.\n\nAdvantage: inside CWallet, you can simply call Emit\\* directory without qualifying with the phub pointer, while guaranteeing that the wallet will get callbacks from the same hub as the one it submits to.\n",
      "created_at": "2012-06-08T14:51:12Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r951216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957355",
      "pull_request_review_id": null,
      "id": 957355,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzM1NQ==",
      "diff_hunk": "@@ -57,7 +58,7 @@ class CKeyPool\n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n-class CWallet : public CCryptoKeyStore\n+class CWallet : public CCryptoKeyStore, public CHubListener",
      "path": "src/wallet.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "b8fe0a02623063f261b87d82fb0ace0b426706af",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently pwalletMain->RegisterWithHub(phub) is called from init.cpp, and I kinda like that design.  That said, I did go ahead and make the callback virtual functions protected.\n",
      "created_at": "2012-06-10T20:34:01Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r957355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 61,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957359",
      "pull_request_review_id": null,
      "id": 957359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzM1OQ==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+#ifndef BITCOIN_HUB_H\n+#define BITCOIN_HUB_H\n+\n+// This API is considered stable ONLY for existing bitcoin codebases,\n+// any futher uses are not yet supported.\n+// This API is subject to change dramatically overnight, do not\n+// depend on it for anything.\n+\n+#include <boost/signals2/signal.hpp>\n+#include <queue>\n+\n+#include \"uint256.h\"\n+#include \"sync.h\"\n+\n+class CBlock;\n+class CMerkleTx;\n+class CTransaction;\n+class CAlert;\n+\n+class CHubSignalTable\n+{\n+public:\n+    CCriticalSection cs_sigCommitBlock;\n+    boost::signals2::signal<void (const CBlock&)> sigCommitBlock;\n+\n+    CCriticalSection cs_sigCommitTransactionToMemoryPool;\n+    boost::signals2::signal<void (const CTransaction&)> sigCommitTransactionToMemoryPool;\n+\n+    CCriticalSection cs_sigCommitAlert;\n+    boost::signals2::signal<void (const CAlert&)> sigCommitAlert;\n+    CCriticalSection cs_sigRemoveAlert;\n+    boost::signals2::signal<void (const CAlert&)> sigRemoveAlert;\n+\n+    CCriticalSection cs_sigAskForBlocks;\n+    boost::signals2::signal<void (const uint256, const uint256)> sigAskForBlocks;\n+};\n+\n+class CHubCallback\n+{\n+public:\n+    virtual ~CHubCallback() {};\n+    virtual void Signal(CHubSignalTable& sigtable) =0;\n+};\n+\n+class CHub\n+{\n+private:\n+    CHubSignalTable sigtable;\n+\n+    CCriticalSection cs_callbacks;\n+    std::queue<CHubCallback*> queueCallbacks;\n+    CSemaphore sem_callbacks;\n+\n+    bool fProcessCallbacks;\n+    int nCallbackThreads;\n+\n+    void SubmitCallbackCommitBlock(const CBlock &block);\n+\n+    bool EmitTransactionInner(CTransaction& tx, bool fCheckInputs);\n+    void SubmitCallbackCommitTransactionToMemoryPool(const CTransaction &tx);\n+\n+    void SubmitCallbackCommitAlert(const CAlert &alert);\n+    void SubmitCallbackRemoveAlert(const CAlert &alert);\n+public:\n+//Util methods\n+    // Loops to process callbacks (do not call manually, automatically started in the constructor)\n+        void ProcessCallbacks();\n+    // Stop callback processing threads \n+    void StopProcessCallbacks();\n+\n+    CHub();\n+    ~CHub()  { StopProcessCallbacks(); }\n+\n+//Register methods\n+    // Register a handler (of the form void f(const CBlock& block)) to be called after every block commit\n+    void RegisterCommitBlock(boost::function<void (const CBlock&)> func) { LOCK(sigtable.cs_sigCommitBlock); sigtable.sigCommitBlock.connect(func); }\n+\n+    // Register a handler (of the form void f(const CTransaction& tx)) to be called after every transaction commit to memory pool\n+    void RegisterCommitTransactionToMemoryPool(boost::function<void (const CTransaction&)> func) { LOCK(sigtable.cs_sigCommitTransactionToMemoryPool); sigtable.sigCommitTransactionToMemoryPool.connect(func); }\n+\n+    // Register a handler (of the form void f(const CAlert& alert)) to be called after every alert commit\n+    void RegisterCommitAlert(boost::function<void (const CAlert&)> func) { LOCK(sigtable.cs_sigCommitAlert); sigtable.sigCommitAlert.connect(func); }\n+    // Register a handler (of the form void f(const CAlert& alert)) to be called after every alert cancel or expire\n+    void RegisterRemoveAlert(boost::function<void (const CAlert&)> func) { LOCK(sigtable.cs_sigRemoveAlert); sigtable.sigRemoveAlert.connect(func); }\n+\n+    // Register a handler (of the form void f(const uint256 hashEnd, const uint256 hashOriginator)) to be called when we need to ask for blocks up to hashEnd\n+    //   Should always start from the best block (GetBestBlockIndex())\n+    //   The receiver should check if it has a peer which is known to have a block with hash hashOriginator and if it does, it should\n+    //    send the block query to that node.\n+    void RegisterAskForBlocks(boost::function<void (const uint256, const uint256)> func) { LOCK(sigtable.cs_sigAskForBlocks); sigtable.sigAskForBlocks.connect(func); }\n+\n+//Blockchain access methods\n+    // Emit methods will verify the object, commit it to memory/disk and then place it in queue to\n+    //   be handled by listeners\n+    bool EmitBlock(CBlock& block);\n+    bool EmitAlert(CAlert& alert);\n+    // Emitting transactions already in a block is acceptable only if it is a supporting\n+    //   transaction for one of our own\n+    // fCheckInputs is ignored (and set to true) if !IsInitialBlockDownload() && !fClient\n+    // Only set fCheckInputs when tx is a supporting transaction for one of our own\n+    bool EmitTransaction(CMerkleTx& tx, bool fCheckInputs=true);\n+    bool EmitTransaction(CTransaction& tx, bool fCheckInputs=true);\n+\n+//Connected wallet/etc access methods\n+\n+    // Ask that any listeners who have access to ask other nodes for blocks\n+    // (ie net) ask for all blocks between GetBestBlockIndex() and hashEnd\n+    // If hashOriginator is specified, then a node which is known to have a block\n+    //   with that hash will be the one to get the block request, unless no connected\n+    //   nodes are known to have this block, in which case a random one will be queried.\n+    void AskForBlocks(const uint256 hashEnd, const uint256 hashOriginator);\n+};\n+\n+// A simple generic CHub Listening class which can be extended, if you wish",
      "path": "src/hub.h",
      "position": 114,
      "original_position": 114,
      "commit_id": "e60084cae3add85c54878bd6f620b41f107dc691",
      "original_commit_id": "b8fe0a02623063f261b87d82fb0ace0b426706af",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had originally made CHubListener do that as well, but, as it turns out, we only ever call EmitTransaction from CWalletTx::AcceptWalletTransaction (which calls EmitTransaction on each supporting transaction first), and making the hub pointer public so that CWalletTx can call pwallet->phub->EmitTransaction seems kinda ugly to me.  Thus a CHubClient would be unused (currently), but ACK on the idea probably for a P2P/Net class.  One could move AcceptWalletTransaction code to CWallet, as its only used twice, but I find that to also be ugly...  In the end, since having more than one CHub in a given process is entirely unsupported, it seems cleaner to just use the global phub, but it wouldnt be hard to pass a phub pointer to CWalletTx::EmitTransaction if we wanted to support that (though a CHubClient::phub should be private, whereas that would require it be protected, so, again, I find that ugly...)\n",
      "created_at": "2012-06-10T20:38:22Z",
      "updated_at": "2012-07-02T01:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1408#discussion_r957359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}