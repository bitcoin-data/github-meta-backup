{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
    "id": 677930065,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3OTMwMDY1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22340",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/22340.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/22340.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
    "number": 22340,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "p2p: Use legacy relaying to download blocks in blocks-only mode",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A blocks-only node does not participate in transaction relay to reduce its own bandwidth usage and therefore does not have a mempool. The use of compact blocks is not beneficial to such a node since it will always have to download full blocks. \r\n\r\nIn both high- and low-bandwidth relaying the `cmpctblock` message is sent. This represent a bandwidth overhead for blocks-only nodes because the `cmpctblock` message is several times larger in the average case than the equivalent `headers` or `inv` announcement. \r\n\r\n![compact blocks](https://raw.githubusercontent.com/bitcoin/bips/master/bip-0152/protocol-flow.png)\r\n\r\n>**Example:**\r\n>A block with 2000 txs results in a `cmpctblock` with 2000*6 bytes in short ids. This is several times larger than the equivalent 82 bytes for a `headers` message or 37 bytes for an `inv`.\r\n\r\n## Approach\r\n\r\nThis PR makes blocks-only nodes always use the legacy relaying to download new blocks.\r\nIt does so by making blocks-only nodes never initiate a high-bandwidth block relay connection by disabling the sending of `sendcmpct(1)`. Additionally a blocks-only node will never request a compact block using `getdata(CMPCT)`.\r\n\r\nA blocks-only node will continue to serve compact blocks to its peers in both high- and low-bandwidth mode.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2021-06-25T13:49:49Z",
    "updated_at": "2022-10-30T19:09:55Z",
    "closed_at": "2021-10-01T06:45:47Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "fe9f9eabf545f6637ccab5898fee9f03f8062bcd",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "dergoegge:nocmpct_blocksonly",
      "ref": "nocmpct_blocksonly",
      "sha": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 222378,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:23:38Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2023-05-05T12:10:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f000cdcf0aad9cf58e18bb63094bd8fcef89b372",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 142,
    "deletions": 1,
    "changed_files": 3,
    "commits": 5,
    "review_comments": 45,
    "comments": 35
  },
  "events": [
    {
      "event": "labeled",
      "id": 4940593607,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5NDA1OTM2MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4940593607",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-25T15:11:38Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 869016710,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTAxNjcxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869016710",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-26T15:12:51Z",
      "updated_at": "2021-06-26T15:12:51Z",
      "author_association": "MEMBER",
      "body": "Over the last 24h i ran a blocks-only node that saw 106 blocks and downloaded 3.8MB in `cmpctblock` messages. Thats an average of 12KB bytes per `cmpctblock` message received from three high-bandwidth peers. Only 26KB would have been downloaded if `headers` messages would have been used instead.\r\nAssuming an average block size of 1.38MB the `cmpctblock` messages represented **2.5%** of downloaded block data.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-869016710",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 871869724,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTg2OTcyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871869724",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z",
      "updated_at": "2021-07-01T02:46:44Z",
      "author_association": "MEMBER",
      "body": "@jnewbery @amitiuttarwar @sipa @ajtowns Any thoughts?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-871869724",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 4963086163,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk2MzA4NjE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086163",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "subscribed",
      "id": 4963086167,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NjMwODYxNjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086167",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "mentioned",
      "id": 4963086169,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk2MzA4NjE2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086169",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "subscribed",
      "id": 4963086173,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NjMwODYxNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086173",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "mentioned",
      "id": 4963086175,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk2MzA4NjE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086175",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "subscribed",
      "id": 4963086179,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NjMwODYxNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086179",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "mentioned",
      "id": 4963086182,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk2MzA4NjE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086182",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "subscribed",
      "id": 4963086183,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NjMwODYxODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4963086183",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T02:46:44Z"
    },
    {
      "event": "commented",
      "id": 872723147,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjcyMzE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872723147",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T05:20:06Z",
      "updated_at": "2021-07-02T05:20:06Z",
      "author_association": "MEMBER",
      "body": "Seems workable? Compact blocks should be seeing:\r\n\r\n * 12kB for short tx ids per cmpctblock message announcing a new block (for each high bw peer per block)\r\n * 2kB per getblocktxn message asking for the tx data (per block)\r\n * ~0 overhead for blocktxn message providing the block txns\r\n\r\nWhich should be ~38kB per block or about 5MB per day/144 blocks. Legacy block relay should just be:\r\n\r\n * ~0 overhead for headers message\r\n * ~0 overhead for GETDATA MSG_BLOCK request\r\n * ~0 ovehead for BLOCK message\r\n\r\nSo this makes sense to me.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-872723147",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 697997837,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk3OTk3ODM3",
      "url": null,
      "actor": null,
      "commit_id": "e5993385d554655e4faf094826546b4f0d71dc8b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Requesting HB mode or sending GETDATA(MSG_CMPCT_BLOCK) is wasteful (for both sender and reciever) if the node can't reconstruct compact blocks.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-697997837",
      "submitted_at": "2021-07-02T09:27:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4971084648,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDk3MTA4NDY0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4971084648",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T12:03:05Z"
    },
    {
      "event": "commented",
      "id": 872977968,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3Mjk3Nzk2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872977968",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T12:58:27Z",
      "updated_at": "2021-07-02T12:58:27Z",
      "author_association": "MEMBER",
      "body": "utACK 6dfee13f650521f7542df0926aff01af9ac6a328",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-872977968",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "renamed",
      "id": 4971352315,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDk3MTM1MjMxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4971352315",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T13:02:48Z",
      "rename": {
        "from": "Use legacy relaying to download blocks in blocks-only mode",
        "to": "p2p: Use legacy relaying to download blocks in blocks-only mode"
      }
    },
    {
      "event": "commented",
      "id": 875542706,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTU0MjcwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875542706",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-07T11:57:46Z",
      "updated_at": "2021-07-07T11:57:46Z",
      "author_association": "MEMBER",
      "body": "Is this true for transactions received via `sendrawtransaction`? What if some node, for whatever reason, receives all transactions, while having blocks-only mode?  For them, compact blocks are going to be beneficial, but this PR will disable it?",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-875542706",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 876644398,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjY0NDM5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876644398",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-08T18:14:02Z",
      "updated_at": "2021-07-08T18:14:02Z",
      "author_association": "MEMBER",
      "body": ">  For them, compact blocks are going to be beneficial, but this PR will disable it?\r\n\r\n@naumenkogs yes this PR would disable compact blocks even if txs were received through `sendrawtransaction` and i think overall that's ok since that seems like an edge case to me. I would presume most blocks-only nodes don't submit enough txs through `sendrawtransaction` for this to matter, especially not continuously so that most blocks contain many of those txs. Or if a node is broadcasting that many txs it might not care about the additional bandwidth?\r\n\r\n[1] Technically it would be possible for a blocks-only node to ask for compact blocks if its mempool size (significantly) exceeds the overhead of compact blocks.\r\n[2] A config option enabling compact blocks for those individual blocks-only nodes that heavily use  `sendrawtransaction` could also help.\r\n\r\nDo you think adding [1] or [2] to this PR would be worth it?",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-876644398",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 4996503959,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk5NjUwMzk1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4996503959",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-08T18:14:02Z"
    },
    {
      "event": "subscribed",
      "id": 4996503962,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5OTY1MDM5NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4996503962",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-08T18:14:02Z"
    },
    {
      "event": "commented",
      "id": 876930777,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjkzMDc3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876930777",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-09T05:46:09Z",
      "updated_at": "2021-07-09T05:46:09Z",
      "author_association": "MEMBER",
      "body": "I think [2] is better than [1].\r\n\r\nWhether we want to add a new config option for this use case or just implement what you suggested originally — my personal choice would be to ask for thoughts at the #bitcoin-core-dev meeting.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-876930777",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 877017862,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzAxNzg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877017862",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-09T08:36:04Z",
      "updated_at": "2021-07-09T08:36:04Z",
      "author_association": "MEMBER",
      "body": "> yes this PR would disable compact blocks even if txs were received through sendrawtransaction and i think overall that's ok since that seems like an edge case to me.\r\n\r\nI agree that this seems like an edge case that wouldn't actually be used. Compact blocks exist to improve propagation speed/efficiency when a node is participating in tx relay. I'd prefer not to add a configuration option that we don't expect to be used, or to increase the complexity of this PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-877017862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 877030117,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzAzMDExNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877030117",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-09T08:55:42Z",
      "updated_at": "2021-07-09T08:55:42Z",
      "author_association": "MEMBER",
      "body": ">I agree that this seems like an edge case that wouldn't actually be used. Compact blocks exist to improve propagation speed/efficiency when a node is participating in tx relay. I'd prefer not to add a configuration option that we don't expect to be used, or to increase the complexity of this PR.\r\n\r\nTo be clear, my worry is that some miners use the following setting:\r\n`A node in blocks-only mode with low-latency requirements (hence mining) is constantly fed with transactions via sendrawtransaction`, for whatever reason (e.g., they consider p2p tx relay insecure and disable it).\r\n\r\nI don't have any evidence of someone using this, just wanted to point out we are going to break this use case here, so I thought asking around makes sense.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-877030117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 882665490,
      "node_id": "IC_kwDOABII5840nGgS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/882665490",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-19T15:59:53Z",
      "updated_at": "2021-07-19T15:59:53Z",
      "author_association": "MEMBER",
      "body": "@naumenkogs That seems very unlikely to me.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-882665490",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5039375256,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzOTM3NTI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5039375256",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-19T15:59:53Z"
    },
    {
      "event": "subscribed",
      "id": 5039375264,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzkzNzUyNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5039375264",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-19T15:59:53Z"
    },
    {
      "event": "commented",
      "id": 885337899,
      "node_id": "IC_kwDOABII5840xS8r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/885337899",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-23T01:16:23Z",
      "updated_at": "2021-09-17T08:38:52Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20799](https://github.com/bitcoin/bitcoin/pull/20799) (net processing: Only support version 2 compact blocks by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-885337899",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 892702469,
      "node_id": "IC_kwDOABII5841NY8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892702469",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-04T14:23:09Z",
      "updated_at": "2021-08-04T14:23:09Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892702469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 892806688,
      "node_id": "IC_kwDOABII5841NyYg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892806688",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-04T16:39:21Z",
      "updated_at": "2021-08-04T16:39:21Z",
      "author_association": "MEMBER",
      "body": "utACK.\r\n\r\nPerhaps a new test case in `p2p_compactblocks.py` or `p2p_compactblocks_hb.py` might be a good addition here, or in a follow-up? This changes behaviour but doesn't fail any tests.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892806688",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 892863104,
      "node_id": "IC_kwDOABII5841OAKA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892863104",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-04T18:06:21Z",
      "updated_at": "2021-08-04T18:06:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 6dfee13f650521f7542df0926aff01af9ac6a328\r\nbut (as others have said) a test would be nice",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892863104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 722311718,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyMzExNzE4",
      "url": null,
      "actor": null,
      "commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\nAs others have mentioned a functional test covering this behaviour would be nice.\r\n\r\nI just have the following nits.",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-722311718",
      "submitted_at": "2021-08-04T18:07:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "reviewed",
      "id": 724682808,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0NjgyODA4",
      "url": null,
      "actor": null,
      "commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 6dfee13f650521f7542df0926aff01af9ac6a328",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-724682808",
      "submitted_at": "2021-08-06T20:16:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5126434212,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTEyNjQzNDIxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5126434212",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-08T08:42:30Z"
    },
    {
      "event": "reviewed",
      "id": 725414813,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1NDE0ODEz",
      "url": null,
      "actor": null,
      "commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "A few small suggestions on the new test.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-725414813",
      "submitted_at": "2021-08-09T15:53:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5131952180,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTEzMTk1MjE4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5131952180",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-09T20:44:37Z"
    },
    {
      "event": "commented",
      "id": 895531146,
      "node_id": "IC_kwDOABII5841YLiK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/895531146",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-09T20:45:59Z",
      "updated_at": "2021-08-09T20:45:59Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @jnewbery! I took all your suggestions.\r\n\r\nI also added two new test cases:\r\nOne to test that on regular low bandwidth connections (no blocksonly nodes involved) `getdata(CMPCT)` is still sent. 8b1b308555382ea1b7390615371ecaa066c4af3b\r\nAnd one to test that blocksonly nodes still serve compact blocks in hb and lb mode. 8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-895531146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5131960726,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTEzMTk2MDcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5131960726",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-09T20:46:00Z"
    },
    {
      "event": "subscribed",
      "id": 5131960733,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxMzE5NjA3MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5131960733",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-09T20:46:00Z"
    },
    {
      "event": "reviewed",
      "id": 726487585,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI2NDg3NTg1",
      "url": null,
      "actor": null,
      "commit_id": "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 8c4159aeccdad58a71ff61b3e21b26a4f24a6029\r\n\r\nThanks for being so responsive to review. I have a few more comments for your consideration inline. Nothing blocking.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-726487585",
      "submitted_at": "2021-08-10T14:55:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "commented",
      "id": 896164568,
      "node_id": "IC_kwDOABII5841amLY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896164568",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T17:13:48Z",
      "updated_at": "2021-08-10T21:25:02Z",
      "author_association": "MEMBER",
      "body": "Started looking at this PR.  Rebased to current master, debug build is clean, <strike>but the new test times out for me locally on every run (out of five).</strike>\r\n\r\n<details><summary>test output</summary><p>\r\n\r\n```\r\n$ test/functional/p2p_compactblocks_blocksonly.py \r\n2021-08-10T15:36:10.388000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_ypwy_8d2\r\n2021-08-10T15:36:11.582000Z TestFramework (INFO): Test that blocksonly nodes do not request high bandwidth mode.\r\n2021-08-10T15:37:11.677000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n'''\r\n2021-08-10T15:37:11.677000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 131, in main\r\n    self.run_test()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/p2p_compactblocks_blocksonly.py\", line 79, in run_test\r\n    p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/p2p.py\", line 451, in wait_until\r\n    wait_until_helper(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 256, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n''' not true after 60.0 seconds\r\n2021-08-10T15:37:11.729000Z TestFramework (INFO): Stopping nodes\r\n2021-08-10T15:37:11.891000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_ypwy_8d2\r\n2021-08-10T15:37:11.892000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_ypwy_8d2/test_framework.log\r\n2021-08-10T15:37:11.894000Z TestFramework (ERROR): \r\n2021-08-10T15:37:11.896000Z TestFramework (ERROR): Hint: Call /home/jon/projects/bitcoin/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_ypwy_8d2' to consolidate all logs\r\n2021-08-10T15:37:11.896000Z TestFramework (ERROR): \r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): \r\n```\r\n</p></details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896164568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 896280776,
      "node_id": "IC_kwDOABII5841bCjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896280776",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T20:01:47Z",
      "updated_at": "2021-08-10T20:01:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonatack that's odd. I tried rebasing on master & the tests are passing 🤔 \r\n\r\nAnd based on the logs you posted, I don't see why rebasing would cause a difference. The test file introduced is new, and I don't believe anything has changed recently around compact block p2p messages. Do you have any more info you can offer? ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896280776",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5137507776,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTEzNzUwNzc3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137507776",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T20:01:48Z"
    },
    {
      "event": "subscribed",
      "id": 5137507780,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxMzc1MDc3ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137507780",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T20:01:48Z"
    },
    {
      "event": "commented",
      "id": 896288047,
      "node_id": "IC_kwDOABII5841bEUv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896288047",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T20:13:34Z",
      "updated_at": "2021-08-10T20:13:34Z",
      "author_association": "MEMBER",
      "body": "It's late but I'll try again tomorrow (and do a review, looks like an interesting PR). I rebased and did a debug build with clang 13 on debian before running the test. Maybe it was spurious.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896288047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 896316519,
      "node_id": "IC_kwDOABII5841bLRn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896316519",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T21:06:18Z",
      "updated_at": "2021-08-10T21:06:18Z",
      "author_association": "MEMBER",
      "body": "Ok, the test runs fine. Here is what happened: I forgot about the footgun on master that currently doesn't build when DEBUG_ADDRMAN is defined. I built with my bash alias that does a debug build with that, the build failed, I didn't notice, and so I was running the test on the wrong build. I just verified that the failure I reported occurs on master. Apologies for the noise! Will review tomorrow.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896316519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5137887326,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTEzNzg4NzMyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137887326",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T21:26:44Z"
    },
    {
      "event": "commented",
      "id": 896328217,
      "node_id": "IC_kwDOABII5841bOIZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896328217",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T21:30:30Z",
      "updated_at": "2021-08-10T21:30:30Z",
      "author_association": "MEMBER",
      "body": "@jnewbery great suggestions! Incorporated them all again.\r\n\r\n[`nocmpct_blocksonly_0`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_0) -> [`nocmpct_blocksonly_1`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_1)\r\n\r\n<details>\r\n<summary>git range-diff nocmpct_blocksonly_0...nocmpct_blocksonly_1</summary>\r\n\r\n```\r\n1:  5a29943a9 ! 1:  e58cfb118 [test] Test that blocksonly nodes do not request high bandwidth mode.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +\r\n     +    def run_test(self):\r\n     +        # Nodes will only request hb compact blocks mode when they're out of IBD\r\n    -+        for i in range(3):\r\n    -+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\r\n    ++        for node in self.nodes:\r\n    ++            assert not node.getblockchaininfo()['initialblockdownload']\r\n     +\r\n     +        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\r\n     +        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\r\n    -+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\r\n    -+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\r\n    -+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n    -+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n    ++        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw]:\r\n    ++            assert_equal(conn.message_count['sendcmpct'], 2)\r\n    ++            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n     +\r\n     +        # Nodes:\r\n     +        #   0 -> blocksonly\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +        #   p2p_conn_high_bw    ---> node1\r\n     +        #   node2 (no connections)\r\n     +        #\r\n    -+        # node2 produces blocks which get passed to the reset of the nodes\r\n    ++        # node2 produces blocks which get passed to the rest of the nodes\r\n     +        # through the respective p2p connections.\r\n     +\r\n     +        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\r\n2:  beeea3fbc = 2:  c99978d94 [test] Test that blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n3:  8b1b30855 ! 3:  770c5f1a4 [test] Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n\r\n              p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\r\n              p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\r\n    +-        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw]:\r\n     +        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\r\n    -         assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\r\n    -         assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\r\n    -+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\r\n    -         p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n    -         p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n    -+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n    ++        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\r\n    +             assert_equal(conn.message_count['sendcmpct'], 2)\r\n    +             conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n\r\n    -         # Nodes:\r\n    +@@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n              #   0 -> blocksonly\r\n              #   1 -> high bandwidth\r\n              #   2 -> miner\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        #   p2p_conn_low_bw     ---> node3\r\n              #   node2 (no connections)\r\n              #\r\n    -         # node2 produces blocks which get passed to the reset of the nodes\r\n    +         # node2 produces blocks which get passed to the rest of the nodes\r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n              p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\r\n              assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\r\n4:  8c4159aec ! 4:  e21f2e4f0 [test] Test that blocksonly nodes still serve compact blocks.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\r\n     +\r\n     +        def test_for_cmpctblock(block):\r\n    -+            def test():\r\n    -+                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()\r\n    -+                return sha256 == block.sha256\r\n    -+            return test\r\n    ++            if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\r\n    ++                return False\r\n    ++            return p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash() == block.sha256\r\n     +\r\n     +        p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\r\n    -+        p2p_conn_blocksonly.sync_send_with_ping()\r\n    -+        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block0))\r\n    ++        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block0))\r\n     +\r\n     +        # Request high bandwidth mode from node0\r\n     +        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=True, version=2))\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        block2 = self.build_block_on_tip()\r\n     +        self.nodes[0].submitblock(block1.serialize().hex())\r\n     +        self.nodes[0].submitblock(block2.serialize().hex())\r\n    -+        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block2))\r\n    ++        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block2))\r\n     +\r\n      if __name__ == '__main__':\r\n          P2PCompactBlocksBlocksOnly().main()\r\n```\r\n</details>",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896328217",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5137902744,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTEzNzkwMjc0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137902744",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T21:30:31Z"
    },
    {
      "event": "subscribed",
      "id": 5137902748,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxMzc5MDI3NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137902748",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T21:30:31Z"
    },
    {
      "event": "commented",
      "id": 896678716,
      "node_id": "IC_kwDOABII5841cjs8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896678716",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-11T09:46:58Z",
      "updated_at": "2021-08-11T09:46:58Z",
      "author_association": "MEMBER",
      "body": "utACK e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896678716",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 727649377,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3NjQ5Mzc3",
      "url": null,
      "actor": null,
      "commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK e21f2e4f04c5f15eccac529c6e8c59aba5283351 modulo some minor fixups\r\n\r\nThanks for adding the tests! Verified that they fail as expected on master :)\r\n\r\nConsider documenting this change in behavior with a release note?\r\n\r\nFeel free to ignore the non-fixup suggestions below. Happy to re-ACK if you update.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-727649377",
      "submitted_at": "2021-08-11T18:01:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "commented",
      "id": 897474657,
      "node_id": "IC_kwDOABII5841fmBh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897474657",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-12T09:09:15Z",
      "updated_at": "2021-08-12T09:11:09Z",
      "author_association": "MEMBER",
      "body": "Consider also updating `doc/reduce-traffic.md` regarding the effects of setting `-blocksonly` (maybe also in the Memory Pool section of `doc/reduce-memory.md`).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-897474657",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5156799983,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE1Njc5OTk4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5156799983",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-13T16:55:31Z"
    },
    {
      "event": "commented",
      "id": 898596046,
      "node_id": "IC_kwDOABII5841j3zO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898596046",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-13T16:56:24Z",
      "updated_at": "2021-08-13T16:56:24Z",
      "author_association": "MEMBER",
      "body": "@jonatack Thanks for the review! I took most of your suggestions.\r\n\r\nI did not modify 6dfee13f650521f7542df0926aff01af9ac6a328 because i don't want to invalidate the utACKs that this commit has already gotten. I will make a follow up PR for those suggestions as well as the other doc changes (Release note, `doc/reduce-traffic.md`).\r\n\r\n[`nocmpct_blocksonly_1`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_1) -> [`nocmpct_blocksonly_2`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_2)\r\n\r\n<details>\r\n<summary>git range-diff nocmpct_blocksonly_1...nocmpct_blocksonly_2</summary>\r\n\r\n```\r\n1:  e58cfb118 ! 1:  1bd2f889c [test] Test that blocksonly nodes do not request high bandwidth mode.\r\n    @@ Metadata\r\n     Author: Niklas Gögge <n.goeggi@gmail.com>\r\n     \r\n      ## Commit message ##\r\n    -    [test] Test that blocksonly nodes do not request high bandwidth mode.\r\n    +    [test] Test that -blocksonly nodes do not request high bandwidth mode.\r\n     \r\n         Co-authored-by: Amiti Uttarwar <amiti@uttarwar.org>\r\n     \r\n      ## test/functional/p2p_compactblocks_blocksonly.py (new) ##\r\n     @@\r\n     +#!/usr/bin/env python3\r\n    -+# Copyright (c) 2019-2020 The Bitcoin Core developers\r\n    ++# Copyright (c) 2021-2021 The Bitcoin Core developers\r\n     +# Distributed under the MIT software license, see the accompanying\r\n     +# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n     +\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +\r\n     +class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n     +    def set_test_params(self):\r\n    -+        self.num_nodes = 3\r\n     +        self.extra_args = [[\"-blocksonly\"], [], []]\r\n    ++        self.num_nodes = len(self.extra_args)\r\n     +\r\n     +    def setup_network(self):\r\n     +        self.setup_nodes()\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +        #   p2p_conn_high_bw    ---> node1\r\n     +        #   node2 (no connections)\r\n     +        #\r\n    -+        # node2 produces blocks which get passed to the rest of the nodes\r\n    ++        # node2 produces blocks that are passed to the rest of the nodes\r\n     +        # through the respective p2p connections.\r\n     +\r\n    -+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\r\n    ++        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")\r\n     +\r\n     +        block0 = self.build_block_on_tip()\r\n     +\r\n    -+        # A blocksonly node should not request high bandwidth mode upon\r\n    ++        # A -blocksonly node should not request BIP152 high bandwidth mode upon\r\n     +        # receiving a new valid block at the tip.\r\n     +        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\r\n     +        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\r\n     +        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\r\n     +        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\r\n     +\r\n    -+        # A normal node participating in transaction relay should request high\r\n    -+        # bandwidth mode upon receiving a new valid block at the tip.\r\n    ++        # A normal node participating in transaction relay should request BIP152\r\n    ++        # high bandwidth mode upon receiving a new valid block at the tip.\r\n     +        p2p_conn_high_bw.send_and_ping(msg_block(block0))\r\n     +        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\r\n     +        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\r\n2:  c99978d94 ! 2:  abe3c5cf7 [test] Test that blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n    @@ Metadata\r\n     Author: Niklas Gögge <n.goeggi@gmail.com>\r\n     \r\n      ## Commit message ##\r\n    -    [test] Test that blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n    +    [test] Test that -blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n     \r\n         Co-authored-by: Amiti Uttarwar <amiti@uttarwar.org>\r\n     \r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n              p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\r\n              assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\r\n      \r\n    -+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\r\n    -+                      \"of getdata(CMPCT) in low bandwidth mode.\")\r\n    ++        self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\r\n    ++                      \" of getdata(CMPCT) in BIP152 low bandwidth mode.\")\r\n     +\r\n     +        block1 = self.build_block_on_tip()\r\n     +\r\n3:  770c5f1a4 ! 3:  c652e187e [test] Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\r\n    @@ Metadata\r\n     Author: Niklas Gögge <n.goeggi@gmail.com>\r\n     \r\n      ## Commit message ##\r\n    -    [test] Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\r\n    +    [test] Test that getdata(CMPCT) is still sent on regular low bandwidth connections.\r\n     \r\n         Co-authored-by: Amiti Uttarwar <amiti@uttarwar.org>\r\n     \r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: from test_framework.util import\r\n      \r\n      class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n          def set_test_params(self):\r\n    --        self.num_nodes = 3\r\n     -        self.extra_args = [[\"-blocksonly\"], [], []]\r\n    -+        self.num_nodes = 4\r\n     +        self.extra_args = [[\"-blocksonly\"], [], [], []]\r\n    +         self.num_nodes = len(self.extra_args)\r\n      \r\n          def setup_network(self):\r\n    -         self.setup_nodes()\r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n      \r\n              p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        #   p2p_conn_low_bw     ---> node3\r\n              #   node2 (no connections)\r\n              #\r\n    -         # node2 produces blocks which get passed to the rest of the nodes\r\n    +         # node2 produces blocks that are passed to the rest of the nodes\r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n              p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\r\n              assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\r\n      \r\n    -+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\r\n    -+        # doesn't select it for high bw relay.\r\n    ++        # Don't send a block from the p2p_conn_low_bw so the low bandwidth node\r\n    ++        # doesn't select it for BIP152 high bandwidth relay.\r\n     +        self.nodes[3].submitblock(block0.serialize().hex())\r\n     +\r\n    -         self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\r\n    -                       \"of getdata(CMPCT) in low bandwidth mode.\")\r\n    +         self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\r\n    +                       \" of getdata(CMPCT) in BIP152 low bandwidth mode.\")\r\n      \r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n              p2p_conn_high_bw.sync_send_with_ping()\r\n              assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\r\n      \r\n    -+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")\r\n    ++        self.log.info(\"Test that getdata(CMPCT) is still sent on BIP152 low bandwidth connections\"\r\n    ++                      \" when no -blocksonly nodes are involved.\")\r\n     +\r\n     +        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\r\n     +        p2p_conn_low_bw.sync_with_ping()\r\n4:  e21f2e4f0 ! 4:  ae54485c4 [test] Test that blocksonly nodes still serve compact blocks.\r\n    @@ Metadata\r\n     Author: Niklas Gögge <n.goeggi@gmail.com>\r\n     \r\n      ## Commit message ##\r\n    -    [test] Test that blocksonly nodes still serve compact blocks.\r\n    +    [test] Test that -blocksonly nodes still serve compact blocks.\r\n     \r\n      ## test/functional/p2p_compactblocks_blocksonly.py ##\r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: from test_framework.messages import (\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n              p2p_conn_low_bw.sync_with_ping()\r\n              assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\r\n      \r\n    -+        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\r\n    ++        self.log.info(\"Test that -blocksonly nodes still serve compact blocks.\")\r\n     +\r\n     +        def test_for_cmpctblock(block):\r\n     +            if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\r\n     +        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block0))\r\n     +\r\n    -+        # Request high bandwidth mode from node0\r\n    ++        # Request BIP152 high bandwidth mode from the -blocksonly node.\r\n     +        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=True, version=2))\r\n     +\r\n     +        block2 = self.build_block_on_tip()\r\n```\r\n</details>",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-898596046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5156803722,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE1NjgwMzcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5156803722",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-13T16:56:24Z"
    },
    {
      "event": "subscribed",
      "id": 5156803725,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxNTY4MDM3MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5156803725",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-13T16:56:24Z"
    },
    {
      "event": "reviewed",
      "id": 730523580,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwNTIzNTgw",
      "url": null,
      "actor": null,
      "commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review re-ACK ae54485c406bcf88c94450ffceabf709d5a18379 per `git diff e21f2e4 ae54485`, only changes since last review are minor (mostly documentation) improvements in the functional test; rebased to master, debug build clean, ran test a few times, including with vagrind\r\n\r\n`test/functional/p2p_compactblocks_blocksonly.py --valgrind` failed for me locally on the first run (`AssertionError: [node 0] Unable to connect to bitcoind after 60s`) during test setup, but succeeded on the second and third runs.\r\n\r\nThanks for updating!",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-730523580",
      "submitted_at": "2021-08-16T10:05:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "commented",
      "id": 899409929,
      "node_id": "IC_kwDOABII5841m-gJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899409929",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-16T10:43:04Z",
      "updated_at": "2021-08-16T10:43:04Z",
      "author_association": "MEMBER",
      "body": "> I did not modify [6dfee13](https://github.com/bitcoin/bitcoin/commit/6dfee13f650521f7542df0926aff01af9ac6a328) because i don't want to invalidate the utACKs that this commit has already gotten\r\n\r\nYour mileage may vary. In review feedback a year ago it was suggested to me to not worry too much about invalidating ACKs and I ended up \"invalidating\" 7 ACKs on that pull, which was subsequently merged. Since then I no longer worry about it and AFAICT doing so doesn't seem to have slowed anything down. (Sharing a thought in general, not for this case!)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-899409929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 899518549,
      "node_id": "IC_kwDOABII5841nZBV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899518549",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-16T13:38:11Z",
      "updated_at": "2021-08-16T13:38:11Z",
      "author_association": "MEMBER",
      "body": "ACK ae54485c406bcf88c94450ffceabf709d5a18379",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-899518549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 731357894,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxMzU3ODk0",
      "url": null,
      "actor": null,
      "commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK https://github.com/bitcoin/bitcoin/pull/22340/commits/ae54485c406bcf88c94450ffceabf709d5a18379\r\n\r\nStepped through the test, verified expected behaviors.\r\n\r\nBelow are few comments inline, nothing blocking. \r\n\r\n### Aside\r\nTaking this opportunity to mention some generic approaches I took for functional test reviews. Could be helpful for new review club folks: \r\n- Start python debugging and step through the *.py file. \r\n- The output will show at the start of the test, the temp directory where regtest nodes are created. - You can talk to them while you pause the python file, with `bitcoin-cli -datadir=/tmp-filepath/node0/ <command>`. \r\n- You can `tail -f` their `debug.log` and only activate the required logging(net, rpc, etc depending on the test you are trying) using `bitcoin-cli`, to see communications happening in each nodes. Verify they are occurring as expected.\r\n- If you want to print something from src/*.cpp, use `LogPrintf()` to print in the `debug.log` file, that you were already tailing.  \r\n- Use python debug console to work with the python objects, call functions, see object attributes are updated as expected.\r\n- Try to identify edge cases by changing test variables and observing failures.",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-731357894",
      "submitted_at": "2021-08-17T06:49:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5256376981,
      "node_id": "HRFPE_lADOABII5843caAozwAAAAE5TfKV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5256376981",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:22:20Z"
    },
    {
      "event": "commented",
      "id": 912959004,
      "node_id": "IC_kwDOABII5842aqYc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912959004",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:35:43Z",
      "updated_at": "2021-09-04T11:35:43Z",
      "author_association": "MEMBER",
      "body": "Thanks @rajarshimaitra and @jonatack for the reviews and advice!\r\n\r\n[`nocmpct_blocksonly_2`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_2) -> [`nocmpct_blocksonly_3`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_3)\r\n\r\n<details>\r\n<summary>git range-diff nocmpct_blocksonly_2...nocmpct_blocksonly_3</summary>\r\n\r\n```\r\n1:  1bd2f889c ! 1:  ac90610e1 [test] Test that -blocksonly nodes do not request high bandwidth mode.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +\r\n     +    def setup_network(self):\r\n     +        self.setup_nodes()\r\n    ++        # Start network with everyone disconnected\r\n     +        self.sync_all()\r\n     +\r\n     +    def build_block_on_tip(self):\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +        # node2 produces blocks that are passed to the rest of the nodes\r\n     +        # through the respective p2p connections.\r\n     +\r\n    -+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")\r\n    ++        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP152 high bandwidth mode\")\r\n     +\r\n     +        block0 = self.build_block_on_tip()\r\n     +\r\n     +        # A -blocksonly node should not request BIP152 high bandwidth mode upon\r\n     +        # receiving a new valid block at the tip.\r\n    -+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\r\n    ++        p2p_conn_blocksonly.send_message(msg_block(block0))\r\n    ++        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['block'] == 1)\r\n     +        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\r\n    -+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\r\n    ++        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\r\n     +        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\r\n     +\r\n     +        # A normal node participating in transaction relay should request BIP152\r\n2:  abe3c5cf7 ! 2:  90776a869 [test] Test that -blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n              assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\r\n      \r\n     +        self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\r\n    -+                      \" of getdata(CMPCT) in BIP152 low bandwidth mode.\")\r\n    ++                      \" of getdata(CMPCT) in BIP152 low bandwidth mode\")\r\n     +\r\n     +        block1 = self.build_block_on_tip()\r\n     +\r\n3:  c652e187e ! 3:  e38eb9288 [test] Test that getdata(CMPCT) is still sent on regular low bandwidth connections.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n     +        self.nodes[3].submitblock(block0.serialize().hex())\r\n     +\r\n              self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\r\n    -                       \" of getdata(CMPCT) in BIP152 low bandwidth mode.\")\r\n    +                       \" of getdata(CMPCT) in BIP152 low bandwidth mode\")\r\n      \r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n              p2p_conn_high_bw.sync_send_with_ping()\r\n              assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\r\n      \r\n     +        self.log.info(\"Test that getdata(CMPCT) is still sent on BIP152 low bandwidth connections\"\r\n    -+                      \" when no -blocksonly nodes are involved.\")\r\n    ++                      \" when no -blocksonly nodes are involved\")\r\n     +\r\n     +        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\r\n     +        p2p_conn_low_bw.sync_with_ping()\r\n4:  ae54485c4 ! 4:  f30eb1fe4 [test] Test that -blocksonly nodes still serve compact blocks.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnl\r\n              p2p_conn_low_bw.sync_with_ping()\r\n              assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\r\n      \r\n    -+        self.log.info(\"Test that -blocksonly nodes still serve compact blocks.\")\r\n    ++        self.log.info(\"Test that -blocksonly nodes still serve compact blocks\")\r\n     +\r\n     +        def test_for_cmpctblock(block):\r\n     +            if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\r\n```\r\n</details>",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-912959004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5256387279,
      "node_id": "MEE_lADOABII5843caAozwAAAAE5ThrP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5256387279",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:35:44Z"
    },
    {
      "event": "subscribed",
      "id": 5256387281,
      "node_id": "SE_lADOABII5843caAozwAAAAE5ThrR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5256387281",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:35:44Z"
    },
    {
      "event": "mentioned",
      "id": 5256387282,
      "node_id": "MEE_lADOABII5843caAozwAAAAE5ThrS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5256387282",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:35:44Z"
    },
    {
      "event": "subscribed",
      "id": 5256387284,
      "node_id": "SE_lADOABII5843caAozwAAAAE5ThrU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5256387284",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T11:35:44Z"
    },
    {
      "event": "commented",
      "id": 924653198,
      "node_id": "IC_kwDOABII5843HRaO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924653198",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T07:15:42Z",
      "updated_at": "2021-09-22T07:15:42Z",
      "author_association": "MEMBER",
      "body": "ACK f30eb1fe4a62fd9c927ba57b2a549678bde3f3c7",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-924653198",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 760595575,
      "node_id": "PRR_kwDOABII584tVcR3",
      "url": null,
      "actor": null,
      "commit_id": "f30eb1fe4a62fd9c927ba57b2a549678bde3f3c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-760595575",
      "submitted_at": "2021-09-22T08:24:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5345769027,
      "node_id": "HRFPE_lADOABII5843caAozwAAAAE-ofZD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5345769027",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T20:19:54Z"
    },
    {
      "event": "commented",
      "id": 925302854,
      "node_id": "IC_kwDOABII5843JwBG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925302854",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T20:24:45Z",
      "updated_at": "2021-09-22T20:24:45Z",
      "author_association": "MEMBER",
      "body": "[`nocmpct_blocksonly_3`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_3) -> [`nocmpct_blocksonly_4`](https://github.com/dergoegge/bitcoin/tree/nocmpct_blocksonly_4)\r\n\r\n<details>\r\n<summary>git range-diff nocmpct_blocksonly_3...nocmpct_blocksonly_4</summary>\r\n\r\n```\r\n1:  ac90610e1 ! 1:  df6794e80 [test] Test that -blocksonly nodes do not request high bandwidth mode.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n     +    def set_test_params(self):\r\n     +        self.extra_args = [[\"-blocksonly\"], [], []]\r\n    -+        self.num_nodes = len(self.extra_args)\r\n    ++        self.num_nodes = 3\r\n     +\r\n     +    def setup_network(self):\r\n     +        self.setup_nodes()\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py (new)\r\n     +\r\n     +        # A -blocksonly node should not request BIP152 high bandwidth mode upon\r\n     +        # receiving a new valid block at the tip.\r\n    -+        p2p_conn_blocksonly.send_message(msg_block(block0))\r\n    -+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['block'] == 1)\r\n    ++        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\r\n     +        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\r\n     +        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\r\n     +        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\r\n2:  90776a869 = 2:  548115650 [test] Test that -blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\r\n3:  e38eb9288 ! 3:  01db031b5 [test] Test that getdata(CMPCT) is still sent on regular low bandwidth connections.\r\n    @@ test/functional/p2p_compactblocks_blocksonly.py: from test_framework.util import\r\n      class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n          def set_test_params(self):\r\n     -        self.extra_args = [[\"-blocksonly\"], [], []]\r\n    +-        self.num_nodes = 3\r\n     +        self.extra_args = [[\"-blocksonly\"], [], [], []]\r\n    -         self.num_nodes = len(self.extra_args)\r\n    ++        self.num_nodes = 4\r\n\r\n          def setup_network(self):\r\n    +         self.setup_nodes()\r\n     @@ test/functional/p2p_compactblocks_blocksonly.py: class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n\r\n              p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\r\n4:  f30eb1fe4 = 4:  c24c52d51 [test] Test that -blocksonly nodes still serve compact blocks.\r\n```\r\n</details>",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-925302854",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 925678312,
      "node_id": "IC_kwDOABII5843LLro",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925678312",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-23T10:13:06Z",
      "updated_at": "2021-09-23T10:13:06Z",
      "author_association": "MEMBER",
      "body": "Code review ACK c24c52d51cc8faaa79dc554c64ca6d1ee231f112",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-925678312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 926569816,
      "node_id": "IC_kwDOABII5843OlVY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926569816",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-24T12:00:43Z",
      "updated_at": "2021-09-24T12:00:43Z",
      "author_association": "MEMBER",
      "body": "ACK c24c52d",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-926569816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkYzhiZjViOTI1Y2E4NzZjMGIxYTEwMGU0MjYwNTZkNzQxYWFmZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc8bf5b925ca876c0b1a100e426056d741aafde",
      "tree": {
        "sha": "d156af2272aaf719cfcf5de81fbebdf9ef7d9194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d156af2272aaf719cfcf5de81fbebdf9ef7d9194"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efa227f5df5f5a9669dec5f1d574cf22d3c0903f",
          "sha": "efa227f5df5f5a9669dec5f1d574cf22d3c0903f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/efa227f5df5f5a9669dec5f1d574cf22d3c0903f"
        }
      ],
      "message": "[net processing] Dont request compact blocks in blocks-only mode",
      "committer": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "author": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-06-25T12:26:57Z"
      },
      "sha": "0dc8bf5b925ca876c0b1a100e426056d741aafde"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViZjY1ODc0NTc4MmViNTcxMjE1ZDZjMWU1ZmUzYzY1NWVkYjU1YjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5bf658745782eb571215d6c1e5fe3c655edb55b3",
      "tree": {
        "sha": "2715e791994fb03f9a2f0c4f6aefa79069154fd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2715e791994fb03f9a2f0c4f6aefa79069154fd6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde",
          "sha": "0dc8bf5b925ca876c0b1a100e426056d741aafde",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc8bf5b925ca876c0b1a100e426056d741aafde"
        }
      ],
      "message": "[test] Test that -blocksonly nodes do not request high bandwidth mode.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "committer": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "author": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-08T08:07:58Z"
      },
      "sha": "5bf658745782eb571215d6c1e5fe3c655edb55b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlMjMxYzExNmJhODE2NWU5ZDhjNzk1Yjg1Y2EyODMzMjM4YWVkNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e231c116ba8165e9d8c795b85ca2833238aed54",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e231c116ba8165e9d8c795b85ca2833238aed54",
      "tree": {
        "sha": "c6254f7f359eacd27a17bf4f28924300e3b032ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6254f7f359eacd27a17bf4f28924300e3b032ac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3",
          "sha": "5bf658745782eb571215d6c1e5fe3c655edb55b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5bf658745782eb571215d6c1e5fe3c655edb55b3"
        }
      ],
      "message": "[test] Test that -blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "committer": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "author": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-08T08:08:52Z"
      },
      "sha": "5e231c116ba8165e9d8c795b85ca2833238aed54"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3OWFkNjVmYzJjMzFhMmIxMTMyYTZhYWIzODlkMDE5N2E5NWMzOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
      "tree": {
        "sha": "5ab7d33992413f52ba7075c2736d80a670cd5d8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ab7d33992413f52ba7075c2736d80a670cd5d8a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e231c116ba8165e9d8c795b85ca2833238aed54",
          "sha": "5e231c116ba8165e9d8c795b85ca2833238aed54",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e231c116ba8165e9d8c795b85ca2833238aed54"
        }
      ],
      "message": "[test] Test that getdata(CMPCT) is still sent on regular low bandwidth connections.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "committer": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "author": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-09T19:17:57Z"
      },
      "sha": "a79ad65fc2c31a2b1132a6aab389d0197a95c395"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4YzViMjNhMGY3YWRmOWEwOGJjYWE5NjdlZDgwMGJhZGY2MmQ5MGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "tree": {
        "sha": "52c933b45246ae55f7025c9069dced14cdbc67eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52c933b45246ae55f7025c9069dced14cdbc67eb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
          "sha": "a79ad65fc2c31a2b1132a6aab389d0197a95c395",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a79ad65fc2c31a2b1132a6aab389d0197a95c395"
        }
      ],
      "message": "[test] Test that -blocksonly nodes still serve compact blocks.",
      "committer": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "author": {
        "name": "Niklas Gögge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-09T19:54:02Z"
      },
      "sha": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5376419231,
      "node_id": "HRFPE_lADOABII5843caAozwAAAAFAdaWf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5376419231",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T20:28:29Z"
    },
    {
      "event": "commented",
      "id": 929976680,
      "node_id": "IC_kwDOABII5843blFo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929976680",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z",
      "updated_at": "2021-09-29T08:55:55Z",
      "author_association": "MEMBER",
      "body": "Rebased on latest master.\r\n\r\n@jnewbery @theStack @jonatack @naumenkogs @rajarshimaitra I would appreciate it if you folks could have another look and re-ACK since i think this is pretty close to being ready :)",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-929976680",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "mentioned",
      "id": 5379152757,
      "node_id": "MEE_lADOABII5843caAozwAAAAFAn1t1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152757",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 5379152766,
      "node_id": "SE_lADOABII5843caAozwAAAAFAn1t-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152766",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "mentioned",
      "id": 5379152778,
      "node_id": "MEE_lADOABII5843caAozwAAAAFAn1uK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152778",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 5379152784,
      "node_id": "SE_lADOABII5843caAozwAAAAFAn1uQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152784",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "mentioned",
      "id": 5379152797,
      "node_id": "MEE_lADOABII5843caAozwAAAAFAn1ud",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152797",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 5379152805,
      "node_id": "SE_lADOABII5843caAozwAAAAFAn1ul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152805",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "mentioned",
      "id": 5379152814,
      "node_id": "MEE_lADOABII5843caAozwAAAAFAn1uu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152814",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 5379152820,
      "node_id": "SE_lADOABII5843caAozwAAAAFAn1u0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152820",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "mentioned",
      "id": 5379152830,
      "node_id": "MEE_lADOABII5843caAozwAAAAFAn1u-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152830",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 5379152844,
      "node_id": "SE_lADOABII5843caAozwAAAAFAn1vM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5379152844",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T08:55:55Z"
    },
    {
      "event": "commented",
      "id": 930065752,
      "node_id": "IC_kwDOABII5843b61Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930065752",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T10:52:05Z",
      "updated_at": "2021-09-29T10:52:05Z",
      "author_association": "MEMBER",
      "body": "ACK 18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-930065752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 930318410,
      "node_id": "IC_kwDOABII5843c4hK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930318410",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T16:06:00Z",
      "updated_at": "2021-09-29T16:06:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK https://github.com/bitcoin/bitcoin/pull/22340/commits/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-930318410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "commented",
      "id": 930329146,
      "node_id": "IC_kwDOABII5843c7I6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930329146",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T16:18:29Z",
      "updated_at": "2021-09-29T16:18:29Z",
      "author_association": "MEMBER",
      "body": "reACK 18c5b23a0f\r\n\r\nDid the rebase myself and verified the same result.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-930329146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "reviewed",
      "id": 768382150,
      "node_id": "PRR_kwDOABII584tzJTG",
      "url": null,
      "actor": null,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 18c5b23a0f7adf9a08bcaa967ed800badf62d90a 🥛 \r\n\r\nAfter my previous ACK (on a single commit with the changes in net_processing), the PR has been rebased and tests have been added. Those LGTM, the only place I found confusing is the assertion checking that the number of received `sendcmpct` messages on a peer from node after handshake is 2 initially, and not 1. I had to dig in the code to find out why:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/571bb94dfb5047c9be8fcbae5dae71de7256b86c/src/net_processing.cpp#L2721-L2730\r\n\r\nNot a big deal, but if a follow-up PR is planned, probably a small comment could be added to the test explaining why 2 messages are expected (sendcmpct(0, 2) and sendcmpct(0, 1)).",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#pullrequestreview-768382150",
      "submitted_at": "2021-09-30T21:58:35Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
    },
    {
      "event": "referenced",
      "id": 5392119825,
      "node_id": "REFE_lADOABII5843caAozwAAAAFBZTgR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5392119825",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4e1de1fc59057c5f6fe15a02acd922e158e91292",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/4e1de1fc59057c5f6fe15a02acd922e158e91292",
      "created_at": "2021-10-01T06:19:21Z"
    },
    {
      "event": "commented",
      "id": 931954516,
      "node_id": "IC_kwDOABII5843jH9U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931954516",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-01T06:45:47Z",
      "updated_at": "2021-10-01T06:45:47Z",
      "author_association": "MEMBER",
      "body": "This has been merged.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-931954516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22340"
    },
    {
      "event": "closed",
      "id": 5392222629,
      "node_id": "CE_lADOABII5843caAozwAAAAFBZsml",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5392222629",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-01T06:45:47Z"
    },
    {
      "event": "referenced",
      "id": 5395599952,
      "node_id": "REFE_lADOABII5843caAozwAAAAFBmlJQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5395599952",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7bf329558f1750f2599f42682dc3560c01e4efff",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/7bf329558f1750f2599f42682dc3560c01e4efff",
      "created_at": "2021-10-01T16:40:17Z"
    },
    {
      "event": "locked",
      "id": 7699632033,
      "node_id": "LOE_lADOABII5843caAozwAAAAHK7w-h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7699632033",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T19:09:55Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662872834",
      "pull_request_review_id": 697997837,
      "id": 662872834,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjg3MjgzNA==",
      "diff_hunk": "@@ -857,10 +858,13 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n                 });\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\n             }\n-            m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n-            // save BIP152 bandwidth state: we select peer to be high-bandwidth\n-            pfrom->m_bip152_highbandwidth_to = true;\n-            lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n+\n+            if (!m_ignore_incoming_txs) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e5993385d554655e4faf094826546b4f0d71dc8b",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you can just exit this function immediately if `!m_ignore_incoming_txs`:\r\n\r\n```diff\r\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\r\n {\r\n     AssertLockHeld(cs_main);\r\n+\r\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\r\n+    // mempool will not contain the transactions necessary to reconstruct the\r\n+    // compact block.\r\n+    if (m_ignore_incoming_txs) return;\r\n+\r\n     CNodeState* nodestate = State(nodeid);\r\n     if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\r\n         // Never ask from peers who can't provide witnesses.\r\n@@ -859,12 +865,10 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\r\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\r\n             }\r\n \r\n-            if (!m_ignore_incoming_txs) {\r\n-                m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\r\n-                // save BIP152 bandwidth state: we select peer to be high-bandwidth\r\n-                pfrom->m_bip152_highbandwidth_to = true;\r\n-                lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\r\n-            }\r\n+            m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\r\n+            // save BIP152 bandwidth state: we select peer to be high-bandwidth\r\n+            pfrom->m_bip152_highbandwidth_to = true;\r\n+            lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\r\n             return true;\r\n         });\r\n     }\r\n```",
      "created_at": "2021-07-02T09:23:50Z",
      "updated_at": "2021-07-02T09:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662872834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662872834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 862,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662873537",
      "pull_request_review_id": 697997837,
      "id": 662873537,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjg3MzUzNw==",
      "diff_hunk": "@@ -2100,7 +2104,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (!m_ignore_incoming_txs && nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e5993385d554655e4faf094826546b4f0d71dc8b",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can I convince you to make this conditional a bit more readable:\r\n\r\n```diff\r\n-                    if (!m_ignore_incoming_txs && nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\r\n+                    if (!m_ignore_incoming_txs\r\n+                        && nodestate->fSupportsDesiredCmpctVersion\r\n+                        && vGetData.size() == 1\r\n+                        && mapBlocksInFlight.size() == 1\r\n+                        && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\r\n```",
      "created_at": "2021-07-02T09:25:05Z",
      "updated_at": "2021-07-02T09:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662873537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662873537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682637215",
      "pull_request_review_id": 722311718,
      "id": 682637215,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MjYzNzIxNQ==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "path": "src/net_processing.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe its better to add here that we are also not sending getdata(CMPCT) in case of block-only? \r\n\r\nMy initial confusion was what about the low-band with case, and I missed the getdata(CMPCT) part in the code. \r\n\r\nIt would help clarify the doc a little better.    ",
      "created_at": "2021-08-04T13:52:15Z",
      "updated_at": "2021-08-04T18:07:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682637215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682637215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": 888,
      "original_start_line": 835,
      "start_side": "RIGHT",
      "line": 890,
      "original_line": 890,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682694454",
      "pull_request_review_id": 722311718,
      "id": 682694454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MjY5NDQ1NA==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "path": "src/net_processing.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any reason why we use `MaybeSetPeerAsAnnouncingHeaderAndIDs` instead of `MaybeSetPeerAsAnncouncingCompactBlocks`? Are they different things?",
      "created_at": "2021-08-04T14:54:01Z",
      "updated_at": "2021-08-04T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682694454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682694454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 884,
      "original_line": 884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683306717",
      "pull_request_review_id": 723160728,
      "id": 683306717,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzMwNjcxNw==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "path": "src/net_processing.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": 682637215,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't the right place for that documentation. This function is for sending `sendcmpct(hb=true)` to the three peers that sent us blocks most recently.",
      "created_at": "2021-08-05T09:53:20Z",
      "updated_at": "2021-08-05T09:53:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r683306717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683306717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": 888,
      "original_start_line": 835,
      "start_side": "RIGHT",
      "line": 890,
      "original_line": 890,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684200376",
      "pull_request_review_id": 724310624,
      "id": 684200376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDIwMDM3Ng==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "path": "src/net_processing.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": 682694454,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In [BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki#headerandshortids) the structure that is used for the `cmcptblock` message is called `HeaderAndShortIDs`.\r\nI am assuming that this were the name came from. The function was introduced in the initial compact block PR: https://github.com/bitcoin/bitcoin/pull/8068",
      "created_at": "2021-08-06T12:36:01Z",
      "updated_at": "2021-08-06T12:36:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684200376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684200376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 884,
      "original_line": 884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684369129",
      "pull_request_review_id": 724536328,
      "id": 684369129,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDM2OTEyOQ==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "path": "src/net_processing.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": 682637215,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @jnewbery, that makes sense.",
      "created_at": "2021-08-06T16:42:40Z",
      "updated_at": "2021-08-06T16:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684369129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684369129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": 888,
      "original_start_line": 835,
      "start_side": "RIGHT",
      "line": 890,
      "original_line": 890,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684371206",
      "pull_request_review_id": 724539068,
      "id": 684371206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDM3MTIwNg==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "path": "src/net_processing.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": 682694454,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, I guess it comes from there. Still a little hard to guess, as the name seems quite generic (Headers and IDs). It also doesn't have any doc comment above it indicate it's related to compact blocks. Could help with some pointers.  ",
      "created_at": "2021-08-06T16:46:10Z",
      "updated_at": "2021-08-06T16:46:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684371206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684371206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 884,
      "original_line": 884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684419963",
      "pull_request_review_id": 724602472,
      "id": 684419963,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDQxOTk2Mw==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "path": "src/net_processing.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "6dfee13f650521f7542df0926aff01af9ac6a328",
      "in_reply_to_id": 682694454,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that headers-and-ids is not very helpful here (and in a few other places in the code). Maybe it could be updated in a different PR.",
      "created_at": "2021-08-06T18:12:40Z",
      "updated_at": "2021-08-06T18:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684419963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684419963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 884,
      "original_line": 884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685218980",
      "pull_request_review_id": 725414813,
      "id": 685218980,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTIxODk4MA==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 52,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you use the cached chain, all the nodes will already be out of IBD:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_compactblocks_blocksonly.py b/test/functional/p2p_compactblocks_blocksonly.py\r\nindex b97fdfdb14..bf486d8eda 100755\r\n--- a/test/functional/p2p_compactblocks_blocksonly.py\r\n+++ b/test/functional/p2p_compactblocks_blocksonly.py\r\n@@ -25,7 +25,6 @@ from test_framework.messages import (\r\n \r\n class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n-        self.setup_clean_chain = True\r\n         self.num_nodes = 3\r\n         self.extra_args = [[\"-blocksonly\"], [], []]\r\n \r\n@@ -41,15 +40,9 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         return block\r\n \r\n     def run_test(self):\r\n-        self.connect_nodes(0, 2)\r\n-        self.connect_nodes(1, 2)\r\n-\r\n-        # Generate some blocks so all nodes are out of IBD.\r\n-        self.nodes[2].generate(10)\r\n-        self.sync_blocks()\r\n-\r\n-        self.disconnect_nodes(0, 2)\r\n-        self.disconnect_nodes(1, 2)\r\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\r\n+        for i in range(3):\r\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\r\n \r\n         p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\r\n         p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\r\n\r\n```",
      "created_at": "2021-08-09T13:59:46Z",
      "updated_at": "2021-08-09T15:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685218980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685218980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306116",
      "pull_request_review_id": 725414813,
      "id": 685306116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMwNjExNg==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 35,
      "original_position": 36,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alternatively, just generate the block on the node:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_compactblocks_blocksonly.py b/test/functional/p2p_compactblocks_blocksonly.py\r\nindex b97fdfdb14..b55dddc01a 100755\r\n--- a/test/functional/p2p_compactblocks_blocksonly.py\r\n+++ b/test/functional/p2p_compactblocks_blocksonly.py\r\n@@ -7,17 +7,14 @@\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.p2p import P2PInterface\r\n from test_framework.util import assert_equal\r\n-from test_framework.blocktools import (\r\n-    NORMAL_GBT_REQUEST_PARAMS,\r\n-    add_witness_commitment,\r\n-    create_block,\r\n-)\r\n from test_framework.messages import (\r\n     MSG_BLOCK,\r\n     MSG_WITNESS_FLAG,\r\n     MSG_CMPCT_BLOCK,\r\n+    CBlock,\r\n     CInv,\r\n     CBlockHeader,\r\n+    from_hex,\r\n     msg_block,\r\n     msg_sendcmpct,\r\n     msg_headers,\r\n@@ -34,10 +31,10 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         self.sync_all()\r\n \r\n     def build_block_on_tip(self):\r\n-        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\r\n-        add_witness_commitment(block)\r\n-        block.solve()\r\n-        self.nodes[2].submitblock(block.serialize().hex())\r\n+        blockhash = self.nodes[2].generate(1)[0]\r\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\r\n+        block = from_hex(CBlock(), block_hex)\r\n+        block.rehash()\r\n         return block\r\n \r\n     def run_test(self):\r\n```",
      "created_at": "2021-08-09T15:39:45Z",
      "updated_at": "2021-08-09T15:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306379",
      "pull_request_review_id": 725414813,
      "id": 685306379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMwNjM3OQ==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 7,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please sort imports :slightly_smiling_face: ",
      "created_at": "2021-08-09T15:40:02Z",
      "updated_at": "2021-08-09T15:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685312787",
      "pull_request_review_id": 725414813,
      "id": 685312787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMxMjc4Nw==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+\n+        p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 2)\n+        p2p_conn_node0.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_node1.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Topology:\n+        #   p2p_conn_node0 ---> node0         node1 <--- p2p_conn_node1\n+        #                              node2\n+        #\n+        # node2 produces blocks which get passed to node0 and node1\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Part 1: Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_node0.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node0.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_node1.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 3)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 83,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This assumes that the node will send `sendcmpct` synchronously and before responding to the `ping` above. That's true right now, since `MaybeSetPeerAsAnnouncingHeaderAndIDs` is called in the synchronous `BlockChecked()` validation interface callback, but that may change in the future. (I'd like to change this to remove the synchronous `BlockChecked` callback).\r\n\r\nA less racy way to do this would be to use `wait_until()` so that the test doesn't immediately fail if the `sendcmpct` message isn't received before the `pong`.",
      "created_at": "2021-08-09T15:47:41Z",
      "updated_at": "2021-08-09T15:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685312787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685312787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685317001",
      "pull_request_review_id": 725414813,
      "id": 685317001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMxNzAwMQ==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+\n+        p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 2)\n+        p2p_conn_node0.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_node1.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Topology:\n+        #   p2p_conn_node0 ---> node0         node1 <--- p2p_conn_node1\n+        #                              node2\n+        #\n+        # node2 produces blocks which get passed to node0 and node1\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Part 1: Test that blocksonly nodes do not request high bandwidth mode.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 68,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No need for \"Part 1\" or \"Part 2\" in these logs (tests have a habit of being rearranged, so these logs will fall out of date)",
      "created_at": "2021-08-09T15:52:39Z",
      "updated_at": "2021-08-09T15:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685317001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685317001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686056461",
      "pull_request_review_id": 726487585,
      "id": 686056461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA1NjQ2MQ==",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the reset of the nodes",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 68,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        # node2 produces blocks which get passed to the rest of the nodes\r\n```",
      "created_at": "2021-08-10T14:09:03Z",
      "updated_at": "2021-08-10T14:55:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686056461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686056461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686065386",
      "pull_request_review_id": 726487585,
      "id": 686065386,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA2NTM4Ng==",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 44,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be 4 now that there are 4 nodes? Or maybe even better:\r\n\r\n```suggestion\r\n        for node in self.nodes:\r\n            assert not node.getblockchaininfo()['initialblockdownload']\r\n```",
      "created_at": "2021-08-10T14:18:39Z",
      "updated_at": "2021-08-10T14:55:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686065386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686065386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686094198",
      "pull_request_review_id": 726487585,
      "id": 686094198,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA5NDE5OA==",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 54,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\r\n            assert_equal(conn.message_count['sendcmpct'], 2)\r\n            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n```",
      "created_at": "2021-08-10T14:49:12Z",
      "updated_at": "2021-08-10T14:55:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686094198",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686094198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": 49,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686097074",
      "pull_request_review_id": 726487585,
      "id": 686097074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA5NzA3NA==",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the reset of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")\n+\n+        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_low_bw.sync_with_ping()\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\n+\n+        def test_for_cmpctblock(block):\n+            def test():\n+                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 116,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you separate the test for existence of the `cmpctblock` message from the test of its hash, you don't need the `sync_send_with_ping()` call:\r\n\r\n```suggestion\r\n                if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\r\n                    return False\r\n                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()\r\n```\r\n\r\nI'd also suggest using a lambda so that you don't need to have a named function returning the inner function, and also parametrizing the connection. Full diff:\r\n\r\n```diff\r\n         self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\r\n \r\n-        def test_for_cmpctblock(block):\r\n-            def test():\r\n-                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()\r\n-                return sha256 == block.sha256\r\n-            return test\r\n+        def test_for_cmpctblock(conn, block):\r\n+            if 'cmpctblock' not in conn.last_message:\r\n+                return False\r\n+            return conn.last_message['cmpctblock'].header_and_shortids.header.rehash() == block.sha256\r\n \r\n         p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\r\n-        p2p_conn_blocksonly.sync_send_with_ping()\r\n-        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block0))\r\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(p2p_conn_blocksonly, block0))\r\n \r\n         # Request high bandwidth mode from node0\r\n         p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=True, version=2))\r\n@@ -127,7 +123,7 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         block2 = self.build_block_on_tip()\r\n         self.nodes[0].submitblock(block1.serialize().hex())\r\n         self.nodes[0].submitblock(block2.serialize().hex())\r\n-        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block2))\r\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(p2p_conn_blocksonly, block2))\r\n```",
      "created_at": "2021-08-10T14:52:14Z",
      "updated_at": "2021-08-10T14:55:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686097074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686097074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686955459",
      "pull_request_review_id": 727649377,
      "id": 686955459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk1NTQ1OQ==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 2,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11875728d90716577f34482ddddb898cdb pico-nit, unless this test has been under development since 2019 (maybe it has!)\r\n```suggestion\r\n# Copyright (c) 2021-2021 The Bitcoin Core developers\r\n```\r\n\r\n(yes, there is an automated update script run occasionally but IDK if it's smart enough to set the start year) ",
      "created_at": "2021-08-11T15:44:24Z",
      "updated_at": "2021-08-11T18:10:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686955459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686955459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686960157",
      "pull_request_review_id": 727649377,
      "id": 686960157,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk2MDE1Nw==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 27,
      "original_position": 28,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11 suggestion stolen from review of #22651, feel free to ignore\r\n```diff\r\n-        self.num_nodes = 4\r\n         self.extra_args = [[\"-blocksonly\"], [], [], []]\r\n+        self.num_nodes = len(self.extra_args)\r\n```\r\n",
      "created_at": "2021-08-11T15:50:09Z",
      "updated_at": "2021-08-11T18:01:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686960157",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686960157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686969838",
      "pull_request_review_id": 727649377,
      "id": 686969838,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk2OTgzOA==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 65,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11875728d90716577f34482ddddb898cdb \r\n```suggestion\r\n        # node2 produces blocks that are passed to the rest of the nodes\r\n```",
      "created_at": "2021-08-11T16:01:17Z",
      "updated_at": "2021-08-11T18:01:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686969838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686969838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686977088",
      "pull_request_review_id": 727649377,
      "id": 686977088,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk3NzA4OA==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 68,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        self.log.info(\"Test -blocksonly nodes do not select peers for BIP152 high bandwidth mode\")\r\n```",
      "created_at": "2021-08-11T16:10:31Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686977088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686977088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686977814",
      "pull_request_review_id": 727649377,
      "id": 686977814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk3NzgxNA==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 91,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c99978d9 missing space \"insteadof\" + other suggestions while here\r\n```diff\r\n-        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\r\n-                      \"of getdata(CMPCT) in low bandwidth mode.\")\r\n+        self.log.info(\"Test -blocksonly nodes send getdata(BLOCK) instead\"\r\n+                      \" of getdata(CMPCT) in BIP152 low bandwidth mode\")\r\n```\r\n",
      "created_at": "2021-08-11T16:11:26Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686977814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686977814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686978385",
      "pull_request_review_id": 727649377,
      "id": 686978385,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk3ODM4NQ==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 103,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "770c5f1a s/bandwdith/bandwidth/ + minor suggestions while here\r\n```suggestion\r\n        self.log.info(\"Test getdata(CMPCT) is still sent on BIP152 low bandwidth connections\")\r\n```",
      "created_at": "2021-08-11T16:12:10Z",
      "updated_at": "2021-08-11T18:02:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686978385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686978385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686978680",
      "pull_request_review_id": 727649377,
      "id": 686978680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk3ODY4MA==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")\n+\n+        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_low_bw.sync_with_ping()\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 109,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        self.log.info(\"Test -blocksonly nodes still serve compact blocks\")\r\n```",
      "created_at": "2021-08-11T16:12:33Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686978680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686978680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686984726",
      "pull_request_review_id": 727649377,
      "id": 686984726,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njk4NDcyNg==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 102,
      "original_position": 101,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c99978d added the low bandwidth node as a sanity check\r\n```diff\r\n+\r\n+        p2p_conn_low_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\r\n+        p2p_conn_low_bw.sync_send_with_ping()\r\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\r\n```\r\n",
      "created_at": "2021-08-11T16:20:07Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686984726",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686984726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687026270",
      "pull_request_review_id": 727649377,
      "id": 687026270,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzAyNjI3MA==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 86,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "770c5f1a \"bitcoind node\"...which one?",
      "created_at": "2021-08-11T17:17:07Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687026270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687026270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687028672",
      "pull_request_review_id": 727649377,
      "id": 687028672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzAyODY3Mg==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 86,
      "original_position": 85,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11 added the low bandwidth node as a sanity check\r\n```diff\r\n+\r\n+        p2p_conn_low_bw.send_and_ping(msg_block(block0))\r\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\r\n+        p2p_conn_low_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\r\n+        assert_equal(p2p_conn_low_bw.last_message['sendcmpct'].announce, True)\r\n```\r\n",
      "created_at": "2021-08-11T17:20:37Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687028672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687028672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687031407",
      "pull_request_review_id": 727649377,
      "id": 687031407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzAzMTQwNw==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")\n+\n+        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_low_bw.sync_with_ping()\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\n+\n+        def test_for_cmpctblock(block):\n+            if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\n+                return False\n+            return p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash() == block.sha256\n+\n+        p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block0))\n+\n+        # Request high bandwidth mode from node0",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 119,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e21f2e4\r\n```suggestion\r\n        # Request high bandwidth mode from the -blocksonly node\r\n```",
      "created_at": "2021-08-11T17:24:31Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687031407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687031407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687040731",
      "pull_request_review_id": 727649377,
      "id": 687040731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzA0MDczMQ==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 80,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11875728d90716577f34482ddddb898cdb in general, ISTM mentioning BIP152 makes \"high/low bandwidth mode\" more clear\r\n```diff\r\n-        # A normal node participating in transaction relay should request high\r\n-        # bandwidth mode upon receiving a new valid block at the tip.\r\n+        # A normal node participating in transaction relay should request BIP152\r\n+        # high bandwidth mode upon receiving a new valid block at the tip.\r\n```",
      "created_at": "2021-08-11T17:37:58Z",
      "updated_at": "2021-08-11T18:09:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687040731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687040731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687041175",
      "pull_request_review_id": 727649377,
      "id": 687041175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzA0MTE3NQ==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 72,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e58cfb11875728d90716577f34482ddddb898cdb (micro-nit in general): blocksonly -> -blocksonly (or) blocks-only, the former might make clear for newer people that it is a config option and the latter describes the state clearly",
      "created_at": "2021-08-11T17:38:33Z",
      "updated_at": "2021-08-11T18:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687041175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687041175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687050643",
      "pull_request_review_id": 727649377,
      "id": 687050643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzA1MDY0Mw==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6dfee13 in general, ISTM that mentioning BIP152 makes \"high/low bandwidth mode\" more clear, especially for newer people\r\n```suggestion\r\n    // Never request BIP152 high-bandwidth mode from peers if we're blocks-only. Our\r\n```",
      "created_at": "2021-08-11T17:52:21Z",
      "updated_at": "2021-08-11T18:12:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687050643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687050643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 888,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687051208",
      "pull_request_review_id": 727649377,
      "id": 687051208,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzA1MTIwOA==",
      "diff_hunk": "@@ -2116,7 +2122,11 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (!m_ignore_incoming_txs &&",
      "path": "src/net_processing.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6dfee13f650521f7542df0926aff01af9ac6a328 Perhaps add a comment here as well (feel free to ignore).",
      "created_at": "2021-08-11T17:53:08Z",
      "updated_at": "2021-08-11T18:04:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r687051208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687051208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2174,
      "original_line": 2174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688658700",
      "pull_request_review_id": 729813183,
      "id": 688658700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODY1ODcwMA==",
      "diff_hunk": "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": 687050643,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "will do this in a follow up PR.",
      "created_at": "2021-08-13T17:03:46Z",
      "updated_at": "2021-08-13T17:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r688658700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688658700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 888,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688658778",
      "pull_request_review_id": 729813300,
      "id": 688658778,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODY1ODc3OA==",
      "diff_hunk": "@@ -2116,7 +2122,11 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (!m_ignore_incoming_txs &&",
      "path": "src/net_processing.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": 687051208,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "will do this in a follow up PR.",
      "created_at": "2021-08-13T17:03:55Z",
      "updated_at": "2021-08-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r688658778",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688658778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2174,
      "original_line": 2174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689391914",
      "pull_request_review_id": 730523580,
      "id": 689391914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MTkxNA==",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 68,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(micro style nits only if you retouch now or later, feel free to ignore)\r\n\r\n- s/BIP 152/BIP152/ on this one line (as elsewhere)\r\n- in general the test logging doesn't use EOL full stops/periods\r\n- in general `s/Test that/Test/` in the test logging, as all the `that`'s are needlessly verbose and add horizontal space (just my opinion though)",
      "created_at": "2021-08-16T09:47:16Z",
      "updated_at": "2021-08-16T10:06:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r689391914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689391914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689543553",
      "pull_request_review_id": 730722775,
      "id": 689543553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTU0MzU1Mw==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 27,
      "original_position": 28,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": 686960157,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is an improvement. Yes, it means that you don't need to change this line if the number of nodes in the test changes, but on the other hand I think it's very useful for people reading the code to be able to see at a glance how many nodes are used in the test. Making this a `len(list_of_some_length)` makes it less readable.",
      "created_at": "2021-08-16T13:35:53Z",
      "updated_at": "2021-08-16T13:37:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r689543553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689543553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689548769",
      "pull_request_review_id": 730729736,
      "id": 689548769,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTU0ODc2OQ==",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": 27,
      "original_position": 28,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "e21f2e4f04c5f15eccac529c6e8c59aba5283351",
      "in_reply_to_id": 686960157,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's fair.",
      "created_at": "2021-08-16T13:42:20Z",
      "updated_at": "2021-08-16T13:42:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r689548769",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689548769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690056675",
      "pull_request_review_id": 731357894,
      "id": 690056675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA1NjY3NQ==",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 32,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        self.setup_nodes()\r\n        # Start network with everyone disconnected\r\n        self.sync_all()\r\n```\r\nNot required, as its evident by definition. But wouldn't hurt having commented to specify we want an unconnected network topology. Also done in `p2p_comapctblocks_hb.py`. ",
      "created_at": "2021-08-17T05:55:38Z",
      "updated_at": "2021-08-17T06:49:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r690056675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690056675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690081504",
      "pull_request_review_id": 731357894,
      "id": 690081504,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA4MTUwNA==",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A -blocksonly node should not request BIP152 high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 76,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems `message_count['sendcmpct']` is already at 2 before reaching here. So the code isn't waiting for anything. Maybe we should wait for some other things that changes after previous step? Like `block` count or `inv` count? ",
      "created_at": "2021-08-17T06:46:33Z",
      "updated_at": "2021-08-17T06:49:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r690081504",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690081504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702273124",
      "pull_request_review_id": 746563406,
      "id": 702273124,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjI3MzEyNA==",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A -blocksonly node should not request BIP152 high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 76,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "in_reply_to_id": 690081504,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed it to wait for the  expected `block` count and after that assert that the `sendcmpct` count is still 2.",
      "created_at": "2021-09-04T11:30:01Z",
      "updated_at": "2021-09-04T11:30:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r702273124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702273124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702273189",
      "pull_request_review_id": 746563439,
      "id": 702273189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjI3MzE4OQ==",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP 152 high bandwidth mode.\")",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 68,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "ae54485c406bcf88c94450ffceabf709d5a18379",
      "in_reply_to_id": 689391914,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I disagree on the third point because omitting the `that` does not sound like correct english to me. (i am not a native english speaker so i might be totally wrong)\r\nAlso a lot of the other tests also have the `that` so i kept it here.",
      "created_at": "2021-09-04T11:30:40Z",
      "updated_at": "2021-09-04T11:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r702273189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702273189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713703646",
      "pull_request_review_id": 760595575,
      "id": 713703646,
      "node_id": "PRRC_kwDOABII584qikDe",
      "diff_hunk": "@@ -0,0 +1,131 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 28,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "f30eb1fe4a62fd9c927ba57b2a549678bde3f3c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this would be clearer if it was explicit about the number of nodes:\r\n\r\n```suggestion\r\n        self.num_nodes = 3\r\n```\r\n\r\nChecking the number of test nodes is one of the first things I do when reading a functional test. It should be immediately obvious what the topology of the test is.",
      "created_at": "2021-09-22T08:18:51Z",
      "updated_at": "2021-09-22T08:24:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r713703646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713703646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713707938",
      "pull_request_review_id": 760595575,
      "id": 713707938,
      "node_id": "PRRC_kwDOABII584qilGi",
      "diff_hunk": "@@ -0,0 +1,131 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        # Start network with everyone disconnected\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP152 high bandwidth mode\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A -blocksonly node should not request BIP152 high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_message(msg_block(block0))\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['block'] == 1)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 76,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "f30eb1fe4a62fd9c927ba57b2a549678bde3f3c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems wrong. The `message_count` property is counting how many message of each type has been received _from_ the bitcoind node since the start of the test. Here, you're _sending_ a `block` message, and then waiting for the count of _received_ `block` messages to be 1.\r\n\r\nI think here it'd be better to `send_and_ping()` the block message as you were before, and then use RPC to verify that the chain tip is as expected.",
      "created_at": "2021-09-22T08:23:40Z",
      "updated_at": "2021-09-22T08:24:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r713707938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713707938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714283242",
      "pull_request_review_id": 761370609,
      "id": 714283242,
      "node_id": "PRRC_kwDOABII584qkxjq",
      "diff_hunk": "@@ -0,0 +1,131 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        # Start network with everyone disconnected\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP152 high bandwidth mode\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A -blocksonly node should not request BIP152 high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_message(msg_block(block0))\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['block'] == 1)",
      "path": "test/functional/p2p_compactblocks_blocksonly.py",
      "position": null,
      "original_position": 76,
      "commit_id": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "original_commit_id": "f30eb1fe4a62fd9c927ba57b2a549678bde3f3c7",
      "in_reply_to_id": 713707938,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right, thanks for catching this!",
      "created_at": "2021-09-22T20:24:27Z",
      "updated_at": "2021-09-22T20:24:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r714283242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714283242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    }
  ]
}