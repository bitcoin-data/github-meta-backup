{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
    "id": 427284057,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI3Mjg0MDU3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19160",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19160.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19160.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/84934bf70e11fe4cda1cfda60113a54895d4fdd5",
    "number": 19160,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "multiprocess: Add basic spawn and IPC support",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds basic process spawning and IPC method call support to `bitcoin-node` executables built with `--enable-multiprocess`[*].\r\n\r\nThese changes are used in https://github.com/bitcoin/bitcoin/pull/10102 to let node, gui, and wallet functionality run in different processes, and extended in https://github.com/bitcoin/bitcoin/pull/19460 and https://github.com/bitcoin/bitcoin/pull/19461 after that to allow gui and wallet processes to be started and stopped independently and connect to the node over a socket.\r\n\r\nThese changes can also be used to implement new functionality outside the `bitcoin-node` process like external indexes or pluggable transports (https://github.com/bitcoin/bitcoin/pull/18988). The `Ipc::spawnProcess` and `Ipc::serveProcess` methods added here are entry points for spawning a child process and serving a parent process, and being able to make bidirectional, multithreaded method calls between the processes. A simple example of this is implemented in commit \"Add echoipc RPC method and test.\"\r\n\r\nChanges in this PR aside from the echo test were originally part of #10102, but have been split and moved here for easier review, and so they can be used for other applications like external plugins.\r\n\r\nAdditional notes about this PR can be found at https://bitcoincore.reviews/19160\r\n\r\n[*] Note: the `--enable-multiprocess` feature is still experimental, and not enabled by default, and not yet supported on windows. More information can be found in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-03T15:35:41Z",
    "updated_at": "2022-08-16T17:25:40Z",
    "closed_at": "2021-04-27T10:00:28Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-04-27T10:00:28Z",
    "merge_commit_sha": "ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/ipc-echo",
      "ref": "pr/ipc-echo",
      "sha": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 8,
        "watchers_count": 8,
        "size": 229522,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:24Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2023-05-05T12:10:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "66fd3b28e85c167f3955b5603496daf8d91abcad",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 805,
    "deletions": 13,
    "changed_files": 30,
    "commits": 6,
    "review_comments": 83,
    "comments": 43
  },
  "events": [
    {
      "event": "labeled",
      "id": 3403226864,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226864",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3403226868,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226868",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3403226869,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226869",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3403226873,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 3403226876,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226876",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 3403226879,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDMyMjY4Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403226879",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:20:23Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "added_to_project",
      "id": 3403326131,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzNDAzMzI2MTMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403326131",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T17:47:01Z",
      "project_card": {
        "id": 39444923,
        "url": "https://api.github.com/projects/columns/cards/39444923",
        "project_id": 2564669,
        "project_url": "https://api.github.com/projects/2564669",
        "column_name": "In progress"
      }
    },
    {
      "event": "unlabeled",
      "id": 3403430440,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwMzQzMDQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403430440",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T18:10:57Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 3403430444,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwMzQzMDQ0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403430444",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T18:10:57Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 3403430446,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwMzQzMDQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403430446",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T18:10:57Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 3403431358,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwMzQzMTM1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403431358",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T18:11:10Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "unlabeled",
      "id": 3403431361,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwMzQzMTM2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3403431361",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T18:11:10Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3404195354,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQwNDE5NTM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3404195354",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T21:47:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3404478152,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQwNDQ3ODE1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3404478152",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T23:58:20Z"
    },
    {
      "event": "commented",
      "id": 638529365,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzODUyOTM2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638529365",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T00:27:49Z",
      "updated_at": "2021-04-25T03:16:32Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20487 (Add syscall sandboxing using seccomp-bpf (Linux secure computing mode) by practicalswift)\n* #19461 (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* #19460 (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* #16365 (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-638529365",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 639486920,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTQ4NjkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639486920",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-05T13:41:03Z",
      "updated_at": "2020-06-11T03:54:06Z",
      "author_association": "MEMBER",
      "body": "Updated d38f790138089b2956207b5e98b74e1e0e116c5c -> 99562989e749e002c07d3cda1f95a5781160b187 ([`pr/ipc-echo.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.1) -> [`pr/ipc-echo.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.1..pr/ipc-echo.2)) fixing missing include causing build failures https://travis-ci.org/github/bitcoin/bitcoin/jobs/694309633#L2311\r\nUpdated 99562989e749e002c07d3cda1f95a5781160b187 -> 885f0d104141f0f157f05c02c9e4fb4c2f5c6d57 ([`pr/ipc-echo.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.2) -> [`pr/ipc-echo.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.2..pr/ipc-echo.3)) to fix missing include error https://travis-ci.org/github/bitcoin/bitcoin/jobs/694434815#L2574\r\nRebased 885f0d104141f0f157f05c02c9e4fb4c2f5c6d57 -> 52192725a3ec1f814cf40049de45efffc226cd5b ([`pr/ipc-echo.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.3) -> [`pr/ipc-echo.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.3-rebase..pr/ipc-echo.4)) due to conflict with #19176 and reducing Init class dependencies",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-639486920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "labeled",
      "id": 3426971231,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MjY5NzEyMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3426971231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-09T21:48:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3432342286,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMjM0MjI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3432342286",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T03:52:21Z"
    },
    {
      "event": "unlabeled",
      "id": 3432484579,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQzMjQ4NDU3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3432484579",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T05:11:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 642536017,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjUzNjAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642536017",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T09:41:27Z",
      "updated_at": "2020-06-11T09:41:27Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-642536017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 431045015,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDQ1MDE1",
      "url": null,
      "actor": null,
      "commit_id": "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nAwesome work, I still have to dig into libmultiprocess before to go further and test demonstration case. AFAICT, `based` on `--enable-multiprocess`, slaved process is going to either init as usual or connect through ipc mechanism to a parent process to which fd is currently passed manually. \r\n\r\nI confirm it could be reused easily for AltNet, both between `bitcoin-node` and `bitcoin-altnet`, and between `bitcoin-altnet` and each individual driver a process of its own. ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-431045015",
      "submitted_at": "2020-06-15T23:11:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3494848297,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ5NDg0ODI5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3494848297",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T22:41:41Z"
    },
    {
      "event": "reviewed",
      "id": 439356048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzU2MDQ4",
      "url": null,
      "actor": null,
      "commit_id": "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated 52192725a3ec1f814cf40049de45efffc226cd5b -> 4bc863fc88d8351bc2df64bfa1a0a9f1302b487b ([`pr/ipc-echo.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.4) -> [`pr/ipc-echo.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.4..pr/ipc-echo.5)) with more documentation and cleanups\r\nRebased 4bc863fc88d8351bc2df64bfa1a0a9f1302b487b -> 5a70cf96410f78172254f9ba710a9c2ca4c5d622 ([`pr/ipc-echo.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.5) -> [`pr/ipc-echo.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.5-rebase..pr/ipc-echo.6)) after #19422 workaround to avoid TSAN closedir BerkeleyBatch error https://travis-ci.org/github/bitcoin/bitcoin/jobs/703336215\r\nRebased 5a70cf96410f78172254f9ba710a9c2ca4c5d622 -> 0602f87a085c733f1da38b3b82210c81ef018fd5 ([`pr/ipc-echo.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.6) -> [`pr/ipc-echo.7`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.6-rebase..pr/ipc-echo.7)) due to conflict with #19323",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-439356048",
      "submitted_at": "2020-06-29T22:42:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "review_requested",
      "id": 3494854869,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50MzQ5NDg1NDg2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3494854869",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T22:44:49Z",
      "requested_reviewer": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3535351313,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNTM1MTMxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3535351313",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T20:27:05Z"
    },
    {
      "event": "labeled",
      "id": 3544767224,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1NDQ3NjcyMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3544767224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T15:42:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3545394318,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NTM5NDMxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3545394318",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T18:28:51Z"
    },
    {
      "event": "unlabeled",
      "id": 3545678145,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU0NTY3ODE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3545678145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T19:51:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 461170607,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTcwNjA3",
      "url": null,
      "actor": null,
      "commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Few mores comments, I think I need to dig into #10192 or further PR to understand well the threading model. \r\n\r\nThe `echoipc` seems to work fine on my side :)",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-461170607",
      "submitted_at": "2020-08-04T21:35:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "reviewed",
      "id": 461638136,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjM4MTM2",
      "url": null,
      "actor": null,
      "commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nplus some initial observations.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-461638136",
      "submitted_at": "2020-08-05T17:01:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "reviewed",
      "id": 461709262,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzA5MjYy",
      "url": null,
      "actor": null,
      "commit_id": "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-461709262",
      "submitted_at": "2020-08-05T17:37:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "labeled",
      "id": 3632206994,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MzIyMDY5OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3632206994",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T08:05:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3640867494,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MDg2NzQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3640867494",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T23:45:57Z"
    },
    {
      "event": "reviewed",
      "id": 464492390,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDkyMzkw",
      "url": null,
      "actor": null,
      "commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased 0602f87a085c733f1da38b3b82210c81ef018fd5 -> 22a2d3f93efd4c0eb689078e300bca8da9b1ea8a ([`pr/ipc-echo.7`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.7) -> [`pr/ipc-echo.8`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.7-rebase..pr/ipc-echo.8)) due to conflict with #19098\r\nUpdated 22a2d3f93efd4c0eb689078e300bca8da9b1ea8a -> 8d807a22e98eb43f8f01409f5a071d5c641d0470 ([`pr/ipc-echo.8`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.8) -> [`pr/ipc-echo.9`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.8..pr/ipc-echo.9)) with suggested changes\r\nRebased 8d807a22e98eb43f8f01409f5a071d5c641d0470 -> 805680ca6ffd0b61cddf853fb9feda9a72bc06b4 ([`pr/ipc-echo.9`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.9) -> [`pr/ipc-echo.10`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.9-rebase..pr/ipc-echo.10)) due to conflict with #19528\r\nRebased 805680ca6ffd0b61cddf853fb9feda9a72bc06b4 -> 7471a776630bb1af843afd7d8e0d8eacc054194e ([`pr/ipc-echo.10`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.10) -> [`pr/ipc-echo.11`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.10-rebase..pr/ipc-echo.11)) due to conflict with #19550\r\nRebased 7471a776630bb1af843afd7d8e0d8eacc054194e -> c453881a17a9fb16424715928c0388aa8c922cb4 ([`pr/ipc-echo.11`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.11) -> [`pr/ipc-echo.12`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.11-rebase..pr/ipc-echo.12)) due to conflict with https://github.com/bitcoin-core/gui/pull/35\r\nRebased c453881a17a9fb16424715928c0388aa8c922cb4 -> 3d87403a58010ee844db39c60ba8a9382a532aca ([`pr/ipc-echo.12`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.12) -> [`pr/ipc-echo.13`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.12-rebase..pr/ipc-echo.13)) due to conflict with #19099\r\nRebased 3d87403a58010ee844db39c60ba8a9382a532aca -> e181d9929ff8ed260ab713d1c5ffea7d80e157e0 ([`pr/ipc-echo.13`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.13) -> [`pr/ipc-echo.14`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.13-rebase..pr/ipc-echo.14)) due to conflict with #19993\r\nUpdated e181d9929ff8ed260ab713d1c5ffea7d80e157e0 -> ff0058470b313115d50b5285dbfb66f4e0aa6a69 ([`pr/ipc-echo.14`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.14) -> [`pr/ipc-echo.15`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.14..pr/ipc-echo.15)) fixing macos cmake error https://travis-ci.org/github/bitcoin/bitcoin/jobs/730006940, see https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701786973\r\nUpdated ff0058470b313115d50b5285dbfb66f4e0aa6a69 -> b8a2b29f2b11747323ad614066e17cc9d03d75f5 ([`pr/ipc-echo.15`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.15) -> [`pr/ipc-echo.16`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.16), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.15..pr/ipc-echo.16)) fixing broken rpath error fix error https://travis-ci.org/github/bitcoin/bitcoin/jobs/731808080#L2547-L2548\r\nUpdated b8a2b29f2b11747323ad614066e17cc9d03d75f5 -> e99129343d137410827ec7c26ae48a995e0cf1f8 ([`pr/ipc-echo.16`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.16) -> [`pr/ipc-echo.17`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.16..pr/ipc-echo.17)) tweaking cmake config to limit rpath override",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-464492390",
      "submitted_at": "2020-08-10T23:48:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3640902127,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MDkwMjEyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3640902127",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T00:05:07Z"
    },
    {
      "event": "unlabeled",
      "id": 3641074036,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY0MTA3NDAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641074036",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T01:41:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3655359873,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2NTUzNTk4NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3655359873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-14T08:49:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3663141603,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2MzE0MTYwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3663141603",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T18:43:40Z"
    },
    {
      "event": "unlabeled",
      "id": 3663452622,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY2MzQ1MjYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3663452622",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T20:14:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3675767970,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2NzU3Njc5NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3675767970",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T15:15:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3687342448,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4NzM0MjQ0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3687342448",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T21:43:23Z"
    },
    {
      "event": "unlabeled",
      "id": 3687584900,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY4NzU4NDkwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3687584900",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T23:29:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3695358007,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2OTUzNTgwMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3695358007",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T15:22:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3696950817,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY5Njk1MDgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3696950817",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T23:21:17Z"
    },
    {
      "event": "unlabeled",
      "id": 3696992592,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY5Njk5MjU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3696992592",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T23:42:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3709210370,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MDkyMTAzNzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3709210370",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T10:17:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3716820265,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcxNjgyMDI2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3716820265",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T21:01:40Z"
    },
    {
      "event": "unlabeled",
      "id": 3716964395,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzcxNjk2NDM5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3716964395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T21:46:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3796733738,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3OTY3MzM3Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3796733738",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-23T07:49:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3804078101,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgwNDA3ODEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3804078101",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-24T16:25:05Z"
    },
    {
      "event": "unlabeled",
      "id": 3804300116,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzgwNDMwMDExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3804300116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-24T17:22:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 699541179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTU0MTE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/699541179",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-26T19:58:56Z",
      "updated_at": "2020-09-26T19:58:56Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, deserves review.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-699541179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 700680735,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDY4MDczNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700680735",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-29T12:50:20Z",
      "updated_at": "2020-09-29T12:50:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-700680735",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3827290242,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNzI5MDI0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3827290242",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T03:27:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3828310349,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyODMxMDM0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3828310349",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T08:52:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3833369939,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgzMzM2OTkzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3833369939",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T10:33:35Z"
    },
    {
      "event": "reviewed",
      "id": 509636941,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjM2OTQx",
      "url": null,
      "actor": null,
      "commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Back to this after 0.21 high-priority reviews, I'm really eager to help to make this more ready-to-review once branch split-off is reached :)\r\n\r\nI started again reviewing from scratch as I didn't understand anymore all the new interfaces/abstract class inter-dependencies (`Init`, `IpcProtocol`, `IpcProcess`, linking with libmultiprocess). I think the review challenge is to write-up some detailed walkthrough giving a high-level picture of how every component is working when multiple processes are effectively used. See my specific comment for a starter, likely it could be in `src/interfaces/README.md` ?\r\n\r\nNote, following the current #Installation section from `doc/multiprocess` doesn't work on Debian 10.2, the generared Makefile doesn't incorporate a `bitcoin-node` target. I'm inquiring on this.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-509636941",
      "submitted_at": "2020-10-15T18:42:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "reviewed",
      "id": 509680684,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjgwNjg0",
      "url": null,
      "actor": null,
      "commit_id": "2f521b2c24dd390c5d8a5cfd59dfebd0b40cbfff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for adding the `echoipc` RPC; it should make it easier to wrap my head around stuff.\r\n\r\nOn macOS I'm having difficulty compiling (with `--enable-werror`; otherwise they're just warnings) when using capnp 0.8.0 via homebrew and a freshly built libmultiprocess, e.g. `error: parameter 'connection' shadows member inherited from type 'InvokeContext'`. Here's a [log](https://gist.github.com/Sjors/ca4513a09425565312806aac767690be).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-509680684",
      "submitted_at": "2020-10-15T19:10:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3905672920,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkwNTY3MjkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3905672920",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-21T19:45:41Z"
    },
    {
      "event": "reviewed",
      "id": 513024399,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDI0Mzk5",
      "url": null,
      "actor": null,
      "commit_id": "a777d2fbaef9ce495f3a22d47053fbdf524d1c89",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated e99129343d137410827ec7c26ae48a995e0cf1f8 -> ee7b3cdc72df06ce674a83b980cfb7e6ef657fc6 ([`pr/ipc-echo.17`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.17) -> [`pr/ipc-echo.18`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.17..pr/ipc-echo.18)) with suggested documentation and log updates",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-513024399",
      "submitted_at": "2020-10-21T19:55:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 718103715,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxODEwMzcxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718103715",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-28T17:49:34Z",
      "updated_at": "2020-10-28T17:49:34Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky See my graphical representation proposal here : https://github.com/ariard/bitcoin/tree/ipc-echo-review/src/interfaces..\r\n\r\nJoint with a walk-through for both the interfaces initialization and a message round-trip. ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-718103715",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 3932617585,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkzMjYxNzU4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3932617585",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-28T17:49:34Z"
    },
    {
      "event": "subscribed",
      "id": 3932617588,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MzI2MTc1ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3932617588",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-28T17:49:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4038430111,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAzODQzMDExMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4038430111",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-25T14:44:08Z"
    },
    {
      "event": "reviewed",
      "id": 518026991,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDI2OTkx",
      "url": null,
      "actor": null,
      "commit_id": "ee7b3cdc72df06ce674a83b980cfb7e6ef657fc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "In response to feedback, I did a big reorganization of this PR and will also update the other PRs building on this. The most noticeable changes are moves and renames: `src/interfaces/` directory is now now more minimal and now only contains interface definitions, with functionality that was previously in `src/interfaces/` is moved into `src/node/` and `src/wallet/` and new `src/init/` and `src/ipc/` directories. The confusing `LocalInit` class is now gone and IPC setup happens explicitly through `interfaces::Ipc` calls in node, wallet, and RPC code instead of the previous confusing approach where the `Init` class was responsible for setting up IPC connections, and it was less obvious which objects were remote and local. There are also a lot of other cleanups and documentation improvements, and a rebase on new base PR #20494\r\n\r\nRebased ee7b3cdc72df06ce674a83b980cfb7e6ef657fc6 -> a3d7a9864b16432b567a1c31613e5e5fe9eb1231 ([`pr/ipc-echo.18`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.18) -> [`pr/ipc-echo.19`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.18-rebase..pr/ipc-echo.19))\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-518026991",
      "submitted_at": "2020-11-25T15:26:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "referenced",
      "id": 4055850173,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNTU4NTAxNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4055850173",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "24e4857b29b33c72755384057463506d99b08871",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e4857b29b33c72755384057463506d99b08871",
      "created_at": "2020-12-01T08:41:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4085550470,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA4NTU1MDQ3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4085550470",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T16:11:30Z"
    },
    {
      "event": "labeled",
      "id": 4086162491,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwODYxNjI0OTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4086162491",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T18:29:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4086400549,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA4NjQwMDU0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4086400549",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T19:29:14Z"
    },
    {
      "event": "unlabeled",
      "id": 4086642989,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA4NjY0Mjk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4086642989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T20:34:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 741072350,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTA3MjM1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741072350",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T21:36:44Z",
      "updated_at": "2020-12-18T00:25:23Z",
      "author_association": "MEMBER",
      "body": "Rebased a3d7a9864b16432b567a1c31613e5e5fe9eb1231 -> 5951eea6753433c20d690fb0d4716dd3eeff4ab4 ([`pr/ipc-echo.19`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.19) -> [`pr/ipc-echo.20`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.20), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.19-rebase..pr/ipc-echo.20)) after base PR #20494 merge with include fixes to fix appveyor \"use of undefined type 'interfaces::Echo'\" failure https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36507325\r\n\r\nRebased 5951eea6753433c20d690fb0d4716dd3eeff4ab4 -> 9de6e8d7d9b2bb48045d82690ae5e57471e6d5fb ([`pr/ipc-echo.20`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.20) -> [`pr/ipc-echo.21`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.20-rebase..pr/ipc-echo.21)) due to conflict with #19425 with build fix for appveyor \"MSB8027: Two or more files with the name of bitcoind.cpp\" failure https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36723264, and libmultiprocess update https://github.com/chaincodelabs/libmultiprocess/pull/40 to fix cirrus \"-Werror=suggest-override\" failure https://cirrus-ci.com/task/6000489311502336?command=ci#L4294\r\n\r\nRebased 9de6e8d7d9b2bb48045d82690ae5e57471e6d5fb -> 6e6fc35540c6e1eb1f5c8c001be8a89de7f317b7 ([`pr/ipc-echo.21`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.21) -> [`pr/ipc-echo.22`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.22), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.21-rebase..pr/ipc-echo.22)) after base PR #20046 merge\r\n\r\nRebased 6e6fc35540c6e1eb1f5c8c001be8a89de7f317b7 -> e9f438870169e04edda15badf8c4d0f174e32970 ([`pr/ipc-echo.22`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.22) -> [`pr/ipc-echo.23`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.23), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.22-rebase..pr/ipc-echo.23)) due to conflict with #20605\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-741072350",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "referenced",
      "id": 4092960564,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwOTI5NjA1NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4092960564",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "17918a987aee4ed380758a5b2b1b0782b587d59f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17918a987aee4ed380758a5b2b1b0782b587d59f",
      "created_at": "2020-12-10T03:12:18Z"
    },
    {
      "event": "referenced",
      "id": 4093048285,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwOTMwNDgyODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4093048285",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7512d370e3ec4b9ff20e57366283b5a1bf3873c3",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/7512d370e3ec4b9ff20e57366283b5a1bf3873c3",
      "created_at": "2020-12-10T03:55:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4098089390,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5ODA4OTM5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4098089390",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T02:10:00Z"
    },
    {
      "event": "labeled",
      "id": 4120467432,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxMjA0Njc0MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4120467432",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T15:57:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4127600031,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDEyNzYwMDAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127600031",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T00:21:28Z"
    },
    {
      "event": "unlabeled",
      "id": 4127777335,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDEyNzc3NzMzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127777335",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T01:47:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 759899920,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTg5OTkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759899920",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T03:22:14Z",
      "updated_at": "2021-01-14T03:22:14Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Will start review tomorrow evening.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-759899920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 761607197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTYwNzE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/761607197",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-16T18:03:11Z",
      "updated_at": "2021-01-16T18:03:35Z",
      "author_association": "MEMBER",
      "body": "Took a fresh look at this (thanks for prompting, James!) and had some ideas for making this easier to review:\r\n\r\n- I think I can entirely drop \"multiprocess: Add interfaces base class with addCloseHook method\" commit 543070ea18a501cd2bb895bc3ec062ffc473891b\r\n- I can drop the little stub files in the \"multiprocess: Add echoipc RPC method and test\" commit e9f438870169e04edda15badf8c4d0f174e32970. These are customization points used for more complicated #10102 node/wallet/gui interactions not needed for the simple echo method call\r\n- I will to split up the main \"Add basic spawn and IPC support\" commit fe0a68197aed9f2df05ab3a051b3f3aa3f630e88 some more, particularly moving the long documentation comments out to a separate commit. They bog down and hide the actual changes too much making them seem much more weighty than they are, going too deep into details of each component before you see all the components.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-761607197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 761608547,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTYwODU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/761608547",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-16T18:09:28Z",
      "updated_at": "2021-01-16T18:09:28Z",
      "author_association": "MEMBER",
      "body": "Yes, been meaning to get to this for a while and will do so ASAP.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-761608547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 765702817,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTcwMjgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765702817",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-22T21:46:04Z",
      "updated_at": "2021-01-22T21:46:04Z",
      "author_association": "MEMBER",
      "body": "Light Code-Review ACK e9f438870169e04edda15badf8c4d0f174e32970\r\n\r\nNit: I'm not 100% sure how to approach this, but perhaps there's a more ergonomic way to get the final interface out from `spawnProcess` than doing \"out-param-through-lamdba-capturing\"?\r\n\r\n-----\r\n\r\nThanks to ryanofsky's offline help, I wrote down some notes on how this all works, hope it helps other reviewers (please also let me know if I got anything wrong!)\r\n\r\n### Parent's Perspective\r\n\r\nWhen a parent node starts up, it constructs (using `interfaces::MakeNodeInit`) an `interfaces::Init` that is placed in `NodeContext.init`. The parent node can then call `spawnProcess` on the newly constructed `interfaces::Init`'s `interfaces::Ipc` to:\r\n1. Start a child process\r\n2. Create an interface for the parent to communicate with said child\r\n\r\nThe default implementation for `interfaces::Ipc::spawnProcess` works by utilizing:\r\n1. `ipc::Process::connect`, which encapsulates the logic needed to \r\n\t1. Start the child process\r\n\t1. Create a protocol-neutral file descriptor for the parent to communicate with said child process\r\n1. `ipc::Protocol::connect`, which encapsulates the logic needed to\r\n\t1. Create an interface for the parent to communicate with said child from the protocol-neutral file descriptor\r\n\r\n### Child's perspective\r\n\r\nWhen the child is spawned by the parent calling `ipc::Process::connect` as described above, the child also calls `interfaces::MakeNodeInit` to construct an `interfaces::Init`.\r\n\r\nWhat's important here is that `interfaces::MakeNodeInit` calls `serveProcess` (yin to `spawnProcess`'s yang) on its newly constructed `interfaces::Init` before returning. This `serveProcess` behaves differently when called by a parent process vs. a child process:\r\n\r\n1. In the case of a parent process, this immediately returns false and the newly constructed `interfaces::Init` is placed in `NodeContext.init` for later use (described above).\r\n1. In the case of a spawned child process, this `serveProcess` will block, listen, and respond to calls from the parent process on a loop.\r\n\r\nNote: `serveProcess` distinguished between the parent vs. child by checking for an `-ipcfd` flag on the command line, which is added when a parent process spawns a child process in `ipc::Process::spawn`.\r\n\r\nThe default implementation for `interfaces::Ipc::serveProcess` work by utilizing:\r\n1. `ipc::Process::serve`, which encapsulates the logic needed to \r\n\t1. Parse the `-ipcfd` flag for the protocol-neutral file descriptor on which the parent will send requests\r\n\t1. Call `ipc::Protocol::serve`, which encapsulates the logic needed to\r\n\t\t1. Respond to requests from the parent process on said file descriptor\r\n\t1. Capture the correct exit status from `ipc::Protocol::serve` and bubble it up\r\n\r\nA few snippets that were elucidating for me:\r\n1. [`e9f4388` (#19160)](https://github.com/bitcoin/bitcoin/pull/19160/commits/e9f438870169e04edda15badf8c4d0f174e32970#diff-0ba691cbdd97c095286e9373ed8d5be87d559234440487956326965e16cbb421R653-R675)\r\n2. [`fe0a681` (#19160)](https://github.com/bitcoin/bitcoin/pull/19160/commits/fe0a68197aed9f2df05ab3a051b3f3aa3f630e88#diff-375cfa1f938352b2fa57a4a6a8221c81a04ebf180025d92ddeda25c3cbbb931bR47-R59)",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-765702817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "labeled",
      "id": 4262662987,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQyNjI2NjI5ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4262662987",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T19:00:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "added_to_project",
      "id": 4262681785,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQ0MjYyNjgxNzg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4262681785",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T19:04:53Z",
      "project_card": {
        "id": 53773753,
        "url": "https://api.github.com/projects/columns/cards/53773753",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 4263135520,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyNjMxMzU1MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4263135520",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35d2091134b2b750daa113d93360c0a5755d8edc",
      "commit_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/commits/35d2091134b2b750daa113d93360c0a5755d8edc",
      "created_at": "2021-01-28T20:49:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4263213768,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI2MzIxMzc2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4263213768",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T21:07:01Z"
    },
    {
      "event": "commented",
      "id": 769403702,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTQwMzcwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769403702",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T21:19:00Z",
      "updated_at": "2021-01-28T21:20:42Z",
      "author_association": "MEMBER",
      "body": "Rebased due to conflict, also made all the cleanups suggested https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-761607197 and was able to get rid of confusing lambda @dongcarl pointed out https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-765702817\r\n\r\n---\r\n\r\nRebased e9f438870169e04edda15badf8c4d0f174e32970 -> f08e238945342151d39e18d577cd6a94603e4397 ([`pr/ipc-echo.23`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.23) -> [`pr/ipc-echo.24`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.24), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.23-rebase..pr/ipc-echo.24)) due to conflict with #20012, also making various cleanups",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-769403702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 4263266591,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI2MzI2NjU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4263266591",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T21:19:00Z"
    },
    {
      "event": "subscribed",
      "id": 4263266593,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNjMyNjY1OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4263266593",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T21:19:00Z"
    },
    {
      "event": "unlabeled",
      "id": 4263351853,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDI2MzM1MTg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4263351853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T21:40:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 771795995,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTc5NTk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771795995",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-02T17:06:24Z",
      "updated_at": "2021-02-02T17:06:24Z",
      "author_association": "MEMBER",
      "body": "Seeing the following issue when attempting to build f08e238945342151d39e18d577cd6a94603e4397 with gcc 10 and `--enable-multiprocess`:\r\n```\r\n  GEN      ipc/capnp/echo.capnp.c++\r\nipc/capnp/echo.capnp:11:8-15: error: 'Proxy' has no member named 'include'\r\nipc/capnp/echo.capnp:12:8-15: error: 'Proxy' has no member named 'include'\r\nterminate called after throwing an instance of 'std::runtime_error'\r\n  what():  Invoking /usr/bin/capnp failed\r\nmake[2]: *** [/usr/local/include/mpgen.mk:4: ipc/capnp/echo.capnp.c++] Aborted\r\nmake[2]: *** Waiting for unfinished jobs....\r\n```\r\nIt builds fine without `--enable-multiprocess`\r\n\r\nI then followed the instructions in `doc/multiprocess.md`...\r\n```\r\ncd <BITCOIN_SOURCE_DIRECTORY>\r\nmake -C depends NO_QT=1 MULTIPROCESS=1\r\n./configure --prefix=$PWD/depends/x86_64-pc-linux-gnu\r\nmake\r\n```\r\nand at the `make` step, am seeing:\r\n```\r\n  CXX      ipc/capnp/libbitcoin_ipc_a-protocol.o\r\nipc/capnp/protocol.cpp:6:10: fatal error: ipc/capnp/init.capnp.h: No such file or directory\r\n    6 | #include <ipc/capnp/init.capnp.h>\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~\r\ncompilation terminated.\r\nmake[2]: *** [Makefile:8366: ipc/capnp/libbitcoin_ipc_a-protocol.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: Leaving directory '/home/jon/projects/bitcoin/bitcoin/src'\r\nmake[1]: *** [Makefile:15483: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/jon/projects/bitcoin/bitcoin/src'\r\nmake: *** [Makefile:812: all-recursive] Error 1\r\n```\r\nTried each step a couple times. Any tips?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-771795995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 771806914,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTgwNjkxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771806914",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-02T17:16:30Z",
      "updated_at": "2021-02-02T17:16:30Z",
      "author_association": "MEMBER",
      "body": "Ah, reinstalled manually per the instructions in https://github.com/chaincodelabs/libmultiprocess/blob/master/README.md and now this pull builds with `--enable-multiprocess`. I had already installed in September 2020 but it appears I needed to do it again.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-771806914",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 771836711,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTgzNjcxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771836711",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-02T17:49:57Z",
      "updated_at": "2021-02-02T17:49:57Z",
      "author_association": "MEMBER",
      "body": "Thanks for testing the manual install! Note it's also possible to test this with depends using the commands from [`doc/multiprocess.md#installation`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo/doc/multiprocess.md#installation)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-771836711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 774315229,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDMxNTIyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774315229",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-05T22:09:41Z",
      "updated_at": "2021-02-05T22:09:41Z",
      "author_association": "MEMBER",
      "body": "Reviewed the diff https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.23-rebase..pr/ipc-echo.24\r\n- Base interface removed\r\n- Added methods to make Node, Chain, WalletClient interfaces\r\n- Changed call semantic of Ipc::spawnProcess to return the Init interface\r\n- Added Ipc::addCleanup to attach cleanup function to interface\r\n\r\nryanofsky: Wondering what [`pr/ipc-echo.23-rebase..pr/ipc-echo.24`#diff-a1848eb83b](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.23-rebase..pr/ipc-echo.24#diff-a1848eb83bcd5e96fc038aad14776327b6d339dcc9d684a8771eb82b7f58ba1eR11-R12) is for?",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-774315229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 774322865,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDMyMjg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774322865",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-05T22:29:26Z",
      "updated_at": "2021-02-05T22:29:26Z",
      "author_association": "MEMBER",
      "body": "> ryanofsky: Wondering what [`pr/ipc-echo.23-rebase..pr/ipc-echo.24`#diff-a1848eb83b](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.23-rebase..pr/ipc-echo.24#diff-a1848eb83bcd5e96fc038aad14776327b6d339dcc9d684a8771eb82b7f58ba1eR11-R12) is for?\r\n\r\nThe new annotations add `#include` statements to generated files. The annotations are defined at https://github.com/ryanofsky/libmultiprocess/blob/2ccc479f8666d680bd2c2b157554ec5a7ce39d33/include/mp/proxy.capnp#L10-L12 and are needed after https://github.com/chaincodelabs/libmultiprocess/pull/43. That PR stopped automatically adding `#include` lines to generated files to avoid the need for basically empty header files to be created in some cases.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-774322865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 589563601,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NTYzNjAx",
      "url": null,
      "actor": null,
      "commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks to reworking this PR, it's much much clearer! I still want to test it manually, maybe suggest doc improvement and to look again at `libmultiprocess` before to ACK.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-589563601",
      "submitted_at": "2021-02-12T17:23:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 780099295,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDA5OTI5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780099295",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T20:30:26Z",
      "updated_at": "2021-02-16T20:30:59Z",
      "author_association": "MEMBER",
      "body": "A few more notes from reviewing the code today:\r\n\r\n- Trivial implementations found in `src/interfaces/init.cpp` for `interfaces::Init` methods are required so that classes which inherit from `interfaces::Init` won’t be considered abstract classes and can be allocated and returned in `interfaces::MakeNodeInit`.\r\n- Polymorphism for `interfaces::MakeNodeInit` (e.g. whether the one in `src/init/bitcoind.cpp` is called or the one in `src/init/bitcoin-node.cpp` is called) is achieved through the build system:\r\n\thttps://github.com/bitcoin/bitcoin/blob/f08e238945342151d39e18d577cd6a94603e4397/src/Makefile.am#L626\r\n\thttps://github.com/bitcoin/bitcoin/blob/f08e238945342151d39e18d577cd6a94603e4397/src/Makefile.am#L632\r\n\t",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-780099295",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4349449791,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM0OTQ0OTc5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4349449791",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-18T23:30:01Z"
    },
    {
      "event": "reviewed",
      "id": 593279059,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMjc5MDU5",
      "url": null,
      "actor": null,
      "commit_id": "b8b7f0312e1d8202c95b47667eb351f1acd1f606",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks Antoine and Carl for review! Made a few tweaks based on comments.\r\n\r\nUpdated f08e238945342151d39e18d577cd6a94603e4397 -> 5e55c5a29633c19df2008653bf9285b338ff1088 ([`pr/ipc-echo.24`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.24) -> [`pr/ipc-echo.25`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.25), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.24..pr/ipc-echo.25)) with changes based on suggestions.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-780099295\r\n\r\n> A few more notes from reviewing the code today:\r\n>\r\n> * Trivial implementations found in `src/interfaces/init.cpp` for `interfaces::Init` methods are required so that classes which inherit from `interfaces::Init` won’t be considered abstract classes and can be allocated and returned in `interfaces::MakeNodeInit`.\r\n> * Polymorphism for `interfaces::MakeNodeInit` (e.g. whether the one in `src/init/bitcoind.cpp` is called or the one in `src/init/bitcoin-node.cpp` is called) is achieved through the build system\r\n\r\nCurious if you would suggest changes to [`interfaces/init.h`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo/src/interfaces/init.h) to make this more clear. The [`Make` function declarations](https://github.com/ryanofsky/bitcoin/blob/5e55c5a29633c19df2008653bf9285b338ff1088/src/interfaces/init.h#L32-L44) at the bottom are meant to suggest the different init implementations.\r\n\r\nAlso, to be sure, `interfaces::Init` methods _could_ all be abstract. Making them not abstract just avoids having to repeatedly define the same `make` methods in subclasses that all return null. This avoids extra boilerplate in #10102 which has [`BitcoinNodeInit`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/init/bitcoin-node.cpp), [`BitcoinWalletInit`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/init/bitcoin-wallet-ipc.cpp), [`BitcoinGuiInit`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/init/bitcoin-gui.cpp), [`BitcoinQtInit`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/init/bitcoin-qt.cpp), and [`BitcoindInit`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/init/bitcoind.cpp)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-593279059",
      "submitted_at": "2021-02-19T00:31:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4353426205,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM1MzQyNjIwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4353426205",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T18:11:53Z"
    },
    {
      "event": "commented",
      "id": 782247544,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjI0NzU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782247544",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T18:13:33Z",
      "updated_at": "2021-02-19T18:13:33Z",
      "author_association": "MEMBER",
      "body": "Updated 5e55c5a29633c19df2008653bf9285b338ff1088 -> b2abe3f062c69663ae97bed239aa0a118e6a081c ([`pr/ipc-echo.25`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.25) -> [`pr/ipc-echo.26`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.26), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.25..pr/ipc-echo.26)) with a few more tweaks, mostly comment changes.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-782247544",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 599662945,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5NjYyOTQ1",
      "url": null,
      "actor": null,
      "commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code and documentation sounds good to me. Still want to review `libmultiprocess` internals one more time before to ACK.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-599662945",
      "submitted_at": "2021-02-26T16:43:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "reviewed",
      "id": 600311944,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzExOTQ0",
      "url": null,
      "actor": null,
      "commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Took a read through the commits, which look very clean, but haven't fully digested the innards of the change; as @ariard alluded to,  the content here in large part resides within libmultiprocess. I'd like to give that a thorough read-through, and I think we should consider moving it in-tree going forward (apologies if that's resurrecting a discussion that was already hashed out).\r\n\r\nI'm going to build and test this locally and will report back with a more thorough review.\r\n\r\nThe code here is fairly simple and easy to follow, though I would recommend to reviewers that they read the documentation commit first (8e85076174) for some general context. Some of the classes and machinery are a little abstract and so benefit from some upfront background.\r\n\r\nI'd like to emphasize here that this is an important project; it's upstream of many changes that have the potential to substantially increase bitcoind's resilience (e.g. decoupling consensus runtime from extraneous functionality, pluggable alternate transports). For that reason I hope to see continued review effort here, and will try to do a better job of that myself! \r\n\r\n### Review notes\r\n\r\n- [x] 29e574aed8 Update libmultiprocess library\r\n\r\n    Changes out hash for a newer libmultiprocess.\r\n\r\n- [x] 0ffd07f870 multiprocess: Add Ipc and Init interface definitions\r\n\r\n    Adds some abstract interfaces for spawning and cleaning up processes (essentially\r\n    just wrappers around libmultiprocess machinery) as well as some specific init\r\n    interfaces for making node, chain, and wallet client processes.\r\n\r\n- [x] e4cda24487 multiprocess: Add Ipc interface implementation\r\n\r\n    CapnpProtocol() - an Capnp-transport-specific implementation that can enqueue IPC requests,\r\n    execute them, and communicate the results out to a file descriptor. \r\n\r\n- [x] c80a46c20f multiprocess: Add bitcoin-node process spawning support\r\n\r\n    Adds an `interfaces::Init` implementation for spawning a bitcoin node process.\r\n    Defines the headers for the wallet and GUI init implementations, but doesn't specify\r\n    the implementations for those.\r\n\r\n- [x] 8e85076174 multiprocess: Add comments and documentation\r\n \r\n    For anyone reviewing, probably worth reading this first.\r\n   \r\n- [x] b2abe3f062 multiprocess: Add echoipc RPC method and test\r\n\r\n    Nice commit that demonstrates implementations of a simple echo process that spawns\r\n    and services requests, as well as a system test which (I assume for the moment) runs\r\n    degenerately in a single process.\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-600311944",
      "submitted_at": "2021-02-28T22:31:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "labeled",
      "id": 4395426083,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQzOTU0MjYwODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4395426083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T11:59:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4408245468,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwODI0NTQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408245468",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:05:44Z"
    },
    {
      "event": "unlabeled",
      "id": 4408281832,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQwODI4MTgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408281832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:12:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 604067287,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MDY3Mjg3",
      "url": null,
      "actor": null,
      "commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-600311944\r\n\r\nThanks for review and summaries. I need to go through your feedback more and figure out how to update commit messages and documention.\r\n\r\n> I think we should consider moving it in-tree going forward (apologies if that's resurrecting a discussion that was already hashed out).\r\n\r\nI'd like to move the [libmultiprocess repo](https://github.com/chaincodelabs/libmultiprocess) from the [chaincode org](https://github.com/chaincode) to the [bitcoin-core org](https://github.com/bitcoin-core), but preferably not make it part of the [bitcoin repo](https://github.com/bitcoin/bitcoin). There are a few reasons. One reason is that there's nothing bitcoin-specific about the project. It can be used by any c++ application or library that wants to easily call functions across processes or pass callable objects between processes. Another more petty reason is that it uses a modern build system which would be nice not to backport to autoconf. Would be doable though.\r\n\r\n> system test which (I assume for the moment) runs degenerately in a single process.\r\n\r\nYes, if you run [rpc_misc.py](https://github.com/ryanofsky/bitcoin/blob/ipc-export/test/functional/rpc_misc.py) by default it won't test multiprocess support because `bitcoind` doesn't have multiprocess support. But if you run `BITCOIND=bitcoin-node test/functional/rpc_misc.py`, the `bitcoin-node` process will spawn another `bitcoin-node` process internally to do the test. (Cirrus CI [tests this](https://github.com/bitcoin/bitcoin/blob/83bdbbd300bb17bef07bc63735a84a0b0ce59958/ci/test/00_setup_env_native_multiprocess.sh#L15) in its multiprocess build).\r\n\r\n---\r\n\r\nRebased b2abe3f062c69663ae97bed239aa0a118e6a081c -> e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d ([`pr/ipc-echo.26`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.26) -> [`pr/ipc-echo.27`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.27), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.26-rebase..pr/ipc-echo.27)) due to conflict with #20685",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-604067287",
      "submitted_at": "2021-03-04T14:18:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 791784095,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTc4NDA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791784095",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-05T23:19:09Z",
      "updated_at": "2021-03-05T23:24:37Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d\r\n\r\nRead through all the commits and played around with changing the code to convince myself this was correct.\r\n\r\nOne thing that I noticed through reviewing and re-reviewing is that it seems the abstractions are deliberately designed in a way such that if we really wanted to, we can switch between different transports and even completely replace `libmultiprocess` in the future.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-791784095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 607456445,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NDU2NDQ1",
      "url": null,
      "actor": null,
      "commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK e1d4b13\r\n\r\nI went through all the changes of this branch, tested them manually. Also did a light code review of `libmultiprocess` (d576d97). Of course the library could be documented further but a) in the future it can be decoupled from cap'n proto and b) it's relatively small (~5300 LoC).\r\n\r\nI've a WIP branch [here](https://github.com/ariard/bitcoin/tree/2021-02-headers-dns) on how future interfaces can be added and the multiprocess framework leveraged  for future uses (pluggable alternative transports). So far, it's convenient enough to use!\r\n\r\nFeel free to take comments if you have to make other changes.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-607456445",
      "submitted_at": "2021-03-09T15:59:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4431866940,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQzMTg2Njk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4431866940",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-09T22:35:11Z"
    },
    {
      "event": "reviewed",
      "id": 607635567,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NjM1NTY3",
      "url": null,
      "actor": null,
      "commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-607456445\r\n\r\nThanks for reviews! I love your altnet branch too ([easy diff link](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.26...ariard:2021-02-headers-dns))! Updated this PR with some of the new suggestions.\r\n\r\n---\r\n\r\nUpdated e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d -> 36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd ([`pr/ipc-echo.27`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.27) -> [`pr/ipc-echo.28`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.28), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.27..pr/ipc-echo.28)) with a few review suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-607635567",
      "submitted_at": "2021-03-09T22:38:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "labeled",
      "id": 4445473857,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NDU0NzM4NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445473857",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T14:56:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 796816352,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjgxNjM1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796816352",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T15:24:17Z",
      "updated_at": "2021-03-11T15:24:17Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK 36f1fbf, thanks for taking the suggestions.\r\n\r\nNeeds rebase.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-796816352",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 610361823,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwMzYxODIz",
      "url": null,
      "actor": null,
      "commit_id": "36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-610361823",
      "submitted_at": "2021-03-12T00:44:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 797706893,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzcwNjg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797706893",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T19:32:47Z",
      "updated_at": "2021-03-12T19:32:47Z",
      "author_association": "MEMBER",
      "body": "re-ACK 36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd\r\n\r\n-----\r\n\r\nNoticed changes (no apparent behavioural changes):\r\n- Documentation updates\r\n- Renamed `arg0` parameter to `process_arg0`\r\n",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-797706893",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 800365092,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDM2NTA5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800365092",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T15:30:45Z",
      "updated_at": "2021-03-16T15:30:45Z",
      "author_association": "MEMBER",
      "body": "I've spent the last day or so reading through libmultiprocess (evidenced by [a few breadcrumbs](https://github.com/chaincodelabs/libmultiprocess/pull/45)) and while I feel I have lexically parsed the contents of that repo and have found nothing obviously wrong or malicious, I certainly wouldn't be able to recreate the work there and can't attest to its correctness. The contents of, say, [the type marshalling unit](https://github.com/chaincodelabs/libmultiprocess/blob/master/include/mp/proxy-types.h) are out of my paygrade from a C++ knowhow standpoint so while the code *seems* fine (and certainly well designed by @ryanofsky), I cannot take a full accounting of its correctness or safety.\r\n\r\nThat said, `--enable-multiprocess` is still an opt-in, off-by-default feature and the approach taken using libmultiprocess is probably the least intrusive from a code standpoint in terms of mitigating the changes necessary to make multiprocess operation an option alongside the standard monolith process operation. Even if the approach taken in libmultiprocess is more general/complex than necessary in the longterm and even if we may be able to come up with a simpler mechanism to enable multiprocess coordination, I think getting multiprocess operation fleshed out and working is the really important thing at this point. So while I think it would be nice if some of the cpp gurus on this repo gave libmultiprocess a thorough once-over (if they haven't already), I am ACK on using that library to proof out process separation.\r\n\r\nOnce we get process separation working and thoroughly tested, we can think about whether the generalized mechanisms for object (de)serialization and function calling in libmultiprocess are necessary in lieu of something simpler like message passing with a more specialized, straightforward protocol over a socket.\r\n\r\nI hope to complete a final review and testing of this PR today.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-800365092",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 4465296456,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ2NTI5NjQ1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4465296456",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T15:30:45Z"
    },
    {
      "event": "subscribed",
      "id": 4465296464,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0NjUyOTY0NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4465296464",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-16T15:30:45Z"
    },
    {
      "event": "reviewed",
      "id": 613748666,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEzNzQ4NjY2",
      "url": null,
      "actor": null,
      "commit_id": "36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd ([`jamesob/ackr/19160.1.ryanofsky.multiprocess_add_basic_s`](https://github.com/jamesob/bitcoin/tree/ackr/19160.1.ryanofsky.multiprocess_add_basic_s))\r\n\r\nNeeds rebase, but luckily it's a pretty easy one.\r\n\r\n- [x] 97232e7c62 Update libmultiprocess library\r\n\r\n  Verified hash matches reviewed version of libmultiprocess. \r\n  Verified `curl -L https://github.com/chaincodelabs/libmultiprocess/archive/$(git rev-parse HEAD).tar.gz | sha256sum`\r\n  matches the expected hash.\r\n  \r\n- [x] 547cb012ac multiprocess: Add Ipc and Init interface definitions\r\n- [x] 98981da508 multiprocess: Add Ipc interface implementation\r\n- [x] daf366f6ef multiprocess: Add bitcoin-node process spawning support\r\n- [x] d9274f0bd2 multiprocess: Add comments and documentation\r\n- [x] 36f1fbf50a multiprocess: Add echoipc RPC method and test\r\n\r\n\r\n### Manual testing\r\n\r\nCloned and built libmultiprocess independently; installed using `cmake\r\n-DCMAKE_INSTALL_PREFIX=/home/james/.local ..`.\r\nInstallation using `sudo make install` without the local prefix led to an error during\r\nbitcoin build time.\r\n\r\nHad to then run `./configure` with `PKG_CONFIG_PATH=${HOME}/.local/lib/pkgconfig\r\n./configure ... -L${HOME}/.local/lib ... -I${HOME}/.local/include ...`\r\n\r\nBuilt bitcoin, started `bitcoin-node` with preexisting pruned datadir. Operation as\r\nusual. Executed `./src/bitcoin-cli echoipc wowowow` a few times:\r\n```\r\n2021-03-16T21:33:45Z [httpworker.2] Process bitcoin-node pid 62867 launched\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client first request from current thread, constructing waiter\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Init.construct$Params (threadMap = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Init.construct$Results (threadMap = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Init.makeEcho$Params (context = (thread = <external capability>, callbackThread = <external capability>))\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Init.makeEcho$Results (result = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Echo.echo$Params (context = (thread = <external capability>, callbackThread = <external capability>), echo = \"wowowow\")\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Echo.echo$Results (result = \"wowowow\")\r\n2021-03-16T21:33:45Z [httpworker.2]\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client destroy N2mp11ProxyClientIN3ipc5capnp8messages4EchoEEE\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Echo.destroy$Params (context = (thread = <external capability>, callbackThread = <external capability>))\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Echo.destroy$Results ()\r\n2021-03-16T21:33:45Z [httpworker.2]\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client destroy N2mp11ProxyClientIN3ipc5capnp8messages4InitEEE\r\n2021-03-16T21:33:45Z [httpworker.2] Process bitcoin-node pid 62867 exited with status 0\r\n```\r\n\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-5.10.0-4-amd64-x86_64-with-glibc2.29\r\n\r\nConfigured with ./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ -L/home/james/.local/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ -I/home/james/.local/include/ CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis --enable-wallet --enable-debug --with-daemon --enable-natpmp-default --enable-multiprocess\r\n\r\nCompiled with /usr/bin/ccache /usr/bin/clang++ -std=c++17 -mavx -mavx2 -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4 -msha -msse4.1 -msse4.2  i\r\n\r\nCompiler version: \r\n```\r\n\r\n</p></details>\r\n\r\n\r\n<details><summary>Show signature data</summary>\r\n<p>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd ([`jamesob/ackr/19160.1.ryanofsky.multiprocess_add_basic_s`](https://github.com/jamesob/bitcoin/tree/ackr/19160.1.ryanofsky.multiprocess_add_basic_s))\r\n\r\nNeeds rebase, but luckily it's a pretty easy one.\r\n\r\n- - [x] 97232e7c62 Update libmultiprocess library\r\n\r\n  Verified hash matches reviewed version of libmultiprocess. \r\n  Verified `curl -L https://github.com/chaincodelabs/libmultiprocess/archive/$(git rev-parse HEAD).tar.gz | sha256sum`\r\n  matches the expected hash.\r\n  \r\n- - [x] 547cb012ac multiprocess: Add Ipc and Init interface definitions\r\n- - [x] 98981da508 multiprocess: Add Ipc interface implementation\r\n- - [x] daf366f6ef multiprocess: Add bitcoin-node process spawning support\r\n- - [x] d9274f0bd2 multiprocess: Add comments and documentation\r\n- - [x] 36f1fbf50a multiprocess: Add echoipc RPC method and test\r\n\r\n\r\n### Manual testing\r\n\r\nCloned and built libmultiprocess independently; installed using `cmake\r\n- -DCMAKE_INSTALL_PREFIX=/home/james/.local ..`.\r\nInstallation using `sudo make install` without the local prefix led to an error during\r\nbitcoin build time.\r\n\r\nHad to then run `./configure` with `PKG_CONFIG_PATH=${HOME}/.local/lib/pkgconfig\r\n./configure ... -L${HOME}/.local/lib ... -I${HOME}/.local/include ...`\r\n\r\nBuilt bitcoin, started `bitcoin-node` with preexisting pruned datadir. Operation as\r\nusual. Executed `./src/bitcoin-cli echoipc wowowow` a few times:\r\n```\r\n2021-03-16T21:33:45Z [httpworker.2] Process bitcoin-node pid 62867 launched\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client first request from current thread, constructing waiter\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Init.construct$Params (threadMap = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Init.construct$Results (threadMap = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Init.makeEcho$Params (context = (thread = <external capability>, callbackThread = <external capability>))\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Init.makeEcho$Results (result = <external capability>)\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Echo.echo$Params (context = (thread = <external capability>, callbackThread = <external capability>), echo = \"wowowow\")\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Echo.echo$Results (result = \"wowowow\")\r\n2021-03-16T21:33:45Z [httpworker.2]\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client destroy N2mp11ProxyClientIN3ipc5capnp8messages4EchoEEE\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client send Echo.destroy$Params (context = (thread = <external capability>, callbackThread = <external capability>))\r\n2021-03-16T21:33:45Z [capnp-loop] {bitcoin-node-58227/b-httpworker.2-58239} IPC client recv Echo.destroy$Results ()\r\n2021-03-16T21:33:45Z [httpworker.2]\r\n2021-03-16T21:33:45Z [httpworker.2] {bitcoin-node-58227/b-httpworker.2-58239} IPC client destroy N2mp11ProxyClientIN3ipc5capnp8messages4InitEEE\r\n2021-03-16T21:33:45Z [httpworker.2] Process bitcoin-node pid 62867 exited with status 0\r\n```\r\n\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-5.10.0-4-amd64-x86_64-with-glibc2.29\r\n\r\nConfigured with ./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ -L/home/james/.local/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ -I/home/james/.local/include/ CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis --enable-wallet --enable-debug --with-daemon --enable-natpmp-default --enable-multiprocess\r\n\r\nCompiled with /usr/bin/ccache /usr/bin/clang++ -std=c++17 -mavx -mavx2 -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4 -msha -msse4.1 -msse4.2  i\r\n\r\nCompiler version: \r\n```\r\n\r\n</p></details>\r\n\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBRJYkACgkQepNdrbLE\r\nTwXItBAAj7COPnY6sf+ZXXds+5gDwCYKs50FYqrC1nsDsfHjEawnxT8z6h60z1lf\r\nv2d7LB+U4970hrBxmRyt7K4Huv4q+R+0+8W5G8XlhyMLdR9Jv238eGOtYfsm3Sj9\r\nLXV1L5MNNLe7moNYBe2/06n+HoyjDvOxXu6YKXLTIkVjAmY4JriMGBdjwshzp5OJ\r\nNApYBiDjHP23I7JjOKljfLUOZuc+IQy2kelA4csFJIry14zWJFHYaCzOJA1T5GKD\r\nKuDyokApdq6msNg/t+ycVOYzux2lYZO35D/Xm7j1PTFkvkb1Hwp+7hEgK0WwC4Qr\r\nGSTrYsIb/ZREhTqlkZ7B3Qf9Kr6/hqIg2QuMaorSaRBMSjvrC1LdP/PSDsFVt3iu\r\n7YEBFxc2agWAvkiaoxp1blecoGOJoj2Oyz37OLq8gZnlOgen19xL029Fz5wcTTfh\r\nhpZPvaTMZLFuPf5mSr1YM6Jb5AChRGDyH9Dn0oEEfI6WB8ID+PU0C23HOrvoqQPg\r\nHWjjO4BsvdL4j5aH2XC1EYIA/LH1EcZhMeiphkAOsLByZ20RIY97zPc7ZuB0DNmt\r\n+x/GuY/0gfhz5+VJIgzypPmz/uizmNN7N/b2kc4qLKFJje066J6wyC1JUKORL5BE\r\nTrjqrpLN4P12Njb142OPTw11GIiIlCMBA59U+biAfBh7wdQJqc8=\r\n=74Fd\r\n-----END PGP SIGNATURE-----\r\n\r\n```\r\n\r\n</p></details>\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-613748666",
      "submitted_at": "2021-03-16T21:40:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4472066528,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ3MjA2NjUyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472066528",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T19:01:31Z"
    },
    {
      "event": "commented",
      "id": 801387417,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTM4NzQxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801387417",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T20:00:42Z",
      "updated_at": "2021-03-17T20:00:42Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-800365092\r\n\r\nThanks for reviewing this and also taking the time to go through the guts of (it seems like the entire?) [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) library. I know it needs to be documented better, and I'm working on this. I started adding a standalone example program https://github.com/chaincodelabs/libmultiprocess/pull/49 to show how the library is meant to be used without the added complexity of bitcoin integration in this PR. I don't necessarily know where things are more clear and less clear, and would encourage freely opening issues https://github.com/chaincodelabs/libmultiprocess/issues/new to suggest improvements, ask questions, or leave feedback. There's high level and low level documentation that I'm happy to write if it seems like someone will read it, and I know what to write about.\r\n\r\n> The contents of, say, [the type marshalling unit](https://github.com/chaincodelabs/libmultiprocess/blob/master/include/mp/proxy-types.h?rgh-link-date=2021-03-16T15%3A30%3A45Z) are out of my paygrade from a C++ knowhow standpoint so while the code _seems_ fine (and certainly well designed by @ryanofsky), I cannot take a full accounting of its correctness or safety.\r\n\r\nI think this should be fixable, and filed https://github.com/chaincodelabs/libmultiprocess/issues/50 to track. The only thing the code actually does is assign input values to output values, but are there are a lot of ways this can happen in c++ with input & output arguments, return values, and emplaces, and a lot of types to make it work with. The code did sprawl over time supporting new usages and types, and I'm pretty sure it could be simpler.\r\n\r\n> libmultiprocess is more general/complex than necessary in the longterm and even if we may be able to come up with a simpler mechanism to enable multiprocess coordination, I think getting multiprocess operation fleshed out and working is the really important thing at this point.\r\n\r\nAs I see it, there's a tradeoff between how much C++ template magic you want to accept vs how much boilerplate you want to write when you add a new IPC method or parameter, and the current approach leans towards having more template magic and less boilerplate. The implications should be confined to the [`src/ipc/`](https://github.com/ryanofsky/bitcoin/tree/ipc-export/src/ipc/) directory, though, so this is less significant than something like [`serialize.h`](https://github.com/bitcoin/bitcoin/blob/master/src/serialize.h) template magic which is used in many parts of the codebase. Also as mentioned https://github.com/bitcoin/bitcoin/pull/10102#issuecomment-790664616, it will always be possible to build bitcoin without any `src/ipc/` code whatsoever (it's not built unless you use `--enable-multiprocess`), and if you want to replace the current IPC implementation with a different IPC implementation you can write a [`interfaces::Ipc`](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/ipc.h) subclass with overridden `spawnProcess`, etc methods that don't use libmultiprocess.\r\n\r\n---\r\n\r\nRebased 36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd -> 6a2951a7c7690e4f974fb938e1434ca836762207 ([`pr/ipc-echo.28`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.28) -> [`pr/ipc-echo.29`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.29), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.28-rebase..pr/ipc-echo.29)) due to conflict with #21007",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-801387417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 4472314675,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ3MjMxNDY3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472314675",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T20:00:43Z"
    },
    {
      "event": "subscribed",
      "id": 4472314680,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0NzIzMTQ2ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472314680",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T20:00:43Z"
    },
    {
      "event": "unlabeled",
      "id": 4472581865,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3MjU4MTg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472581865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T21:05:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 804141757,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDE0MTc1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/804141757",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T15:14:36Z",
      "updated_at": "2021-03-22T15:14:36Z",
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/19160/commits/6a2951a7c7690e4f974fb938e1434ca836762207\r\n\r\nVerified that rebase consists of `MakeUnique` -> `std::make_unique`, removal of an unnecessary `util/memory.h` import. Built locally and did the `echoipc` test on a different machine than last ACK.\r\n\r\n---\r\n\r\nThanks for the detailed response, @ryanofsky. I guess this is sort of tantamount to the familiar issue of using an object-relational mapper vs. writing raw SQL. In the former case, client code is very simple and easy to read but there's good deal of generality and complexity in the underlying library; in the latter case there is a lot of rote code on the clientside but little ambiguity about what is happening under the covers.\r\n\r\nIn any case, I'm happy to do what I can to help improve libmultiprocess in the meantime and defer big discussions for IPC mechanism until multiprocess operation is humming along (in an opt-in way) with this architecture. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-804141757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 4490769035,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ5MDc2OTAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4490769035",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T15:14:36Z"
    },
    {
      "event": "subscribed",
      "id": 4490769050,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0OTA3NjkwNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4490769050",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T15:14:36Z"
    },
    {
      "event": "commented",
      "id": 804215334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDIxNTMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/804215334",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-22T16:38:49Z",
      "updated_at": "2021-03-22T16:38:49Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-804141757\r\n\r\n> I guess this is sort of tantamount to the familiar issue of using an object-relational mapper vs. writing raw SQL. \r\n\r\nI never thought of it, but this seems like a perfect analogy.\r\n\r\nThe difference between using capnp with libmultiprocess and capnp without libmultiprocess is like the difference between using an ORM with a database and not using an ORM.\r\n\r\nAnd the difference between using capnp to communicate over the socket vs reading/writing over the socket directly is like the difference between using postgres/mysql client libraries vs using the postgres/mysql client protocols (assuming they are simple but probably finnicky protocols).\r\n\r\nOne thing that isn't really analogous (and reason this should be less scary than choosing an ORM) is that when you use an ORM it can become deeply embedded and tied to your application logic. But this PR and #10102 are just adding an IPC implemention of existing interfaces. So if you wanted to drop a layer in the IPC stack, or change the IPC protocol, changes would be confined to `src/ipc/` and not affect anything outside.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-804215334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 808336739,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwODMzNjczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808336739",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-26T16:07:23Z",
      "updated_at": "2021-03-26T16:07:40Z",
      "author_association": "MEMBER",
      "body": "ACK 6a2951a, notable code change switch to `std::make_unique`\r\n\r\nI built locally the multiple processes and tried few echo string through the debug `echoipc`. Works as expected with ipc messages debug displayed through `--debug=ipc`",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-808336739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 808480092,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQ4MDA5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808480092",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-26T20:05:11Z",
      "updated_at": "2021-03-26T20:05:11Z",
      "author_association": "MEMBER",
      "body": "ACK 6a2951a, switched to `std::make_unique`\r\n\r\nIs there anything remaining here that's needed before it's ready for merge?",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-808480092",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 808489155,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQ4OTE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808489155",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-26T20:24:31Z",
      "updated_at": "2021-03-26T20:24:31Z",
      "author_association": "MEMBER",
      "body": "> Is there anything remaining here that's needed before it's ready for merge?\r\n\r\nJust in case this question is for me, I don't think any issues are outstanding, and whether this is ready for merge is just a question of whether it needs more review. I can't say if it does, but I appreciate all the review it's had so far, and thanks for keeping up with this!",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-808489155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 809402677,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTQwMjY3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809402677",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z",
      "updated_at": "2021-03-29T14:03:01Z",
      "author_association": "MEMBER",
      "body": "@fjahr @hebasto @Sjors @jonatack You previously had a look on this PR. If you have still keen interest in this work, I would say it's pretty mature for review :)",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-809402677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "mentioned",
      "id": 4521716037,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyMTcxNjAzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716037",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "subscribed",
      "id": 4521716045,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjE3MTYwNDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716045",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "mentioned",
      "id": 4521716059,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyMTcxNjA1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716059",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "subscribed",
      "id": 4521716065,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjE3MTYwNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716065",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "mentioned",
      "id": 4521716070,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyMTcxNjA3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716070",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "subscribed",
      "id": 4521716074,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjE3MTYwNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716074",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "mentioned",
      "id": 4521716082,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyMTcxNjA4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716082",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "subscribed",
      "id": 4521716087,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjE3MTYwODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521716087",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:03:01Z"
    },
    {
      "event": "reviewed",
      "id": 618022298,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4MDIyMjk4",
      "url": null,
      "actor": null,
      "commit_id": "437e20cacb72df2dcc33373def9715c4c915d082",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 6a2951a7c7690e4f974fb938e1434ca836762207\r\n\r\nI have reviewed all the code included in this PR, including the code changes in libmultiprocess. I have only scanned the rest of the code of libmultiprocess so far but plan to do more in depth review there until I review the follow-up this PR (FWIW, I will try to help out with the documentation on libmultiprocess while I get more into it). However, I have also scanned the generated files for the `echoipc` example and didn't see any issues there. I have build this PR with `--enable-multiprocess`, ran a testnet node with it over several days and tested the `echoipc` RPC multiple times, checking the generated logs.\r\n\r\nObviously, please ignore my very minor nits unless you have to retouch.\r\n\r\nNote for other reviewers: It helped me especially in this review to look at the commits in reverse order at least once, i.e. going from usage to implementation and lower-level stuff.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-618022298",
      "submitted_at": "2021-03-29T19:02:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 809676073,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTY3NjA3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809676073",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T20:06:39Z",
      "updated_at": "2021-03-29T20:06:39Z",
      "author_association": "MEMBER",
      "body": "light ACK 6a2951a7c7690e4f974fb938e1434ca836762207\r\n\r\nReviewed and tested the changes here, but did not look at libmultiprocess or the `.capnp.` files. I did check that `echoipc` for `bitcoin-node` spawned another `bitcoin-node` process and did not for `bitcoind`.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-809676073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "labeled",
      "id": 4526881696,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1MjY4ODE2OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4526881696",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T11:13:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4527523612,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDUyNzUyMzYxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4527523612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T13:08:29Z"
    },
    {
      "event": "unlabeled",
      "id": 4527597369,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDUyNzU5NzM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4527597369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T13:18:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 624215729,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0MjE1NzI5",
      "url": null,
      "actor": null,
      "commit_id": "6a2951a7c7690e4f974fb938e1434ca836762207",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased 6a2951a7c7690e4f974fb938e1434ca836762207 -> 1290ccf8c70f5f11148683c3f69044fac9956e05 ([`pr/ipc-echo.29`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.29) -> [`pr/ipc-echo.30`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.30), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.29-rebase..pr/ipc-echo.30)) due to conflict with #20228. Also implemented review suggestions. All small changes.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-624215729",
      "submitted_at": "2021-03-30T13:44:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "commented",
      "id": 810544849,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDU0NDg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810544849",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T20:09:41Z",
      "updated_at": "2021-03-30T20:09:41Z",
      "author_association": "MEMBER",
      "body": "re-ACK 1290ccf8c70f5f11148683c3f69044fac9956e05\r\n\r\nOnly changes since last review were rebasing, explicit memory include in `interfaces/echo.cpp` and small doc improvements.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-810544849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 811379143,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTM3OTE0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811379143",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-31T19:31:37Z",
      "updated_at": "2021-03-31T19:31:37Z",
      "author_association": "MEMBER",
      "body": "ACK 1290ccf8c70f5f11148683c3f69044fac9956e05 ([`jamesob/ackr/19160.3.ryanofsky.multiprocess_add_basic_s`](https://github.com/jamesob/bitcoin/tree/ackr/19160.3.ryanofsky.multiprocess_add_basic_s))\r\n\r\nExamined range-diff to ensure changes since last ACK only reflect rebase.\r\n\r\nDidn't complete rebuild due to clang thread-safety-analysis failures (on master?).\r\n\r\n```\r\nnet_processing.cpp:1260:17: error: calling function 'EraseForBlock' requires negative capability '!g_cs_orphans' [-Werror,-Wthread-safety-analysis]\r\n    m_orphanage.EraseForBlock(*pblock);\r\n                ^\r\nnet_processing.cpp:1444:21: error: calling function 'HaveTx' requires negative capability '!g_cs_orphans' [-Werror,-Wthread-safety-analysis]\r\n    if (m_orphanage.HaveTx(gtxid)) return true;\r\n                    ^\r\nnet_processing.cpp:2788:13: error: calling function 'ProcessGetData' requires negative capability '!cs_main' [-Werror,-Wthread-safety-analysis]\r\n            ProcessGetData(pfrom, *peer, interruptMsgProc);\r\n            ^\r\nnet_processing.cpp:3856:13: error: calling function 'ProcessGetData' requires negative capability '!cs_main' [-Werror,-Wthread-safety-analysis]\r\n            ProcessGetData(*pfrom, *peer, interruptMsgProc);\r\n            ^\r\n4 errors generated.\r\n```\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-4.19.0-16-amd64-x86_64-with-glibc2.28\r\n\r\nConfigured with ./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis --enable-wallet --enable-debug --with-daemon --enable-natpmp-default\r\n\r\nCompiled with /usr/bin/ccache /usr/local/bin/clang++ -std=c++17 -mavx -mavx2 -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4 -msha -msse4.1 -msse4.2  i\r\n\r\nCompiler version: \r\n```\r\n\r\n</p></details>\r\n\r\n\r\n<details><summary>Show signature data</summary>\r\n<p>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 1290ccf8c70f5f11148683c3f69044fac9956e05 ([`jamesob/ackr/19160.3.ryanofsky.multiprocess_add_basic_s`](https://github.com/jamesob/bitcoin/tree/ackr/19160.3.ryanofsky.multiprocess_add_basic_s))\r\n\r\nExamined range-diff to ensure changes since last ACK only reflect rebase.\r\n\r\nDidn't complete rebuild due to clang thread-safety-analysis failures (on master?).\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-4.19.0-16-amd64-x86_64-with-glibc2.28\r\n\r\nConfigured with ./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis --enable-wallet --enable-debug --with-daemon --enable-natpmp-default\r\n\r\nCompiled with /usr/bin/ccache /usr/local/bin/clang++ -std=c++17 -mavx -mavx2 -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4 -msha -msse4.1 -msse4.2  i\r\n\r\nCompiler version: \r\n```\r\n\r\n</p></details>\r\n\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBkzd4ACgkQepNdrbLE\r\nTwWEoQ/9EIAQoLU18/k5dRr3yA0qxLICzBUKUkqSdmKEsUiQyotzEsRiObFXdFKj\r\nIsynndrGVhnIxYy0v6+41cF0tJTzol8B/4YvP2cP1n3KxJO727JZUArSN88F1qeh\r\nLUCJ4PmuBXnoT4zMqOl+AM/pJwfFLD1Flv6UiHfKr9uXYf/orSFMZ5QwEH4wV6yi\r\nwQllVHoZqdZQjE54kB1jTGc5N4GWB4gVKLipfdztRa8JV76kGetb4uiuuUSCslr+\r\nkdfoRIGDQtAzC6OZdkFVSE49hPMgZO1NC+zUx7e0/o6MmKnsS8jvdV49HY2DevKX\r\n8iDRXtYV9VXy82SgBc5c8sOb3/uYV2Y1CtML45GzJjdoThoJDLodFV1PXUIn91Qa\r\nAnXyOIm7U2S3utjagO9Wy6AeuTZAyCHPG9JpcjJx1dZ1up0uO+6raZdbTWRVNkuX\r\nTAugEEDkkQfvkavJsmtnd3CdqNZNT5F2M6U1gp4DiZjAmG/UgozlF3PN/oUc09+3\r\nyyRyriKY7QCnEZlFtqyUA7vE/rn1FLpBCrqv8YJT4XSRz+NamapPgNfKEUp3HTZh\r\n/zqFRmcdTP2h+cprkJJzE0gvH5jS/WUpuyRzb1x8oy6u1qD1u3zS+FTkWONIA0eQ\r\nkXdeLIPxMgoo5fk3LWnFhExWA3keOFh34aUKAuNruK4ItY+PraY=\r\n=8dw0\r\n-----END PGP SIGNATURE-----\r\n\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-811379143",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 811386301,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTM4NjMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811386301",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-31T19:38:35Z",
      "updated_at": "2021-03-31T19:38:35Z",
      "author_association": "MEMBER",
      "body": "> Didn't complete rebuild due to clang thread-safety-analysis failures (on master?).\r\n> \r\n> ```\r\n> net_processing.cpp:1260:17: error: calling function 'EraseForBlock' requires negative capability '!g_cs_orphans' [-Werror,-Wthread-safety-analysis]\r\n>     m_orphanage.EraseForBlock(*pblock);\r\n> ```\r\n\r\nThanks for rechecking. I'd be surprised if these errors weren't happening on master since this PR isn't changing net_processing.cpp or anything adjacent. These look like the same errors reported https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719668677",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-811386301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 812137474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjEzNzQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812137474",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-01T19:57:40Z",
      "updated_at": "2021-04-01T19:57:40Z",
      "author_association": "MEMBER",
      "body": "ACK 1290ccf\r\n\r\nBuilt well and able to test `echoipc` on my side ?",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-812137474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 813663708,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzY2MzcwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813663708",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-05T21:33:28Z",
      "updated_at": "2021-04-07T12:14:36Z",
      "author_association": "MEMBER",
      "body": "Tested ACK 1290ccf8c70f5f11148683c3f69044fac9956e05 on bionic and macOS. ~~I'm having issues building on macOS but probably something is bad on my system, I'll check later.~~\r\n\r\nI wonder if is it possible to debug on the spawned processes so that `b echoipc` would work?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-813663708",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 813686077,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzY4NjA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813686077",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-05T22:27:22Z",
      "updated_at": "2021-04-05T22:28:37Z",
      "author_association": "MEMBER",
      "body": "Thanks for reviewing!\r\n\r\n> Tested ACK [1290ccf](https://github.com/bitcoin/bitcoin/commit/1290ccf8c70f5f11148683c3f69044fac9956e05) on bionic. I'm having issues building on macOS but probably something is bad on my system, I'll check later.\r\n\r\nI'd definitely encourage you to post an issue with any details to https://github.com/chaincodelabs/libmultiprocess/issues/new. Even if the issue isn't strictly related to libmultiprocess library, or even if it's not really a bug, all posts are welcome there and it's a good place to discuss problems and possible improvements without getting lost in PR review discussion here.\r\n\r\n> I wonder if is it possible to debug on the spawned processes so that `b echoipc` would work?\r\n\r\nIt can be awkward to try to attach to a short lived process with GDB. If you just want to set one breakpoint like that, that the easiest way may be to use the [` follow-fork-mode child`](https://github.com/ryanofsky/bitcoin/blob/ipc-export/test.sh#L25) GDB option. In other circumstances, I've been using the following patch to debug with GDB : https://github.com/ryanofsky/bitcoin/commit/30f5c5a1768777ca7a9dd822c47e0bd8a5950d05. This lets you set a `STOP=node` or `STOP=wallet` environment variable that newly spawned `bitcoin-node` or `bitcoin-wallet` processes will look for, and if they detect it, they will halt themselves on startup and print gdb command lines that can be used to attach to these processes and manually resume them.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-813686077",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 813969407,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzk2OTQwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813969407",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T09:20:46Z",
      "updated_at": "2021-04-06T09:20:46Z",
      "author_association": "MEMBER",
      "body": "> Thanks for reviewing!\r\n> \r\n> > Tested ACK [1290ccf](https://github.com/bitcoin/bitcoin/commit/1290ccf8c70f5f11148683c3f69044fac9956e05) on bionic. I'm having issues building on macOS but probably something is bad on my system, I'll check later.\r\n> \r\n> I'd definitely encourage you to post an issue with any details to https://github.com/chaincodelabs/libmultiprocess/issues/new. Even if the issue isn't strictly related to libmultiprocess library, or even if it's not really a bug, all posts are welcome there and it's a good place to discuss problems and possible improvements without getting lost in PR review discussion here.\r\n\r\nSubmitted https://github.com/chaincodelabs/libmultiprocess/issues/52\r\n\r\n> > I wonder if is it possible to debug on the spawned processes so that `b echoipc` would work?\r\n> \r\n> It can be awkward to try to attach to a short lived process with GDB. If you just want to set one breakpoint like that, that the easiest way may be to use the [` follow-fork-mode child`](https://github.com/ryanofsky/bitcoin/blob/ipc-export/test.sh#L25) GDB option. In other circumstances, I've been using the following patch to debug with GDB : [ryanofsky@30f5c5a](https://github.com/ryanofsky/bitcoin/commit/30f5c5a1768777ca7a9dd822c47e0bd8a5950d05). This lets you set a `STOP=node` or `STOP=wallet` environment variable that newly spawned `bitcoin-node` or `bitcoin-wallet` processes will look for, and if they detect it, they will halt themselves on startup and print gdb command lines that can be used to attach to these processes and manually resume them.\r\n\r\nRight, both approaches are suggested by looking around. I think it might make sense to include https://github.com/ryanofsky/bitcoin/commit/30f5c5a1768777ca7a9dd822c47e0bd8a5950d05 or similar in a follow up and relevant instructions.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-813969407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 821517122,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTUxNzEyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821517122",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-16T19:32:46Z",
      "updated_at": "2021-04-16T19:33:19Z",
      "author_association": "MEMBER",
      "body": "re-ACK 1290ccf8c70f5f11148683c3f69044fac9956e05\r\n\r\nReviewed `git range-diff origin/master 6a2951a7c7690e4f974fb938e1434ca836762207 1290ccf8c70f5f11148683c3f69044fac9956e05` and it was mostly comment changes.\r\n\r\nQuestion that has no bearing on merge-ability: why was `#include <memory>` added to `src/interfaces/echo.cpp` when it is already included in `src/interfaces/echo.h`? ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-821517122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 821560189,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTU2MDE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821560189",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-16T20:56:16Z",
      "updated_at": "2021-04-16T20:56:16Z",
      "author_association": "MEMBER",
      "body": "Thanks for rechecking!\r\n\r\n> Question that has no bearing on merge-ability: why was `#include <memory>` added to `src/interfaces/echo.cpp` when it is already included in `src/interfaces/echo.h`?\r\n\r\nJust preference, I guess. If you want to read a treatise on includes see https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md. But I think if you use something in a file, you should include it or forward declare it, and more complicated rules are counterproductive.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-821560189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 825167141,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTE2NzE0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825167141",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T20:35:44Z",
      "updated_at": "2021-04-22T20:35:44Z",
      "author_association": "MEMBER",
      "body": "Looks like there has been a silent merge conflict, unfortunately, while building locally i get the following error:\r\n```\r\n…/bitcoin/src/rpc/misc.cpp:662:47: error: use of undeclared identifier 'EnsureNodeContext'; did you mean 'EnsureAnyNodeContext'?\r\n            if (interfaces::Ipc* ipc = Assert(EnsureNodeContext(request.context).init)->ipc()) {\r\n                                              ^~~~~~~~~~~~~~~~~\r\n                                              EnsureAnyNodeContext\r\n```\r\n`EnsureNodeContext` was removed in 038854f31e3511e8bb6e163305cab0a96783d25b (#21391)",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-825167141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDYyZDdmNmNkNDhiYmM0ZTlmMzdlY2MzNjlmMzhkNWUxZTAwMzZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c",
      "tree": {
        "sha": "17e5c8875c0259265408edb729484056041f00c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17e5c8875c0259265408edb729484056041f00c1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66fd3b28e85c167f3955b5603496daf8d91abcad",
          "sha": "66fd3b28e85c167f3955b5603496daf8d91abcad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/66fd3b28e85c167f3955b5603496daf8d91abcad"
        }
      ],
      "message": "Update libmultiprocess library\n\nFix \"Disable GCC suggest-override warnings for proxy clients\" https://github.com/chaincodelabs/libmultiprocess/pull/40 is needed to prevent cirrus GCC failure https://cirrus-ci.com/task/6000489311502336?command=ci#L4294\n\nThis also includes other recent changes\n\nhttps://github.com/chaincodelabs/libmultiprocess/pull/35 Fix README.md markdown\nhttps://github.com/chaincodelabs/libmultiprocess/pull/37 Add \"make check\" target to build and run tests\nhttps://github.com/chaincodelabs/libmultiprocess/pull/38 Add \"extends\" inherited method support\nhttps://github.com/chaincodelabs/libmultiprocess/pull/41 Avoid depending on argument default constructors\nhttps://github.com/chaincodelabs/libmultiprocess/pull/42 Support attaching custom cleanup functions to proxy client and server classes\nhttps://github.com/chaincodelabs/libmultiprocess/pull/43 Drop hardcoded #include lines in generated files",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-12-08T18:37:41Z"
      },
      "sha": "5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDVjOWNlYmQ1MGZlYTE2NjRlZmVmNTcxZGMxZWUxYmRkYzk2MTAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/745c9cebd50fea1664efef571dc1ee1bddc96102",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/745c9cebd50fea1664efef571dc1ee1bddc96102",
      "tree": {
        "sha": "ba0df6ca2e6080b542e941703cf801a51e29394e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba0df6ca2e6080b542e941703cf801a51e29394e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c",
          "sha": "5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d62d7f6cd48bbc4e9f37ecc369f38d5e1e0036c"
        }
      ],
      "message": "multiprocess: Add Ipc and Init interface definitions",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "745c9cebd50fea1664efef571dc1ee1bddc96102"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGFmZGYwMjgwZmE5M2JmZmZiMGE3NjY1YzYwZGMxNTVjZDg0NTE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10afdf0280fa93bfffb0a7665c60dc155cd84514",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/10afdf0280fa93bfffb0a7665c60dc155cd84514",
      "tree": {
        "sha": "52512c1d233e30778833b525944ee1935514dc44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52512c1d233e30778833b525944ee1935514dc44"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/745c9cebd50fea1664efef571dc1ee1bddc96102",
          "sha": "745c9cebd50fea1664efef571dc1ee1bddc96102",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/745c9cebd50fea1664efef571dc1ee1bddc96102"
        }
      ],
      "message": "multiprocess: Add Ipc interface implementation",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "10afdf0280fa93bfffb0a7665c60dc155cd84514"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGY3ZWNjOGRmYzY0Y2YxMjEwOTlmYjA0N2UxYWM4NzFkZTk0ZjRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddf7ecc8dfc64cf121099fb047e1ac871de94f4c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ddf7ecc8dfc64cf121099fb047e1ac871de94f4c",
      "tree": {
        "sha": "a0f922fe9b8ffc608a549e5693f1285c9c90c82d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0f922fe9b8ffc608a549e5693f1285c9c90c82d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10afdf0280fa93bfffb0a7665c60dc155cd84514",
          "sha": "10afdf0280fa93bfffb0a7665c60dc155cd84514",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/10afdf0280fa93bfffb0a7665c60dc155cd84514"
        }
      ],
      "message": "multiprocess: Add bitcoin-node process spawning support\n\nAdd bitcoin-node startup code to let it spawn and be spawned by other\nprocesses",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "ddf7ecc8dfc64cf121099fb047e1ac871de94f4c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDc2Y2Y2NjdlZmY1MTIwNDNhMjhkNDQwN2NjODlmNTg3OTZjNDJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d76cf667eff512043a28d4407cc89f58796c42b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7d76cf667eff512043a28d4407cc89f58796c42b",
      "tree": {
        "sha": "184c1ac31cbe53a239090dcd4598077a7394e02f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/184c1ac31cbe53a239090dcd4598077a7394e02f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddf7ecc8dfc64cf121099fb047e1ac871de94f4c",
          "sha": "ddf7ecc8dfc64cf121099fb047e1ac871de94f4c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ddf7ecc8dfc64cf121099fb047e1ac871de94f4c"
        }
      ],
      "message": "multiprocess: Add comments and documentation",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "7d76cf667eff512043a28d4407cc89f58796c42b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDkzNGJmNzBlMTFmZTRjZGExY2ZkYTYwMTEzYTU0ODk1ZDRmZGQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "tree": {
        "sha": "a76e8bd27d3e32a9f433d6f24857d6b96e499efc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a76e8bd27d3e32a9f433d6f24857d6b96e499efc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d76cf667eff512043a28d4407cc89f58796c42b",
          "sha": "7d76cf667eff512043a28d4407cc89f58796c42b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7d76cf667eff512043a28d4407cc89f58796c42b"
        }
      ],
      "message": "multiprocess: Add echoipc RPC method and test\n\nAdd simple interfaces::Echo IPC interface with one method that just takes and\nreturns a string, to test multiprocess framework and provide an example of how\nit can be used to spawn and call between processes.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-23T08:02:50Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-11-24T18:59:33Z"
      },
      "sha": "84934bf70e11fe4cda1cfda60113a54895d4fdd5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4638239281,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYzODIzOTI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4638239281",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-23T18:10:21Z"
    },
    {
      "event": "commented",
      "id": 825833591,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTgzMzU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825833591",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-23T18:13:28Z",
      "updated_at": "2021-04-23T18:13:28Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-825167141\r\n\r\n> Looks like there has been a silent merge conflict\r\n\r\nThanks! Rebased and updated the call site.\r\n\r\n---\r\n\r\nRebased 1290ccf8c70f5f11148683c3f69044fac9956e05 -> 84934bf70e11fe4cda1cfda60113a54895d4fdd5 ([`pr/ipc-echo.30`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.30) -> [`pr/ipc-echo.31`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.31), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.30-rebase..pr/ipc-echo.31)) due to reported conflict with #21391",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-825833591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "commented",
      "id": 826144060,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjE0NDA2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826144060",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-24T19:45:50Z",
      "updated_at": "2021-04-24T19:46:09Z",
      "author_association": "MEMBER",
      "body": "re-ACK 84934bf70e11fe4cda1cfda60113a54895d4fdd5\r\n\r\nChecked range-diff that only changes since last review were rebasing and fixing the silent merge conflict. Also built and ran tests locally and tested `echo` RPC manually.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-826144060",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160"
    },
    {
      "event": "reviewed",
      "id": 644950353,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0OTUwMzUz",
      "url": null,
      "actor": null,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 84934bf. Changes since last ACK fixes the silent merge conflict about `EnsureAnyNodeContext()`. Rebuilt and checked again debug command `echoipc`.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#pullrequestreview-644950353",
      "submitted_at": "2021-04-26T17:43:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
    },
    {
      "event": "merged",
      "id": 4649877920,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDY0OTg3NzkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4649877920",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b",
      "created_at": "2021-04-27T10:00:28Z"
    },
    {
      "event": "closed",
      "id": 4649877959,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDY0OTg3Nzk1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4649877959",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-27T10:00:28Z"
    },
    {
      "event": "removed_from_project",
      "id": 4649894564,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50NDY0OTg5NDU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4649894564",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-27T10:03:39Z",
      "project_card": {
        "id": 53773753,
        "url": "https://api.github.com/projects/columns/cards/53773753",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 4651047469,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NTEwNDc0Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4651047469",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "714e1f2c40fd0e0970b50e4a4f7a31615eed8951",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/714e1f2c40fd0e0970b50e4a4f7a31615eed8951",
      "created_at": "2021-04-27T14:01:01Z"
    },
    {
      "event": "moved_columns_in_project",
      "id": 4654003642,
      "node_id": "MDI2Ok1vdmVkQ29sdW1uc0luUHJvamVjdEV2ZW50NDY1NDAwMzY0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4654003642",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-28T02:00:40Z",
      "project_card": {
        "id": 39444923,
        "url": "https://api.github.com/projects/columns/cards/39444923",
        "project_id": 2564669,
        "project_url": "https://api.github.com/projects/2564669",
        "column_name": "Done",
        "previous_column_name": "In progress"
      }
    },
    {
      "event": "referenced",
      "id": 5046677453,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNDY2Nzc0NTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5046677453",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1a3dc8d263cdbf40fcc9ce1f382fa2111dbc42b4",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/1a3dc8d263cdbf40fcc9ce1f382fa2111dbc42b4",
      "created_at": "2021-07-20T21:05:42Z"
    },
    {
      "event": "referenced",
      "id": 6100010695,
      "node_id": "REFE_lADOABII584ljorhzwAAAAFrlsbH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6100010695",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "07dcf1a76e34a6f7c919e7d5c57fa61caea6007b",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/07dcf1a76e34a6f7c919e7d5c57fa61caea6007b",
      "created_at": "2022-02-18T15:15:47Z"
    },
    {
      "event": "referenced",
      "id": 6105683024,
      "node_id": "REFE_lADOABII584ljorhzwAAAAFr7VRQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6105683024",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "28aa0e3ca0a6cfeb5b2b63929d4bc58de6ee6f02",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28aa0e3ca0a6cfeb5b2b63929d4bc58de6ee6f02",
      "created_at": "2022-02-19T10:23:03Z"
    },
    {
      "event": "referenced",
      "id": 6107645613,
      "node_id": "REFE_lADOABII584ljorhzwAAAAFsC0at",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6107645613",
      "actor": {
        "login": "hmel",
        "id": 3381475,
        "node_id": "MDQ6VXNlcjMzODE0NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3381475?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hmel",
        "html_url": "https://github.com/hmel",
        "followers_url": "https://api.github.com/users/hmel/followers",
        "following_url": "https://api.github.com/users/hmel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hmel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hmel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hmel/subscriptions",
        "organizations_url": "https://api.github.com/users/hmel/orgs",
        "repos_url": "https://api.github.com/users/hmel/repos",
        "events_url": "https://api.github.com/users/hmel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hmel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7ab17fd1c5a5ac31881530d3961d34fcb43e1119",
      "commit_url": "https://api.github.com/repos/hmel/bitcoin/commits/7ab17fd1c5a5ac31881530d3961d34fcb43e1119",
      "created_at": "2022-02-20T18:56:54Z"
    },
    {
      "event": "referenced",
      "id": 6679524764,
      "node_id": "REFE_lADOABII584ljorhzwAAAAGOIXWc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6679524764",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4063a06213b104e11b034b9be66d8ad922059198",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4063a06213b104e11b034b9be66d8ad922059198",
      "created_at": "2022-05-25T16:54:20Z"
    },
    {
      "event": "referenced",
      "id": 6681448362,
      "node_id": "REFE_lADOABII584ljorhzwAAAAGOPs-q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6681448362",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6e1c16c1442ab30694a3668b45af5bfd532f1e12",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6e1c16c1442ab30694a3668b45af5bfd532f1e12",
      "created_at": "2022-05-25T22:11:58Z"
    },
    {
      "event": "referenced",
      "id": 6692696286,
      "node_id": "REFE_lADOABII584ljorhzwAAAAGO6nDe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6692696286",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "345457b542b6a980ccfbc868af0970a6f91d1b82",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345457b542b6a980ccfbc868af0970a6f91d1b82",
      "created_at": "2022-05-27T13:43:54Z"
    },
    {
      "event": "referenced",
      "id": 6723196411,
      "node_id": "REFE_lADOABII584ljorhzwAAAAGQu9X7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6723196411",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5f0c45b568834dddaa8fa87f4d56a34ec09155fc",
      "commit_url": "https://api.github.com/repos/ElementsProject/elements/commits/5f0c45b568834dddaa8fa87f4d56a34ec09155fc",
      "created_at": "2022-06-01T21:22:14Z"
    },
    {
      "event": "locked",
      "id": 7199156472,
      "node_id": "LOE_lADOABII584ljorhzwAAAAGtGmj4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199156472",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:25:40Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440489253",
      "pull_request_review_id": 431045015,
      "id": 440489253,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4OTI1Mw==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_BASE_H\n+#define BITCOIN_INTERFACES_BASE_H\n+\n+#include <cassert>\n+#include <memory>\n+\n+namespace interfaces {\n+\n+class Base;\n+\n+//! Close hook.\n+class CloseHook\n+{\n+public:\n+    virtual ~CloseHook() {}\n+\n+    //! Handle interface being closed or destroyed.\n+    virtual void onClose(Base& interface) {}\n+\n+    std::unique_ptr<CloseHook> m_next_hook;\n+};\n+\n+//! Close hook that encapsulate and deletes a moveable object.\n+template <typename T>\n+class Deleter : public CloseHook\n+{\n+public:\n+    explicit Deleter(T&& value) : m_value(std::move(value)) {}\n+    void onClose(Base& interface) override { T(std::move(m_value)); }\n+    T m_value;\n+};\n+\n+//! Base class for interfaces.\n+class Base\n+{\n+public:\n+    //! Destructor, calls close hooks.\n+    virtual ~Base();\n+\n+    // Call close hooks without waiting for destructor.\n+    void close();\n+\n+    //! Add close hook.\n+    void addCloseHook(std::unique_ptr<CloseHook> close_hook);\n+\n+    std::unique_ptr<CloseHook> m_close_hook;",
      "path": "src/interfaces/base.h",
      "position": null,
      "original_position": 50,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b12041f\r\n\r\nAFAICT, `addCloseHook` stacks new hook as prefix to previous added one, thus call order is reverse than registering order ?",
      "created_at": "2020-06-15T22:50:15Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440489253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440489253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440490694",
      "pull_request_review_id": 431045015,
      "id": 440490694,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MDY5NA==",
      "diff_hunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Interface allowing multiprocess code to create other interfaces on startup.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of Init for current process.\n+class LocalInit : public Init",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 29,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "643d602\r\n\r\n`LocalInit` isn't really meaningful as a name IMO, if understands well it must implemented both by parent and child processes, but methods called will diverge ? `IPCWrapper` , `IPCSupervisor`, `IPCAccess`, ... ?",
      "created_at": "2020-06-15T22:54:58Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440490694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440490694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440491394",
      "pull_request_review_id": 431045015,
      "id": 440491394,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MTM5NA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/ipc.h>\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <util/memory.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <mp/util.h>\n+#include <tinyformat.h>\n+\n+namespace interfaces {\n+namespace {\n+class IpcProcessImpl : public IpcProcess\n+{\n+public:\n+    IpcProcessImpl(int argc, char* argv[], const char* exe_name, IpcProtocol& protocol)\n+        : m_argc(argc), m_argv(argv), m_exe_name(exe_name), m_protocol(protocol)\n+    {\n+    }\n+    int spawn(const std::string& new_exe_name, int& pid) override\n+    {\n+        return mp::SpawnProcess(pid, [&](int fd) {\n+            fs::path path = m_argc > 0 ? m_argv[0] : \"\";\n+            path.remove_filename();\n+            path.append(new_exe_name);\n+            return std::vector<std::string>{path.string(), \"-ipcfd\", strprintf(\"%i\", fd)};\n+        });\n+    }\n+    int wait(int pid) override { return mp::WaitProcess(pid); }\n+    bool serve(int& exit_status) override\n+    {\n+        if (m_argc != 3 || strcmp(m_argv[1], \"-ipcfd\") != 0) {",
      "path": "src/interfaces/ipc.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "643d602\r\n\r\nDocument `-ipcfd` usage ?",
      "created_at": "2020-06-15T22:57:00Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440491394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440491394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440493321",
      "pull_request_review_id": 431045015,
      "id": 440493321,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MzMyMQ==",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "path": "src/interfaces/ipc.h",
      "position": null,
      "original_position": 68,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "643d602\r\n\r\nMaybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.",
      "created_at": "2020-06-15T23:03:09Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440493321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440506337",
      "pull_request_review_id": 431065375,
      "id": 440506337,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwNjMzNw==",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "path": "src/interfaces/ipc.h",
      "position": null,
      "original_position": 68,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": 440493321,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Maybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.\r\n\r\nThanks for the review! I'll address the other comments, but just in case there is any question about `serve()` it's called in `main()` here in the `bitcoin-node` executable:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo.4/src/bitcoind.cpp#L178-L185\r\n\r\nand here in the `bitcoin-wallet` executable:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/pr/ipc.113/src/bitcoin-wallet.cpp#L80-L88\r\n\r\nIf we wanted to have a separate `bitcoin-echo` executable, it could have a `main()` function just like those examples. I didn't want to have a separate `bitcoin-echo` executable though, just because I thought it'd be confusing to have a kind of pointless `bitcoin-echo` program installed along with `bitcoin-gui` `bitcoin-node` and `bitcoin-wallet`, so I just put the echo functionality inside `bitcoin-node`.",
      "created_at": "2020-06-15T23:45:35Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440506337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440506337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447135719",
      "pull_request_review_id": 439356048,
      "id": 447135719,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNTcxOQ==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_BASE_H\n+#define BITCOIN_INTERFACES_BASE_H\n+\n+#include <cassert>\n+#include <memory>\n+\n+namespace interfaces {\n+\n+class Base;\n+\n+//! Close hook.\n+class CloseHook\n+{\n+public:\n+    virtual ~CloseHook() {}\n+\n+    //! Handle interface being closed or destroyed.\n+    virtual void onClose(Base& interface) {}\n+\n+    std::unique_ptr<CloseHook> m_next_hook;\n+};\n+\n+//! Close hook that encapsulate and deletes a moveable object.\n+template <typename T>\n+class Deleter : public CloseHook\n+{\n+public:\n+    explicit Deleter(T&& value) : m_value(std::move(value)) {}\n+    void onClose(Base& interface) override { T(std::move(m_value)); }\n+    T m_value;\n+};\n+\n+//! Base class for interfaces.\n+class Base\n+{\n+public:\n+    //! Destructor, calls close hooks.\n+    virtual ~Base();\n+\n+    // Call close hooks without waiting for destructor.\n+    void close();\n+\n+    //! Add close hook.\n+    void addCloseHook(std::unique_ptr<CloseHook> close_hook);\n+\n+    std::unique_ptr<CloseHook> m_close_hook;",
      "path": "src/interfaces/base.h",
      "position": null,
      "original_position": 50,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "in_reply_to_id": 440489253,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440489253\r\n\r\n> [b12041f](https://github.com/bitcoin/bitcoin/commit/b12041f74de234ad45083be8f86ae714dd5bdfae)\r\n> \r\n> AFAICT, `addCloseHook` stacks new hook as prefix to previous added one, thus call order is reverse than registering order ?\r\n\r\nAdded comment, this is analogous to how when multiple variables are declared in a scope, the later variables are destroyed first so destructors can depend on the earlier variables not being destroyed yet. Here later close hooks can rely on earlier close hooks not being called yet.",
      "created_at": "2020-06-29T17:29:38Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447135719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447135719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136167",
      "pull_request_review_id": 439356048,
      "id": 447136167,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjE2Nw==",
      "diff_hunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Interface allowing multiprocess code to create other interfaces on startup.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of Init for current process.\n+class LocalInit : public Init",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 29,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": 440490694,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440490694\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> `LocalInit` isn't really meaningful as a name IMO, if understands well it must implemented both by parent and child processes, but methods called will diverge ? `IPCWrapper` , `IPCSupervisor`, `IPCAccess`, ... ?\r\n\r\nI removed LocalInit SpawnProcess method and made it a standalone method to avoid confusion here and added comments describing Init and LocalInit classes. Init interface is just an initial interface exposed by a remote process when you spawn or connect to it. You call Init interface methods to get access to other interfaces. LocalInit is a specialization of Init for the local process. It gives access to the same Init methods, but can also provide local information like the current NodeContext pointer and current executable name.",
      "created_at": "2020-06-29T17:30:19Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136270",
      "pull_request_review_id": 439356048,
      "id": 447136270,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjI3MA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/ipc.h>\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <util/memory.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <mp/util.h>\n+#include <tinyformat.h>\n+\n+namespace interfaces {\n+namespace {\n+class IpcProcessImpl : public IpcProcess\n+{\n+public:\n+    IpcProcessImpl(int argc, char* argv[], const char* exe_name, IpcProtocol& protocol)\n+        : m_argc(argc), m_argv(argv), m_exe_name(exe_name), m_protocol(protocol)\n+    {\n+    }\n+    int spawn(const std::string& new_exe_name, int& pid) override\n+    {\n+        return mp::SpawnProcess(pid, [&](int fd) {\n+            fs::path path = m_argc > 0 ? m_argv[0] : \"\";\n+            path.remove_filename();\n+            path.append(new_exe_name);\n+            return std::vector<std::string>{path.string(), \"-ipcfd\", strprintf(\"%i\", fd)};\n+        });\n+    }\n+    int wait(int pid) override { return mp::WaitProcess(pid); }\n+    bool serve(int& exit_status) override\n+    {\n+        if (m_argc != 3 || strcmp(m_argv[1], \"-ipcfd\") != 0) {",
      "path": "src/interfaces/ipc.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": 440491394,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440491394\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Document `-ipcfd` usage ?\r\n\r\nAdded comment here. It might be good to add to `-help` output too, but I can't easily use ArgsManager::AddArg without losing \"Invalid parameter -ipcfd\" checking, and I don't think there are any uses for `-ipcfd` that wouldn't go through IpcProcess::spawn, where it's just an implementation detail.\r\n",
      "created_at": "2020-06-29T17:30:29Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136782",
      "pull_request_review_id": 439356048,
      "id": 447136782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjc4Mg==",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "path": "src/interfaces/ipc.h",
      "position": null,
      "original_position": 68,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "in_reply_to_id": 440493321,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Maybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.\r\n\r\nGood idea, added a description of this to the Init interface comment.",
      "created_at": "2020-06-29T17:31:16Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465326990",
      "pull_request_review_id": 461170607,
      "id": 465326990,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNjk5MA==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.",
      "path": "doc/multiprocess.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FYI, the logs I get, are they the ones you expect ?\r\n\r\n```\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client first request from current thread, constructing waiter                                                                                  \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Init.construct$Params (threadMap = <external capability>)                                                                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Init.construct$Results (threadMap = <external capability>)                                                                         \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Init.makeEcho$Params (context = (thread = <external capability>, callbackThread = <external capability>))                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Init.makeEcho$Results (result = <external capability>)                                                                             \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Echo.echo$Params (context = (thread = <external capability>, callbackThread = <external capability>), echo = \"hello_russ\")         \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Echo.echo$Results (result = \"hello_russ\")                                                                                          \r\n2020-08-04T20:58:04Z\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client destroy N2mp11ProxyClientIN10interfaces5capnp8messages4EchoEEE                                                                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Echo.destroy$Params (context = (thread = <external capability>, callbackThread = <external capability>))                           \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Echo.destroy$Results ()\r\n2020-08-04T20:58:04Z\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client destroy N2mp11ProxyClientIN10interfaces5capnp8messages4InitEEE                                                                          \r\n2020-08-04T20:58:04Z bitcoin-node pid 12889 exited with status 0\r\n```",
      "created_at": "2020-08-04T20:59:33Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465326990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465326990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465331663",
      "pull_request_review_id": 461170607,
      "id": 465331663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMTY2Mw==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.\n \n ## Installation",
      "path": "doc/multiprocess.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shoud the threading model part of the documentation ? AFAICT I can tell you're doing mention to background/foreground threads around `IpcProtocol` documentation. Isn't this dependent of `IpcProtocolImpl` internals ? AFAII, e.g, the client process is going to call interfaces (like `Chain::getHeight`) with overriden virtual methods sending calls to remote server process ? On the client-side, is flow execution blocked until remote answer back ?",
      "created_at": "2020-08-04T21:09:03Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465331663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465331663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465337715",
      "pull_request_review_id": 461170607,
      "id": 465337715,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNzcxNQ==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    virtual NodeContext& node();",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 58,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why does `LocalInit` take a `node()` method ? How is it used ? A `bitcoin-wallet` will never have such context ?",
      "created_at": "2020-08-04T21:21:47Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465337715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465337715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465338335",
      "pull_request_review_id": 461170607,
      "id": 465338335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzODMzNQ==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 21,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The documentation you wrote down in review club notes (\"The Init interface is similar to other cross-process C++ interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and interfaces::ChainClient, providing virtual methods that can be called from other processes....\") is describing well design goal of `Init` IMO. Maybe just pick it up ?",
      "created_at": "2020-08-04T21:23:10Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465338335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465338335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465339166",
      "pull_request_review_id": 461170607,
      "id": 465339166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTE2Ng==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 42,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIRC a socketpair has a default and only-one domain (AF_UNIX), you mean a new connection is free to pick up its domain as there is no the default parent-child socketpair ready to use ?",
      "created_at": "2020-08-04T21:24:59Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465339166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465339166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465341411",
      "pull_request_review_id": 461170607,
      "id": 465341411,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTQxMQ==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's unclear who is the \"it\" here calling Init interface methods, still the spawned subprocess ? Or do you mean the spawned subprocess has the option to shutdown itself ?",
      "created_at": "2020-08-04T21:29:56Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465341411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465341411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465342296",
      "pull_request_review_id": 461170607,
      "id": 465342296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MjI5Ng==",
      "diff_hunk": "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "path": "src/interfaces/README.md",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `init.h` is actually introduced in next commit. Also document `echo.h` if it's a long-standing debug interface ?",
      "created_at": "2020-08-04T21:32:00Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465342296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465342296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465707859",
      "pull_request_review_id": 461638136,
      "id": 465707859,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNzg1OQ==",
      "diff_hunk": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n+#include <interfaces/wallet.h>",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n#include <interfaces/base.h>\r\n```",
      "created_at": "2020-08-05T12:59:17Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465707859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465707859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465708950",
      "pull_request_review_id": 461638136,
      "id": 465708950,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODk1MA==",
      "diff_hunk": "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "path": "src/interfaces/README.md",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "in_reply_to_id": 465342296,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "And also `base.h` is added here, so update commit number on it as well?",
      "created_at": "2020-08-05T13:00:58Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465708950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465708950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465746629",
      "pull_request_review_id": 461638136,
      "id": 465746629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NjYyOQ==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulate and deletes a moveable object.",
      "path": "src/interfaces/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This one could be a little more explicit I think?\r\n\r\n```suggestion\r\n//! Close hook that encapsulate a function to be called on close.\r\n```",
      "created_at": "2020-08-05T13:58:36Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465746629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465746629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465760342",
      "pull_request_review_id": 461709262,
      "id": 465760342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MDM0Mg==",
      "diff_hunk": "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "path": "src/interfaces/README.md",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added in 19160?",
      "created_at": "2020-08-05T14:17:29Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465760342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465760342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770957",
      "pull_request_review_id": 461638136,
      "id": 465770957,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3MDk1Nw==",
      "diff_hunk": "@@ -61,6 +61,7 @@ def run_test(self):\n         node.logging(include=['qt'])\n         assert_equal(node.logging()['qt'], True)\n ",
      "path": "test/functional/rpc_misc.py",
      "position": 3,
      "original_position": 3,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n\r\n        self.log.info(\"test echoipc (testing spawned process in multiprocess built)\")\r\n```",
      "created_at": "2020-08-05T14:31:45Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465770957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468112768",
      "pull_request_review_id": 464492390,
      "id": 468112768,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMjc2OA==",
      "diff_hunk": "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "path": "src/interfaces/README.md",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "in_reply_to_id": 465342296,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465342296\r\n\r\n> I think `init.h` is actually introduced in next commit. Also document `echo.h` if it's a long-standing debug interface ?\r\n\r\n> And also `base.h` is added here, so update commit number on it as well?\r\n\r\nThanks, changed",
      "created_at": "2020-08-10T18:58:15Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468112768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468112768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113037",
      "pull_request_review_id": 464492390,
      "id": 468113037,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzAzNw==",
      "diff_hunk": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n+#include <interfaces/wallet.h>",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "352a5564e64c63a1962830f7c524841d4b8bf380",
      "in_reply_to_id": 465707859,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465707859\r\n\r\n> #include <interfaces/base.h>\r\n\r\nThanks, switched",
      "created_at": "2020-08-10T18:58:49Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113333",
      "pull_request_review_id": 464492390,
      "id": 468113333,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzMzMw==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.",
      "path": "doc/multiprocess.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465326990,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465326990\r\n\r\n> FYI, the logs I get, are they the ones you expect ?\r\n\r\nYes, those show the requests being sent, received, and responded to.\r\n",
      "created_at": "2020-08-10T18:59:18Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113333",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113393",
      "pull_request_review_id": 464492390,
      "id": 468113393,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzM5Mw==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.\n \n ## Installation",
      "path": "doc/multiprocess.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465331663,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465331663\r\n\r\n> Shoud the threading model part of the documentation ?\r\n\r\nSure, I added a mention of the 1:1 threading model here, linking to the libmultiprocess library.\r\n\r\n> AFAICT I can tell you're doing mention to background/foreground threads around `IpcProtocol` documentation. Isn't this dependent of `IpcProtocolImpl` internals ?\r\n\r\nYes, the threading requirements come from bitcoin code, and the way it uses locks and callbacks, so they would be the same even if `IpcProtocolImpl` used a completely different protocol or implementation. There is some documentation about the libmultiprocess implementation in [proxy.capnp's `ThreadMap`, `Thread` and `Context`](https://github.com/chaincodelabs/libmultiprocess/blob/9f5b8355649aca94b4b529d89ba439aa3b2f9642/include/mp/proxy.capnp#L39-L61) descriptions.",
      "created_at": "2020-08-10T18:59:26Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113445",
      "pull_request_review_id": 464492390,
      "id": 468113445,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzQ0NQ==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulate and deletes a moveable object.",
      "path": "src/interfaces/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465746629,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465746629\r\n\r\n> This one could be a little more explicit I think?\r\n\r\nThanks, updated",
      "created_at": "2020-08-10T18:59:34Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113445",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113523",
      "pull_request_review_id": 464492390,
      "id": 468113523,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzUyMw==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 21,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465338335,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465338335\r\n\r\n> The documentation you wrote down in review club notes (\"The Init interface is similar to other cross-process C++ interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and interfaces::ChainClient, providing virtual methods that can be called from other processes....\") is describing well design goal of `Init` IMO. Maybe just pick it up ?\r\n\r\nThanks, added.",
      "created_at": "2020-08-10T18:59:41Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113577",
      "pull_request_review_id": 464492390,
      "id": 468113577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzU3Nw==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465341411,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465341411\r\n\r\n> It's unclear who is the \"it\" here calling Init interface methods, still the spawned subprocess ? Or do you mean the spawned subprocess has the option to shutdown itself ?\r\n\r\nThanks, replaced \"it\" with \"spawned process\" and clarified it shuts down when then connection is closed.",
      "created_at": "2020-08-10T18:59:48Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113710",
      "pull_request_review_id": 464492390,
      "id": 468113710,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzcxMA==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    virtual NodeContext& node();",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 58,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465337715,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465337715\r\n\r\n> Why does `LocalInit` take a `node()` method ? How is it used ? A `bitcoin-wallet` will never have such context ?\r\n\r\nAdded comment. This is called one place in [`AppInit()`](https://github.com/ryanofsky/bitcoin/blob/0602f87a085c733f1da38b3b82210c81ef018fd5/src/bitcoind.cpp#L48) in bitcoind, bitcoin-qt, and bitcoin-node processes that run node code. It is not called in bitcoin-wallet or bitcoin-gui processes that don't run node code. There will be a WalletContext returning method too but it's not needed in this PR because bitcoin-wallet tool doesn't currently do anything that requires a wallet context.",
      "created_at": "2020-08-10T19:00:00Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113946",
      "pull_request_review_id": 464492390,
      "id": 468113946,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzk0Ng==",
      "diff_hunk": "@@ -61,6 +61,7 @@ def run_test(self):\n         node.logging(include=['qt'])\n         assert_equal(node.logging()['qt'], True)\n ",
      "path": "test/functional/rpc_misc.py",
      "position": 3,
      "original_position": 3,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "in_reply_to_id": 465770957,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465770957\r\n\r\n> self.log.info(\"test echoipc (testing spawned process in multiprocess built)\")\r\n\r\nThanks, added",
      "created_at": "2020-08-10T19:00:27Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468256850",
      "pull_request_review_id": 464670866,
      "id": 468256850,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1Njg1MA==",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 42,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "in_reply_to_id": 465339166,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465339166\r\n\r\n> IIRC a socketpair has a default and only-one domain (AF_UNIX), you mean a new connection is free to pick up its domain as there is no the default parent-child socketpair ready to use ?\r\n\r\nThanks, replaced domain socket with just socket. I didn't realize socketpairs could have domains.\r\n",
      "created_at": "2020-08-11T00:23:56Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468256850",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468256850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468257307",
      "pull_request_review_id": 464671339,
      "id": 468257307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1NzMwNw==",
      "diff_hunk": "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "path": "src/interfaces/README.md",
      "position": null,
      "original_position": 4,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "in_reply_to_id": 465760342,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465760342\r\n\r\n> Added in 19160?\r\n\r\nThanks, there were some earlier comments about this too. Switched",
      "created_at": "2020-08-11T00:25:35Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468257307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468257307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505737310",
      "pull_request_review_id": 509636941,
      "id": 505737310,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzMxMA==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this comment can be improved: \r\n\r\n* \"Init interface providing access to other interfaces\", this should underscores access is provided across process boundaries\r\n* \"providing virtual methods that can be called from other processes\", AFAIU, this is confusing as interfaces::Init provides both process control method (e.g `makeEchoIpc()`, in the future `makeWallet`) and an interface `IpcProtocol` wrapping a libmultiprocess `ProxyClient/ProxyServer`. I would be better to document that both control and data exchange functions are supported by interfaces::Init\r\n\r\nOverall, I still think `Init`/`LocalInit` are loosely-defining names. The names doesn't indicate what is initiated nor who is local and remote. `IPCSupervisor`/`IPCWrapper` as suggested would be better.",
      "created_at": "2020-10-15T18:03:05Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505737310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505737310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505753193",
      "pull_request_review_id": 509636941,
      "id": 505753193,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1MzE5Mw==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 55,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think an in-depth walk-through needs to be documented somewhere for actual and future reviewers.\r\n\r\nAn example would be :\r\n1. Bitcoin GUI process is started, in `src/qt/bitcoin.cpp`, it initializes its own interface `LocalInit` from `src/interfaces/init_bitcoin-gui.cpp`\r\n2. From this `LocalInit` interface, it calls `makeNode()`, which trigger a child `bitcoin-node` spawning through `IpcProcess.spawn`. It also register hook cleaning through `base.addCloseHook`\r\n3. From this `LocalInit` interface, it calls `connect`, which start a new thread `capnp-loop` with a libmultiprocess `mp::EventLoop`\r\n4. Bitcoin Node is started with `-ipcfd` passing a socketpair for communications, it initializes its own interface `LocalInit` from `src/interfaces/init_bitcoin-node.cpp`\r\n5. From this `LocalInit` interface, it calls `serve()` to start servicing Bitcoin GUI on its owned interface `Chain`. This is achieved through the abstract interface `IpcProtocol` which is currently Cap'n Proto (`MakeCapnpProtocol`)\r\n6. When Bitcoin GUI request a `Chain` method like `hasBlocks`, this is redirected to `mp::ProxyClient`\r\n7. From its own `capnp-loop` thread embedding a `mp::ProxyServer`, Bitcoin Node internal methods are called to fulfill the request\r\n\r\nOkay it's likely a fuzzy walkthrough but this reflects my understanding right now.\r\n\r\nWhat do you think about joining an ASCII art ? I can write one, but I don't know if graphical representation documentation has been favored by Core though it may be helpful for architecture-level stuff.",
      "created_at": "2020-10-15T18:25:35Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505753193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505753193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505754792",
      "pull_request_review_id": 509636941,
      "id": 505754792,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1NDc5Mg==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Echo> makeEcho() = 0;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    std::unique_ptr<Echo> makeEcho() override;\n+    //! Make echo implementation for `echoipc` test RPC. Spawn new process if\n+    //! supported.\n+    virtual std::unique_ptr<Echo> makeEchoIpc();",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 78,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you could add a temporary comment hinting this interface as the future location of `makeNode`, `makeWalletClient`, etc, it's more helpful for reviewers to understand what it would look like after #10102.",
      "created_at": "2020-10-15T18:28:23Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505754792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505754792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505757544",
      "pull_request_review_id": 509636941,
      "id": 505757544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1NzU0NA==",
      "diff_hunk": "@@ -12,6 +12,8 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n+\n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n ",
      "path": "src/interfaces/README.md",
      "position": 9,
      "original_position": 8,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be great to extend the README with a new section explaining how someone would add a new `IpcProtocol` implementation. As of right now `src/interfaces/capnp/init.capnp` is pretty empty which makes it hard to understand for reviewers without looking first on #10102 branch.\r\n\r\nPurely reading libmultiprocess README, I didn't grasp at first than one `IpcProtocol` must define a `ProxyClient`/ProxyServer` pair for each supported interface.",
      "created_at": "2020-10-15T18:33:05Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505757544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505757544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505772152",
      "pull_request_review_id": 509680684,
      "id": 505772152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3MjE1Mg==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulates a function to be called on close.\n+class CloseFn : public CloseHook\n+{\n+public:\n+    explicit CloseFn(std::function<void()> fn) : m_fn(std::move(fn)) {}\n+    void onClose(Base& interface) override { m_fn(); }\n+    std::function<void()> m_fn;\n+};\n+} // namespace\n+\n+LocalInit::LocalInit(const char* exe_name, const char* log_suffix) : m_exe_name(exe_name), m_log_suffix(log_suffix) {}\n+LocalInit::~LocalInit() {}\n+NodeContext& LocalInit::node()\n+{\n+    throw std::logic_error(\"Node accessor function called from non-node binary (gui, wallet, or test program)\");\n+}\n+\n+void SpawnProcess(IpcProcess& process,\n+    IpcProtocol& protocol,\n+    const std::string& new_exe_name,\n+    const MakeClientFn& make_client)\n+{\n+    int pid;\n+    int fd = process.spawn(new_exe_name, pid);\n+    std::unique_ptr<Init> init = protocol.connect(fd);\n+    Base& base = make_client(*init);\n+    base.addCloseHook(MakeUnique<CloseFn>([&process, new_exe_name, pid] {\n+        int status = process.wait(pid);\n+        LogPrint(::BCLog::IPC, \"%s pid %i exited with status %i\\n\", new_exe_name, pid, status);",
      "path": "src/interfaces/init.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "2f521b2c24dd390c5d8a5cfd59dfebd0b40cbfff",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be worth logging the `pid` on launch as well.",
      "created_at": "2020-10-15T18:59:13Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505772152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505772152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508752557",
      "pull_request_review_id": 513024399,
      "id": 508752557,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1MjU1Nw==",
      "diff_hunk": "@@ -12,6 +12,8 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n+\n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n ",
      "path": "src/interfaces/README.md",
      "position": 9,
      "original_position": 8,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505757544,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505757544\r\n\r\n> It would be great to extend the README with a new section explaining how someone would add a new `IpcProtocol` implementation. As of right now `src/interfaces/capnp/init.capnp` is pretty empty which makes it hard to understand for reviewers without looking first on #10102 branch.\r\n\r\nI added an overview of the IPC implementation and more information about what happens when IPC methods are called in https://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo/doc/multiprocess.md#ipc-implementation-details.\r\n\r\nI'm not sure what change is suggested by the observation about init.capnp. I hope it's clear that things in the `src/interfaces/capnp/` directory are specific to the capnp protocol. I hope it's also clear that c++ interfaces in the `src/interfaces/` and just abstract classes with pure virtual methods, and they can be implemented in any way to make calls with any protocol.\r\n\r\nThe IpcProtocol interface is a simple interface with 2 methods: `connect` and `serve` that is heavily documented and defined in src/interfaces/ipc.h. In #19460 a third `listen` method is  added to support listening for incoming connections on a socket, and not just communicating with the parent process.\r\n\r\n> Purely reading libmultiprocess README, I didn't grasp at first than one `IpcProtocol` must define a `ProxyClient`/ProxyServer` pair for each supported interface.\r\n\r\nIt's not the case that an IPC protocol needs to be implemented with pairs of client and server classes. The server classes that are generated are specific to capnp, and the Client class naming was also just chosen to be consistent with capnp names. If I were implementing a custom protocol, I wouldn't write any proxy server classes. I would write socket code that calls implementation methods directly, not socket code that calls proxy server class methods that call implementation class methods. If I were implementing a non-capnp protocol, I probably wouldn't use the client naming either. For example, if I were implementing a protocol for the `Wallet` interface, I'd make use of the existing `WalletImpl` class implementation in the local process and name the implementation that does remote IPC `RemoteWalletImpl`.",
      "created_at": "2020-10-20T18:36:24Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r508752557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508752557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355045",
      "pull_request_review_id": 513024399,
      "id": 509355045,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NTA0NQ==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulates a function to be called on close.\n+class CloseFn : public CloseHook\n+{\n+public:\n+    explicit CloseFn(std::function<void()> fn) : m_fn(std::move(fn)) {}\n+    void onClose(Base& interface) override { m_fn(); }\n+    std::function<void()> m_fn;\n+};\n+} // namespace\n+\n+LocalInit::LocalInit(const char* exe_name, const char* log_suffix) : m_exe_name(exe_name), m_log_suffix(log_suffix) {}\n+LocalInit::~LocalInit() {}\n+NodeContext& LocalInit::node()\n+{\n+    throw std::logic_error(\"Node accessor function called from non-node binary (gui, wallet, or test program)\");\n+}\n+\n+void SpawnProcess(IpcProcess& process,\n+    IpcProtocol& protocol,\n+    const std::string& new_exe_name,\n+    const MakeClientFn& make_client)\n+{\n+    int pid;\n+    int fd = process.spawn(new_exe_name, pid);\n+    std::unique_ptr<Init> init = protocol.connect(fd);\n+    Base& base = make_client(*init);\n+    base.addCloseHook(MakeUnique<CloseFn>([&process, new_exe_name, pid] {\n+        int status = process.wait(pid);\n+        LogPrint(::BCLog::IPC, \"%s pid %i exited with status %i\\n\", new_exe_name, pid, status);",
      "path": "src/interfaces/init.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "2f521b2c24dd390c5d8a5cfd59dfebd0b40cbfff",
      "in_reply_to_id": 505772152,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505772152\r\n\r\n> Might be worth logging the `pid` on launch as well.\r\n\r\nGood idea, added log",
      "created_at": "2020-10-21T14:50:12Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r509355045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355219",
      "pull_request_review_id": 513024399,
      "id": 509355219,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NTIxOQ==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505737310,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505737310\r\n\r\n> I think this comment can be improved:\r\n> \r\n> * \"Init interface providing access to other interfaces\", this should underscores access is provided across process boundaries.\r\n\r\nCould you be specific about the change you would suggest here? The next sentence after the quote in your comment says how the interface is used connecting to another process, so I don't know how I would emphasize the point more.\r\n\r\nAlso, _every_ interface in `src/interfaces/` is called across process boundaries. From https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#internal-interface-guidelines: \"Interface classes are written in a particular style so node, wallet, and GUI code doesn't need to run in the same process\" \r\n\r\nAlso, there is nothing special about the `Init` interface returning pointers to other interfaces. `Node` and `Wallet` and `Chain` interface methods all return pointers to other interfaces as well.\r\n\r\nThe only special thing about the `Init` interface is that it is the _first_ interface pointer you get access to when you make a connection to a process. It's the initial interface.\r\n\r\n> * \"providing virtual methods that can be called from other processes\", AFAIU, this is confusing as interfaces::Init provides both process control method (e.g `makeEchoIpc()`, in the future `makeWallet`) and an interface `IpcProtocol` wrapping a libmultiprocess `ProxyClient/ProxyServer`. I would be better to document that both control and data exchange functions are supported by interfaces::Init\r\n\r\nCould you be more specific about what should be documented? This comment seems to be referring to `LocalInit` methods not `Init` methods. The `Init` methods are `makeEcho`, `makeNode`, `makeChain`, and `makeWalletClient`. These are all methods called to get access to other interfaces.\r\n\r\n`LocalInit` is a different class from `Init`. It's a connector between `src/init` code and IPC code. It could be broken up or renamed, but I'd be reluctant to make changes without knowing specific design goals.\r\n\r\n> Overall, I still think `Init`/`LocalInit` are loosely-defining names. The names doesn't indicate what is initiated nor who is local and remote. `IPCSupervisor`/`IPCWrapper` as suggested would be better.\r\n\r\nThere is no special supervision or wrapping happening in the `Init` interface that isn't happening in all the other interfaces (Node/Wallet/Chain) when IPC is enabled. The only unique thing about the `Init` interface is that it is the first, initial interface that a process gets access to before it can access other interfaces it actually wants to use. Other reasonable names for `interfaces::Init` might be `interfaces::Initial` or `interfaces::Factory` or `interfaces::Process` or `interfaces::Global`.\r\n\r\nThe `LocalInit` class is different than the `Init` class. For one thing it is an actual class with implemented methods and not a pure interface. Maybe it could be called `interfaces::InitImpl` or `interfaces::Startup` or `interfaces::LocalProcess`. Maybe it could be structured differently or not inherit from `Init`.\r\n\r\nI do think neither `Init` nor `LocalInit` classes should contain `IPC` in their names, because it would be misleading in places where they are not implemented to use IPC. The `LocalInit` class is used in startup in code in `src/init`, `src/wallet/`, `and src/qt/` to create initial interfaces pointers whether or not there is any IPC. In `bitcoind` and `bitcoin-qt` binaries where there is no IPC, the `LocalInit` implementations do not contain IPC code and they don't do any supervision or wrapping, so naming these `IPCSupervisor`/`IPCWrapper` would be more misleading than illuminating.",
      "created_at": "2020-10-21T14:50:21Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r509355219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355364",
      "pull_request_review_id": 513024399,
      "id": 509355364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NTM2NA==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 55,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505753193,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505753193\r\n\r\n> I think an in-depth walk-through needs to be documented somewhere for actual and future reviewers.\r\n\r\nI added some more information about what happens when IPC methods are called in https://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo/doc/multiprocess.md#ipc-implementation-details. Maybe we can add walkthrough you posted someplace, too. It seems like it could be expressed as a [sequence diagram](https://en.wikipedia.org/wiki/Sequence_diagram). I think it's useful to see ordering of when functions are called there, and which functions call other functions.\r\n\r\n> What do you think about joining an ASCII art ? I can write one, but I don't know if graphical representation documentation has been favored by Core though it may be helpful for architecture-level stuff.\r\n\r\nMaybe a text representation that is easy to update but can also rendered as a diagram would be good. There are lots of tools that can generate sequence diagrams from simple text, but I haven't used any recently enough to know which to recommend. http://www.mcternan.me.uk/mscgen/ is an older one, https://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/sequenceDiagram.html seems more modern and featureful, https://www.websequencediagrams.com/ is a simple online one",
      "created_at": "2020-10-21T14:50:30Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r509355364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355611",
      "pull_request_review_id": 513024399,
      "id": 509355611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NTYxMQ==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Echo> makeEcho() = 0;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    std::unique_ptr<Echo> makeEcho() override;\n+    //! Make echo implementation for `echoipc` test RPC. Spawn new process if\n+    //! supported.\n+    virtual std::unique_ptr<Echo> makeEchoIpc();",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 78,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505754792,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505754792\r\n\r\n> I think you could add a temporary comment hinting this interface as the future location of `makeNode`, `makeWalletClient`, etc, it's more helpful for reviewers to understand what it would look like after #10102.\r\n\r\nGood idea, added this.",
      "created_at": "2020-10-21T14:50:50Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r509355611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/509355611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512897580",
      "pull_request_review_id": 517980002,
      "id": 512897580,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg5NzU4MA==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 55,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505753193,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the new documentation in `multiprocess.md`.\r\n\r\nFor the text representation I was thinking a simple ASCII art underlying relations between interfaces, implementations, process and threads. Akin to RL's [ARCH.md](https://github.com/rust-bitcoin/rust-lightning/blob/main/ARCH.md), which is hopefully straightforward and doesn't rely on a third-party tool.\r\n\r\nI'm working on a proposal, if it will be easier to give your opinion.",
      "created_at": "2020-10-27T17:41:12Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512897580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512897580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512919431",
      "pull_request_review_id": 518003496,
      "id": 512919431,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxOTQzMQ==",
      "diff_hunk": "@@ -12,6 +12,8 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n+\n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n ",
      "path": "src/interfaces/README.md",
      "position": 9,
      "original_position": 8,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505757544,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm not sure what change is suggested by the observation about init.capnp. I hope it's clear that things in the src/interfaces/capnp/ directory are specific to the capnp protocol.\r\n\r\nI think it's clearer for me now about the distinction between abstract interfaces and their implementations. IMO, three further improvements to make it better:\r\n* rename `IpcProtocolImpl` to `CapnpProtocol`, the constructor is already called `MakeCapnpProtocol` and `IpcProcessImpl` to `LibmpProcess`. Or any more accurate names hinting the _specific_ implementation\r\n* document `IpcProtocol`/`IpcProcess` in `src/interfaces/README.md`, underscoring the current available implementation `IpcProtocolImpl`/`IpcProcessImpl` for each of them\r\n* reorganize directory to `src/interfaces/capnp/` `src/interfaces/ipcproto/capnp` underscoring that capnp is only one implementation among potential several ones.\r\n\r\n> It's not the case that an IPC protocol needs to be implemented with pairs of client and server classes. \r\n\r\nI did looked again on the #10102 and this point is more straightforward to understand. That said, for this current PR, I believe it will helper reviewers to make a reference on how pairs of clients and server are added for capnp implementation. \r\n\r\nI don't know if a `src/interfaces/capnp/README.md` with implementation details would help but for example I still don't grasp how `.capnp` files are consumed by the code generator. I might need to read `libmultiprocess/README.md` more attentively though.",
      "created_at": "2020-10-27T18:08:59Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512919431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512919431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512938792",
      "pull_request_review_id": 518026991,
      "id": 512938792,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzODc5Mg==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 55,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505753193,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512897580\r\n\r\n> I'm working on a proposal, if it will be easier to give your opinion.\r\n\r\nDescription at https://github.com/rust-bitcoin/rust-lightning/blob/main/ARCH.md seems good, but I don't get the diagram. It seems kind of like a word cloud or mind map useful for memorization more than a picture which explains something. I tend to be more of a verbal than a visual person, so I wouldn't come up with something like this, but wouldn't mind including something like it.",
      "created_at": "2020-10-27T18:38:31Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512938792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512938792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512941358",
      "pull_request_review_id": 518026991,
      "id": 512941358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MTM1OA==",
      "diff_hunk": "@@ -12,6 +12,8 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n+\n+* [`Base`](base.h) — base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n ",
      "path": "src/interfaces/README.md",
      "position": 9,
      "original_position": 8,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505757544,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512919431\r\n\r\n> IMO, three further improvements to make it better:\r\n> \r\n> * rename `IpcProtocolImpl` to `CapnpProtocol`, the constructor is already called `MakeCapnpProtocol` and `IpcProcessImpl` to `LibmpProcess`. Or any more accurate names hinting the _specific_ implementation\r\n\r\nRenamed `CapnpProtocol`, but kept `ProcessImpl` because the process implementation happens to make a few libmultiprocess helper calls but is not focused around libmultiprocess (it could call fork/exec instead of mp::SpawnProcess for example). It might help to look at the complete `ProcessImpl` class in https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/process.cpp which supports establishing connections between existing processes instead of just basic spawning implemented here.\r\n\r\nI was thinking of renaming `ProcessImpl` to `UnixProcess` and having an alternate `WindowsProcess` implementation, and maybe I will do this but currently I'm not sure how much platform specific code there will be here. It's possible more platform specific code will move into libmultiprocess and then it would make sense to call this `LibmpProcess`. But if there are significant differences between unix sockets and windows pipes, having two classes instead of one would make more sense. For now ProcessImpl like NodeImpl ChainImpl WalletImpl is pretty straightforward, I think.\r\n\r\n> * document `IpcProtocol`/`IpcProcess` in `src/interfaces/README.md`, underscoring the current available implementation `IpcProtocolImpl`/`IpcProcessImpl` for each of them\r\n\r\nIPC classes are moved out of `src/interfaces/` to `src/ipc/` so hopefully this is clearer. I think all the classes have pretty good doxygen documentation and organization is straightforward. `src/ipc/` is just a normal directory like `src/wallet/` or `src/qt/` grouping related classes and functions.\r\n\r\n> * reorganize directory to `src/interfaces/capnp/` `src/interfaces/ipcproto/capnp` underscoring that capnp is only one implementation among potential several ones.\r\n\r\nThanks, renamed to `src/ipc/capnp/`\r\n\r\n> > It's not the case that an IPC protocol needs to be implemented with pairs of client and server classes.\r\n> \r\n> I did looked again on the #10102 and this point is more straightforward to understand. That said, for this current PR, I believe it will helper reviewers to make a reference on how pairs of clients and server are added for capnp implementation.\r\n\r\nNow eliminated more uses of \"client classes\", switching to \"proxy classes\" instead. The client/server terminology is more specific to capnp and less helpful to talk about generically. In particular proxy server classes are a capnp-specific detail and I doubt a different protocol implementation would even have wrapper classes on the server side.\r\n\r\n> I don't know if a `src/interfaces/capnp/README.md` with implementation details would help but for example I still don't grasp how `.capnp` files are consumed by the code generator. I might need to read `libmultiprocess/README.md` more attentively though.\r\n\r\nMaybe it would be helpful to describe generated files. This is a low level detail, though, and not something you need to care about implementing an IPC interface or calling one. The idea is that to call an interface from a different process, all you need to do is describe it, and the proxy code is generated from the description. The generated files should be easy to browse and are all named like `src/ipc/capnp/*.capnp.*`\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-718103715\r\n\r\n> @ryanofsky See my graphical representation proposal here : [https://github.com/ariard/bitcoin/tree/ipc-echo-review/src/interfaces](https://github.com/ariard/bitcoin/tree/ipc-echo-review/src/interfaces?rgh-link-date=2020-10-28T17%3A49%3A34Z)..\r\n> \r\n> Joint with a walk-through for both the interfaces initialization and a message round-trip.\r\n\r\nI don't know actually how to understand that diagram. I don't know what the arrows mean, and I'm not sure it's good for it to mix low level and high level details together. For example, the capnp event loop thread seems a low-level implementation detail. I'm not sure why you would care if you're just connecting or calling a proxy method whether capnp does the socket communication on the calling thread or a different event loop thread.\r\n\r\nBut I wouldn't be opposed to including a diagram like this as an illustration if it's helpful",
      "created_at": "2020-10-27T18:42:39Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r512941358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512941358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513652807",
      "pull_request_review_id": 518943475,
      "id": 513652807,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1MjgwNw==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505737310,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think my main concern is about lighting the interfaces _hierarchy_, where they're produced, and when they're consumed. See my graphical representation proposal as a way to improve it.\r\n\r\n> Other reasonable names for interfaces::Init might be interfaces::Initial or interfaces::Factory or interfaces::Process or interfaces::Global.\r\n\r\n+1 for `interfaces::Factory`.\r\n\r\n> Maybe it could be called interfaces::InitImpl or interfaces::Startup or interfaces::LocalProcess\r\n\r\n+1 for `interfaces::Startup`.\r\n\r\n> Maybe it could be structured differently or not inherit from Init.\r\n\r\nAt least, I think `LocalInitImpl` which is different for `bitcoin-gui`/`bitcoin-node`/`bitcoin-wallet`,`bitcoind` should be prefixed like `GuiInit`, `NodeInit`, ...",
      "created_at": "2020-10-28T17:59:04Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r513652807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513652807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522525784",
      "pull_request_review_id": 518026991,
      "id": 522525784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyNTc4NA==",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every process—interfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! process—interfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.",
      "path": "src/interfaces/init.h",
      "position": null,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "in_reply_to_id": 505737310,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r513652807\r\n\r\n> I think my main concern is about lighting the interfaces _hierarchy_, where they're produced, and when they're consumed. See my graphical representation proposal as a way to improve it.\r\n\r\n`LocalInit` class is gone, so the hierarchy is flat now. `Init` class is now just used for initialization, and is exposed over IPC, but is no longer used to set up IPC.",
      "created_at": "2020-11-13T00:26:50Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r522525784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522525784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575300240",
      "pull_request_review_id": 589563601,
      "id": 575300240,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMwMDI0MA==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes. As much as possible, calls between processes are meant to work the same as calls within a single process without adding limitations or requiring extra implementation effort. Processes communicate with each other by calling regular [C++ interface methods](../src/interfaces/README.md). Method arguments and return values are automatically serialized and sent between processes. Object references and `std::function` arguments are automatically tracked and mapped to allow invoked code to call back into invoking code at any time, and there is a 1:1 threading model where any thread invoking a method in another process has a corresponding thread in the invoked process responsible for executing all method calls from the source thread, without blocking I/O or holding up another calls, and using the same thread local variables, locks, and callbacks between calls. The forwarding, tracking, and threading is implemented inside the [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) library which has the design goal of making calls between processes look exactly like calls in the same process to the extent possible.",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Starting at \"As much as possible...\", I think you can move the remainder at the beginning of the README or its in own \"Design\" section.",
      "created_at": "2021-02-12T15:21:40Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575300240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575300240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575337525",
      "pull_request_review_id": 589563601,
      "id": 575337525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMzNzUyNQ==",
      "diff_hunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <memory>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Chain;\n+class Echo;\n+class Ipc;\n+class Node;\n+class WalletClient;\n+\n+//! Initial interface created when a process is first started, and used to give\n+//! and get access to other interfaces (Node, Chain, Wallet, etc).\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Node> makeNode();\n+    virtual std::unique_ptr<Chain> makeChain();\n+    virtual std::unique_ptr<WalletClient> makeWalletClient(Chain& chain);\n+    virtual std::unique_ptr<Echo> makeEcho();\n+    virtual Ipc* ipc();\n+};\n+\n+//! Return implementation of Init interface for the node process. If the argv\n+//! indicates that this is a child process spawned to handle requests from a\n+//! parent process, this blocks and handles requests, then returns null and a\n+//! status code to exit with. If this returns non-null, the caller can just\n+//! start up normally and use the Init object to spawn and connect to other\n+//! processes while it is running.\n+std::unique_ptr<Init> MakeNodeInit(NodeContext& node, int argc, char* argv[], int& exit_status);",
      "path": "src/interfaces/init.h",
      "position": 43,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reading this comment and the call chain `IpcImpl::serveProcess` -> `ProcessImpl::serve`, I don't grasp what's the expected behavior.\r\n\r\nAFAIU `bitcoin-node`, it should only be called with `ipcfd=$FD`, spawned by the parent process. Any other case should be a hint of an error in `bitcoin-node usage ? \r\n\r\nIf `bitcoin-node` behavior is only regular when it's called with `ipcfd`, why this comment is saying \"If the argv indicates that this is child process...then returns null and a status code to exit with ? To me, this is expected behavior and shouldn't be subject to early exit.\r\n\r\nFurther, the code sounds to do something different.\r\n\r\nIf this process is called without `ipcfd`, `ProcessImpl::serve` will returns false, the same for `IpcImpl` and finally `MakeNodeInit` will return a `init::BitcoinNodeInit`  to main, pursuing process operations further. \r\n\r\nIf this process is called with `ipcfd` with an valid fd, `ProcessImpl::serve` will return true, the same for `IpcImpl::serveProcess` and finally `MakeNodeInit` will return a `nullptr` to main, provoking early exit of the process. Note, the return values are the same if the `ipcfd` is called with an invalid fd.\r\n\r\nI think this comment should detail what's a valid invocation of `bitcoin-node`, the pathological cases and what `MakeNodeInit` will return for each.",
      "created_at": "2021-02-12T16:16:13Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575337525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575337525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575368309",
      "pull_request_review_id": 589563601,
      "id": 575368309,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTM2ODMwOQ==",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <ipc/capnp/protocol.h>\n+#include <ipc/process.h>\n+#include <ipc/protocol.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/memory.h>\n+#include <util/system.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdexcept>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <string>\n+#include <unistd.h>\n+#include <utility>\n+#include <vector>\n+\n+namespace ipc {\n+namespace {\n+\n+class IpcImpl : public interfaces::Ipc\n+{\n+public:\n+    IpcImpl(int argc, char* argv[], const char* exe_name, interfaces::Init& init)\n+        : m_protocol(ipc::capnp::MakeCapnpProtocol(exe_name, init)),\n+          m_process(ipc::MakeProcess(argc, argv, exe_name, *m_protocol))\n+    {\n+    }\n+    std::unique_ptr<interfaces::Init> spawnProcess(const char* exe_name) override\n+    {\n+        int pid;\n+        int fd = m_process->spawn(exe_name, pid);\n+        LogPrint(::BCLog::IPC, \"Process %s pid %i launched\\n\", exe_name, pid);\n+        auto init = m_protocol->connect(fd);\n+        Ipc::addCleanup(*init, [this, exe_name, pid] {\n+            int status = m_process->wait(pid);\n+            LogPrint(::BCLog::IPC, \"Process %s pid %i exited with status %i\\n\", exe_name, pid, status);\n+        });\n+        return init;\n+    }\n+    bool serveProcess(const char* exe_name, int argc, char* argv[], int& exit_status) override",
      "path": "src/ipc/interfaces.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you can drop `arg` and `argv` parameters, they're already passed in constructors, and those ones should make authority if they differ ?",
      "created_at": "2021-02-12T17:01:59Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575368309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575368309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575375855",
      "pull_request_review_id": 589563601,
      "id": 575375855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTM3NTg1NQ==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROTOCOL_H\n+#define BITCOIN_IPC_PROTOCOL_H\n+\n+#include <interfaces/init.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <typeindex>\n+\n+namespace ipc {\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class Protocol\n+{\n+public:\n+    virtual ~Protocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    virtual std::unique_ptr<interfaces::Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    virtual void serve(int fd) = 0;",
      "path": "src/ipc/protocol.h",
      "position": null,
      "original_position": 35,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we rename this method differently from `Process:serve`, even if currently the `Process` one is calling the `Protocol` one that's a bit confusing.  Like `handle_request` ?",
      "created_at": "2021-02-12T17:14:02Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575375855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575375855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575380571",
      "pull_request_review_id": 589563601,
      "id": 575380571,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTM4MDU3MQ==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROCESS_H\n+#define BITCOIN_IPC_PROCESS_H\n+\n+#include <memory>\n+#include <string>\n+\n+namespace ipc {\n+class Protocol;\n+\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class Process\n+{\n+public:\n+    virtual ~Process() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return its exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve requests if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;",
      "path": "src/ipc/process.h",
      "position": null,
      "original_position": 33,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For each method of this interface it might be good to prefix them by which side of the process relationship it's expected to be used, `parent_spawn`, `parent_wait`, `spawn_serve`.\r\n\r\nBut I don't think it makes sense to split it further because we might have in the future set of process with grandchild relationship `bitcoin-gui` -> `bitcoin-wallet` -> `bitcoin-keyholder` ?",
      "created_at": "2021-02-12T17:21:35Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575380571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575380571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578467403",
      "pull_request_review_id": 593279059,
      "id": 578467403,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ2NzQwMw==",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <ipc/capnp/protocol.h>\n+#include <ipc/process.h>\n+#include <ipc/protocol.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/memory.h>\n+#include <util/system.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdexcept>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <string>\n+#include <unistd.h>\n+#include <utility>\n+#include <vector>\n+\n+namespace ipc {\n+namespace {\n+\n+class IpcImpl : public interfaces::Ipc\n+{\n+public:\n+    IpcImpl(int argc, char* argv[], const char* exe_name, interfaces::Init& init)\n+        : m_protocol(ipc::capnp::MakeCapnpProtocol(exe_name, init)),\n+          m_process(ipc::MakeProcess(argc, argv, exe_name, *m_protocol))\n+    {\n+    }\n+    std::unique_ptr<interfaces::Init> spawnProcess(const char* exe_name) override\n+    {\n+        int pid;\n+        int fd = m_process->spawn(exe_name, pid);\n+        LogPrint(::BCLog::IPC, \"Process %s pid %i launched\\n\", exe_name, pid);\n+        auto init = m_protocol->connect(fd);\n+        Ipc::addCleanup(*init, [this, exe_name, pid] {\n+            int status = m_process->wait(pid);\n+            LogPrint(::BCLog::IPC, \"Process %s pid %i exited with status %i\\n\", exe_name, pid, status);\n+        });\n+        return init;\n+    }\n+    bool serveProcess(const char* exe_name, int argc, char* argv[], int& exit_status) override",
      "path": "src/ipc/interfaces.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575368309,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575368309\r\n\r\n> I think you can drop `arg` and `argv` parameters, they're already passed in constructors, and those ones should make authority if they differ ?\r\n\r\nThanks! Dropped the constructor arguments and removed more stored state from these classes.\r\n",
      "created_at": "2021-02-18T14:35:54Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r578467403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578467403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578468036",
      "pull_request_review_id": 593279059,
      "id": 578468036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ2ODAzNg==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROCESS_H\n+#define BITCOIN_IPC_PROCESS_H\n+\n+#include <memory>\n+#include <string>\n+\n+namespace ipc {\n+class Protocol;\n+\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class Process\n+{\n+public:\n+    virtual ~Process() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return its exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve requests if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;",
      "path": "src/ipc/process.h",
      "position": null,
      "original_position": 33,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575380571,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575380571\r\n\r\n> For each method of this interface it might be good to prefix them by which side of the process relationship it's expected to be used, `parent_spawn`, `parent_wait`, `spawn_serve`.\r\n\r\nI don't think I understand the reason for this suggestion. Maybe there is something misleading about the word spawn? The naming here comes from the POSIX spawn API (https://man7.org/linux/man-pages/man3/posix_spawn.3.html). Any process that spawns another process is a parent, and any process that is spawned is a child. A process can be both a parent and a child. When `bitcoin-gui` spawns `bitcoin-node` which spawns `bitcoin-wallet` in #10102, `bitcoin-node` is a both a parent and a child.",
      "created_at": "2021-02-18T14:36:39Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r578468036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578468036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578480284",
      "pull_request_review_id": 593279059,
      "id": 578480284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ4MDI4NA==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROTOCOL_H\n+#define BITCOIN_IPC_PROTOCOL_H\n+\n+#include <interfaces/init.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <typeindex>\n+\n+namespace ipc {\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class Protocol\n+{\n+public:\n+    virtual ~Protocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    virtual std::unique_ptr<interfaces::Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    virtual void serve(int fd) = 0;",
      "path": "src/ipc/protocol.h",
      "position": null,
      "original_position": 35,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575375855,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575375855\r\n\r\n> Can we rename this method differently from `Process:serve`, even if currently the `Process` one is calling the `Protocol` one that's a bit confusing. Like `handle_request` ?\r\n\r\nI renamed the other method if that helps. I don't like using the name \"handle\" here because \"handleXYZ\" methods are used in other interfaces to register event handlers. Also, this interface is extended in #19460 to have `connect` / `serve` / `listen` methods, which should be pretty common terms dealing with socket connections.",
      "created_at": "2021-02-18T14:51:10Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r578480284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578480284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578481277",
      "pull_request_review_id": 593279059,
      "id": 578481277,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ4MTI3Nw==",
      "diff_hunk": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes. As much as possible, calls between processes are meant to work the same as calls within a single process without adding limitations or requiring extra implementation effort. Processes communicate with each other by calling regular [C++ interface methods](../src/interfaces/README.md). Method arguments and return values are automatically serialized and sent between processes. Object references and `std::function` arguments are automatically tracked and mapped to allow invoked code to call back into invoking code at any time, and there is a 1:1 threading model where any thread invoking a method in another process has a corresponding thread in the invoked process responsible for executing all method calls from the source thread, without blocking I/O or holding up another calls, and using the same thread local variables, locks, and callbacks between calls. The forwarding, tracking, and threading is implemented inside the [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) library which has the design goal of making calls between processes look exactly like calls in the same process to the extent possible.",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575300240,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575300240\r\n\r\n> Starting at \"As much as possible...\", I think you can move the remainder at the beginning of the README or its in own \"Design\" section.\r\n\r\nThanks! Moved to new section.",
      "created_at": "2021-02-18T14:52:18Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r578481277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578481277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578483235",
      "pull_request_review_id": 593279059,
      "id": 578483235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ4MzIzNQ==",
      "diff_hunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <memory>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Chain;\n+class Echo;\n+class Ipc;\n+class Node;\n+class WalletClient;\n+\n+//! Initial interface created when a process is first started, and used to give\n+//! and get access to other interfaces (Node, Chain, Wallet, etc).\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Node> makeNode();\n+    virtual std::unique_ptr<Chain> makeChain();\n+    virtual std::unique_ptr<WalletClient> makeWalletClient(Chain& chain);\n+    virtual std::unique_ptr<Echo> makeEcho();\n+    virtual Ipc* ipc();\n+};\n+\n+//! Return implementation of Init interface for the node process. If the argv\n+//! indicates that this is a child process spawned to handle requests from a\n+//! parent process, this blocks and handles requests, then returns null and a\n+//! status code to exit with. If this returns non-null, the caller can just\n+//! start up normally and use the Init object to spawn and connect to other\n+//! processes while it is running.\n+std::unique_ptr<Init> MakeNodeInit(NodeContext& node, int argc, char* argv[], int& exit_status);",
      "path": "src/interfaces/init.h",
      "position": 43,
      "original_position": 38,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575337525,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r575337525\r\n\r\n> Reading this comment and the call chain `IpcImpl::serveProcess` -> `ProcessImpl::serve`, I don't grasp what's the expected behavior.\r\n> \r\n> AFAIU `bitcoin-node`, it should only be called with `ipcfd=$FD`, spawned by the parent process. Any other case should be a hint of an error in `bitcoin-node usage ?\r\n\r\nI think all of this should be more clear after #10102, but `bitcoin-node` is a drop-in replacement for `bitcoind` that just uses multiple processes internally instead of a single process. `bitcoin-node` takes all the same arguments that `bitcoind` takes and can be used in the same ways. (It also gains a new `-ipcbind` argument in #19460.)\r\n\r\nIf `bitcoin-node` is started with `-ipcfd=$FD`, it's not a normal invocation, but it's not a \"pathological case\" either. It's just a special invocation that lets the `interfaces::Ipc::startSpawnedProcess()` method detect if it's being called from a spawned process.",
      "created_at": "2021-02-18T14:54:34Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r578483235",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578483235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583704171",
      "pull_request_review_id": 599662945,
      "id": 583704171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzcwNDE3MQ==",
      "diff_hunk": "@@ -33,3 +33,42 @@ BITCOIND=bitcoin-node test/functional/test_runner.py\n The configure script will pick up settings and library locations from the depends directory, so there is no need to pass `--enable-multiprocess` as a separate flag when using the depends system (it's controlled by the `MULTIPROCESS=1` option).\n \n Alternately, you can install [Cap'n Proto](https://capnproto.org/) and [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) packages on your system, and just run `./configure --enable-multiprocess` without using the depends system. The configure script will be able to locate the installed packages via [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/). See [Installation](https://github.com/chaincodelabs/libmultiprocess#installation) section of the libmultiprocess readme for install steps. See [build-unix.md](build-unix.md) and [build-osx.md](build-osx.md) for information about installing dependencies in general.\n+\n+## IPC implementation details\n+\n+Cross process Node, Wallet, and Chain interfaces are defined in\n+[`src/interfaces/`](../src/interfaces/). These are C++ classes which follow\n+[conventions](developer-notes.md#internal-interface-guidelines), like passing\n+serializable arguments so they can be called from different processes, and\n+making methods pure virtual so they can have proxy implementations that forward\n+calls between processes.\n+\n+When Wallet, Node, and Chain code is running in the same process, calling any\n+interface method invokes the implementation directly. When code is running in\n+different processes, calling an interface method invokes a proxy interface\n+implementation that communicates with a remote process and invokes the real\n+implementation in the remote process. The\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) code\n+generation tool internally generates proxy client classes and proxy server\n+classes for this purpose that are thin wrappers around Cap'n Proto\n+[client](https://capnproto.org/cxxrpc.html#clients) and\n+[server](https://capnproto.org/cxxrpc.html#servers) classes, which handle the\n+actual serialization and socket communication.\n+\n+## Design",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 35,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From a UX standpoint, what do you think about the following order of sections : Design - IPC implementation - Installation - Debugging - Next steps. I would say before to be interested in upcoming next steps a reader might be willingly to grash what multiprocess is about.",
      "created_at": "2021-02-26T15:07:11Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583704171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583704171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583718720",
      "pull_request_review_id": 599662945,
      "id": 583718720,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzcxODcyMA==",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <ipc/capnp/protocol.h>\n+#include <ipc/process.h>\n+#include <ipc/protocol.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/memory.h>\n+#include <util/system.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdexcept>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <string>\n+#include <unistd.h>\n+#include <utility>\n+#include <vector>\n+\n+namespace ipc {\n+namespace {\n+class IpcImpl : public interfaces::Ipc\n+{\n+public:\n+    IpcImpl(const char* exe_name, const char* arg0, interfaces::Init& init)\n+        : m_exe_name(exe_name), m_arg0(arg0), m_init(init),\n+          m_protocol(ipc::capnp::MakeCapnpProtocol()), m_process(ipc::MakeProcess())\n+    {\n+    }\n+    std::unique_ptr<interfaces::Init> spawnProcess(const char* new_exe_name) override\n+    {\n+        int pid;\n+        int fd = m_process->spawn(new_exe_name, m_arg0, pid);\n+        LogPrint(::BCLog::IPC, \"Process %s pid %i launched\\n\", new_exe_name, pid);\n+        auto init = m_protocol->connect(fd, m_exe_name);\n+        Ipc::addCleanup(*init, [this, new_exe_name, pid] {\n+            int status = m_process->waitSpawned(pid);\n+            LogPrint(::BCLog::IPC, \"Process %s pid %i exited with status %i\\n\", new_exe_name, pid, status);\n+        });\n+        return init;\n+    }\n+    bool startSpawnedProcess(int argc, char* argv[], int& exit_status) override\n+    {\n+        exit_status = EXIT_FAILURE;\n+        int32_t fd = -1;\n+        if (!m_process->checkSpawned(argc, argv, fd)) {\n+            return false;\n+        }\n+        m_protocol->serve(fd, m_exe_name, m_init);\n+        exit_status = EXIT_SUCCESS;\n+        return true;\n+    }\n+    void addCleanup(std::type_index type, void* iface, std::function<void()> cleanup) override\n+    {\n+        m_protocol->addCleanup(type, iface, std::move(cleanup));\n+    }\n+    const char* m_exe_name;\n+    const char* m_arg0;",
      "path": "src/ipc/interfaces.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "AFAICT, this is used to indicate parent process path to `mp::SpawnProcess` and spawns the new child under the same one. What about calling this variable `m_process_path` or `m_path`, more meaningful than `m_arg0` ?",
      "created_at": "2021-02-26T15:27:02Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583718720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583718720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583724307",
      "pull_request_review_id": 599662945,
      "id": 583724307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzcyNDMwNw==",
      "diff_hunk": "@@ -12,6 +12,6 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).",
      "path": "src/interfaces/README.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should the new `src/interfaces/ipc.h` be mentioned ?",
      "created_at": "2021-02-26T15:35:11Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583724307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583724307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583773750",
      "pull_request_review_id": 599754992,
      "id": 583773750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzc3Mzc1MA==",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROCESS_H\n+#define BITCOIN_IPC_PROCESS_H\n+\n+#include <memory>\n+#include <string>\n+\n+namespace ipc {\n+class Protocol;\n+\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class Process\n+{\n+public:\n+    virtual ~Process() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return its exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve requests if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;",
      "path": "src/ipc/process.h",
      "position": null,
      "original_position": 33,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "f08e238945342151d39e18d577cd6a94603e4397",
      "in_reply_to_id": 575380571,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "New documentation is better, reading them I grasped those methods usage at first read!",
      "created_at": "2021-02-26T16:47:05Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583773750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583773750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584369949",
      "pull_request_review_id": 600311944,
      "id": 584369949,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDM2OTk0OQ==",
      "diff_hunk": "@@ -0,0 +1,17 @@\n+# Copyright (c) 2021 The Bitcoin Core developers",
      "path": "src/ipc/capnp/echo.capnp",
      "position": 1,
      "original_position": 1,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b2abe3f062c69663ae97bed239aa0a118e6a081c\r\n\r\nApologies for the remedial question, but this code *isn't* autogenerated, right?",
      "created_at": "2021-02-28T22:16:34Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r584369949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584369949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587445671",
      "pull_request_review_id": 604067287,
      "id": 587445671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzQ0NTY3MQ==",
      "diff_hunk": "@@ -0,0 +1,17 @@\n+# Copyright (c) 2021 The Bitcoin Core developers",
      "path": "src/ipc/capnp/echo.capnp",
      "position": 1,
      "original_position": 1,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 584369949,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r584369949\r\n\r\n> this code _isn't_ autogenerated, right?\r\n\r\nRight, [`echo.capnp`](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/echo.capnp) isn't a generated file, it's the source of generated files: echo.capnp.h, echo.capnp.cpp, [and so on](https://github.com/ryanofsky/bitcoin/blob/b2abe3f062c69663ae97bed239aa0a118e6a081c/src/Makefile.am#L822-L829). Generated files aren't committed to git, they are just build outputs.\r\n\r\nFor an interface to be shared across processses, it needs two definitions:\r\n\r\n- An **API definition** declaring how the interface is called. Examples: [node.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/node.h), [wallet.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/wallet.h), [echo.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/echo.h), [init.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/init.h)\r\n\r\n- A **data definition** declaring how interface calls get sent across the wire. Examples: [node.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/node.capnp), [wallet.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/wallet.capnp), [echo.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/echo.capnp), [init.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/init.capnp)\r\n\r\nSince API and data definitions contain some of the same information, they have to be kept in sync manually when methods or parameters change. This is designed to be _straightforward_ and _safe_. _Straightforward_ because there is no need to write manual serialization code or use awkward intermediate types like [`UniValue`](https://github.com/bitcoin/bitcoin/blob/master/src/univalue/include/univalue.h) instead of native types. _Safe_ because if there are any inconsistencies  between API and data definitions (even minor ones like using a narrow int data type for a wider int API input), there are errors at build time instead of errors or bugs at runtime.\r\n\r\nIn the future, it would be possible to combine API and data definitions together using [C++ attributes](https://en.cppreference.com/w/cpp/language/attributes). To do this we would add attributes to the API definition files, and then generate the data definitions from the API definitions and attributes. I didn't take this approach mostly because it would be extra work, but also because until c++ standardizes reflection, this would require either hooking into compiler APIs like https://github.com/RosettaCommons/binder, or parsing c++ code manually like http://www.swig.org/.\r\n\r\nI'll think about where I can document this stuff better. There's a https://github.com/chaincodelabs/libmultiprocess/#example section where some of this may be appropriate.\r\n",
      "created_at": "2021-03-04T12:53:07Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r587445671",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587445671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590408045",
      "pull_request_review_id": 607456445,
      "id": 590408045,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDQwODA0NQ==",
      "diff_hunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <memory>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Chain;\n+class Echo;\n+class Ipc;\n+class Node;\n+class WalletClient;\n+\n+//! Initial interface created when a process is first started, and used to give\n+//! and get access to other interfaces (Node, Chain, Wallet, etc).\n+//!\n+//! There is a different Init interface implementation for each process\n+//! (bitcoin-gui, bitcoin-node, bitcoin-wallet, bitcoind, bitcoin-qt) and each\n+//! implementation can implement the make methods for interfaces it supports.\n+//! The default make methods all return null.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Node> makeNode();\n+    virtual std::unique_ptr<Chain> makeChain();\n+    virtual std::unique_ptr<WalletClient> makeWalletClient(Chain& chain);\n+    virtual std::unique_ptr<Echo> makeEcho();",
      "path": "src/interfaces/init.h",
      "position": 33,
      "original_position": 33,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fact those make methods could only be implemented on the subclasses. E.g `makeEcho` only on `BitcoinNodeInit` or `makeNode` only on `BitcoinGuiInit` ? What purpose does it serve to have default methods ?",
      "created_at": "2021-03-09T14:18:31Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590408045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590408045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590411040",
      "pull_request_review_id": 607456445,
      "id": 590411040,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDQxMTA0MA==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <functional>\n+#include <memory>\n+#include <typeindex>\n+\n+namespace interfaces {\n+class Init;\n+\n+//! Interface providing access to interprocess-communication (IPC)\n+//! functionality. The IPC implementation is responsible for establishing\n+//! connections between a controlling process and a process being controlled.\n+//! When a connection is established, the process being controlled returns an\n+//! interfaces::Init pointer to the controlling process, which the controlling\n+//! process can use to get access to other interfaces and functionality.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. The controlling process calls spawnProcess(), which calls\n+//!    ipc::Process::spawn(), which spawns a new process and returns a\n+//!    socketpair file descriptor for communicating with it. spawnProcess then",
      "path": "src/interfaces/ipc.h",
      "position": null,
      "original_position": 26,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`interfaces::Ipc::spawnProcess()` ?",
      "created_at": "2021-03-09T14:21:57Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590411040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590411040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590428830",
      "pull_request_review_id": 607456445,
      "id": 590428830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDQyODgzMA==",
      "diff_hunk": "@@ -0,0 +1,20 @@\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0xf2c5cfa319406aa6;",
      "path": "src/ipc/capnp/init.capnp",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Those values are identifiers for Cap'n Proto right ? Curious on how do you select them ?",
      "created_at": "2021-03-09T14:41:47Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590428830",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590428830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544008",
      "pull_request_review_id": 607635567,
      "id": 590544008,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDAwOA==",
      "diff_hunk": "@@ -33,3 +33,42 @@ BITCOIND=bitcoin-node test/functional/test_runner.py\n The configure script will pick up settings and library locations from the depends directory, so there is no need to pass `--enable-multiprocess` as a separate flag when using the depends system (it's controlled by the `MULTIPROCESS=1` option).\n \n Alternately, you can install [Cap'n Proto](https://capnproto.org/) and [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) packages on your system, and just run `./configure --enable-multiprocess` without using the depends system. The configure script will be able to locate the installed packages via [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/). See [Installation](https://github.com/chaincodelabs/libmultiprocess#installation) section of the libmultiprocess readme for install steps. See [build-unix.md](build-unix.md) and [build-osx.md](build-osx.md) for information about installing dependencies in general.\n+\n+## IPC implementation details\n+\n+Cross process Node, Wallet, and Chain interfaces are defined in\n+[`src/interfaces/`](../src/interfaces/). These are C++ classes which follow\n+[conventions](developer-notes.md#internal-interface-guidelines), like passing\n+serializable arguments so they can be called from different processes, and\n+making methods pure virtual so they can have proxy implementations that forward\n+calls between processes.\n+\n+When Wallet, Node, and Chain code is running in the same process, calling any\n+interface method invokes the implementation directly. When code is running in\n+different processes, calling an interface method invokes a proxy interface\n+implementation that communicates with a remote process and invokes the real\n+implementation in the remote process. The\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) code\n+generation tool internally generates proxy client classes and proxy server\n+classes for this purpose that are thin wrappers around Cap'n Proto\n+[client](https://capnproto.org/cxxrpc.html#clients) and\n+[server](https://capnproto.org/cxxrpc.html#servers) classes, which handle the\n+actual serialization and socket communication.\n+\n+## Design",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 35,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 583704171,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583704171\r\n\r\n> From a UX standpoint, what do you think about the following order of sections : Design - IPC implementation - Installation - Debugging - Next steps. I would say before to be interested in upcoming next steps a reader might be willingly to grash what multiprocess is about.\r\n\r\nCombined implementation details and design sections for now. I wouldn't mind improving this document in a different PR, but at most I want to add a little new text in this PR, not reorganize docs here.\r\n\r\nOn the idea, this document is mainly targeted at users, not developers so I wouldn't put design information up front. I think a good organization might be:\r\n\r\nMultiprocess bitcoin - description what multiprocess binaries currently do\r\nNext steps - description of what multiprocess binaries are meant to do and will do when next PRs are merged\r\nInstallation - steps to build and run\r\nDebugging - options to monitor behavior\r\nImplementation details - pointers for developers\r\n\r\n",
      "created_at": "2021-03-09T16:51:56Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544207",
      "pull_request_review_id": 607635567,
      "id": 590544207,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDIwNw==",
      "diff_hunk": "@@ -12,6 +12,6 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) — returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) — used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).",
      "path": "src/interfaces/README.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 583724307,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583724307\r\n\r\n> Should the new `src/interfaces/ipc.h` be mentioned ?\r\n\r\nThanks, added to list",
      "created_at": "2021-03-09T16:52:09Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544335",
      "pull_request_review_id": 607635567,
      "id": 590544335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDMzNQ==",
      "diff_hunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <memory>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Chain;\n+class Echo;\n+class Ipc;\n+class Node;\n+class WalletClient;\n+\n+//! Initial interface created when a process is first started, and used to give\n+//! and get access to other interfaces (Node, Chain, Wallet, etc).\n+//!\n+//! There is a different Init interface implementation for each process\n+//! (bitcoin-gui, bitcoin-node, bitcoin-wallet, bitcoind, bitcoin-qt) and each\n+//! implementation can implement the make methods for interfaces it supports.\n+//! The default make methods all return null.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Node> makeNode();\n+    virtual std::unique_ptr<Chain> makeChain();\n+    virtual std::unique_ptr<WalletClient> makeWalletClient(Chain& chain);\n+    virtual std::unique_ptr<Echo> makeEcho();",
      "path": "src/interfaces/init.h",
      "position": 33,
      "original_position": 33,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": 590408045,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590408045\r\n\r\n> In fact those make methods could only be implemented on the subclasses. E.g `makeEcho` only on `BitcoinNodeInit` or `makeNode` only on `BitcoinGuiInit` ? What purpose does it serve to have default methods ?\r\n\r\nThis is mainly for #10102. Having default methods avoids the need to implement 20 make overrides in #10102 that would mostly return null (20 = 4 make methods * 5 init classes). In this PR there are only 2 init classes, but #10102 adds more. As examples it would be tedious to force `bitcoin-wallet` init class to implement `makeNode` and `makeChain` methods or force `bitcoin-gui` init class to implement `makeWalletClient` and other make methods.\r\n\r\nIn general it is good to avoid default methods, because they can mask problems and be confusing, but in this case I think the advantages outweigh the disadvantages.",
      "created_at": "2021-03-09T16:52:17Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544689",
      "pull_request_review_id": 607635567,
      "id": 590544689,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDY4OQ==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <functional>\n+#include <memory>\n+#include <typeindex>\n+\n+namespace interfaces {\n+class Init;\n+\n+//! Interface providing access to interprocess-communication (IPC)\n+//! functionality. The IPC implementation is responsible for establishing\n+//! connections between a controlling process and a process being controlled.\n+//! When a connection is established, the process being controlled returns an\n+//! interfaces::Init pointer to the controlling process, which the controlling\n+//! process can use to get access to other interfaces and functionality.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. The controlling process calls spawnProcess(), which calls\n+//!    ipc::Process::spawn(), which spawns a new process and returns a\n+//!    socketpair file descriptor for communicating with it. spawnProcess then",
      "path": "src/interfaces/ipc.h",
      "position": null,
      "original_position": 26,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": 590411040,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590411040\r\n\r\n> `interfaces::Ipc::spawnProcess()` ?\r\n\r\nThanks, that's more consistent. Made a similar tweak below too.",
      "created_at": "2021-03-09T16:52:45Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544882",
      "pull_request_review_id": 607635567,
      "id": 590544882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDg4Mg==",
      "diff_hunk": "@@ -0,0 +1,20 @@\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0xf2c5cfa319406aa6;",
      "path": "src/ipc/capnp/init.capnp",
      "position": 5,
      "original_position": 5,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "e1d4b13d4ecb2755ed2bc33e1ed0ce6df393b90d",
      "in_reply_to_id": 590428830,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590428830\r\n\r\n> Those values are identifiers for Cap'n Proto right ? Curious on how do you select them ?\r\n\r\nYou need to run the `capnp id` command line tool to generate an id, see https://capnproto.org/capnp-tool.html, https://capnproto.org/language.html. IIRC, the ids have some checking so you do need the tool and can't pick a completely random id.",
      "created_at": "2021-03-09T16:53:00Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544967",
      "pull_request_review_id": 607635567,
      "id": 590544967,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDU0NDk2Nw==",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <ipc/capnp/protocol.h>\n+#include <ipc/process.h>\n+#include <ipc/protocol.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/memory.h>\n+#include <util/system.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdexcept>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <string>\n+#include <unistd.h>\n+#include <utility>\n+#include <vector>\n+\n+namespace ipc {\n+namespace {\n+class IpcImpl : public interfaces::Ipc\n+{\n+public:\n+    IpcImpl(const char* exe_name, const char* arg0, interfaces::Init& init)\n+        : m_exe_name(exe_name), m_arg0(arg0), m_init(init),\n+          m_protocol(ipc::capnp::MakeCapnpProtocol()), m_process(ipc::MakeProcess())\n+    {\n+    }\n+    std::unique_ptr<interfaces::Init> spawnProcess(const char* new_exe_name) override\n+    {\n+        int pid;\n+        int fd = m_process->spawn(new_exe_name, m_arg0, pid);\n+        LogPrint(::BCLog::IPC, \"Process %s pid %i launched\\n\", new_exe_name, pid);\n+        auto init = m_protocol->connect(fd, m_exe_name);\n+        Ipc::addCleanup(*init, [this, new_exe_name, pid] {\n+            int status = m_process->waitSpawned(pid);\n+            LogPrint(::BCLog::IPC, \"Process %s pid %i exited with status %i\\n\", new_exe_name, pid, status);\n+        });\n+        return init;\n+    }\n+    bool startSpawnedProcess(int argc, char* argv[], int& exit_status) override\n+    {\n+        exit_status = EXIT_FAILURE;\n+        int32_t fd = -1;\n+        if (!m_process->checkSpawned(argc, argv, fd)) {\n+            return false;\n+        }\n+        m_protocol->serve(fd, m_exe_name, m_init);\n+        exit_status = EXIT_SUCCESS;\n+        return true;\n+    }\n+    void addCleanup(std::type_index type, void* iface, std::function<void()> cleanup) override\n+    {\n+        m_protocol->addCleanup(type, iface, std::move(cleanup));\n+    }\n+    const char* m_exe_name;\n+    const char* m_arg0;",
      "path": "src/ipc/interfaces.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 583718720,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r583718720\r\n\r\n> AFAICT, this is used to indicate parent process path to `mp::SpawnProcess` and spawns the new child under the same one. What about calling this variable `m_process_path` or `m_path`, more meaningful than `m_arg0` ?\r\n\r\nThanks, renamed to `m_process_argv0`. This code is really just trying to pass `argv[0]` along without assuming it has any value, so did avoid referring to paths still.",
      "created_at": "2021-03-09T16:53:08Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r590544967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590544967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592831723",
      "pull_request_review_id": 610361823,
      "id": 592831723,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgzMTcyMw==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/echo.h>\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <node/context.h>\n+#include <util/memory.h>\n+\n+#include <memory>\n+\n+namespace init {\n+namespace {\n+const char* EXE_NAME = \"bitcoin-node\";\n+\n+class BitcoinNodeInit : public interfaces::Init\n+{\n+public:\n+    BitcoinNodeInit(NodeContext& node, const char* arg0)\n+        : m_node(node),\n+          m_ipc(interfaces::MakeIpc(EXE_NAME, arg0, *this))\n+    {\n+        m_node.init = this;\n+    }\n+    std::unique_ptr<interfaces::Echo> makeEcho() override { return interfaces::MakeEcho(); }\n+    interfaces::Ipc* ipc() override { return m_ipc.get(); }\n+    NodeContext& m_node;\n+    std::unique_ptr<interfaces::Ipc> m_ipc;\n+};\n+} // namespace\n+} // namespace init\n+\n+namespace interfaces {\n+std::unique_ptr<Init> MakeNodeInit(NodeContext& node, int argc, char* argv[], int& exit_status)\n+{\n+    auto init = MakeUnique<init::BitcoinNodeInit>(node, argc > 0 ? argv[0] : \"\");",
      "path": "src/init/bitcoin-node.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "36f1fbf50a0f2c96dfd1f7fe84d407f39a1906bd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please [use `std::make_unique` in new code](https://github.com/bitcoin/bitcoin/blob/master/src/util/memory.h#L13).",
      "created_at": "2021-03-12T00:44:19Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r592831723",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592831723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599108166",
      "pull_request_review_id": 618022298,
      "id": 599108166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEwODE2Ng==",
      "diff_hunk": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROCESS_H\n+#define BITCOIN_IPC_PROCESS_H\n+\n+#include <memory>\n+#include <string>\n+\n+namespace ipc {\n+class Protocol;\n+\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the",
      "path": "src/ipc/process.h",
      "position": null,
      "original_position": 17,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "437e20cacb72df2dcc33373def9715c4c915d082",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: ...will *be* different...",
      "created_at": "2021-03-22T22:09:11Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r599108166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599108166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602892199",
      "pull_request_review_id": 618022298,
      "id": 602892199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjg5MjE5OQ==",
      "diff_hunk": "@@ -33,3 +33,40 @@ BITCOIND=bitcoin-node test/functional/test_runner.py\n The configure script will pick up settings and library locations from the depends directory, so there is no need to pass `--enable-multiprocess` as a separate flag when using the depends system (it's controlled by the `MULTIPROCESS=1` option).\n \n Alternately, you can install [Cap'n Proto](https://capnproto.org/) and [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) packages on your system, and just run `./configure --enable-multiprocess` without using the depends system. The configure script will be able to locate the installed packages via [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/). See [Installation](https://github.com/chaincodelabs/libmultiprocess#installation) section of the libmultiprocess readme for install steps. See [build-unix.md](build-unix.md) and [build-osx.md](build-osx.md) for information about installing dependencies in general.\n+\n+## IPC implementation details\n+\n+Cross process Node, Wallet, and Chain interfaces are defined in\n+[`src/interfaces/`](../src/interfaces/). These are C++ classes which follow\n+[conventions](developer-notes.md#internal-interface-guidelines), like passing\n+serializable arguments so they can be called from different processes, and\n+making methods pure virtual so they can have proxy implementations that forward\n+calls between processes.\n+\n+When Wallet, Node, and Chain code is running in the same process, calling any\n+interface method invokes the implementation directly. When code is running in\n+different processes, calling an interface method invokes a proxy interface\n+implementation that communicates with a remote process and invokes the real\n+implementation in the remote process. The\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) code\n+generation tool internally generates proxy client classes and proxy server\n+classes for this purpose that are thin wrappers around Cap'n Proto\n+[client](https://capnproto.org/cxxrpc.html#clients) and\n+[server](https://capnproto.org/cxxrpc.html#servers) classes, which handle the\n+actual serialization and socket communication.\n+\n+As much as possible, calls between processes are meant to work the same as\n+calls within a single process without adding limitations or requiring extra\n+implementation effort. Processes communicate with each other by calling regular\n+[C++ interface methods](../src/interfaces/README.md). Method arguments and\n+return values are automatically serialized and sent between processes. Object\n+references and `std::function` arguments are automatically tracked and mapped\n+to allow invoked code to call back into invoking code at any time, and there is\n+a 1:1 threading model where any thread invoking a method in another process has\n+a corresponding thread in the invoked process responsible for executing all\n+method calls from the source thread, without blocking I/O or holding up another\n+calls, and using the same thread local variables, locks, and callbacks between",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 45,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "66937157bc983c8daaeaa0efbc2c3ea6e2300738",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: ...holding up another *call*, ...",
      "created_at": "2021-03-28T15:20:53Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r602892199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602892199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602908024",
      "pull_request_review_id": 618022298,
      "id": 602908024,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjkwODAyNA==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <node/context.h>\n+\n+#include <memory>\n+\n+namespace init {\n+namespace {\n+const char* EXE_NAME = \"bitcoin-node\";",
      "path": "src/init/bitcoin-node.cpp",
      "position": 14,
      "original_position": 13,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "360821c035db389d62fb32acf600e37e23f6168b",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This string is repeated in `rpc/misc.cpp` in the echo RPC. I guess these exe names should be global constants or organized in some other way in the future. But that can be kept for a follow-up (and probably already is included in one, I just haven't checked).",
      "created_at": "2021-03-28T17:39:39Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r602908024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602908024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603542568",
      "pull_request_review_id": 623556937,
      "id": 603542568,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzU0MjU2OA==",
      "diff_hunk": "@@ -0,0 +1,17 @@\n+# Copyright (c) 2021 The Bitcoin Core developers",
      "path": "src/ipc/capnp/echo.capnp",
      "position": 1,
      "original_position": 1,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 584369949,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> For an interface to be shared across processses, it needs two definitions:\r\n> \r\n> * An **API definition** declaring how the interface is called. Examples: [node.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/node.h), [wallet.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/wallet.h), [echo.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/echo.h), [init.h](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/interfaces/init.h)\r\n> * A **data definition** declaring how interface calls get sent across the wire. Examples: [node.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/node.capnp), [wallet.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/wallet.capnp), [echo.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/echo.capnp), [init.capnp](https://github.com/ryanofsky/bitcoin/blob/ipc-export/src/ipc/capnp/init.capnp)\r\n> \r\n> Since API and data definitions contain some of the same information, they have to be kept in sync manually when methods or parameters change. This is designed to be _straightforward_ and _safe_. _Straightforward_ because there is no need to write manual serialization code or use awkward intermediate types like [`UniValue`](https://github.com/bitcoin/bitcoin/blob/master/src/univalue/include/univalue.h) instead of native types. _Safe_ because if there are any inconsistencies between API and data definitions (even minor ones like using a narrow int data type for a wider int API input), there are errors at build time instead of errors or bugs at runtime.\r\n\r\nThis was helpful to me, a version of this info could go into `doc/multiprocess.md` IMO.",
      "created_at": "2021-03-29T19:05:58Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r603542568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603542568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604065901",
      "pull_request_review_id": 624215729,
      "id": 604065901,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA2NTkwMQ==",
      "diff_hunk": "@@ -33,3 +33,40 @@ BITCOIND=bitcoin-node test/functional/test_runner.py\n The configure script will pick up settings and library locations from the depends directory, so there is no need to pass `--enable-multiprocess` as a separate flag when using the depends system (it's controlled by the `MULTIPROCESS=1` option).\n \n Alternately, you can install [Cap'n Proto](https://capnproto.org/) and [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) packages on your system, and just run `./configure --enable-multiprocess` without using the depends system. The configure script will be able to locate the installed packages via [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/). See [Installation](https://github.com/chaincodelabs/libmultiprocess#installation) section of the libmultiprocess readme for install steps. See [build-unix.md](build-unix.md) and [build-osx.md](build-osx.md) for information about installing dependencies in general.\n+\n+## IPC implementation details\n+\n+Cross process Node, Wallet, and Chain interfaces are defined in\n+[`src/interfaces/`](../src/interfaces/). These are C++ classes which follow\n+[conventions](developer-notes.md#internal-interface-guidelines), like passing\n+serializable arguments so they can be called from different processes, and\n+making methods pure virtual so they can have proxy implementations that forward\n+calls between processes.\n+\n+When Wallet, Node, and Chain code is running in the same process, calling any\n+interface method invokes the implementation directly. When code is running in\n+different processes, calling an interface method invokes a proxy interface\n+implementation that communicates with a remote process and invokes the real\n+implementation in the remote process. The\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) code\n+generation tool internally generates proxy client classes and proxy server\n+classes for this purpose that are thin wrappers around Cap'n Proto\n+[client](https://capnproto.org/cxxrpc.html#clients) and\n+[server](https://capnproto.org/cxxrpc.html#servers) classes, which handle the\n+actual serialization and socket communication.\n+\n+As much as possible, calls between processes are meant to work the same as\n+calls within a single process without adding limitations or requiring extra\n+implementation effort. Processes communicate with each other by calling regular\n+[C++ interface methods](../src/interfaces/README.md). Method arguments and\n+return values are automatically serialized and sent between processes. Object\n+references and `std::function` arguments are automatically tracked and mapped\n+to allow invoked code to call back into invoking code at any time, and there is\n+a 1:1 threading model where any thread invoking a method in another process has\n+a corresponding thread in the invoked process responsible for executing all\n+method calls from the source thread, without blocking I/O or holding up another\n+calls, and using the same thread local variables, locks, and callbacks between",
      "path": "doc/multiprocess.md",
      "position": null,
      "original_position": 45,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "66937157bc983c8daaeaa0efbc2c3ea6e2300738",
      "in_reply_to_id": 602892199,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r602892199\r\n\r\n> nit: ...holding up another _call_, ...\r\n\r\nThanks, fixed!",
      "created_at": "2021-03-30T12:50:15Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r604065901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604065901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066107",
      "pull_request_review_id": 624215729,
      "id": 604066107,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA2NjEwNw==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+#include <interfaces/ipc.h>\n+#include <node/context.h>\n+\n+#include <memory>\n+\n+namespace init {\n+namespace {\n+const char* EXE_NAME = \"bitcoin-node\";",
      "path": "src/init/bitcoin-node.cpp",
      "position": 14,
      "original_position": 13,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "360821c035db389d62fb32acf600e37e23f6168b",
      "in_reply_to_id": 602908024,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r602908024\r\n\r\n> This string is repeated in `rpc/misc.cpp` in the echo RPC. I guess these exe names should be global constants or organized in some other way in the future. But that can be kept for a follow-up (and probably already is included in one, I just haven't checked).\r\n\r\nThat's a good idea. Init exe names and [`spawnProcess` exe names](https://github.com/ryanofsky/bitcoin/blob/1290ccf8c70f5f11148683c3f69044fac9956e05/src/rpc/misc.cpp#L671) might be more readable (even if there's an extra mental hoop to jump through) written as constants like NODE_EXE_NAME, WALLET_EXE_NAME, GUI_EXE_NAME. Will think about it more for #10102. Unclear if these should be configurable, maybe at build time or run time. Also, the exe names in these init files are just used for thread naming and logging and could potentially be eliminated, while the exe names used in spawnProcess calls are used to actually build command lines, so might be more important.",
      "created_at": "2021-03-30T12:50:34Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r604066107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066654",
      "pull_request_review_id": 624215729,
      "id": 604066654,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA2NjY1NA==",
      "diff_hunk": "@@ -0,0 +1,17 @@\n+# Copyright (c) 2021 The Bitcoin Core developers",
      "path": "src/ipc/capnp/echo.capnp",
      "position": 1,
      "original_position": 1,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "b2abe3f062c69663ae97bed239aa0a118e6a081c",
      "in_reply_to_id": 584369949,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r603542568\r\n\r\n> \r\n> This was helpful to me, a version of this info could go into `doc/multiprocess.md` IMO.\r\n\r\nThat's good to know. I'll link to the PR when it's posted, but I'm working on libmultiprocess documentation and adding a version of this information there.\r\n\r\nEDIT: Added this documentation in https://github.com/bitcoin/bitcoin/pull/19160#discussion_r604066654",
      "created_at": "2021-03-30T12:51:16Z",
      "updated_at": "2021-07-20T23:24:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r604066654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066756",
      "pull_request_review_id": 624215729,
      "id": 604066756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA2Njc1Ng==",
      "diff_hunk": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_PROCESS_H\n+#define BITCOIN_IPC_PROCESS_H\n+\n+#include <memory>\n+#include <string>\n+\n+namespace ipc {\n+class Protocol;\n+\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the",
      "path": "src/ipc/process.h",
      "position": null,
      "original_position": 17,
      "commit_id": "84934bf70e11fe4cda1cfda60113a54895d4fdd5",
      "original_commit_id": "437e20cacb72df2dcc33373def9715c4c915d082",
      "in_reply_to_id": 599108166,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r599108166\r\n\r\n> nit: ...will _be_ different...\r\n\r\nThanks, fixed!",
      "created_at": "2021-03-30T12:51:25Z",
      "updated_at": "2021-04-23T18:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r604066756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604066756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    }
  ]
}