{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514",
    "id": 342621580,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQyNjIxNTgw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17514",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17514.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17514.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1d5b8b66b0b787ad5810dd73a515582da3f1db02",
    "number": 17514,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "util: Make logging noexcept",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make the logging subsystem noexcept. This facilitates changes such as #17507 by making\r\nit possible to log in noexcept context.\r\n\r\nFirst, adds a function `tfm::format_noexcept` that works like `tfm::format` for use in noexcept context if the format string and number of arguments are guaranteed to be correct (for example, if it is trivial like \"%02x\"). It will abort on any tinyformat error. This is used in utility functions, not for the logging strings itself, as formatting exceptions there are internally caught and logged in LogPrintf (for better troubleshooting of the complex arbitrary formatting expressions used there).\r\n\r\nThen, go through the call hierarchy and make functions noexcept after checking them (see individual commits):\r\n```\r\nLogInstance\r\nLogAcceptCategory\r\n  Logger::WillLogCategory\r\nLogPrintf\r\n  Logger::Enabled\r\n  LogPrintStr\r\n    LogEscapeMessage\r\n    util::ThreadGetInternalName()\r\n    LogTimestampStr\r\n      GetTimeMicros\r\n      FormatISO8601DateTime\r\n      GetMockTime\r\n    fsbridge::fopen\r\n    FileWriteStr\r\n```\r\n\r\nThough I've checked these functions carefully, it is possible that I missed a function down the call tree. Please let me know if so.\r\n\r\n~~The only functions I'm slightly uncertain about are the boost posix_time functions in\r\nGetTimeMicros/GetTimeMillis, but I could not find any documented exceptions in\r\nhttps://www.boost.org/doc/libs/1_71_0/doc/html/date_time/posix_time.html~~ (fixed, thanks to practicalswift)\r\n\r\n(I know the m_print_callbacks can potentially throw, there is as far as I saw no way\r\nto guarantee std::function as noexcept. I leave this as an responsibility to who registers it.\r\nFWIW, this functionality is only used as part of the test framework.)\r\n\r\n(Also, thinking of it, any kind of allocation in C++ can except with `bad_alloc&`, including inside string manipulation, which is almost 100% of the code here. If that's an issue, I'm no longer convinced this is possible at all)",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-11-19T11:09:39Z",
    "updated_at": "2022-02-15T10:26:37Z",
    "closed_at": "2020-01-29T13:19:05Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "5b9b893813ac0d79249b2163c185ea43f2696ab2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "laanwj:2019_11_logging_noexcept",
      "ref": "2019_11_logging_noexcept",
      "sha": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1750308,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzUwMzA4",
        "name": "bitcoin",
        "full_name": "laanwj/bitcoin",
        "owner": {
          "login": "laanwj",
          "id": 126646,
          "node_id": "MDQ6VXNlcjEyNjY0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/laanwj",
          "html_url": "https://github.com/laanwj",
          "followers_url": "https://api.github.com/users/laanwj/followers",
          "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
          "organizations_url": "https://api.github.com/users/laanwj/orgs",
          "repos_url": "https://api.github.com/users/laanwj/repos",
          "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/laanwj/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/laanwj/bitcoin",
        "description": "Laanwj's Bitcoin Core fork - see README.md on \"readme\" branch",
        "fork": true,
        "url": "https://api.github.com/repos/laanwj/bitcoin",
        "archive_url": "https://api.github.com/repos/laanwj/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/laanwj/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/laanwj/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/laanwj/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/laanwj/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/laanwj/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/laanwj/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/laanwj/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/laanwj/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/laanwj/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/laanwj/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/laanwj/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/laanwj/bitcoin/events",
        "forks_url": "https://api.github.com/repos/laanwj/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/laanwj/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/laanwj/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/laanwj/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/laanwj/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/laanwj/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/laanwj/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/laanwj/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/laanwj/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/laanwj/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/laanwj/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/laanwj/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/laanwj/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/laanwj/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/laanwj/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/laanwj/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:laanwj/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/laanwj/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/laanwj/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/laanwj/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/laanwj/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/laanwj/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/laanwj/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/laanwj/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/laanwj/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/laanwj/bitcoin/hooks",
        "svn_url": "https://github.com/laanwj/bitcoin",
        "homepage": "",
        "forks_count": 19,
        "stargazers_count": 42,
        "watchers_count": 42,
        "size": 200945,
        "default_branch": "readme",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-07T09:13:04Z",
        "created_at": "2011-05-15T07:09:54Z",
        "updated_at": "2023-04-02T19:40:33Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cf43f3f0a8ffb9006c799004a441776c299174f4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 55,
    "deletions": 35,
    "changed_files": 9,
    "commits": 13,
    "review_comments": 13,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 2810992648,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4MTA5OTI2NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2810992648",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T11:09:39Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2811003688,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgxMTAwMzY4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2811003688",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T11:13:27Z"
    },
    {
      "event": "reviewed",
      "id": 318965362,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE4OTY1MzYy",
      "url": null,
      "actor": null,
      "commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#pullrequestreview-318965362",
      "submitted_at": "2019-11-19T11:29:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
    },
    {
      "event": "commented",
      "id": 555471685,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ3MTY4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555471685",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T11:45:09Z",
      "updated_at": "2019-12-20T22:28:33Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16673](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16673.html) (Relog configuration args on debug.log rotation by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-555471685",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "commented",
      "id": 555475214,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ3NTIxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555475214",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T11:55:39Z",
      "updated_at": "2019-11-19T11:56:34Z",
      "author_association": "MEMBER",
      "body": "FYI, these are the potential tinyformat exceptions:\r\n```\r\nTINYFORMAT_ERROR(\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\");\r\nTINYFORMAT_ERROR(\"tinyformat: Not enough conversion specifiers in format string\");\r\nTINYFORMAT_ERROR(\"tinyformat: Not enough arguments to read variable width\");\r\nTINYFORMAT_ERROR(\"tinyformat: Not enough arguments to read variable precision\");\r\nTINYFORMAT_ERROR(\"tinyformat: the %a and %A conversion specs are not supported\");\r\nTINYFORMAT_ERROR(\"tinyformat: %n conversion spec not supported\");\r\nTINYFORMAT_ERROR(\"tinyformat: Conversion spec incorrectly terminated by end of string\");\r\nTINYFORMAT_ERROR(\"tinyformat: Not enough format arguments\");\r\nTINYFORMAT_ERROR(\"tinyformat: Too many conversion specifiers in format string\");\r\n```\r\nThese all boil down to:\r\n- Wrong number of arguments in format string\r\n- Wrong type of arguments provided (compared to argument spec)\r\n- Malformed or unsupported format specifiers\r\n\r\nAs I understand it, assuming a static format string—anything else is very unwise, and not the case here—these can only be caused by bugs in development, not by invalid values at run-time.\r\n\r\nSo if a function with `tfm::format_noexcept` is at least tested once in the unit tests, it can be relied on to never abort.\r\n\r\nI have intentionally not used `tfm::format_noexcept` for the log message itself, because that usage of tinyformat is much more error-prone.\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-555475214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "commented",
      "id": 555477666,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ3NzY2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555477666",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T12:03:06Z",
      "updated_at": "2019-11-19T12:27:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on making logging `noexcept`\r\n\r\nSome comments:\r\n\r\n> The only functions I'm slightly uncertain about are the boost posix_time functions in\r\n> GetTimeMicros/GetTimeMillis, but I could not find any documented exceptions in\r\n> https://www.boost.org/doc/libs/1_71_0/doc/html/date_time/posix_time.html\r\n\r\n`GetTimeMillis()` does `boost::posix_time::ptime(boost::gregorian::date(1970,1,1)))` which can throw (from the compiler's perspective that is - we know it can't throw with these inputs :)):\r\n* `boost::gregorian::bad_year (\"Year is out of valid range: 1400..10000\")`\r\n* `boost::gregorian::bad_month (\"Month number is out of range 1..12\")`\r\n* `boost::gregorian::bad_day_of_month (\"Day of month value is out of range 1..31\")`\r\n* `boost::gregorian::bad_day_of_month (\"Day of month is not valid for year\")`\r\n\r\nI suggest cherry-picking in https://github.com/bitcoin/bitcoin/pull/13382/commits/afc97c731e407f87fae0385aa5c3a729981ca1aa from the PR #13382 (\"util: Don't throw in GetTime{Millis,Micros}(). Mark as noexcept.\"):\r\n\r\n```diff\r\ndiff --git a/src/util/time.cpp b/src/util/time.cpp\r\nindex 83a7937d8f61..217bc1e9cdba 100644\r\n--- a/src/util/time.cpp\r\n+++ b/src/util/time.cpp\r\n@@ -37,18 +37,20 @@ int64_t GetMockTime()\r\n     return nMockTime.load(std::memory_order_relaxed);\r\n }\r\n \r\n-int64_t GetTimeMillis()\r\n+int64_t GetTimeMillis() noexcept\r\n {\r\n+    static const boost::posix_time::ptime epoch = boost::posix_time::from_time_t(0);\r\n     int64_t now = (boost::posix_time::microsec_clock::universal_time() -\r\n-                   boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_milliseconds();\r\n+                   epoch).total_milliseconds();\r\n     assert(now > 0);\r\n     return now;\r\n }\r\n \r\n-int64_t GetTimeMicros()\r\n+int64_t GetTimeMicros() noexcept\r\n {\r\n+    static const boost::posix_time::ptime epoch = boost::posix_time::from_time_t(0);\r\n     int64_t now = (boost::posix_time::microsec_clock::universal_time() -\r\n-                   boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\r\n+                   epoch).total_microseconds();\r\n     assert(now > 0);\r\n     return now;\r\n }\r\ndiff --git a/src/util/time.h b/src/util/time.h\r\nindex f2e27474342b..ae618165063a 100644\r\n--- a/src/util/time.h\r\n+++ b/src/util/time.h\r\n@@ -20,8 +20,8 @@\r\n  */\r\n \r\n int64_t GetTime();\r\n-int64_t GetTimeMillis();\r\n-int64_t GetTimeMicros();\r\n+int64_t GetTimeMillis() noexcept;\r\n+int64_t GetTimeMicros() noexcept;\r\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\r\n void SetMockTime(int64_t nMockTimeIn);\r\n int64_t GetMockTime();\r\n```\r\n\r\n> (Also, thinking of it, any kind of allocation in C++ can except with bad_alloc&, including inside string manipulation, which is almost 100% of the code here. If that's an issue, I'm no longer convinced this is possible at all)\r\n\r\nI don't think we have to worry about `bad_alloc`. From the C++ Core Guidelines (with editors Bjarne Stroustrup & Herb Sutter):\r\n\r\n> _\"Code that is intended to be perfectly general (like the standard library and other utility code of that sort) needs to support environments where a bad_alloc exception may be handled meaningfully. However, most programs and execution environments cannot meaningfully handle a failure to allocate, and aborting the program is the cleanest and simplest response to an allocation failure in those cases. If you know that your application code cannot respond to an allocation failure, it may be appropriate to add noexcept even on functions that allocate.\"_",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-555477666",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "commented",
      "id": 555484009,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ4NDAwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555484009",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T12:22:30Z",
      "updated_at": "2019-11-19T12:31:02Z",
      "author_association": "MEMBER",
      "body": "> GetTimeMillis() does boost::posix_time::ptime(boost::gregorian::date(1970,1,1))) which can throw:\r\n\r\nOh crap. Thanks for noticing. Though, I guess that will never happen with this static input. But I think your commit improves the code anyway.\r\n\r\nThanks, will cherry-pick that!\r\n\r\nEdit: replaced my commit\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-555484009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2811223521,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgxMTIyMzUyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2811223521",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T12:27:51Z"
    },
    {
      "event": "commented",
      "id": 555506306,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTUwNjMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555506306",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T13:25:58Z",
      "updated_at": "2019-11-19T13:25:58Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-555506306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2811457473,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgxMTQ1NzQ3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2811457473",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T13:42:42Z"
    },
    {
      "event": "mentioned",
      "id": 2814502630,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgxNDUwMjYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2814502630",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-20T09:25:26Z"
    },
    {
      "event": "subscribed",
      "id": 2814502633,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MTQ1MDI2MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2814502633",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-20T09:25:26Z"
    },
    {
      "event": "commented",
      "id": 559123543,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEyMzU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559123543",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-27T15:01:39Z",
      "updated_at": "2019-11-27T15:01:39Z",
      "author_association": "MEMBER",
      "body": "> It will abort on any tinyformat error.\r\n\r\nIs this still the case? I'm testing 71493f0a55f6fa0a23e00d9d239aa6d8210d89ab with this diff:\r\n\r\n```diff\r\n     RandAddStaticEnv(hasher);\r\n-    LogPrintf(\"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\r\n+    LogPrintf(\"Feeding %a bytes of environment data into RNG\\n\", hasher.Size() - old_size);\r\n```\r\n\r\nwhich triggers this `TINYFORMAT_ERROR`:\r\nhttps://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/src/tinyformat.h#L750-L751\r\n \r\n`bitcoind` just prints the error and continues:\r\n\r\n```bash\r\n2019-11-27T14:49:55Z Error \"tinyformat: the %a and %A conversion specs are not supported\" while formatting log message: Feeding %i %a bytes ....\r\n```\r\n\r\nThe same thing also happens with 3c8505ca49a429dcc6c79fc3fd5d1e752b2f22e8.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-559123543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "commented",
      "id": 559398813,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTM5ODgxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559398813",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-28T08:50:59Z",
      "updated_at": "2019-11-28T09:01:49Z",
      "author_association": "MEMBER",
      "body": "> Is this still the case? I'm testing 71493f0 with this diff:\r\n\r\nNo, not *in general*.  `strprintf`still raises `tinyformat_error`. `LogPrintf`'s behavior for invalid format strings is unchanged (the exception is caught and reported, but does not leak out)\r\n\r\nNote that the paragraph related to the use of `tfm::format_noexcept` specifically. I even mention in the second post\r\n\r\n> I have intentionally not used tfm::format_noexcept for the log message itself, because that usage of tinyformat is much more error-prone.\r\n\r\nWhat this does is make `LogPrintf` and various utility functions noexcept (no exceptions are guaranteed to leak out). Nothing more. No observable behavior is supposed to change.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-559398813",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "reviewed",
      "id": 327135491,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI3MTM1NDkx",
      "url": null,
      "actor": null,
      "commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#pullrequestreview-327135491",
      "submitted_at": "2019-12-04T20:35:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
    },
    {
      "event": "commented",
      "id": 562036908,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjAzNjkwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562036908",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:05:21Z",
      "updated_at": "2019-12-05T09:05:21Z",
      "author_association": "MEMBER",
      "body": "I'm not entirely sure this is worth doing anymore. noexcept works slightly different from what I thought when I wrote this PR.\r\nit seems it's perfectly fine to use non-noexcept functions from except context if you expect they don't ever except anyway. I'm not sure what this adds at all.\r\nso this is not a requirement for #17507 at all",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-562036908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "commented",
      "id": 562049097,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjA0OTA5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562049097",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:37:39Z",
      "updated_at": "2019-12-05T09:43:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj \r\n\r\nI think it is worth doing.\r\n\r\nWhat this adds is a guarantee that logging won't throw any exceptions. That enables the compiler to apply optimisations that otherwise would not be possible (by reducing the number of alternative execution paths), and it also simplifies control flow analysis from the perspective of static analysers and human reviewers.\r\n\r\nThis is why Scott Mayer of \"Effective C++\" fame recommends using `noexcept` in cases like the one we are discussing:\r\n\r\n> The difference between unwinding the call stack and possibly unwinding it has a surprisingly large impact on code generation. In a `noexcept` function, optimizers need not keep the runtime stack in an unwindable state if an exception would propagate out of the function, nor must they ensure that objects in a noexcept function are destroyed in the inverse order of construction should an exception leave the function.\r\n>\r\n> The result is more opportunities for optimization, not only within the body of a `noexcept` function, but also at sites where the function is called. Such flexibility is present only for `noexcept` functions. Functions with `throw()` exception specifications lack it, as do functions with no exception specification at all. The situation can be summarized this way:\r\n>\r\n> ```\r\n> RetType function(params) noexcept; // most optimizable\r\n> RetType function(params) throw(); // less optimizable\r\n> RetType function(params); // less optimizable\r\n> ```\r\n> This alone should provide sufficient motivation to declare functions `noexcept` whenever you can.\r\n>\r\n> […]\r\n>\r\n> Things to Remember\r\n> * `noexcept` is part of a function’s interface, so callers may depend on it.\r\n> * `noexcept` functions are more optimizable than non-noexcept functions.\r\n> * `noexcept` is particularly valuable for the move operations and for swap.\r\n> * Most functions are exception-neutral rather than `noexcept`\r\n\r\nSince logging is used pretty much everywhere in our code base I think it would be good to add a `noexcept` guarantee to remove the \"potentially throwing\" effect that using  logging currently has on all call sites (and by extension all call sites directly or indirectly calling said call sites: it bubbles up :)).\r\n\r\nI've noticed that @sipa is a actively introducing `noexcept` where appropriate: perhaps he might want to chime in :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-562049097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "mentioned",
      "id": 2857121089,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg1NzEyMTA4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2857121089",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:37:39Z"
    },
    {
      "event": "subscribed",
      "id": 2857121091,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NTcxMjEwOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2857121091",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:37:40Z"
    },
    {
      "event": "mentioned",
      "id": 2857121102,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg1NzEyMTEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2857121102",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:37:40Z"
    },
    {
      "event": "subscribed",
      "id": 2857121103,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NTcxMjExMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2857121103",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-05T09:37:40Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTFjODljZDBiY2U3MDFjYjkwZGMwOTQ1NDliMmRlNmQ0NjAyNTNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/791c89cd0bce701cb90dc094549b2de6d460253b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/791c89cd0bce701cb90dc094549b2de6d460253b",
      "tree": {
        "sha": "215cba805657b7cb80025b71277d0bc6a7890e4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/215cba805657b7cb80025b71277d0bc6a7890e4c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf43f3f0a8ffb9006c799004a441776c299174f4",
          "sha": "cf43f3f0a8ffb9006c799004a441776c299174f4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cf43f3f0a8ffb9006c799004a441776c299174f4"
        }
      ],
      "message": "util: add tfm::format_noexcept\n\nAdd tfm formatting for noexcept context when the format string is\nchecked to be 100% correct for sure.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:04:57Z"
      },
      "sha": "791c89cd0bce701cb90dc094549b2de6d460253b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDUxZWZiZmQ2MGJmMmFiNTNhMTg3YmQwYmNmZmVmMmYzM2FjYjcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d51efbfd60bf2ab53a187bd0bcffef2f33acb70",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d51efbfd60bf2ab53a187bd0bcffef2f33acb70",
      "tree": {
        "sha": "c1e5701291d854019e0215abca204e9686808b03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1e5701291d854019e0215abca204e9686808b03"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/791c89cd0bce701cb90dc094549b2de6d460253b",
          "sha": "791c89cd0bce701cb90dc094549b2de6d460253b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/791c89cd0bce701cb90dc094549b2de6d460253b"
        }
      ],
      "message": "util: Make LogInstance noexcept\n\nThis potentially constructs a Logger object (with default constructor,\nwhich doesn't except), otherwise returns the current one from a static.\n\n(the allocation of the Logger object could potentially raise an\nexception if there is not enough memory, but I think it's reasonable to\nterminate the program in that case)",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:45:47Z"
      },
      "sha": "3d51efbfd60bf2ab53a187bd0bcffef2f33acb70"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTUyNDdkZTkzM2RjMTg4YWQzZjBjZjM5ZWFjMzNiMWRjOTZlNGE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/015247de933dc188ad3f0cf39eac33b1dc96e4a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/015247de933dc188ad3f0cf39eac33b1dc96e4a7",
      "tree": {
        "sha": "573136efcd84c4a78a53bcef01ac7455a46300ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/573136efcd84c4a78a53bcef01ac7455a46300ed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d51efbfd60bf2ab53a187bd0bcffef2f33acb70",
          "sha": "3d51efbfd60bf2ab53a187bd0bcffef2f33acb70",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d51efbfd60bf2ab53a187bd0bcffef2f33acb70"
        }
      ],
      "message": "util: Make FileWriteStr noexcept\n\nlibc function `fwrite` doesn't raise.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:22:03Z"
      },
      "sha": "015247de933dc188ad3f0cf39eac33b1dc96e4a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTk1ZGFjOGQzYWI1OTMzMjVhMjlhMTc2ZWQ0YTVjMTVmYmYxMjZk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a95dac8d3ab593325a29a176ed4a5c15fbf126d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2a95dac8d3ab593325a29a176ed4a5c15fbf126d",
      "tree": {
        "sha": "e38b6917e94c77e9f3266c18cf6fc759395c46f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e38b6917e94c77e9f3266c18cf6fc759395c46f0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/015247de933dc188ad3f0cf39eac33b1dc96e4a7",
          "sha": "015247de933dc188ad3f0cf39eac33b1dc96e4a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/015247de933dc188ad3f0cf39eac33b1dc96e4a7"
        }
      ],
      "message": "util: Make Logger::Enabled noexcept\n\nTakes a lock (doesn't raise) and checks some local fields (doesn't\nraise).",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:22:56Z"
      },
      "sha": "2a95dac8d3ab593325a29a176ed4a5c15fbf126d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTcyMmI3ZWEzMGY0M2U4NzYyMzQzNjBlMzE0MTQwZDIwNmE4MWQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95722b7ea30f43e876234360e314140d206a81d4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95722b7ea30f43e876234360e314140d206a81d4",
      "tree": {
        "sha": "b67ff57ce70df05a1860a9f847b78cd4f72543a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b67ff57ce70df05a1860a9f847b78cd4f72543a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a95dac8d3ab593325a29a176ed4a5c15fbf126d",
          "sha": "2a95dac8d3ab593325a29a176ed4a5c15fbf126d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a95dac8d3ab593325a29a176ed4a5c15fbf126d"
        }
      ],
      "message": "util: Make Logger::WillLogCategory and LogAcceptCategory noexcept\n\nThis only takes a lock and checks a field.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:25:31Z"
      },
      "sha": "95722b7ea30f43e876234360e314140d206a81d4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTRhODhiNTNmYTE5OTQxYTFjZWM0ODk5Nzg3MzBkMTlkNDBiY2Zm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/314a88b53fa19941a1cec489978730d19d40bcff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/314a88b53fa19941a1cec489978730d19d40bcff",
      "tree": {
        "sha": "25880d8674a9203a58972036274d62fa5c3615ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25880d8674a9203a58972036274d62fa5c3615ea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95722b7ea30f43e876234360e314140d206a81d4",
          "sha": "95722b7ea30f43e876234360e314140d206a81d4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95722b7ea30f43e876234360e314140d206a81d4"
        }
      ],
      "message": "util: Make LogEscapeMessage noexcept",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:06:39Z"
      },
      "sha": "314a88b53fa19941a1cec489978730d19d40bcff"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTdjYzg3MzVjNTk5ODZiNThhZWM1ZWFjZjJmMDg1MWQ5NThlZDll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f57cc8735c59986b58aec5eacf2f0851d958ed9e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f57cc8735c59986b58aec5eacf2f0851d958ed9e",
      "tree": {
        "sha": "8664ecc88d1c144327be0c8e74fad9e02ea193b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8664ecc88d1c144327be0c8e74fad9e02ea193b1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/314a88b53fa19941a1cec489978730d19d40bcff",
          "sha": "314a88b53fa19941a1cec489978730d19d40bcff",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/314a88b53fa19941a1cec489978730d19d40bcff"
        }
      ],
      "message": "util: Make ThreadGetInternalName noexcept\n\nThis function simply returns a global string, or a fixed empty string.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:08:53Z"
      },
      "sha": "f57cc8735c59986b58aec5eacf2f0851d958ed9e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmNiNWIwOWQ3OTZjM2YwOTBiOWVmOGRmNWJkYjEzMDZkMTIwZjA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2cb5b09d796c3f090b9ef8df5bdb1306d120f09",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c2cb5b09d796c3f090b9ef8df5bdb1306d120f09",
      "tree": {
        "sha": "1f330e90b049bd7f4d294a5c528ea6e473555a73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f330e90b049bd7f4d294a5c528ea6e473555a73"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f57cc8735c59986b58aec5eacf2f0851d958ed9e",
          "sha": "f57cc8735c59986b58aec5eacf2f0851d958ed9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f57cc8735c59986b58aec5eacf2f0851d958ed9e"
        }
      ],
      "message": "util: Make FormatISO8601DateTime and FormatISO8601Date noexcept\n\nRequires using tfm::format_noexcept.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:13:54Z"
      },
      "sha": "c2cb5b09d796c3f090b9ef8df5bdb1306d120f09"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzkyMGI5NWY4N2JlNzRkN2ZjNGFkMDFjNzg0N2E5NWYxMDJhM2Zk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c920b95f87be74d7fc4ad01c7847a95f102a3fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c920b95f87be74d7fc4ad01c7847a95f102a3fd",
      "tree": {
        "sha": "ecb5fb73ec5acd76ea1df167564db17cdc70a91a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecb5fb73ec5acd76ea1df167564db17cdc70a91a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2cb5b09d796c3f090b9ef8df5bdb1306d120f09",
          "sha": "c2cb5b09d796c3f090b9ef8df5bdb1306d120f09",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c2cb5b09d796c3f090b9ef8df5bdb1306d120f09"
        }
      ],
      "message": "util: Make GetMockTime noexcept\n\nNothing special to do here, loading from an atomic will not\nraise an exception.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:15:14Z"
      },
      "sha": "8c920b95f87be74d7fc4ad01c7847a95f102a3fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjU0MjgzZWM5MDRhZjVlMDNjYTkwMGZkZmMwZDZkN2M2YzgzMDY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f54283ec904af5e03ca900fdfc0d6d7c6c83066",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f54283ec904af5e03ca900fdfc0d6d7c6c83066",
      "tree": {
        "sha": "e491760c1d303f0d8825d6757d5466de2da1d0e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e491760c1d303f0d8825d6757d5466de2da1d0e2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c920b95f87be74d7fc4ad01c7847a95f102a3fd",
          "sha": "8c920b95f87be74d7fc4ad01c7847a95f102a3fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c920b95f87be74d7fc4ad01c7847a95f102a3fd"
        }
      ],
      "message": "util: Don't throw in GetTime{Millis,Micros}(). Mark as noexcept",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-06-03T17:19:16Z"
      },
      "sha": "1f54283ec904af5e03ca900fdfc0d6d7c6c83066"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmQwYTcyYjIxZTg2NjdhNDIxM2UwZDVmNjBiN2ZjMjNiMDViMDQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fd0a72b21e8667a4213e0d5f60b7fc23b05b040",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6fd0a72b21e8667a4213e0d5f60b7fc23b05b040",
      "tree": {
        "sha": "c56a55e234591c416c4fc849da37be0929bc6f0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c56a55e234591c416c4fc849da37be0929bc6f0a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f54283ec904af5e03ca900fdfc0d6d7c6c83066",
          "sha": "1f54283ec904af5e03ca900fdfc0d6d7c6c83066",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f54283ec904af5e03ca900fdfc0d6d7c6c83066"
        }
      ],
      "message": "util: Make LogTimestampStr noexcept\n\nRequires changing use of `strprintf` to `tfm::format_noexcept`.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:11:29Z"
      },
      "sha": "6fd0a72b21e8667a4213e0d5f60b7fc23b05b040"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWMxZDUwODIwZWRhZTczYTZkNmZkN2QyNzk4YjBhNjY2YmQyY2Vl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ac1d50820edae73a6d6fd7d2798b0a666bd2cee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9ac1d50820edae73a6d6fd7d2798b0a666bd2cee",
      "tree": {
        "sha": "2cda522091119ea14b5bf0c94ddf6fe1a9de6018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cda522091119ea14b5bf0c94ddf6fe1a9de6018"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fd0a72b21e8667a4213e0d5f60b7fc23b05b040",
          "sha": "6fd0a72b21e8667a4213e0d5f60b7fc23b05b040",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6fd0a72b21e8667a4213e0d5f60b7fc23b05b040"
        }
      ],
      "message": "util: Make fsbridge::fopen noexcept\n\n- libc function fopen does not raise an exception\n- windows function _wfopen does not raise an exception\n- std::wstring_convert has no documented exceptions",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:37:17Z"
      },
      "sha": "9ac1d50820edae73a6d6fd7d2798b0a666bd2cee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDViOGI2NmIwYjc4N2FkNTgxMGRkNzNhNTE1NTgyZGEzZjFkYjAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "tree": {
        "sha": "36a5958f0c7940fe9e0ce4332dc8e13fbce70761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36a5958f0c7940fe9e0ce4332dc8e13fbce70761"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ac1d50820edae73a6d6fd7d2798b0a666bd2cee",
          "sha": "9ac1d50820edae73a6d6fd7d2798b0a666bd2cee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9ac1d50820edae73a6d6fd7d2798b0a666bd2cee"
        }
      ],
      "message": "util: Make LogPrintStr and LogPrintf noexcept\n\nNow that all subsidiary functions are noexcept, this can be done.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T07:44:33Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T10:26:16Z"
      },
      "sha": "1d5b8b66b0b787ad5810dd73a515582da3f1db02"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2860474507,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjg2MDQ3NDUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2860474507",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-06T07:59:37Z"
    },
    {
      "event": "commented",
      "id": 562472975,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ3Mjk3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562472975",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-06T08:00:32Z",
      "updated_at": "2019-12-06T08:00:32Z",
      "author_association": "MEMBER",
      "body": "Squashed the fixup commit and rebased.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#issuecomment-562472975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17514"
    },
    {
      "event": "closed",
      "id": 2989462437,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mjk4OTQ2MjQzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2989462437",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T13:19:06Z"
    },
    {
      "event": "locked",
      "id": 6073757307,
      "node_id": "LOE_lADOABII584fSfDpzwAAAAFqBi57",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073757307",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:26:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347871169",
      "pull_request_review_id": 318965362,
      "id": 347871169,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Nzg3MTE2OQ==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of aborting what about returning `Unable to format: \"…\"` in case of a format string mistake?\r\n\r\nPerhaps with an `ASSUME(false);` to make it abort if `--enable-debug` (674f9d59ba4c1a1d4662e79467cc417a2988cf15 in #16136 gives us `ASSUME(…)`).",
      "created_at": "2019-11-19T11:28:42Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r347871169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347871169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347872898",
      "pull_request_review_id": 318967788,
      "id": 347872898,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Nzg3Mjg5OA==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is intended for use in utility functions (say, date-time formatting, string encodings, and whatnot), in neither of these cases it's acceptable to end up with \"Unable to format: \" in the string! That's much worse than to just terminate the process. It is assumed these functions have proper unit tests.\r\n\r\nNo opinion on how to terminate the process, though. I did not use `assert(0)` because I don't want to rely on assert() not being defined out, if in the future `NDEBUG` will be allowed.",
      "created_at": "2019-11-19T11:33:06Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r347872898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347872898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347895390",
      "pull_request_review_id": 318998353,
      "id": 347895390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Nzg5NTM5MA==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, sorry: I now re-read the diff and understand that the use of `format_noexcept` is extremely limited. Makes perfect sense. Sorry for the misunderstanding.",
      "created_at": "2019-11-19T12:30:20Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r347895390",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347895390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347899485",
      "pull_request_review_id": 319003818,
      "id": 347899485,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Nzg5OTQ4NQ==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you don't have to call `std::abort` in a throwing function that is marked `noexcept(true)`. An exception will `std::terminate` the program anyway, no?",
      "created_at": "2019-11-19T12:40:30Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r347899485",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347899485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348371112",
      "pull_request_review_id": 319695433,
      "id": 348371112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODM3MTExMg==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MarcoFalke correct. I was not sure to make this explicit or not. If you think it's ok to rely on C++'s behavior here, I'll remove the catch entirely (maybe replace it with a comment?).",
      "created_at": "2019-11-20T09:25:26Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r348371112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348371112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348504676",
      "pull_request_review_id": 319870173,
      "id": 348504676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODUwNDY3Ng==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I believe that the program will always abort, even if someone sets a terminate handler that does not abort: https://en.cppreference.com/w/cpp/error/terminate_handler\r\n\r\nSo it should be fine to remove this and add a comment instead.",
      "created_at": "2019-11-20T14:16:13Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r348504676",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348504676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348515334",
      "pull_request_review_id": 319884436,
      "id": 348515334,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODUxNTMzNA==",
      "diff_hunk": "@@ -1061,6 +1061,23 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ * Use this function in no-except context, but only when you are 100% sure that the\n+ * format string contains no mistakes.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept\n+{\n+    std::ostringstream oss;\n+    try {\n+        format(oss, fmt.c_str(), args...);\n+    } catch(...) {\n+        abort();",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 16,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "5f77484d05068ace21d1e1df62132b5338995959",
      "in_reply_to_id": 347871169,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2019-11-20T14:34:28Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r348515334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348515334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1076,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353968761",
      "pull_request_review_id": 327135491,
      "id": 353968761,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Mzk2ODc2MQ==",
      "diff_hunk": "@@ -1061,6 +1061,24 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ *\n+ * Use this function in no-except context, when you are 100% sure that the\n+ * format string contains no errors. Only errors in the format string and inconsistencies\n+ * between the format string and the type or number of arguments passed in cause tinyformat\n+ * exceptions. It does not depend on the value of the arguments.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept",
      "path": "src/tinyformat.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could make this shorter by removing the copy-pasted body?\r\n\r\n```suggestion\r\nstd::string format_noexcept(const std::string &fmt, const Args&... args) noexcept {return format(fmt, args...);}\r\n```",
      "created_at": "2019-12-04T20:35:33Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r353968761",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353968761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1073,
      "original_line": 1073,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354179674",
      "pull_request_review_id": 327393239,
      "id": 354179674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDE3OTY3NA==",
      "diff_hunk": "@@ -1061,6 +1061,24 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ *\n+ * Use this function in no-except context, when you are 100% sure that the\n+ * format string contains no errors. Only errors in the format string and inconsistencies\n+ * between the format string and the type or number of arguments passed in cause tinyformat\n+ * exceptions. It does not depend on the value of the arguments.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept",
      "path": "src/tinyformat.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "in_reply_to_id": 353968761,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it looks really weird like this, having ` _noexcept` that simply calls the normal function\r\n",
      "created_at": "2019-12-05T09:03:24Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r354179674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354179674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1073,
      "original_line": 1073,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354473109",
      "pull_request_review_id": 327756201,
      "id": 354473109,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ3MzEwOQ==",
      "diff_hunk": "@@ -1061,6 +1061,24 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ *\n+ * Use this function in no-except context, when you are 100% sure that the\n+ * format string contains no errors. Only errors in the format string and inconsistencies\n+ * between the format string and the type or number of arguments passed in cause tinyformat\n+ * exceptions. It does not depend on the value of the arguments.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept",
      "path": "src/tinyformat.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "in_reply_to_id": 353968761,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But it is exactly what happens here. Inlining `format` doesn't make it throw less exceptions. The only difference between them is the `noexcept` keyword, which makes the program terminate immediately should any exception be thrown.",
      "created_at": "2019-12-05T18:21:57Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r354473109",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354473109"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1073,
      "original_line": 1073,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354698147",
      "pull_request_review_id": 328036943,
      "id": 354698147,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDY5ODE0Nw==",
      "diff_hunk": "@@ -1061,6 +1061,24 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ *\n+ * Use this function in no-except context, when you are 100% sure that the\n+ * format string contains no errors. Only errors in the format string and inconsistencies\n+ * between the format string and the type or number of arguments passed in cause tinyformat\n+ * exceptions. It does not depend on the value of the arguments.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept",
      "path": "src/tinyformat.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "in_reply_to_id": 353968761,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes, that's true",
      "created_at": "2019-12-06T07:40:06Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r354698147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354698147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1073,
      "original_line": 1073,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354698877",
      "pull_request_review_id": 328037863,
      "id": 354698877,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDY5ODg3Nw==",
      "diff_hunk": "@@ -1061,6 +1061,24 @@ std::string format(const std::string &fmt, const Args&... args)\n     return oss.str();\n }\n \n+/** Variant of tfm::format that aborts when an formatting exception happens instead\n+ * of raising an exception.\n+ *\n+ * Use this function in no-except context, when you are 100% sure that the\n+ * format string contains no errors. Only errors in the format string and inconsistencies\n+ * between the format string and the type or number of arguments passed in cause tinyformat\n+ * exceptions. It does not depend on the value of the arguments.\n+ */\n+template<typename... Args>\n+std::string format_noexcept(const std::string &fmt, const Args&... args) noexcept",
      "path": "src/tinyformat.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "1d5b8b66b0b787ad5810dd73a515582da3f1db02",
      "original_commit_id": "71493f0a55f6fa0a23e00d9d239aa6d8210d89ab",
      "in_reply_to_id": 353968761,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OTOH this is only three lines, I'd like to keep the comment too, and this adds yet another layer of indirection with `std::string` return value, it's kind of marginal\r\nto be honest I think it's more readable like this",
      "created_at": "2019-12-06T07:42:51Z",
      "updated_at": "2019-12-06T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17514#discussion_r354698877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354698877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1073,
      "original_line": 1073,
      "side": "RIGHT"
    }
  ]
}