{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909",
    "id": 1034258699,
    "node_id": "PR_kwDOABII5849pYkL",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25909",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25909.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25909.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
    "number": 25909,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: coverage for receiving txes with same id but different witness data",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on #11240 context, adding test coverage for the behavior introduced in #11225 and to the current wallet limitations.\r\n\r\nThis is the first step towards adding the ability to store multiple transactions with same tx id but different witness data in the wallet. Verifying and testing the current behavior before introducing the new features.\r\n\r\nThe following cases are covered:\r\n\r\n1) Two p2wpkh spending transactions with the same hash are received:\r\nThe first one with segwit data stripped, and the second one with segwit data.\r\n   \r\n   Result ->  the wallet will update the stored tx, saving the witness data.\r\n\r\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\r\nThe first is added to the wallet via the mempool acceptance flow.\r\nwhile the second one, is added to the wallet via the block connection flow.\r\n\r\n   Result -> the wallet will NOT update the stored transaction. The first received transaction\r\nwill take precedence over any following-up transaction. Detached to the fact that the\r\noriginal transaction didn't get into a block and the second one did.\r\n\r\nExtra Note:\r\nDid it on an unit test merely because wanted to review other parts of the sources while was doing it. Could migrate it into a functional test if reviewers wants it as well.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2022-08-23T14:16:13Z",
    "updated_at": "2023-04-21T05:48:57Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "ed2fe016b28e6b7f6c700bdef326bb250741853b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "furszy:2022_wallet_test_witness_data_storage",
      "ref": "2022_wallet_test_witness_data_storage",
      "sha": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 380259,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T20:18:24Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-02-27T18:01:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cac29f5cd66f005ce65edd697990d495a904a1f1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 177,
    "deletions": 1,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 7,
    "comments": 5
  },
  "events": [
    {
      "event": "renamed",
      "id": 7242642221,
      "node_id": "RTE_lADOABII585QWVuGzwAAAAGvsfMt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7242642221",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T14:35:38Z",
      "rename": {
        "from": "wallet: test coverage for receiving txes with same id but different witness data",
        "to": "wallet: coverage for receiving txes with same id but different witness data"
      }
    },
    {
      "event": "commented",
      "id": 1224236117,
      "node_id": "IC_kwDOABII585I-FxV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1224236117",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T15:29:19Z",
      "updated_at": "2023-04-21T05:48:57Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [satsie](https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1233646763) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1082819802) |\n| Stale ACK | [aureleoules](https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1167130870) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25979](https://github.com/bitcoin/bitcoin/pull/25979) ([WIP] wallet: standardize change output detection process by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1224236117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "labeled",
      "id": 7243327378,
      "node_id": "LE_lADOABII585QWVuGzwAAAAGvvGeS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7243327378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T15:52:43Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "reviewed",
      "id": 1082819802,
      "node_id": "PRR_kwDOABII585AioTa",
      "url": null,
      "actor": null,
      "commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1082819802",
      "submitted_at": "2022-08-23T20:47:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7251249255,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwNUhn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7251249255",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T13:57:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7253400665,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwVhxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7253400665",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T18:37:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7255529840,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwdplw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7255529840",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T02:22:57Z"
    },
    {
      "event": "reviewed",
      "id": 1092685575,
      "node_id": "PRR_kwDOABII585BIQ8H",
      "url": null,
      "actor": null,
      "commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1092685575",
      "submitted_at": "2022-09-01T02:03:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "commented",
      "id": 1233646763,
      "node_id": "IC_kwDOABII585Jh_Sr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233646763",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T02:05:45Z",
      "updated_at": "2022-09-01T02:05:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've reviewed the diff (398e2476657a761d47942936c8832ec7229291e3), checked out the code and run the tests (using `./src/test/test_bitcoin --log_level=all --run_test=wallet_transaction_tests`). As an extremely new (aspiring) contributor with limited knowledge, this all looks fine to me. However I don't feel comfortable enough in my own abilities to give it a real ACK.\r\n\r\nI added extra assertions locally for my own learning. Didn't want to clutter the diff with individual code comments, so I will share them here. I don't know if they are even useful or just redundant. For me, the main thing is it is not immediately obvious that the existing assertions cover the expected presence/absence of witness data. \r\n\r\nThe assertions on the transaction IDs (like `txid` in the first test with the two p2wpkh transactions) make sense to anyone who understands that when there is no witness data, the witness hash is the same as the tx hash (per `transaction.cpp.ComputeWitnessHash()`). I'm not sure how obvious this is others reading the code, or if there are inefficiencies related to explicitly checking the witness data. It could be a non issue for those that spend more time here than me.\r\n\r\nApologies in advance if there are any C++ gotchas with pointers and references that I am not aware of :)\r\n\r\n```\r\n\t// From the first transaction in the first test case:\r\n        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\r\n        BOOST_CHECK(wtx_no_witness->tx->HasWitness() == 0); // additional assertion to verify that the transaction in the wallet has no witness data\r\n```\r\n\r\n```\r\n\t// From the second transaction in the first test case:\r\n        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\r\n        BOOST_CHECK(wtx_with_witness->tx->HasWitness() == 1); // additional assertion to verify that the transaction in the wallet now has witness data\r\n\r\n```\r\n\r\nAside from that I had a few questions to help me understand the PR better:\r\n\r\n1. `wallet_transaction_tests.CreateMultisigScriptAndImportDescriptor`: Is there any reason why this test code creates a 3-of-5 multisig instead of a 2-of-3?\r\n2. Was the removal of `src/test/util/wallet.h` and `src/test/util.wallet.cpp` part of routine cleanup? Because there is a `src/wallet/test` folder with way more in it and it doesn't make sense to have wallet unit tests in two places?",
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1233646763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "commented",
      "id": 1235565173,
      "node_id": "IC_kwDOABII585JpTp1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235565173",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-02T14:21:45Z",
      "updated_at": "2022-09-02T17:20:02Z",
      "author_association": "MEMBER",
      "body": "> The assertions on the transaction IDs (like txid in the first test with the two p2wpkh transactions) make sense to anyone who understands that when there is no witness data, the witness hash is the same as the tx hash (per transaction.cpp.ComputeWitnessHash()). I'm not sure how obvious this is others reading the code, or if there are inefficiencies related to explicitly checking the witness data. It could be a non issue for those that spend more time here than me.\r\n\r\nYep, non-issue. It comes from the segwit definitions (BIP141).\r\nThe transaction id is the hash of the transaction data serialized. The witness transaction id is the hash of the transaction data serialized + a marker, flag and witness data.\r\n\r\nif the witness data doesn't exist (or isn't there), then you are serializing only the regular transaction fields, thus why the tx id is equal to the witness id.\r\n\r\n> wallet_transaction_tests.CreateMultisigScriptAndImportDescriptor: Is there any reason why this test code creates a 3-of-5 multisig instead of a 2-of-3?\r\n\r\nNot really. For the test purposes, it could had been a 1-of-2 as well. I just liked more to present a scenario where the user looses data that is hard to re-do if keys are spread across different devices/places.\r\n\r\n> Was the removal of src/test/util/wallet.h and src/test/util.wallet.cpp part of routine cleanup? Because there is a src/wallet/test folder with way more in it and it doesn't make sense to have wallet unit tests in two places?\r\n\r\nBoth files were just containing utility functions to interact with the wallet. None of them are unit tests.\r\nThey were sharing the same purpose and the wallet code should be placed inside the wallet directory.\r\n\r\nPlus, as `wallet/test/util.h` and `wallet/test/util.cpp` were not part of the util library, we weren't able to use the functions on the bench and unit test modules (them are on different units). Which would had forced me to duplicate the `DuplicateMockDatabase` function that was inside of one of benchmarks to be able to use it in the new unit test case.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1235565173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "labeled",
      "id": 7619628933,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHGKk-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7619628933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T09:30:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7682761913,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHJ7aS5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7682761913",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:12:07Z"
    },
    {
      "event": "commented",
      "id": 1293587259,
      "node_id": "IC_kwDOABII585NGpM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1293587259",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:12:16Z",
      "updated_at": "2022-10-27T14:12:16Z",
      "author_association": "MEMBER",
      "body": "rebased, conflicts solved.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1293587259",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "unlabeled",
      "id": 7682958609,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHJ8KUR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7682958609",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:32:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7686413967,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHKJV6P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7686413967",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T22:56:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7715636284,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHL40Q8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7715636284",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T17:33:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7716006038,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHL6OiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7716006038",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T18:20:42Z"
    },
    {
      "event": "unlabeled",
      "id": 7716531996,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHL8O8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7716531996",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T19:28:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1165360702,
      "node_id": "PRR_kwDOABII585Fdf4-",
      "url": null,
      "actor": null,
      "commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 326d03085a2e41d021d42f8ce324df235c907b19\r\n\r\nGreat refactoring and I verified that the tests correctly test the behavior intended.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1165360702",
      "submitted_at": "2022-11-03T09:56:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7733285927,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHM8JQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733285927",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:20:17Z"
    },
    {
      "event": "commented",
      "id": 1302274957,
      "node_id": "IC_kwDOABII585NnyON",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302274957",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z",
      "updated_at": "2022-11-03T15:21:39Z",
      "author_association": "MEMBER",
      "body": "Updated per @aureleoules feedback, thanks!\r\n\r\nTiny [diff](https://github.com/bitcoin/bitcoin/compare/326d03085a2e41d021d42f8ce324df235c907b19..312f3673618c83ddfcbc5e2c23722029bed47eb4). Only moved from using the test coinbase key to use the custom one, no functional changes.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1302274957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "mentioned",
      "id": 7733298546,
      "node_id": "MEE_lADOABII585QWVuGzwAAAAHM8MVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733298546",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z"
    },
    {
      "event": "subscribed",
      "id": 7733298559,
      "node_id": "SE_lADOABII585QWVuGzwAAAAHM8MV_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733298559",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z"
    },
    {
      "event": "reviewed",
      "id": 1167130870,
      "node_id": "PRR_kwDOABII585FkQD2",
      "url": null,
      "actor": null,
      "commit_id": "312f3673618c83ddfcbc5e2c23722029bed47eb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK 312f3673618c83ddfcbc5e2c23722029bed47eb4",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1167130870",
      "submitted_at": "2022-11-03T15:23:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "labeled",
      "id": 7917760746,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHX73Dq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7917760746",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-30T01:20:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4MTFlYzhmYjZjNTQ1YTEzNzc1MWQzNTY2OTU2M2I3ZWUyZTZkMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "tree": {
        "sha": "762b9a8b3609a06e7ccd94a248ce14f3ff4597fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/762b9a8b3609a06e7ccd94a248ce14f3ff4597fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 762b9a8b3609a06e7ccd94a248ce14f3ff4597fc\nparent cac29f5cd66f005ce65edd697990d495a904a1f1\nauthor furszy <matiasfurszyfer@protonmail.com> 1660919617 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1670108694 -0300\n\nwallet: test coverage for receive txes with same id but different witness data\n\nThe following cases are covered:\n\n1) Two p2wpkh transactions with the same hash are received:\n   The first one with segwit data stripped, and the second one with segwit data.\n\n   Result -> the wallet will update the stored tx, saving the witness data.\n\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n   The first is added to the wallet via the mempool acceptance flow.\n   while the second one, is added to the wallet via the block connection flow.\n\n   Result -> the wallet will NOT update the stored transaction, the first received\n         transaction will take precedence over any following-up transaction. Don't care\n         if the original transaction didn't get into a block and the second one did.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmOL1hcACgkQXdI8zGhq\npiNhng/9GxLaPK/cyDXlfK0n3L3dJcK3sg+VE12EBClg/yh6EtPpcvn+4y9D9Gup\nesdvnnlHbNCaRMGWpWYy6kbHoqPGU/6YNjw0V7aioYSRR/01yhR0ErbVsQ2cQkFC\n2ViN4yW7fMKGfzGK4PiyAQMSBQS0LrozTR5A+eOO/oxPSYXBWIGURF/eIqpBWpBr\nx8xt3FlS8QGc8d/IXjZPk2Zp9Qy4hTRzLop4amaMION8nx+sFIApGssz0hRaUAeD\n0PcNa4JgP5W6VQIVvJuJ2rQy9nEsma4iyqN705tdhRmlbVQLp/N8JZgN84u661Hu\n5Ia90EqX1jMAPqjYvgGD0r2iQubKwVGOvdMMKcUIWJMadrfxhzlm28AdUAMlYmIp\nIW1IDeJGlMWWm/cUmXUx0JGlsrYnR/30x8OWQu5bvxQqJF0Mnx/zYhGzm5QBaKWO\n1j6XLTvaVykwQgOSWw7dPc3w7GPe+mY3aJWVN9wcE5l+jtmmUZDB5KiZP67jEytl\nhlbFqOqgfx1Hh24aGNTF+QNb8LcVuHjutGWbtsclmtS1sVRMhLyPFH3O1oWBgaS1\nFS4u/iqKfpN//JlbDx6w5+IABNH8j8pH8vIP4qZcyHXUWzBPPkw4G3VrbVLjdwRS\nyTy9ArwrtbRRq2J2Bn0oX+9wsV/iDCJGIRCN3mUQSrebPH7ulbs=\n=bieR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac29f5cd66f005ce65edd697990d495a904a1f1",
          "sha": "cac29f5cd66f005ce65edd697990d495a904a1f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cac29f5cd66f005ce65edd697990d495a904a1f1"
        }
      ],
      "message": "wallet: test coverage for receive txes with same id but different witness data\n\nThe following cases are covered:\n\n1) Two p2wpkh transactions with the same hash are received:\n   The first one with segwit data stripped, and the second one with segwit data.\n\n   Result -> the wallet will update the stored tx, saving the witness data.\n\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n   The first is added to the wallet via the mempool acceptance flow.\n   while the second one, is added to the wallet via the block connection flow.\n\n   Result -> the wallet will NOT update the stored transaction, the first received\n         transaction will take precedence over any following-up transaction. Don't care\n         if the original transaction didn't get into a block and the second one did.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-12-03T23:04:54Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-19T14:33:37Z"
      },
      "sha": "d811ec8fb6c545a137751d35669563b7ee2e6d2f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7947185372,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHZsGzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947185372",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-03T23:08:01Z"
    },
    {
      "event": "unlabeled",
      "id": 7947217638,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHZsOrm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947217638",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-03T23:45:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1268146166,
      "node_id": "PRR_kwDOABII585Lll_2",
      "url": null,
      "actor": null,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> Result -> the wallet will NOT update the stored transaction. The first received transaction\r\nwill take precedence over any following-up transaction. Detached to the fact that the\r\noriginal transaction didn't get into a block and the second one did.\r\n\r\nWhile it's good to have tests for the behavior that occurs, having tests for incorrect behavior is probably not something we want to be doing as it can make the bug last a lot longer. If the intention is to have a followup soon that fixes the bug, then I would prefer that these test changes just get rolled into that rather than be their own PR. Otherwise the test needs a big warning that it is testing actual incorrect behavior, and not intended behavior.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1268146166",
      "submitted_at": "2023-01-24T19:24:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953094777",
      "pull_request_review_id": 1082819802,
      "id": 953094777,
      "node_id": "PRRC_kwDOABII5844zxJ5",
      "diff_hunk": "@@ -609,6 +609,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     bool CanGetAddresses(bool internal = false) const override;\n \n     std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const override;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, true); }",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`include_private` parameter is not being used.\r\n\r\n```suggestion\r\n    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, include_private); }\r\n```",
      "created_at": "2022-08-23T20:47:37Z",
      "updated_at": "2022-08-23T20:47:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r953094777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953094777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953838926",
      "pull_request_review_id": 1083867253,
      "id": 953838926,
      "node_id": "PRRC_kwDOABII58442m1O",
      "diff_hunk": "@@ -609,6 +609,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     bool CanGetAddresses(bool internal = false) const override;\n \n     std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const override;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, true); }",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "in_reply_to_id": 953094777,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ups, thanks. Pushed.",
      "created_at": "2022-08-24T13:57:43Z",
      "updated_at": "2022-08-24T13:57:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r953838926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953838926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960156515",
      "pull_request_review_id": 1092685575,
      "id": 960156515,
      "node_id": "PRRC_kwDOABII5845OtNj",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), GetScriptForDestination(PKHash(context.coinbaseKey.GetPubKey().GetID())), from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));\n+        CKeyID witness_id = ToKeyID(*Assert(std::get_if<WitnessV0KeyHash>(&multi_dest)));\n+        CPubKey pubkey;\n+        BOOST_CHECK(provider->GetPubKey(witness_id, pubkey));\n+        CKey priv_key;\n+        BOOST_CHECK(provider->GetKey(witness_id, priv_key));\n+        pks.emplace_back(pubkey);\n+        priv_keys.emplace_back(priv_key);\n+        pks_str += HexStr(pubkey) + ((i < 4) ? \",\" : \"\");\n+    }\n+\n+    // Import descriptor to watch the multisig script\n+    std::string descriptor = \"wsh(multi(3,\" + pks_str + \"))\";\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc = Parse(descriptor, keys, error, /*require_checksum=*/false);\n+    WalletDescriptor w_desc(std::move(parsed_desc), 0, 0, 0, 0);\n+    Assert(WITH_LOCK(wallet.cs_wallet, return wallet.AddWalletDescriptor(w_desc, keys, \"multisig_descriptor\", false)));\n+    multisig_script_out = GetScriptForMultisig(3, pks);\n+}\n+\n+// Test wallet receiving txes with the same id and different witness data.\n+// The following cases are covered:\n+//\n+//   1) Two p2wpkh transactions with the same hash are received:\n+//      The first one with segwit data stripped, and the second one with segwit data.\n+//      The wallet must update the stored tx, saving the witness data.\n+//\n+//   2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n+//      The first is added to the wallet by the mempool acceptance flow.\n+//      while the second one, is added to the wallet by the block connection flow.\n+//\n+//      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+//            transaction will take precedence over any following-up transaction. Don't care\n+//            if the first transaction didn't get into a block and the second did.\n+//\n+BOOST_FIXTURE_TEST_CASE(store_segwit_tx_data, TestChain100Setup)\n+{\n+    // Create wallet and generate few more blocks to confirm balance\n+    std::unique_ptr<CWallet> wallet = CreateSyncedWallet(*m_node.chain, WITH_LOCK(cs_main, return m_node.chainman->ActiveChain()), m_args, coinbaseKey);\n+    const auto& coinbase_dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"coinbase\")));\n+    for (int i=0; i<10; i++) {\n+        const CBlock& block = CreateAndProcessBlock({}, coinbase_dest_script);\n+        wallet->blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return m_node.chainman->ActiveChain().Tip()), &block));\n+    }\n+    BOOST_ASSERT(GetBalance(*wallet).m_mine_trusted == COIN * 50 * 10);\n+\n+    // create the P2WPKH output that will later be spent\n+    const auto& dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"\")));\n+    uint256 recv_tx_hash = SendCoinsAndGenBlock(*this, dest_script, 10 * COIN, *wallet, coinbase_dest_script)->GetHash();\n+\n+    //   1) Two p2wpkh transactions with the same hash are received:\n+    //      The first one with segwit data stripped, and the second one with segwit data.\n+    //      The wallet must update the stored tx, saving the witness data.\n+    {\n+        // Create the spending tx, strip the witness data and verify that the wallet accepts it\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({recv_tx_hash, 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 10 * COIN, true}}, 1, coin_control));\n+        BOOST_ASSERT(op_spend_tx->tx->HasWitness());\n+        const uint256& txid = op_spend_tx->tx->GetHash();\n+\n+        CMutableTransaction mtx(*op_spend_tx->tx);\n+        CScriptWitness witness_copy = mtx.vin[0].scriptWitness;\n+        mtx.vin[0].scriptWitness.SetNull();\n+        wallet->transactionAddedToMempool(MakeTransactionRef(mtx), /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_no_witness = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(txid)));\n+        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\n+\n+        // Re-set the witness and verify that the wallet updates the tx witness data by including the tx in a block\n+        mtx.vin[0].scriptWitness = witness_copy;\n+        const CWalletTx* wtx_with_witness = GenBlockAndRetrieveMinedTx(*this, mtx, coinbase_dest_script, *wallet);\n+        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\n+\n+        // Reload the wallet as it would be reloaded from disk and check that the witness data is still there.\n+        // (flush the previous wallet first)\n+        wallet->Flush();\n+        DatabaseOptions options;\n+        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\n+                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\n+        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\n+        const CWalletTx* reloaded_wtx_with_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(txid));\n+        BOOST_CHECK_EQUAL(reloaded_wtx_with_witness->GetWitnessHash(), wtx_with_witness->GetWitnessHash());\n+    }\n+\n+\n+    //   2) Two p2wsh multisig transactions with the same hash but a different witness are received:\n+    //      The first is added to the wallet by the mempool acceptance flow.\n+    //      while the second one, is added to the wallet by the block connection flow.\n+    //\n+    //      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+    //            transaction will take precedence over any following-up transaction. Don't care\n+    //            if the first transaction didn't get into a block and the second did.\n+    {\n+        // Setup context: Create the 3-of-5 multisig script and add the descriptor to the wallet\n+        CScript multisig_script;\n+        std::vector<CKey> priv_keys;\n+        CreateMultisigScriptAndImportDescriptor(*wallet, multisig_script, priv_keys);\n+\n+        // Lock coins in the multisig script\n+        const CWalletTx* multisig_tx = SendCoinsAndGenBlock(*this, GetScriptForDestination(WitnessV0ScriptHash(multisig_script)), 3 * COIN, *wallet, coinbase_dest_script);\n+\n+        // Now create a transaction that spends the funds locked in the multisig script\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({multisig_tx->GetHash(), 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 2 * COIN, true}}, 1, coin_control, /*sign=*/false));\n+\n+        // Now the real test begins, create unsigned tx\n+        CMutableTransaction unsigned_tx(*op_spend_tx->tx);\n+        std::map<COutPoint, Coin> coins;\n+        coins[unsigned_tx.vin[0].prevout] = Coin(multisig_tx->tx->vout[unsigned_tx.vin[0].prevout.n], /*nHeightIn=*/113, /*fCoinBaseIn=*/false);\n+\n+        // 1) Use the first three keys and add tx to wallet via mempool acceptance:\n+        FillableSigningProvider keystore_1;\n+        for (int i=0; i<3; i++) BOOST_ASSERT(keystore_1.AddKey(priv_keys[i]));\n+        BOOST_ASSERT(keystore_1.AddCScript(multisig_script));\n+        std::map<int, bilingual_str> input_errors;\n+        CMutableTransaction signed_tx_1 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_1, &keystore_1, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        const CTransactionRef& spend_from_multisig_tx_1 = MakeTransactionRef(signed_tx_1);\n+        wallet->transactionAddedToMempool(spend_from_multisig_tx_1, /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_spending_multisig_1 = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(signed_tx_1.GetHash())));\n+        BOOST_CHECK(wtx_spending_multisig_1->GetWitnessHash() == spend_from_multisig_tx_1->GetWitnessHash());\n+\n+        // 2) Use the last keys and try to add tx to wallet via block connection:\n+        FillableSigningProvider keystore_2;\n+        for (int i=priv_keys.size()-1; i>=2; i--) keystore_2.AddKey(priv_keys[i]);\n+        BOOST_ASSERT(keystore_2.AddCScript(multisig_script));\n+        CMutableTransaction signed_tx_2 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_2, &keystore_2, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        // Assert that the tx id is equal to the other tx but the witness data is different\n+        BOOST_ASSERT(signed_tx_1.GetHash() == signed_tx_2.GetHash());\n+        BOOST_ASSERT(signed_tx_1.vin[0].scriptWitness.stack != signed_tx_2.vin[0].scriptWitness.stack);\n+\n+        // Now connect the block and verify current behavior\n+        const CWalletTx* wtx = GenBlockAndRetrieveMinedTx(*this, signed_tx_2, coinbase_dest_script, *wallet);\n+\n+        // Important: current wallet behavior will NOT update the input witness data.\n+        // The wallet will only see the witness data of the first seen tx.\n+        BOOST_CHECK(wtx->GetHash() == signed_tx_2.GetHash());\n+        BOOST_CHECK(wtx->GetWitnessHash() != MakeTransactionRef(signed_tx_2)->GetWitnessHash());\n+    }",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 184,
      "original_position": 184,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "in_reply_to_id": null,
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the other test case with the two p2wpkh transactions, there is a step at the end to reload the wallet from disk. Is there any value in doing the same here?\r\n\r\n```\r\n        // Reload the wallet as it would be reloaded from disk and check that the witness data from the first transaction is still there.\r\n        // (flush the previous wallet first)\r\n        wallet->Flush();\r\n        DatabaseOptions options;\r\n        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\r\n                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\r\n        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\r\n        const CWalletTx* reloaded_wtx_with_original_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(wtx->GetHash()));\r\n        BOOST_CHECK_EQUAL(reloaded_wtx_with_original_witness->GetWitnessHash(), MakeTransactionRef(signed_tx_1)->GetWitnessHash());\r\n\r\n```",
      "created_at": "2022-09-01T02:03:17Z",
      "updated_at": "2022-09-01T02:03:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r960156515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960156515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/961665380",
      "pull_request_review_id": 1094849022,
      "id": 961665380,
      "node_id": "PRRC_kwDOABII5845Udlk",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), GetScriptForDestination(PKHash(context.coinbaseKey.GetPubKey().GetID())), from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));\n+        CKeyID witness_id = ToKeyID(*Assert(std::get_if<WitnessV0KeyHash>(&multi_dest)));\n+        CPubKey pubkey;\n+        BOOST_CHECK(provider->GetPubKey(witness_id, pubkey));\n+        CKey priv_key;\n+        BOOST_CHECK(provider->GetKey(witness_id, priv_key));\n+        pks.emplace_back(pubkey);\n+        priv_keys.emplace_back(priv_key);\n+        pks_str += HexStr(pubkey) + ((i < 4) ? \",\" : \"\");\n+    }\n+\n+    // Import descriptor to watch the multisig script\n+    std::string descriptor = \"wsh(multi(3,\" + pks_str + \"))\";\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc = Parse(descriptor, keys, error, /*require_checksum=*/false);\n+    WalletDescriptor w_desc(std::move(parsed_desc), 0, 0, 0, 0);\n+    Assert(WITH_LOCK(wallet.cs_wallet, return wallet.AddWalletDescriptor(w_desc, keys, \"multisig_descriptor\", false)));\n+    multisig_script_out = GetScriptForMultisig(3, pks);\n+}\n+\n+// Test wallet receiving txes with the same id and different witness data.\n+// The following cases are covered:\n+//\n+//   1) Two p2wpkh transactions with the same hash are received:\n+//      The first one with segwit data stripped, and the second one with segwit data.\n+//      The wallet must update the stored tx, saving the witness data.\n+//\n+//   2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n+//      The first is added to the wallet by the mempool acceptance flow.\n+//      while the second one, is added to the wallet by the block connection flow.\n+//\n+//      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+//            transaction will take precedence over any following-up transaction. Don't care\n+//            if the first transaction didn't get into a block and the second did.\n+//\n+BOOST_FIXTURE_TEST_CASE(store_segwit_tx_data, TestChain100Setup)\n+{\n+    // Create wallet and generate few more blocks to confirm balance\n+    std::unique_ptr<CWallet> wallet = CreateSyncedWallet(*m_node.chain, WITH_LOCK(cs_main, return m_node.chainman->ActiveChain()), m_args, coinbaseKey);\n+    const auto& coinbase_dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"coinbase\")));\n+    for (int i=0; i<10; i++) {\n+        const CBlock& block = CreateAndProcessBlock({}, coinbase_dest_script);\n+        wallet->blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return m_node.chainman->ActiveChain().Tip()), &block));\n+    }\n+    BOOST_ASSERT(GetBalance(*wallet).m_mine_trusted == COIN * 50 * 10);\n+\n+    // create the P2WPKH output that will later be spent\n+    const auto& dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"\")));\n+    uint256 recv_tx_hash = SendCoinsAndGenBlock(*this, dest_script, 10 * COIN, *wallet, coinbase_dest_script)->GetHash();\n+\n+    //   1) Two p2wpkh transactions with the same hash are received:\n+    //      The first one with segwit data stripped, and the second one with segwit data.\n+    //      The wallet must update the stored tx, saving the witness data.\n+    {\n+        // Create the spending tx, strip the witness data and verify that the wallet accepts it\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({recv_tx_hash, 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 10 * COIN, true}}, 1, coin_control));\n+        BOOST_ASSERT(op_spend_tx->tx->HasWitness());\n+        const uint256& txid = op_spend_tx->tx->GetHash();\n+\n+        CMutableTransaction mtx(*op_spend_tx->tx);\n+        CScriptWitness witness_copy = mtx.vin[0].scriptWitness;\n+        mtx.vin[0].scriptWitness.SetNull();\n+        wallet->transactionAddedToMempool(MakeTransactionRef(mtx), /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_no_witness = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(txid)));\n+        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\n+\n+        // Re-set the witness and verify that the wallet updates the tx witness data by including the tx in a block\n+        mtx.vin[0].scriptWitness = witness_copy;\n+        const CWalletTx* wtx_with_witness = GenBlockAndRetrieveMinedTx(*this, mtx, coinbase_dest_script, *wallet);\n+        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\n+\n+        // Reload the wallet as it would be reloaded from disk and check that the witness data is still there.\n+        // (flush the previous wallet first)\n+        wallet->Flush();\n+        DatabaseOptions options;\n+        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\n+                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\n+        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\n+        const CWalletTx* reloaded_wtx_with_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(txid));\n+        BOOST_CHECK_EQUAL(reloaded_wtx_with_witness->GetWitnessHash(), wtx_with_witness->GetWitnessHash());\n+    }\n+\n+\n+    //   2) Two p2wsh multisig transactions with the same hash but a different witness are received:\n+    //      The first is added to the wallet by the mempool acceptance flow.\n+    //      while the second one, is added to the wallet by the block connection flow.\n+    //\n+    //      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+    //            transaction will take precedence over any following-up transaction. Don't care\n+    //            if the first transaction didn't get into a block and the second did.\n+    {\n+        // Setup context: Create the 3-of-5 multisig script and add the descriptor to the wallet\n+        CScript multisig_script;\n+        std::vector<CKey> priv_keys;\n+        CreateMultisigScriptAndImportDescriptor(*wallet, multisig_script, priv_keys);\n+\n+        // Lock coins in the multisig script\n+        const CWalletTx* multisig_tx = SendCoinsAndGenBlock(*this, GetScriptForDestination(WitnessV0ScriptHash(multisig_script)), 3 * COIN, *wallet, coinbase_dest_script);\n+\n+        // Now create a transaction that spends the funds locked in the multisig script\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({multisig_tx->GetHash(), 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 2 * COIN, true}}, 1, coin_control, /*sign=*/false));\n+\n+        // Now the real test begins, create unsigned tx\n+        CMutableTransaction unsigned_tx(*op_spend_tx->tx);\n+        std::map<COutPoint, Coin> coins;\n+        coins[unsigned_tx.vin[0].prevout] = Coin(multisig_tx->tx->vout[unsigned_tx.vin[0].prevout.n], /*nHeightIn=*/113, /*fCoinBaseIn=*/false);\n+\n+        // 1) Use the first three keys and add tx to wallet via mempool acceptance:\n+        FillableSigningProvider keystore_1;\n+        for (int i=0; i<3; i++) BOOST_ASSERT(keystore_1.AddKey(priv_keys[i]));\n+        BOOST_ASSERT(keystore_1.AddCScript(multisig_script));\n+        std::map<int, bilingual_str> input_errors;\n+        CMutableTransaction signed_tx_1 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_1, &keystore_1, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        const CTransactionRef& spend_from_multisig_tx_1 = MakeTransactionRef(signed_tx_1);\n+        wallet->transactionAddedToMempool(spend_from_multisig_tx_1, /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_spending_multisig_1 = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(signed_tx_1.GetHash())));\n+        BOOST_CHECK(wtx_spending_multisig_1->GetWitnessHash() == spend_from_multisig_tx_1->GetWitnessHash());\n+\n+        // 2) Use the last keys and try to add tx to wallet via block connection:\n+        FillableSigningProvider keystore_2;\n+        for (int i=priv_keys.size()-1; i>=2; i--) keystore_2.AddKey(priv_keys[i]);\n+        BOOST_ASSERT(keystore_2.AddCScript(multisig_script));\n+        CMutableTransaction signed_tx_2 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_2, &keystore_2, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        // Assert that the tx id is equal to the other tx but the witness data is different\n+        BOOST_ASSERT(signed_tx_1.GetHash() == signed_tx_2.GetHash());\n+        BOOST_ASSERT(signed_tx_1.vin[0].scriptWitness.stack != signed_tx_2.vin[0].scriptWitness.stack);\n+\n+        // Now connect the block and verify current behavior\n+        const CWalletTx* wtx = GenBlockAndRetrieveMinedTx(*this, signed_tx_2, coinbase_dest_script, *wallet);\n+\n+        // Important: current wallet behavior will NOT update the input witness data.\n+        // The wallet will only see the witness data of the first seen tx.\n+        BOOST_CHECK(wtx->GetHash() == signed_tx_2.GetHash());\n+        BOOST_CHECK(wtx->GetWitnessHash() != MakeTransactionRef(signed_tx_2)->GetWitnessHash());\n+    }",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 184,
      "original_position": 184,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "in_reply_to_id": 960156515,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nop, there is no value doing that here.\r\nThe test here validates the current limitation of not updating the existent transaction. As there is no wtx update, there is no write to disk, there by there is no reason to test a reload.\r\n\r\nAnd even if the wallet limitation wouldn't exist, the first reload test case is enough to verify the record durability. Sources flow wise, replace a tx with no witness is exactly the same as replacing a tx with witness.",
      "created_at": "2022-09-02T13:12:22Z",
      "updated_at": "2022-09-02T13:12:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r961665380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/961665380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011849338",
      "pull_request_review_id": 1165360702,
      "id": 1011849338,
      "node_id": "PRRC_kwDOABII5848T5h6",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`coinbase_script` is unused",
      "created_at": "2022-11-02T14:28:55Z",
      "updated_at": "2022-11-03T09:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1011849338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011849338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013049794",
      "pull_request_review_id": 1167123734,
      "id": 1013049794,
      "node_id": "PRRC_kwDOABII5848YenC",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "in_reply_to_id": 1011849338,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "pushed, thanks",
      "created_at": "2022-11-03T15:20:24Z",
      "updated_at": "2022-11-03T15:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1013049794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013049794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085810309",
      "pull_request_review_id": 1268146166,
      "id": 1085810309,
      "node_id": "PRRC_kwDOABII585AuCaF",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), coinbase_script, from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would strongly prefer that we don't have to add new methods to DescSPKM that can export individual keys. This test could just as easily work with generating new random CKeys for the private keys.",
      "created_at": "2023-01-24T19:22:05Z",
      "updated_at": "2023-01-24T19:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1085810309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085810309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    }
  ]
}