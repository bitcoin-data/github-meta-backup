{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023",
    "id": 182589114,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyNTg5MTE0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13023",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/13023.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/13023.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/dd435ad40267f5c50ff17533c696f9302829a6a6",
    "number": 13023,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Fix some concurrency issues in ActivateBestChain()",
    "user": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Originally this PR was just to add tests around concurrency in block validation - those tests seem to have uncovered another bug in ActivateBestChain - this now fixes that bug and adds tests.\r\n\r\nActivateBestChain (invoked after a new block is validated) proceeds in steps - acquiring and releasing cs_main while incrementally disconnecting and connecting blocks to sync to the most work chain known (FindMostWorkChain()). Every time cs_main is released the result of FindMostWorkChain() can change - but currently that value is cached across acquisitions of cs_main and only refreshed when an invalid chain is explored. It needs to be refreshed every time cs_main is reacquired. The test added in https://github.com/bitcoin/bitcoin/pull/13023/commits/6094ce73045fe0b4654ff94327c2059512af88fb will occasionally fail without the commit fixing this issue https://github.com/bitcoin/bitcoin/pull/13023/commits/26bfdbaddbb9f13864deb7241c6d513f22c5ab62\r\n\r\n\r\nOriginal description below\r\n--\r\n\r\nAfter a bug discovered where UpdatedBlockTip() notifications could be triggered out of order (#12978), these unit tests check certain invariants about these signals.\r\n\r\nThe scheduler test asserts that a SingleThreadedSchedulerClient processes callbacks fully and sequentially.\r\n\r\nThe block validation test generates a random chain and calls ProcessNewBlock from multiple threads at random and in parallel. ValidationInterface callbacks verify that the ordering of BlockConnected BlockDisconnected and UpdatedBlockTip events occur as expected.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/34",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/34",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/34/labels",
      "id": 3074572,
      "node_id": "MDk6TWlsZXN0b25lMzA3NDU3Mg==",
      "number": 34,
      "state": "closed",
      "title": "0.16.1",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 34,
      "created_at": "2018-01-30T11:31:46Z",
      "updated_at": "2018-06-18T15:38:50Z",
      "closed_at": "2018-06-18T15:38:50Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2018-04-18T20:09:34Z",
    "updated_at": "2021-12-16T14:03:44Z",
    "closed_at": "2018-05-16T16:31:31Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-05-16T16:31:31Z",
    "merge_commit_sha": "dd435ad40267f5c50ff17533c696f9302829a6a6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "skeees:event-tests",
      "ref": "event-tests",
      "sha": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 118956449,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTg5NTY0NDk=",
        "name": "bitcoin",
        "full_name": "skeees/bitcoin",
        "owner": {
          "login": "skeees",
          "id": 195769,
          "node_id": "MDQ6VXNlcjE5NTc2OQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/skeees",
          "html_url": "https://github.com/skeees",
          "followers_url": "https://api.github.com/users/skeees/followers",
          "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
          "organizations_url": "https://api.github.com/users/skeees/orgs",
          "repos_url": "https://api.github.com/users/skeees/repos",
          "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/skeees/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/skeees/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/skeees/bitcoin",
        "archive_url": "https://api.github.com/repos/skeees/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/skeees/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/skeees/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/skeees/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/skeees/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/skeees/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/skeees/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/skeees/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/skeees/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/skeees/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/skeees/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/skeees/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/skeees/bitcoin/events",
        "forks_url": "https://api.github.com/repos/skeees/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/skeees/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/skeees/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/skeees/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/skeees/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/skeees/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/skeees/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/skeees/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/skeees/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/skeees/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/skeees/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/skeees/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/skeees/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/skeees/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/skeees/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/skeees/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:skeees/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/skeees/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/skeees/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/skeees/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/skeees/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/skeees/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/skeees/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/skeees/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/skeees/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/skeees/bitcoin/hooks",
        "svn_url": "https://github.com/skeees/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 133286,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-01-04T15:19:45Z",
        "created_at": "2018-01-25T19:15:49Z",
        "updated_at": "2020-01-04T15:19:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "40c34a0a29f6314c01597a0b9d9e97e5869eaf23",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:30:39Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 251,
    "deletions": 31,
    "changed_files": 6,
    "commits": 3,
    "review_comments": 33,
    "comments": 23
  },
  "events": [
    {
      "event": "renamed",
      "id": 1582353080,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTU4MjM1MzA4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1582353080",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-18T20:25:46Z",
      "rename": {
        "from": "Add unit tests for signals generated by ProcessNewBlock",
        "to": "[WIP] Add unit tests for signals generated by ProcessNewBlock"
      }
    },
    {
      "event": "reviewed",
      "id": 113373610,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEzMzczNjEw",
      "url": null,
      "actor": null,
      "commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, just a few nits. Nice test!",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-113373610",
      "submitted_at": "2018-04-18T20:39:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "reviewed",
      "id": 113401773,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEzNDAxNzcz",
      "url": null,
      "actor": null,
      "commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-113401773",
      "submitted_at": "2018-04-18T21:37:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "labeled",
      "id": 1582560688,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1ODI1NjA2ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1582560688",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-18T22:28:31Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1586415667,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU4NjQxNTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1586415667",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T15:19:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1586423894,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU4NjQyMzg5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1586423894",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T15:23:15Z"
    },
    {
      "event": "renamed",
      "id": 1586432022,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTU4NjQzMjAyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1586432022",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T15:27:06Z",
      "rename": {
        "from": "[WIP] Add unit tests for signals generated by ProcessNewBlock",
        "to": "Always refresh most work chain when reacquiring cs_main in ActivateBestChain()"
      }
    },
    {
      "event": "commented",
      "id": 383132743,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzEzMjc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383132743",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T15:27:36Z",
      "updated_at": "2018-04-20T15:27:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated to address reviewer comments and fix a bug that this test seems to have uncovered",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-383132743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1586535138,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU4NjUzNTEzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1586535138",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T16:16:53Z"
    },
    {
      "event": "unlabeled",
      "id": 1587674618,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTU4NzY3NDYxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1587674618",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-22T00:56:20Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 1587674651,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1ODc2NzQ2NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1587674651",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-22T00:56:26Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "reviewed",
      "id": 114495677,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE0NDk1Njc3",
      "url": null,
      "actor": null,
      "commit_id": "26bfdbaddbb9f13864deb7241c6d513f22c5ab62",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 6094ce73045fe0b4654ff94327c2059512af88fb. Fun tests!",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-114495677",
      "submitted_at": "2018-04-23T18:27:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "commented",
      "id": 384693081,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY5MzA4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384693081",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-26T15:53:13Z",
      "updated_at": "2018-04-26T15:53:13Z",
      "author_association": "MEMBER",
      "body": "Thanks for opening this PR.  I thought it would be helpful for other reviewers to clarify the (IMO significant) bug here, so that we can properly evaluate fixes.\r\n\r\nIf ActivateBestChain is invoked simultaneously in separate threads, then we can end up at a lower-work tip, and remain stuck until the next block comes in.\r\n\r\n * Suppose in thread 1, we have just been delivered a block that causes us to try to activate two blocks in ABC.  We connect 1 of them in ABCStep, and then release cs_main before connecting the second.\r\n * In thread 2, suppose we have been delivered a 3rd block (say via rpc) that builds on the first two.  It invokes ABC and gets to run after the first block has been connected in thread 1.  It connects one block, releases cs_main, and then connects one more, and finishes.\r\n * When thread 1 gets to run again, the most work chain has advanced, but (before this PR) we don't refresh pindexMostWork (except when we find an invalid block).  Consequently we would invoke ABCStep with a *less work tip* than our current tip(!).  This would cause us to disconnect our tip and return.\r\n\r\nSome travis failures have been observed due to this bug, as seen for instance here: https://travis-ci.org/bitcoin/bitcoin/jobs/370848272.  The test that sometimes fails, `rpc_deprecated.py`, generates blocks on two nodes roughly simultaneously, so one of the nodes is generating blocks in an rpc thread while also processing blocks on the network thread, which I believe is enough to trigger this bug.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-384693081",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "reviewed",
      "id": 115647578,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE1NjQ3NTc4",
      "url": null,
      "actor": null,
      "commit_id": "26bfdbaddbb9f13864deb7241c6d513f22c5ab62",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice work finding this issue and good start on the new test.  I haven't finished my review yet, but here's my initial feedback.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-115647578",
      "submitted_at": "2018-04-26T16:31:04Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "commented",
      "id": 385003478,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAwMzQ3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385003478",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T15:22:24Z",
      "updated_at": "2018-04-27T18:08:04Z",
      "author_association": "MEMBER",
      "body": "I have a branch where I changed the test you wrote to produce invalid blocks that would be detected in ConnectBlock, and where I have an alternate fix for the bug you found here, as well as a fix for the bug I mentioned in #13092: https://github.com/sdaftuar/bitcoin/commits/2018-04-alternate-abc-fix.  \r\n\r\nFor fixing the bug here, rather than invoke `FindMostWorkChain` on every loop iteration (which I expect to be very slow during reindex), I instead added a new test: if the tip has changed since the last loop iteration, or if pindexMostWork is no longer in setBlockIndexCandidates, then update pindexMostWork.  (I believe that only the first criteria is actually necessary, but included the second as belt-and-suspenders.)\r\n\r\nI compared this approach vs master for doing a reindex on my workstation, and saw < 3% slowdown (some slowdown was expected due to checking setBlockIndexCandidates each time).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-385003478",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 385023004,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAyMzAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385023004",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T16:29:15Z",
      "updated_at": "2018-04-27T16:29:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice - thanks for this. I wonder if it might be a bit more readable to explore feasibility of caching results internally in findmostworkchain instead of doing it in the activatebestchain loop - the control flow there is getting harder and harder to follow. I'm happy to explore that.",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-385023004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 385049827,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA0OTgyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385049827",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T18:07:04Z",
      "updated_at": "2018-05-03T19:28:36Z",
      "author_association": "MEMBER",
      "body": "@TheBlueMatt and I discussed that idea offline (of rewriting `FindMostWorkChain` to use `g_failed_blocks`, our internal data structure for caching invalid blocks, to speed it up) but our initial reaction was that the review overhead to ensure correctness might be very high.  I'm open to other ideas though (and if you think reworking FMWC is practical please feel free to take a shot at it).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-385049827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1599336651,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU5OTMzNjY1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599336651",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T18:07:04Z"
    },
    {
      "event": "subscribed",
      "id": 1599336652,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1OTkzMzY2NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599336652",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T18:07:04Z"
    },
    {
      "event": "milestoned",
      "id": 1608495859,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDE2MDg0OTU4NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1608495859",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-03T19:32:16Z",
      "milestone": {
        "title": "0.16.1"
      }
    },
    {
      "event": "labeled",
      "id": 1608496073,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2MDg0OTYwNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1608496073",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-03T19:32:24Z",
      "label": {
        "name": "Needs backport",
        "color": "ff8200"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1610142440,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMDE0MjQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610142440",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T15:44:10Z"
    },
    {
      "event": "commented",
      "id": 386645842,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY0NTg0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386645842",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T15:57:25Z",
      "updated_at": "2018-05-04T15:57:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar - pulled in your commits.\r\n\r\nIts still hard for me to convince myself that the set of conditions you've defined are the only cases in which `pindexMostWork` needs to be refreshed. Maybe I'm just not familiar enough with those areas - I'll leave it to the people with more experience in that area to review.\r\n\r\nJust wanted to throw out one alternate way to do determine when to refresh most work tip that's (imo) a bit easier to convince myself behaves correctly. Instead of caching `pindexOldTip` and using that as well as a couple of other things to determine whether to refresh - how about giving setBlockIndexCandidates a sequence number that gets incremented every time it gets updated. Then all ABC has to do is record the last tip candidate set version it saw (instead of the old tip) and use that to determine whether a refresh may be necessary. You could do this in ABC or even internally in FindMostWorkChain.",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386645842",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1610170189,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYxMDE3MDE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610170189",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T15:57:25Z"
    },
    {
      "event": "subscribed",
      "id": 1610170193,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MTAxNzAxOTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610170193",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T15:57:25Z"
    },
    {
      "event": "commented",
      "id": 386686703,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY4NjcwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386686703",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T18:04:03Z",
      "updated_at": "2018-05-04T18:04:03Z",
      "author_association": "MEMBER",
      "body": "Copy of travis output:\r\n\r\n```\r\nRunning tests: validation_block_tests from test/validation_block_tests.cpp\r\nRunning 1 test case...\r\nTest cases order is shuffled using seed: 1374948318\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/validation_block_tests.cpp(24): Entering test suite \"validation_block_tests\"\r\ntest/validation_block_tests.cpp(125): Entering test case \"processnewblock_signals_ordering\"\r\ntest/validation_block_tests.cpp(160): info:  has passed\r\ntest/validation_block_tests.cpp(160): info: ProcessNewBlock(Params(), block, true, &ignored)\r\ntest/validation_block_tests.cpp(160): info: check \r\ntest/validation_block_tests.cpp(160): info: ProcessNewBlock(Params(), block, true, &ignored)\r\ntest/validation_block_tests.cpp(160): info: ProcessNewBlock(Params(), block, true, &ignored)\r\ntest/validation_block_tests.cpp(160): info: check \r\ntest/validation_block_tests.cpp(160): info:  has passed\r\ntest/validation_block_tests.cpp(160): info: ProcessNewBlock(Params(), block, true, &ignored)\r\nterminate called after throwing an instance of 'std::length_error'\r\n  what():  basic_string::_S_create\r\nmake[3]: *** [test/validation_block_tests.cpp.test] Error 1",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386686703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 386704093,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcwNDA5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386704093",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T19:11:25Z",
      "updated_at": "2018-05-04T19:11:25Z",
      "author_association": "MEMBER",
      "body": "From some quick web searching, it seems that BOOST_CHECK may not be thread safe, so invoking it in each thread is likely the problem here.  Perhaps we should just `assert()` on the return value from `ProcessNewBlock()` (at line 160).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386704093",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 386712331,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxMjMzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386712331",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T19:42:47Z",
      "updated_at": "2018-05-04T19:43:54Z",
      "author_association": "MEMBER",
      "body": "I do occasionally see this failure when I run validation_block_tests in a tight loop (after fixing the BOOST_CHECK issue above):\r\n```\r\ntest/validation_block_tests.cpp(38): error in \"processnewblock_signals_ordering\": check m_expected_tip == block->hashPrevBlock failed [0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 != 0000000000000000000000000000000000000000000000000000000000000000]\r\nSegmentation fault (core dumped)\r\n```\r\nEdit: perhaps this is also a threading issue though?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386712331",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1610662437,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMDY2MjQzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610662437",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T19:51:31Z"
    },
    {
      "event": "commented",
      "id": 386714663,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxNDY2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386714663",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T19:53:02Z",
      "updated_at": "2018-05-04T19:53:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hmmm thats the genesis block which connects through a different path I believe",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386714663",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 386719151,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxOTE1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386719151",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:07:54Z",
      "updated_at": "2018-05-04T20:07:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar - thats the genesis block getting activated. Feels like it may be more of a test artefact (wasn't there a recent change that randomizes test case execution order) than a threading issue?  I think solution for that is to just call PNB(genesis) at the very beginning.",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386719151",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1610703999,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYxMDcwMzk5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610703999",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:07:54Z"
    },
    {
      "event": "subscribed",
      "id": 1610704000,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MTA3MDQwMDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610704000",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:07:54Z"
    },
    {
      "event": "commented",
      "id": 386719376,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxOTM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386719376",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:08:55Z",
      "updated_at": "2018-05-04T20:08:55Z",
      "author_association": "MEMBER",
      "body": "@skeees My reasoning is this:\r\n * Assume ABC never releases cs_main until the new tip has work >= that of the old tip..\r\n * Then it should be safe to always try to connect to pindexMostWork as long as it is still a candidate to be our tip (ie it's still in setBlockIndexCandidates).  Since we prune entries from setBlockIndexCandidates in ABCStep, if an entry is in setBlockIndexCandidates, then working towards it is still making progress (even if we might end up scrapping it for an even-more-work tip later -- it's no different from just learning about the more work tip after you had finished connecting the other blocks, rather than before).\r\n * However there is a small risk that we might have two threads that are simultaneously trying to connect several blocks towards two different tips, one of which has more work than the other, and both of which have more work than our prior tip.  Because ABCStep continues until it arrives at a block that has more work than the prior tip, this must converge, but it could annoyingly take a while (eg thread 1 connects 1 block out of 10, then thread 2 connects 2 blocks out of the 11 it needs to get to its desired tip, then thread 1 connects 3 blocks, and so on).  This is the convergence issue I alluded to in the code comment.\r\n * So as an optimization, we can just check to see if the tip has changed since we last left off.  If the tip has not changed we can use the assumption that we never release cs_main at a less-work tip than we were at before to be sure that whatever our pindexMostWork target from before is must still be a valid goal.  \r\nIn particular, it's not possible for (say) other threads invoking ABC concurrently to leave us at our tip if they have been connecting towards more-work tips.\r\n * I believe that checking for the tip change is sufficient for this to be safe, but as belt-and-suspenders I also included the check for pindexMostWork being in setBlockIndexCandidates, just in case.  I think the worst-case behavior if there's a hole in the logic would be the slow-convergence-issue in the event that multiple threads are trying to connect lots of blocks towards competing tips, which seems pretty low risk to me anyway.\r\n\r\nI believe that the fix to not release cs_main if we encounter an invalid block achieves the assumption listed at the top, and thus the rest follows.\r\n\r\n> Just wanted to throw out one alternate way to do determine when to refresh most work tip that's (imo) a bit easier to convince myself behaves correctly. Instead of caching pindexOldTip and using that as well as a couple of other things to determine whether to refresh - how about giving setBlockIndexCandidates a sequence number that gets incremented every time it gets updated. Then all ABC has to do is record the last tip candidate set version it saw (instead of the old tip) and use that to determine whether a refresh may be necessary. You could do this in ABC or even internally in FindMostWorkChain.\r\n\r\nThis might also be a reasonable solution; it seems like a bigger refactor to me since we don't have great encapsulation on setBlockIndexCandidates at the moment, but I agree that it could be a clearer logical change.\r\n\r\n@sipa Any thoughts on this issue?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-386719376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1610705567,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYxMDcwNTU2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610705567",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:08:55Z"
    },
    {
      "event": "subscribed",
      "id": 1610705569,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MTA3MDU1Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610705569",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:08:55Z"
    },
    {
      "event": "mentioned",
      "id": 1610705570,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYxMDcwNTU3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610705570",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:08:55Z"
    },
    {
      "event": "subscribed",
      "id": 1610705571,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MTA3MDU1NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610705571",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:08:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1610720269,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMDcyMDI2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1610720269",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-04T20:17:54Z"
    },
    {
      "event": "reviewed",
      "id": 117798048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE3Nzk4MDQ4",
      "url": null,
      "actor": null,
      "commit_id": "04176fc02f7ca1c0c56bb0c87da90f83673e95a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-117798048",
      "submitted_at": "2018-05-05T00:35:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1613455878,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMzQ1NTg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613455878",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T17:28:57Z"
    },
    {
      "event": "renamed",
      "id": 1613460547,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTYxMzQ2MDU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613460547",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T17:31:11Z",
      "rename": {
        "from": "Always refresh most work chain when reacquiring cs_main in ActivateBestChain()",
        "to": "Fix some concurrency issues in ActivateBestChain()"
      }
    },
    {
      "event": "reviewed",
      "id": 118084725,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE4MDg0NzI1",
      "url": null,
      "actor": null,
      "commit_id": "c496b7b386a66fb4fc73d3bacd3db2a5c4bf7872",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK code changes; I didn't review the tests.\r\n\r\nAlso, when introducing a test to demonstrate the problem, put it after the fix. Doing otherwise means introducing temporarily broken commits, which may break the ability to bisect.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-118084725",
      "submitted_at": "2018-05-07T18:28:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "reviewed",
      "id": 118102784,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE4MTAyNzg0",
      "url": null,
      "actor": null,
      "commit_id": "c496b7b386a66fb4fc73d3bacd3db2a5c4bf7872",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK c496b7b386a66fb4fc73d3bacd3db2a5c4bf7872, though I left some nits for you to consider.\r\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-118102784",
      "submitted_at": "2018-05-07T19:12:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1613728708,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMzcyODcwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613728708",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T19:43:08Z"
    },
    {
      "event": "commented",
      "id": 387180410,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE4MDQxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387180410",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T19:44:03Z",
      "updated_at": "2018-05-07T19:44:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa - commits now correctly ordered and `m_cs_cs` renamed to `m_cs_chainstate`",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-387180410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1613730202,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYxMzczMDIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613730202",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T19:44:03Z"
    },
    {
      "event": "subscribed",
      "id": 1613730203,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MTM3MzAyMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613730203",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T19:44:03Z"
    },
    {
      "event": "commented",
      "id": 387181234,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE4MTIzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387181234",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T19:47:13Z",
      "updated_at": "2018-05-07T19:47:13Z",
      "author_association": "MEMBER",
      "body": "re-ACK ed1828c202c9f4376492c173e361814320a01ffa ",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-387181234",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1613885003,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxMzg4NTAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1613885003",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T20:55:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1614195802,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxNDE5NTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1614195802",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-08T00:48:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1622574147,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyMjU3NDE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1622574147",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-11T18:55:32Z"
    },
    {
      "event": "reviewed",
      "id": 119554360,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5NTU0MzYw",
      "url": null,
      "actor": null,
      "commit_id": "8febf4850b11406883d457d3c63e713acfacf682",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/13023/commits/8febf4850b11406883d457d3c63e713acfacf682\r\n\r\nThe tests you've written are great (we need more like these) and the changeset fixes a definite bug, so I'm :+1: on this. I left a few nits but feel free to ignore or fix later.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-119554360",
      "submitted_at": "2018-05-11T19:37:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "reviewed",
      "id": 119556912,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5NTU2OTEy",
      "url": null,
      "actor": null,
      "commit_id": "4931c6d298a4eb15eaf7ee06d5a947944d1356e7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Didnt review the last new test (awesome, btw).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-119556912",
      "submitted_at": "2018-05-11T19:59:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2MzYzRhMDE5ZTZkYjMwZTIwOGI4NTU0YjFhMzY1OGRjYjlhODBh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
      "tree": {
        "sha": "f9af673005ded7d0566d285b4617c6909f3dabbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9af673005ded7d0566d285b4617c6909f3dabbf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b262eb2d80bfa27ae8501078ce47bc1407e9c55",
          "sha": "8b262eb2d80bfa27ae8501078ce47bc1407e9c55",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8b262eb2d80bfa27ae8501078ce47bc1407e9c55"
        }
      ],
      "message": "Do not unlock cs_main in ABC unless we've actually made progress.\n\nTechnically, some internal datastructures may be in an inconsistent\nstate if we do this, though there are no known bugs there. Still,\nfor future safety, its much better to only unlock cs_main if we've\nmade progress (not just tried a reorg which may make progress).",
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-12T16:44:32Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-09T15:19:10Z"
      },
      "sha": "ecc3c4a019e6db30e208b8554b1a3658dcb9a80a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2FlOGU2ODczOTAyM2U1ZGJhOWU1Y2IxOTBlNzA3ZWQ0NjAzMzE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ae8e68739023e5dba9e5cb190e707ed4603316",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ae8e68739023e5dba9e5cb190e707ed4603316",
      "tree": {
        "sha": "6995c621267b759e46cbda4b9141583a606dd765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6995c621267b759e46cbda4b9141583a606dd765"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
          "sha": "ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc3c4a019e6db30e208b8554b1a3658dcb9a80a"
        }
      ],
      "message": "Fix concurrency-related bugs in ActivateBestChain\n\nIf multiple threads are invoking ActivateBestChain, it was possible to have\nthem working towards different tips, and we could arrive at a less work tip\nthan we should.  Fix this by introducing a ChainState lock which must\nbe held for the entire duration of ActivateBestChain to enforce\nexclusion in ABC.",
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-12T16:44:32Z"
      },
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-10T19:57:16Z"
      },
      "sha": "a3ae8e68739023e5dba9e5cb190e707ed4603316"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1623276606,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyMzI3NjYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623276606",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-12T17:52:59Z"
    },
    {
      "event": "commented",
      "id": 388880844,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODg4MDg0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388880844",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T16:33:55Z",
      "updated_at": "2018-05-14T16:33:55Z",
      "author_association": "MEMBER",
      "body": "utACK non-test changes through a3ae8e68739023e5dba9e5cb190e707ed4603316, a3070a861bb3a76303b7859c4dd96ba886029111 would be fine with some release/acquire atomics, and 51539506577e5439c58b2e36c07d84f33bb4d4c5 looks awesome, though I haven't reviewed it fully.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-388880844",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 388908666,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODkwODY2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388908666",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:02:10Z",
      "updated_at": "2018-05-14T18:02:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "I will follow up offline in case I'm totally missing something - but I feel pretty strongly that sequential consistency should be guaranteed by the `SingleThreadedSchedulerClient` - whether the callbacks are actually run by one or multiple threads internally, it should feel single threaded (it's even named that way) and the caller shouldn't have to worry about it. Otherwise you open up a ton of surface area for more bugs like the ones being fixed here to creep in.\r\nOf course if there's something I'm missing in the current implementation of the `SingleThreadedSchedulerClient` that doesn't guarantee this ordering, I'm happy to fix it here, but it appears that the lock guarantees it now and I'd strongly advocate that any future implementations without the lock still maintain that guarantee.",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-388908666",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 388909727,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODkwOTcyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388909727",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:05:48Z",
      "updated_at": "2018-05-14T18:06:07Z",
      "author_association": "MEMBER",
      "body": "@skeees hmm, maybe we're talking past each other, but my point was that you can fully guarantee both ordering and only one callback executing at once *without* implying seq_cst/rel_acq in the C++ memory model. I dont think the memory consistency of a client should be implied by an API as it can impose runtime cost.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-388909727",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1625455189,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyNTQ1NTE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625455189",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:05:48Z"
    },
    {
      "event": "subscribed",
      "id": 1625455190,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjU0NTUxOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625455190",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:05:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1625709709,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyNTcwOTcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625709709",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:14:55Z"
    },
    {
      "event": "commented",
      "id": 388949034,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk0OTAzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388949034",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:19:16Z",
      "updated_at": "2018-05-14T20:20:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok - I finally understand what you're saying. I still disagree. I think it makes the API pretty unusable if you drop that guarantee - and the theoretical (because its single threaded right now) performance tradeoff is worth the usability - and certainly it should not be called SingleThreaded anything since it drops the single threaded memory model. But in the interest of not delaying 0.16.1 I've removed that commit and will follow up in a separate PR.\r\n\r\nBtw though - I think the second test still has the same issue (different callbacks referencing the same unsynchronized memory)",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-388949034",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 389291443,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTI5MTQ0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389291443",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-15T19:49:53Z",
      "updated_at": "2018-05-15T19:49:53Z",
      "author_association": "MEMBER",
      "body": "utACK 7b4be5089938b188ecca86742aa6aa4d2ec0c40e, though I didn't review the last test in detail (thanks for making that!).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-389291443",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "commented",
      "id": 389492587,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQ5MjU4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389492587",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T11:56:19Z",
      "updated_at": "2018-05-16T11:56:19Z",
      "author_association": "MEMBER",
      "body": "Compiling this locally gives me:\r\n```\r\n/.../bitcoin/src/test/validation_block_tests.cpp:73:13: error: use of undeclared identifier 'CheckProofOfWork'\r\n    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\r\n            ^\r\n1 error generated.\r\n```\r\n\r\nAdding `#include <pow.h>` fixes it.\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-389492587",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDQzNWFkNDAyNjdmNWM1MGZmMTc1MzNjNjk2ZjkzMDI4MjlhNmE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd435ad40267f5c50ff17533c696f9302829a6a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd435ad40267f5c50ff17533c696f9302829a6a6",
      "tree": {
        "sha": "771a3f789f30646df1d0a067b71db619296af144",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/771a3f789f30646df1d0a067b71db619296af144"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ae8e68739023e5dba9e5cb190e707ed4603316",
          "sha": "a3ae8e68739023e5dba9e5cb190e707ed4603316",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ae8e68739023e5dba9e5cb190e707ed4603316"
        }
      ],
      "message": "Add unit tests for signals generated by ProcessNewBlock()\n\nAfter a recent bug discovered in callback ordering in MainSignals,\nthis test checks invariants in ordering of\nBlockConnected / BlockDisconnected / UpdatedChainTip signals",
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-16T12:28:15Z"
      },
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-04-18T12:01:48Z"
      },
      "sha": "dd435ad40267f5c50ff17533c696f9302829a6a6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1629469135,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyOTQ2OTEzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1629469135",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T12:29:12Z"
    },
    {
      "event": "commented",
      "id": 389500956,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTUwMDk1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389500956",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T12:29:25Z",
      "updated_at": "2018-05-16T12:29:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "thanks @laanwj - updated",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-389500956",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "mentioned",
      "id": 1629469475,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyOTQ2OTQ3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1629469475",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T12:29:26Z"
    },
    {
      "event": "subscribed",
      "id": 1629469477,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2Mjk0Njk0Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1629469477",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T12:29:26Z"
    },
    {
      "event": "commented",
      "id": 389580929,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU4MDkyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389580929",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T16:24:51Z",
      "updated_at": "2018-05-16T16:24:51Z",
      "author_association": "MEMBER",
      "body": "utACK dd435ad40267f5c50ff17533c696f9302829a6a6",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-389580929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "merged",
      "id": 1630058924,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTYzMDA1ODkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1630058924",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd435ad40267f5c50ff17533c696f9302829a6a6",
      "created_at": "2018-05-16T16:31:31Z"
    },
    {
      "event": "closed",
      "id": 1630058935,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTYzMDA1ODkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1630058935",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T16:31:31Z"
    },
    {
      "event": "referenced",
      "id": 1630059347,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2MzAwNTkzNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1630059347",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "11e7bdfd903ef342c0ff2dcd062d6eab8dd25350",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11e7bdfd903ef342c0ff2dcd062d6eab8dd25350",
      "created_at": "2018-05-16T16:31:44Z"
    },
    {
      "event": "reviewed",
      "id": 120651738,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIwNjUxNzM4",
      "url": null,
      "actor": null,
      "commit_id": "ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Post-merge ACK, with some nits.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#pullrequestreview-120651738",
      "submitted_at": "2018-05-16T19:21:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
    },
    {
      "event": "added_to_project",
      "id": 1643672577,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxNjQzNjcyNTc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1643672577",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T08:45:37Z",
      "project_card": {
        "id": 10025384,
        "url": "https://api.github.com/projects/columns/cards/10025384",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "For backport"
      }
    },
    {
      "event": "head_ref_deleted",
      "id": 1644112485,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQxNjQ0MTEyNDg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644112485",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T12:26:38Z"
    },
    {
      "event": "referenced",
      "id": 1644876000,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ4NzYwMDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644876000",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "36639007179172aeb83ae12c3e551d1de1418bad",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/36639007179172aeb83ae12c3e551d1de1418bad",
      "created_at": "2018-05-24T17:41:40Z"
    },
    {
      "event": "referenced",
      "id": 1644876004,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ4NzYwMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644876004",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a7cfd55571ffd30e191cea2ef12e2895aeaa5f2",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/8a7cfd55571ffd30e191cea2ef12e2895aeaa5f2",
      "created_at": "2018-05-24T17:41:40Z"
    },
    {
      "event": "referenced",
      "id": 1644876007,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ4NzYwMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644876007",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e8a283f5548f97af6ddf3e462e39a7272f01ce09",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/e8a283f5548f97af6ddf3e462e39a7272f01ce09",
      "created_at": "2018-05-24T17:41:40Z"
    },
    {
      "event": "referenced",
      "id": 1644907382,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ5MDczODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644907382",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0948153ea62ff4921daef326da0fddb8425cd866",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/0948153ea62ff4921daef326da0fddb8425cd866",
      "created_at": "2018-05-24T17:56:26Z"
    },
    {
      "event": "referenced",
      "id": 1644907385,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ5MDczODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644907385",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb79aaf93af93d5f9f5097cff4fbb2791af86875",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/bb79aaf93af93d5f9f5097cff4fbb2791af86875",
      "created_at": "2018-05-24T17:56:26Z"
    },
    {
      "event": "referenced",
      "id": 1644907386,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE2NDQ5MDczODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644907386",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d6c3a08c482225b3742c9145a9cbfe60567f0c4f",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/d6c3a08c482225b3742c9145a9cbfe60567f0c4f",
      "created_at": "2018-05-24T17:56:26Z"
    },
    {
      "event": "unlabeled",
      "id": 1649030046,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTY0OTAzMDA0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1649030046",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-28T09:36:50Z",
      "label": {
        "name": "Needs backport",
        "color": "ff8200"
      }
    },
    {
      "event": "commented",
      "id": 392475570,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjQ3NTU3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392475570",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-28T09:37:01Z",
      "updated_at": "2018-05-28T09:37:01Z",
      "author_association": "MEMBER",
      "body": "Backported in #13317",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-392475570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13023"
    },
    {
      "event": "removed_from_project",
      "id": 1649031761,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTY0OTAzMTc2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1649031761",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-28T09:37:43Z",
      "project_card": {
        "id": 10025384,
        "url": "https://api.github.com/projects/columns/cards/10025384",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "For backport"
      }
    },
    {
      "event": "referenced",
      "id": 1708475210,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3MDg0NzUyMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1708475210",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f8f81c2d53cb0db7a74f29b93e42cc44b51932d5",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/f8f81c2d53cb0db7a74f29b93e42cc44b51932d5",
      "created_at": "2018-06-29T11:50:17Z"
    },
    {
      "event": "referenced",
      "id": 1708475212,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3MDg0NzUyMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1708475212",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2413612b85b7a00c986cf2cf9c23346c6084f30b",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/2413612b85b7a00c986cf2cf9c23346c6084f30b",
      "created_at": "2018-06-29T11:50:17Z"
    },
    {
      "event": "referenced",
      "id": 1708475214,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3MDg0NzUyMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1708475214",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c80100e3ff58bf5bcdc84fda3854caa0e6b3c9b2",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/c80100e3ff58bf5bcdc84fda3854caa0e6b3c9b2",
      "created_at": "2018-06-29T11:50:17Z"
    },
    {
      "event": "referenced",
      "id": 1764081672,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3NjQwODE2NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1764081672",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e83d82a85c53196aff5b5ac500f20bb2940663fa",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83d82a85c53196aff5b5ac500f20bb2940663fa",
      "created_at": "2018-08-01T00:54:24Z"
    },
    {
      "event": "referenced",
      "id": 1845874128,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU4NzQxMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845874128",
      "actor": {
        "login": "ccebrecos",
        "id": 19707527,
        "node_id": "MDQ6VXNlcjE5NzA3NTI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19707527?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccebrecos",
        "html_url": "https://github.com/ccebrecos",
        "followers_url": "https://api.github.com/users/ccebrecos/followers",
        "following_url": "https://api.github.com/users/ccebrecos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccebrecos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccebrecos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccebrecos/subscriptions",
        "organizations_url": "https://api.github.com/users/ccebrecos/orgs",
        "repos_url": "https://api.github.com/users/ccebrecos/repos",
        "events_url": "https://api.github.com/users/ccebrecos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccebrecos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "85ac9b716865e136927f21122b5d92c5b89275c1",
      "commit_url": "https://api.github.com/repos/BTCAssessors/bitcoin/commits/85ac9b716865e136927f21122b5d92c5b89275c1",
      "created_at": "2018-09-14T11:23:15Z"
    },
    {
      "event": "referenced",
      "id": 1845874130,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU4NzQxMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845874130",
      "actor": {
        "login": "ccebrecos",
        "id": 19707527,
        "node_id": "MDQ6VXNlcjE5NzA3NTI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19707527?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccebrecos",
        "html_url": "https://github.com/ccebrecos",
        "followers_url": "https://api.github.com/users/ccebrecos/followers",
        "following_url": "https://api.github.com/users/ccebrecos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccebrecos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccebrecos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccebrecos/subscriptions",
        "organizations_url": "https://api.github.com/users/ccebrecos/orgs",
        "repos_url": "https://api.github.com/users/ccebrecos/repos",
        "events_url": "https://api.github.com/users/ccebrecos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccebrecos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27876d57d55cd6738c7d001c07e9c9ac8b0e9d42",
      "commit_url": "https://api.github.com/repos/BTCAssessors/bitcoin/commits/27876d57d55cd6738c7d001c07e9c9ac8b0e9d42",
      "created_at": "2018-09-14T11:23:15Z"
    },
    {
      "event": "referenced",
      "id": 1845874134,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU4NzQxMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845874134",
      "actor": {
        "login": "ccebrecos",
        "id": 19707527,
        "node_id": "MDQ6VXNlcjE5NzA3NTI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19707527?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccebrecos",
        "html_url": "https://github.com/ccebrecos",
        "followers_url": "https://api.github.com/users/ccebrecos/followers",
        "following_url": "https://api.github.com/users/ccebrecos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccebrecos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccebrecos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccebrecos/subscriptions",
        "organizations_url": "https://api.github.com/users/ccebrecos/orgs",
        "repos_url": "https://api.github.com/users/ccebrecos/repos",
        "events_url": "https://api.github.com/users/ccebrecos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccebrecos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d4f80b93676b8b3fa1da60ca1f1cbbf94cfcc072",
      "commit_url": "https://api.github.com/repos/BTCAssessors/bitcoin/commits/d4f80b93676b8b3fa1da60ca1f1cbbf94cfcc072",
      "created_at": "2018-09-14T11:23:15Z"
    },
    {
      "event": "referenced",
      "id": 3559805762,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NTk4MDU3NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3559805762",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c5af021d59fbabadc1eadc9a35e39c02e7bb21d1",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c5af021d59fbabadc1eadc9a35e39c02e7bb21d1",
      "created_at": "2020-07-17T20:40:27Z"
    },
    {
      "event": "referenced",
      "id": 3559817576,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NTk4MTc1NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3559817576",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "82d64aef9518c66ed0794d3b9335e391cbf3173d",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/82d64aef9518c66ed0794d3b9335e391cbf3173d",
      "created_at": "2020-07-17T20:44:28Z"
    },
    {
      "event": "referenced",
      "id": 3559822115,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NTk4MjIxMTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3559822115",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f9aa9ad39fe345f7e914d4f022cc7000d34936e3",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f9aa9ad39fe345f7e914d4f022cc7000d34936e3",
      "created_at": "2020-07-17T20:46:06Z"
    },
    {
      "event": "referenced",
      "id": 4492003187,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTIwMDMxODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4492003187",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b19c9ed41b82065fd1e93754af3f11d72f4bdbdb",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/b19c9ed41b82065fd1e93754af3f11d72f4bdbdb",
      "created_at": "2021-03-22T18:59:06Z"
    },
    {
      "event": "referenced",
      "id": 4492003191,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTIwMDMxOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4492003191",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "25fa8176e2f2deed6a47055776c193e184211f24",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/25fa8176e2f2deed6a47055776c193e184211f24",
      "created_at": "2021-03-22T18:59:06Z"
    },
    {
      "event": "referenced",
      "id": 4548816174,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NDg4MTYxNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4548816174",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b993c56afe5e2c688bf8c4a5cd424fa100084fb8",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b993c56afe5e2c688bf8c4a5cd424fa100084fb8",
      "created_at": "2021-04-04T07:06:55Z"
    },
    {
      "event": "referenced",
      "id": 4647219900,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NDcyMTk5MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4647219900",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d9b7f45ce8acbf3e514b1786cdbcab88c2ddb597",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/d9b7f45ce8acbf3e514b1786cdbcab88c2ddb597",
      "created_at": "2021-04-26T20:28:35Z"
    },
    {
      "event": "referenced",
      "id": 4647219907,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NDcyMTk5MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4647219907",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c45596e287ae5822ba39564a4c9475c80e2e469d",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/c45596e287ae5822ba39564a4c9475c80e2e469d",
      "created_at": "2021-04-26T20:28:35Z"
    },
    {
      "event": "referenced",
      "id": 4780989912,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODA5ODk5MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4780989912",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a67d6ae0905cf12524af278ba18cbefd045db27",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/4a67d6ae0905cf12524af278ba18cbefd045db27",
      "created_at": "2021-05-21T19:20:43Z"
    },
    {
      "event": "referenced",
      "id": 4803580800,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4MDM1ODA4MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4803580800",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "897b4fabdd972306e1d13676872bd9a196cc5314",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/897b4fabdd972306e1d13676872bd9a196cc5314",
      "created_at": "2021-05-27T06:31:14Z"
    },
    {
      "event": "referenced",
      "id": 4803580804,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4MDM1ODA4MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4803580804",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "638b1e94bec414830e28723269bb441a203b1046",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/638b1e94bec414830e28723269bb441a203b1046",
      "created_at": "2021-05-27T06:31:14Z"
    },
    {
      "event": "referenced",
      "id": 4847056037,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4NDcwNTYwMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4847056037",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d3d242f2b1e4ad68f8d80ecaa67e0302bea48c7f",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/d3d242f2b1e4ad68f8d80ecaa67e0302bea48c7f",
      "created_at": "2021-06-05T18:49:35Z"
    },
    {
      "event": "referenced",
      "id": 4847082693,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4NDcwODI2OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4847082693",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb44ac04c9580de87a71db0d89425a968d27b998",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/bb44ac04c9580de87a71db0d89425a968d27b998",
      "created_at": "2021-06-05T19:13:43Z"
    },
    {
      "event": "referenced",
      "id": 5349689398,
      "node_id": "REFE_lADOABII584S0AxAzwAAAAE-3cg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5349689398",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ef61fe6dbc3f56b019f9e4314aebba784e4c8e6c",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/ef61fe6dbc3f56b019f9e4314aebba784e4c8e6c",
      "created_at": "2021-09-23T13:07:18Z"
    },
    {
      "event": "referenced",
      "id": 5349689405,
      "node_id": "REFE_lADOABII584S0AxAzwAAAAE-3cg9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5349689405",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bbaff2ab1e755c2595f7fcdf969b2d7103b04c46",
      "commit_url": "https://api.github.com/repos/LarryRuane/zcash/commits/bbaff2ab1e755c2595f7fcdf969b2d7103b04c46",
      "created_at": "2021-09-23T13:07:18Z"
    },
    {
      "event": "locked",
      "id": 5778569956,
      "node_id": "LOE_lADOABII584S0AxAzwAAAAFYbfrk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778569956",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:03:44Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182554249",
      "pull_request_review_id": 113373610,
      "id": 182554249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU1NDI0OQ==",
      "diff_hunk": "@@ -87,7 +87,8 @@ BITCOIN_TESTS =\\\n   test/txvalidationcache_tests.cpp \\\n   test/versionbits_tests.cpp \\\n   test/uint256_tests.cpp \\\n-  test/util_tests.cpp\n+  test/util_tests.cpp \\\n+  test/validation_block_tests.cpp",
      "path": "src/Makefile.test.include",
      "position": null,
      "original_position": 6,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like there's an alphabetic ordering here that may be good to preserve.",
      "created_at": "2018-04-18T20:11:28Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182554249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182554249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182554703",
      "pull_request_review_id": 113373610,
      "id": 182554703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU1NDcwMw==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> should *be* required here",
      "created_at": "2018-04-18T20:13:05Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182554703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182554703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182557843",
      "pull_request_review_id": 113373610,
      "id": 182557843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU1Nzg0Mw==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be worth parameterizing `Block` with a `bool make_invalid` option to avoid the duplication here, but that's your call.",
      "created_at": "2018-04-18T20:23:58Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182557843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182557843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182558115",
      "pull_request_review_id": 113373610,
      "id": 182558115,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU1ODExNQ==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know we don't have columnar limits in the styleguide, but this line's pretty long...",
      "created_at": "2018-04-18T20:24:55Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182558115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182558115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182558380",
      "pull_request_review_id": 113373610,
      "id": 182558380,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU1ODM4MA==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)\n+{\n+    if (height <= 0 || blocks.size() >= max_size) return;\n+\n+    bool gen_invalid = GetRand(100) < invalid_rate;\n+    bool gen_fork = GetRand(100) < branch_rate;\n+\n+    const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n+    blocks.push_back(pblock);\n+    if (!gen_invalid)",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Braces needed.",
      "created_at": "2018-04-18T20:25:49Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182558380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182558380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182577318",
      "pull_request_review_id": 113401722,
      "id": 182577318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU3NzMxOA==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)\n+{\n+    if (height <= 0 || blocks.size() >= max_size) return;\n+\n+    bool gen_invalid = GetRand(100) < invalid_rate;\n+    bool gen_fork = GetRand(100) < branch_rate;\n+\n+    const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n+    blocks.push_back(pblock);\n+    if (!gen_invalid)",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": 182558380,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "clang-format would put those in I believe",
      "created_at": "2018-04-18T21:37:33Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182577318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182577318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182577357",
      "pull_request_review_id": 113401773,
      "id": 182577357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU3NzM1Nw==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)\n+{\n+    if (height <= 0 || blocks.size() >= max_size) return;\n+\n+    bool gen_invalid = GetRand(100) < invalid_rate;\n+    bool gen_fork = GetRand(100) < branch_rate;\n+\n+    const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n+    blocks.push_back(pblock);\n+    if (!gen_invalid)\n+        BuildChain(pblock->GetHash(), height - 1, invalid_rate, branch_rate, max_size, blocks);\n+\n+    if (gen_fork) {\n+        blocks.push_back(GoodBlock(root));\n+        BuildChain(blocks.back()->GetHash(), height - 1, invalid_rate, branch_rate, max_size, blocks);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n+{\n+    // build a large-ish chain that's likely to have some forks\n+    std::vector<std::shared_ptr<const CBlock>> blocks;\n+    while (blocks.size() < 50) {\n+        blocks.clear();\n+        BuildChain(Params().GenesisBlock().GetHash(), 100, 5, 10, 5000, blocks);\n+    }\n+\n+    CValidationState state;\n+    std::vector<CBlockHeader> headers;\n+    std::transform(blocks.begin(), blocks.end(), std::back_inserter(headers), [](std::shared_ptr<const CBlock> b) { return b->GetBlockHeader(); });\n+\n+    // Process all the headers so we understand the toplogy of the chain\n+    BOOST_CHECK(ProcessNewBlockHeaders(headers, state, Params()));\n+\n+    // subscribe to events (this subscriber will validate event ordering)\n+    TestSubscriber sub(chainActive.Tip()->GetBlockHash());\n+    RegisterValidationInterface(&sub);\n+\n+    // create a bunch of threads that repeatedly process a block generated above at random\n+    // this will create parallelism and randomness inside validation - the ValidationInterface\n+    // will subscribe to events generated during block validation and assert on ordering invariance\n+    boost::thread_group threads;\n+    for (int i = 0; i < 10; i++) {\n+        threads.create_thread([&blocks]() {\n+            bool blah;",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Calling this `ignored` might be more straightforward",
      "created_at": "2018-04-18T21:37:45Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r182577357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182577357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086368",
      "pull_request_review_id": 114022197,
      "id": 183086368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA4NjM2OA==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": 182557843,
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Extracted into FinalizeBlock - its probably worth refactoring BlockAssembler into a builder style class - would make unit tests much easier to write ... maybe one day",
      "created_at": "2018-04-20T15:25:02Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183086368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086382",
      "pull_request_review_id": 114022219,
      "id": 183086382,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA4NjM4Mg==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": 182558115,
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i agree with you - i originally had this on two lines - and then the linter put it all back on one",
      "created_at": "2018-04-20T15:25:05Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183086382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086405",
      "pull_request_review_id": 114022245,
      "id": 183086405,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA4NjQwNQ==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return pblock;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)\n+{\n+    if (height <= 0 || blocks.size() >= max_size) return;\n+\n+    bool gen_invalid = GetRand(100) < invalid_rate;\n+    bool gen_fork = GetRand(100) < branch_rate;\n+\n+    const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n+    blocks.push_back(pblock);\n+    if (!gen_invalid)",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": 182558380,
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it doesn't! but i put them in now",
      "created_at": "2018-04-20T15:25:09Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183086405",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183086405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183115412",
      "pull_request_review_id": 114058047,
      "id": 183115412,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzExNTQxMg==",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return Block(prev_hash);\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+    pblock->vtx.push_back(pblock->vtx[0]);\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()))\n+        ++(pblock->nNonce);",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "5f8f1bed6cfb6002e01c461f98dac7c0ea9290ff",
      "in_reply_to_id": 182557843,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, definitely agree. ",
      "created_at": "2018-04-20T17:14:09Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183115412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183115412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183487818",
      "pull_request_review_id": 114495677,
      "id": 183487818,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQ4NzgxOA==",
      "diff_hunk": "@@ -2673,9 +2673,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n \n             CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+            pindexMostWork = FindMostWorkChain();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "26bfdbaddbb9f13864deb7241c6d513f22c5ab62",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be good to add a comment here saying why it's important to recompute pindexMostWork each loop iteration (how sync could get stuck otherwise).",
      "created_at": "2018-04-23T18:07:38Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183487818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183487818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183489473",
      "pull_request_review_id": 114495677,
      "id": 183489473,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQ4OTQ3Mw==",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "6094ce73045fe0b4654ff94327c2059512af88fb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd think this could be written more simply as:\r\n\r\n```\r\nauto block = make_shared<CBlock>(ptemplate->block);\r\nblock->hashPrevBlock = ...\r\nreturn block;\r\n```\r\n\r\nIt looks like pblock is leaked currently, or is this not the case?",
      "created_at": "2018-04-23T18:13:15Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r183489473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183489473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184447870",
      "pull_request_review_id": 115647578,
      "id": 184447870,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDQ0Nzg3MA==",
      "diff_hunk": "@@ -2673,9 +2673,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n \n             CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+            pindexMostWork = FindMostWorkChain();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "26bfdbaddbb9f13864deb7241c6d513f22c5ab62",
      "in_reply_to_id": 183487818,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This might cause substantial slow-down during IBD or reindex, because currently FindMostWorkChain walks from the candidate tip to the fork point on the current chain to ensure none of the blocks are invalid.  We may be able to optimize that, but we also might want to consider another solution.",
      "created_at": "2018-04-26T16:13:33Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r184447870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184447870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184452863",
      "pull_request_review_id": 115647578,
      "id": 184452863,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDQ1Mjg2Mw==",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    CBlock* pblock = new CBlock(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+\n+    return std::make_shared<CBlock>(*pblock);\n+}\n+\n+std::shared_ptr<CBlock> FinalizeBlock(std::shared_ptr<CBlock> pblock)\n+{\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n+        ++(pblock->nNonce);\n+    }\n+\n+    return pblock;\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return FinalizeBlock(Block(prev_hash));\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+\n+    // a second coinbase will make this block invalid\n+    pblock->vtx.push_back(pblock->vtx[0]);",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "6094ce73045fe0b4654ff94327c2059512af88fb",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This method of constructing a bad block is not ideal, because this kind of invalidity is detected well before ConnectBlock.  In order to get better code coverage, I think it would be better to generate different kinds of invalid blocks, to test failure at different points in the validation process.\r\n\r\n(As it is,  I believe this method of making an invalid block is detectable in CheckBlock (merkle-tree fails validation due to duplicate transactions).  It would also fail in CheckBlock for having more than one coinbase, and it would fail in ContextualCheckBlock for having an invalid witness commitment.)",
      "created_at": "2018-04-26T16:28:47Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r184452863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184452863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186246920",
      "pull_request_review_id": 117798048,
      "id": 186246920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI0NjkyMA==",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <random.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+struct RegtestingSetup : public TestingSetup {\n+    RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_block_tests, RegtestingSetup)\n+\n+struct TestSubscriber : public CValidationInterface {\n+    uint256 m_expected_tip;\n+\n+    TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex* pindexNew, const CBlockIndex* pindexFork, bool fInitialDownload)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n+    }\n+\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n+        BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());\n+\n+        m_expected_tip = block->GetHash();\n+    }\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block)\n+    {\n+        BOOST_CHECK_EQUAL(m_expected_tip, block->GetHash());\n+\n+        m_expected_tip = block->hashPrevBlock;\n+    }\n+};\n+\n+std::shared_ptr<CBlock> Block(const uint256& prev_hash)\n+{\n+    static int i = 0;\n+    static uint64_t time = Params().GenesisBlock().nTime;\n+\n+    CScript pubKey;\n+    pubKey << i++ << OP_TRUE;\n+\n+    auto ptemplate = BlockAssembler(Params()).CreateNewBlock(pubKey, false);\n+    auto pblock = std::make_shared<CBlock>(ptemplate->block);\n+    pblock->hashPrevBlock = prev_hash;\n+    pblock->nTime = ++time;\n+\n+    CMutableTransaction txCoinbase(*pblock->vtx[0]);\n+    txCoinbase.vout.resize(1);\n+    txCoinbase.vin[0].scriptWitness.SetNull();\n+    pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n+\n+    return pblock;\n+}\n+\n+std::shared_ptr<CBlock> FinalizeBlock(std::shared_ptr<CBlock> pblock)\n+{\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+\n+    while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n+        ++(pblock->nNonce);\n+    }\n+\n+    return pblock;\n+}\n+\n+// construct a valid block\n+const std::shared_ptr<const CBlock> GoodBlock(const uint256& prev_hash)\n+{\n+    return FinalizeBlock(Block(prev_hash));\n+}\n+\n+// construct an invalid block (but with a valid header)\n+const std::shared_ptr<const CBlock> BadBlock(const uint256& prev_hash)\n+{\n+    auto pblock = Block(prev_hash);\n+\n+    CMutableTransaction coinbase_spend;\n+    coinbase_spend.vin.push_back(CTxIn(COutPoint(pblock->vtx[0]->GetHash(), 0), CScript(), 0));\n+    coinbase_spend.vout.push_back(pblock->vtx[0]->vout[0]);\n+\n+    CTransactionRef tx = MakeTransactionRef(coinbase_spend);\n+    pblock->vtx.push_back(tx);\n+\n+    auto ret = FinalizeBlock(pblock);\n+    return ret;\n+}\n+\n+void BuildChain(const uint256& root, int height, const unsigned int invalid_rate, const unsigned int branch_rate, const unsigned int max_size, std::vector<std::shared_ptr<const CBlock>>& blocks)\n+{\n+    if (height <= 0 || blocks.size() >= max_size) return;\n+\n+    bool gen_invalid = GetRand(100) < invalid_rate;\n+    bool gen_fork = GetRand(100) < branch_rate;\n+\n+    const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n+    blocks.push_back(pblock);\n+    if (!gen_invalid) {\n+        BuildChain(pblock->GetHash(), height - 1, invalid_rate, branch_rate, max_size, blocks);\n+    }\n+\n+    if (gen_fork) {\n+        blocks.push_back(GoodBlock(root));\n+        BuildChain(blocks.back()->GetHash(), height - 1, invalid_rate, branch_rate, max_size, blocks);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n+{\n+    // build a large-ish chain that's likely to have some forks\n+    std::vector<std::shared_ptr<const CBlock>> blocks;\n+    while (blocks.size() < 50) {\n+        blocks.clear();\n+        BuildChain(Params().GenesisBlock().GetHash(), 100, 15, 10, 500, blocks);\n+    }\n+\n+    bool ignored;\n+    CValidationState state;\n+    std::vector<CBlockHeader> headers;\n+    std::transform(blocks.begin(), blocks.end(), std::back_inserter(headers), [](std::shared_ptr<const CBlock> b) { return b->GetBlockHeader(); });\n+\n+    // Process all the headers so we understand the toplogy of the chain\n+    BOOST_CHECK(ProcessNewBlockHeaders(headers, state, Params()));\n+    ProcessNewBlock(Params(), std::make_shared<CBlock>(Params().GenesisBlock()), true, &ignored);\n+\n+    // subscribe to events (this subscriber will validate event ordering)\n+    TestSubscriber sub(chainActive.Tip()->GetBlockHash());",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "04176fc02f7ca1c0c56bb0c87da90f83673e95a5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As discussed on IRC, there's a race condition where callbacks scheduled prior to a client subscribing to callbacks can be delivered to those clients, if the scheduler didn't finish draining its queue before the new subscriber is added.\r\n\r\nThat causes this test to (rarely) fail, because we initialize the TestSubscriber with the genesis block, even though it might be notified of the genesis block's connection (which has already happened at this point!) if the callbacks were delayed.  This can be reproduced by adding a `MilliSleep()` call to `SingleThreadedSchedulerClient::ProcessQueue()`.\r\n\r\nThe call to `ProcessNewBlock` at line 141 above doesn't fix this issue; instead we need to ensure that there are no outstanding callbacks at the time the TestSubscriber is created, for instance by calling `SyncWithValidationInterfaceQueue()`.  Also we should hold `cs_main` before accessing `chainActive`:\r\n\r\n```\r\n    SyncWithValidationInterfaceQueue();\r\n\r\n    const CBlockIndex *initial_tip = nullptr;\r\n    {\r\n        LOCK(cs_main);\r\n        initial_tip = chainActive.Tip();\r\n    }\r\n\r\n    // subscribe to events (this subscriber will validate event ordering)\r\n    TestSubscriber sub(initial_tip->GetBlockHash());\r\n```",
      "created_at": "2018-05-05T00:35:55Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r186246920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186246920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186495495",
      "pull_request_review_id": 118084725,
      "id": 186495495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ5NTQ5NQ==",
      "diff_hunk": "@@ -144,6 +144,12 @@ class CChainState {\n       */\n     std::set<CBlockIndex*> g_failed_blocks;\n \n+    /**\n+     * the ChainState CriticalSection\n+     * A lock that must be held when modifying this ChainState - held in ActivateBestChain()\n+     */\n+    CCriticalSection m_cs_cs;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "c496b7b386a66fb4fc73d3bacd3db2a5c4bf7872",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe it may be worth adding 16 bytes to the source code to give this the mildly less confusing name `m_chainstate_cs` instead.",
      "created_at": "2018-05-07T17:46:00Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r186495495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186495495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186510101",
      "pull_request_review_id": 118102784,
      "id": 186510101,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUxMDEwMQ==",
      "diff_hunk": "@@ -2652,6 +2658,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n     // us in the middle of ProcessNewBlock - do not assume pblock is set\n     // sanely for performance or correctness!\n     AssertLockNotHeld(cs_main);\n+    LOCK(m_cs_cs);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "c496b7b386a66fb4fc73d3bacd3db2a5c4bf7872",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think it's worth commenting here with some explanation of the types of race conditions that this is designed to protect (along the lines of what is in the commit message, perhaps)",
      "created_at": "2018-05-07T18:38:15Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r186510101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186510101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2661,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186515013",
      "pull_request_review_id": 118102784,
      "id": 186515013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUxNTAxMw==",
      "diff_hunk": "@@ -119,5 +119,6 @@ struct TestMemPoolEntryHelper\n };\n \n CBlock getBlock13b8a();\n+std::ostream& operator<<(std::ostream& os, const uint256& num);",
      "path": "src/test/test_bitcoin.h",
      "position": null,
      "original_position": 4,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9dd61f272abc78e29762796eb7f7af90606d9e65",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps add a comment explaining why this is added?  (guessing it's because you want to use uint256's in BOOST_CHECK_EQUAL())",
      "created_at": "2018-05-07T18:55:17Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r186515013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186515013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186518125",
      "pull_request_review_id": 118102784,
      "id": 186518125,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUxODEyNQ==",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iomanip>\n+#include <memory>\n+#include <sstream>",
      "path": "src/test/validation_block_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9dd61f272abc78e29762796eb7f7af90606d9e65",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: doesn't seem like these includes are necessary at all, am I missing some dependency?",
      "created_at": "2018-05-07T19:06:13Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r186518125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186518125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187711869",
      "pull_request_review_id": 119554360,
      "id": 187711869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxMTg2OQ==",
      "diff_hunk": "@@ -2666,38 +2679,47 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             SyncWithValidationInterfaceQueue();\n         }\n \n-        const CBlockIndex *pindexFork;\n-        bool fInitialDownload;\n         {\n             LOCK(cs_main);\n-            ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+            CBlockIndex * pindexOldTip;\n+            CBlockIndex * starting_tip = chainActive.Tip();\n+            bool blocks_connected = false;\n+            do {\n+                // We absolutely may not unlock cs_main until we've made forward progress\n+                // (with the exception of shutdown due to hardware issues, low disk space, etc).\n+                ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+\n+                pindexOldTip = chainActive.Tip();\n+                if (pindexMostWork == nullptr) {\n+                    pindexMostWork = FindMostWorkChain();\n+                }\n \n-            CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+                // Whether we have anything to do at all.\n+                if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip()) {\n+                    break;\n+                }\n \n-            // Whether we have anything to do at all.\n-            if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip())\n-                return true;\n+                bool fInvalidFound = false;\n+                std::shared_ptr<const CBlock> nullBlockPtr;\n+                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+                    return false;\n+                blocks_connected = true;\n \n-            bool fInvalidFound = false;\n-            std::shared_ptr<const CBlock> nullBlockPtr;\n-            if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n-                return false;\n+                if (fInvalidFound) {\n+                    // Wipe cache, we may need another branch now.\n+                    pindexMostWork = nullptr;\n+                }\n+                pindexNewTip = chainActive.Tip();\n \n-            if (fInvalidFound) {\n-                // Wipe cache, we may need another branch now.\n-                pindexMostWork = nullptr;\n-            }\n-            pindexNewTip = chainActive.Tip();\n-            pindexFork = chainActive.FindFork(pindexOldTip);\n-            fInitialDownload = IsInitialBlockDownload();\n+                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                    assert(trace.pblock && trace.pindex);\n+                    GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n+                }\n+            } while (!chainActive.Tip() || (starting_tip && CBlockIndexWorkComparator()(chainActive.Tip(), starting_tip)));\n+            if(!blocks_connected) return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "8febf4850b11406883d457d3c63e713acfacf682",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `if (...`",
      "created_at": "2018-05-11T19:31:02Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187711869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187711869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2719,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187712808",
      "pull_request_review_id": 119554360,
      "id": 187712808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxMjgwOA==",
      "diff_hunk": "@@ -144,6 +144,12 @@ class CChainState {\n       */\n     std::set<CBlockIndex*> g_failed_blocks;\n \n+    /**\n+     * the ChainState CriticalSection\n+     * A lock that must be held when modifying this ChainState - held in ActivateBestChain()",
      "path": "src/validation.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "8febf4850b11406883d457d3c63e713acfacf682",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> must be held when modifying this ChainState\r\n\r\nSeems like this statement is too broad; many aspects of this object are modified without this lock held (e.g. `g_failed_blocks`, `setBlockIndexCandidates`).",
      "created_at": "2018-05-11T19:34:48Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187712808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187712808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187712965",
      "pull_request_review_id": 119554360,
      "id": 187712965,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxMjk2NQ==",
      "diff_hunk": "@@ -2653,6 +2660,12 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n     // sanely for performance or correctness!\n     AssertLockNotHeld(cs_main);\n \n+    // ABC maintains a fair degree of expensive to calculate internal state",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "8febf4850b11406883d457d3c63e713acfacf682",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had a bit of trouble parsing this comment initially - might be easier to read if you wrote \"expensive-to-calculate\" instead?",
      "created_at": "2018-05-11T19:35:33Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187712965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187712965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187714139",
      "pull_request_review_id": 119556912,
      "id": 187714139,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxNDEzOQ==",
      "diff_hunk": "@@ -2666,38 +2666,47 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             SyncWithValidationInterfaceQueue();\n         }\n \n-        const CBlockIndex *pindexFork;\n-        bool fInitialDownload;\n         {\n             LOCK(cs_main);\n-            ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+            CBlockIndex * pindexOldTip;\n+            CBlockIndex * starting_tip = chainActive.Tip();\n+            bool blocks_connected = false;\n+            do {\n+                // We absolutely may not unlock cs_main until we've made forward progress\n+                // (with the exception of shutdown due to hardware issues, low disk space, etc).\n+                ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+\n+                pindexOldTip = chainActive.Tip();\n+                if (pindexMostWork == nullptr) {\n+                    pindexMostWork = FindMostWorkChain();\n+                }\n \n-            CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+                // Whether we have anything to do at all.\n+                if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip()) {\n+                    break;\n+                }\n \n-            // Whether we have anything to do at all.\n-            if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip())\n-                return true;\n+                bool fInvalidFound = false;\n+                std::shared_ptr<const CBlock> nullBlockPtr;\n+                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+                    return false;\n+                blocks_connected = true;\n \n-            bool fInvalidFound = false;\n-            std::shared_ptr<const CBlock> nullBlockPtr;\n-            if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n-                return false;\n+                if (fInvalidFound) {\n+                    // Wipe cache, we may need another branch now.\n+                    pindexMostWork = nullptr;\n+                }\n+                pindexNewTip = chainActive.Tip();\n \n-            if (fInvalidFound) {\n-                // Wipe cache, we may need another branch now.\n-                pindexMostWork = nullptr;\n-            }\n-            pindexNewTip = chainActive.Tip();\n-            pindexFork = chainActive.FindFork(pindexOldTip);\n-            fInitialDownload = IsInitialBlockDownload();\n+                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                    assert(trace.pblock && trace.pindex);\n+                    GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n+                }\n+            } while (!chainActive.Tip() || (starting_tip && CBlockIndexWorkComparator()(chainActive.Tip(), starting_tip)));\n+            if(!blocks_connected) return true;\n \n-            for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n-                assert(trace.pblock && trace.pindex);\n-                GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n-            }\n+            const CBlockIndex * pindexFork = chainActive.FindFork(pindexOldTip);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "4931c6d298a4eb15eaf7ee06d5a947944d1356e7",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if this is my fault or not, but this definitely needs to be finding the fork since starting_tip for the notifications, not just since the last loop iteration. Also, we should probably move the UpdatedBlockTip callback generation inside the pindexFork != pindexNewTip check as otherwise you'll get rather nonsense callbacks (and none of the callers seem to rely on any specific behavior). Either way behavior needs documentation in validationinterface.h (or I can do it in #12979 once this gets merged).",
      "created_at": "2018-05-11T19:40:19Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187714139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187714139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2708,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187714426",
      "pull_request_review_id": 119556912,
      "id": 187714426,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxNDQyNg==",
      "diff_hunk": "@@ -2653,6 +2660,12 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n     // sanely for performance or correctness!\n     AssertLockNotHeld(cs_main);\n \n+    // ABC maintains a fair degree of expensive to calculate internal state\n+    // because this function periodically releases cs_main so that it does not lock up other threads for too long\n+    // during large re-orgs - and to allow for e.g. the callback queue to drain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "1eee5ef33b0b28da510a400da951bd3f4a60dcb3",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: comment is slightly wrong now, we dont release cs_main during large reorgs, only large connects.",
      "created_at": "2018-05-11T19:41:43Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187714426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187714426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2665,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187718074",
      "pull_request_review_id": 119556912,
      "id": 187718074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzcxODA3NA==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9c31fa3228b444295b8b722252431ceaac8738ef",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isnt sufficient - just because two things are ordered does not mean they have a consistent view into memory unless there was something that triggered a flush. In practice I believe the lock inside of the SingleThreadedSchedulerClient provides this, but that's certainly not guaranteed in the future. A release-acquire should be sufficient, however.",
      "created_at": "2018-05-11T19:57:26Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187718074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187718074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187779292",
      "pull_request_review_id": 119632903,
      "id": 187779292,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc3OTI5Mg==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9c31fa3228b444295b8b722252431ceaac8738ef",
      "in_reply_to_id": 187718074,
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "don't quite understand what you mean here - isn't the whole purpose of SingleThreadedSchedulerClient to ensure internally consistent ordering/views of callbacks on a single client? if a memory barrier is somehow necessary to achieve this (like you I think the lock is sufficient for now) then that should be done in the SingleThreadedSchedulerClient and not be the caller's responsibility. This test was intended to demonstrate that the api guarantees this behavior to users.",
      "created_at": "2018-05-12T18:04:16Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187779292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187779292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187806582",
      "pull_request_review_id": 119659952,
      "id": 187806582,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgwNjU4Mg==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9c31fa3228b444295b8b722252431ceaac8738ef",
      "in_reply_to_id": 187718074,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The C++ memory model does not provide any ordering guarantees across variables at different memory locations unless you have a) some operation dependency tree which creates such an order, or b) a rel_acq/seq_cst operation somewhere which implicitly creates such an order (which a mutex lock/unlock essentially implicitly creates). So if, eg, the SingleThreadedSchedulerClient used only relaxed operations to load the next callback to call, and both callback clients update the variable, there is no happens-before relationship created on the variable and you may not have consistent results. Having the rel_acq implied by the internal lock provides what you want implicitly, but its not a guarantee. A release/acquire operation should be sufficient here.",
      "created_at": "2018-05-13T16:35:47Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187806582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187806582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187976777",
      "pull_request_review_id": 119862397,
      "id": 187976777,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk3Njc3Nw==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9c31fa3228b444295b8b722252431ceaac8738ef",
      "in_reply_to_id": 187718074,
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh hmm - but each client only interacts with its own \"counter\" there's no sharing across clients in this tests. I'm simply checking that for each client, its own callbacks are processed sequentially - which i think is something that the singlethreadedschedulerclient api is supposed to guarantee (otherwise might as well just use the raw scheduler) - and no current test existed",
      "created_at": "2018-05-14T14:35:56Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r187976777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187976777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188017471",
      "pull_request_review_id": 119912351,
      "id": 188017471,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAxNzQ3MQ==",
      "diff_hunk": "@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; i++) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here",
      "path": "src/test/scheduler_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "9c31fa3228b444295b8b722252431ceaac8738ef",
      "in_reply_to_id": 187718074,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ugh, my memory of the C++ memory model was slightly faulty, I've updated the comment above, though its much less a concern now (however should sitll be fixed). You could use relaxed operations to try to optimistically fetch the next callback to execute, succeed, and then have one thread run a callback, the other thread run a second callback but for the same client, and create no dependancy. On many non-x86 platforms the CPU is free to reorder (apparently) unrelated stores/loads.",
      "created_at": "2018-05-14T16:29:43Z",
      "updated_at": "2018-05-16T12:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r188017471",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188017471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188634716",
      "pull_request_review_id": 120651738,
      "id": 188634716,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODYzNDcxNg==",
      "diff_hunk": "@@ -2666,45 +2666,53 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             SyncWithValidationInterfaceQueue();\n         }\n \n-        const CBlockIndex *pindexFork;\n-        bool fInitialDownload;\n         {\n             LOCK(cs_main);\n-            ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+            CBlockIndex* starting_tip = chainActive.Tip();\n+            bool blocks_connected = false;\n+            do {\n+                // We absolutely may not unlock cs_main until we've made forward progress\n+                // (with the exception of shutdown due to hardware issues, low disk space, etc).\n+                ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+\n+                if (pindexMostWork == nullptr) {\n+                    pindexMostWork = FindMostWorkChain();\n+                }\n \n-            CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+                // Whether we have anything to do at all.\n+                if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip()) {\n+                    break;\n+                }\n \n-            // Whether we have anything to do at all.\n-            if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip())\n-                return true;\n+                bool fInvalidFound = false;\n+                std::shared_ptr<const CBlock> nullBlockPtr;\n+                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+                    return false;\n+                blocks_connected = true;",
      "path": "src/validation.cpp",
      "position": 70,
      "original_position": 36,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: This is not a very good variable name, as ABCStep can return true even if no blocks were connected.",
      "created_at": "2018-05-16T13:57:27Z",
      "updated_at": "2018-05-16T19:21:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r188634716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188634716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2704,
      "original_line": 2691,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188636798",
      "pull_request_review_id": 120651738,
      "id": 188636798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODYzNjc5OA==",
      "diff_hunk": "@@ -2666,45 +2666,53 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n             SyncWithValidationInterfaceQueue();\n         }\n \n-        const CBlockIndex *pindexFork;\n-        bool fInitialDownload;\n         {\n             LOCK(cs_main);\n-            ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+            CBlockIndex* starting_tip = chainActive.Tip();\n+            bool blocks_connected = false;\n+            do {\n+                // We absolutely may not unlock cs_main until we've made forward progress\n+                // (with the exception of shutdown due to hardware issues, low disk space, etc).\n+                ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+\n+                if (pindexMostWork == nullptr) {\n+                    pindexMostWork = FindMostWorkChain();\n+                }\n \n-            CBlockIndex *pindexOldTip = chainActive.Tip();\n-            if (pindexMostWork == nullptr) {\n-                pindexMostWork = FindMostWorkChain();\n-            }\n+                // Whether we have anything to do at all.\n+                if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip()) {\n+                    break;\n+                }\n \n-            // Whether we have anything to do at all.\n-            if (pindexMostWork == nullptr || pindexMostWork == chainActive.Tip())\n-                return true;\n+                bool fInvalidFound = false;\n+                std::shared_ptr<const CBlock> nullBlockPtr;\n+                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+                    return false;\n+                blocks_connected = true;\n \n-            bool fInvalidFound = false;\n-            std::shared_ptr<const CBlock> nullBlockPtr;\n-            if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n-                return false;\n+                if (fInvalidFound) {\n+                    // Wipe cache, we may need another branch now.\n+                    pindexMostWork = nullptr;\n+                }\n+                pindexNewTip = chainActive.Tip();\n \n-            if (fInvalidFound) {\n-                // Wipe cache, we may need another branch now.\n-                pindexMostWork = nullptr;\n-            }\n-            pindexNewTip = chainActive.Tip();\n-            pindexFork = chainActive.FindFork(pindexOldTip);\n-            fInitialDownload = IsInitialBlockDownload();\n+                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                    assert(trace.pblock && trace.pindex);\n+                    GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n+                }\n+            } while (!chainActive.Tip() || (starting_tip && CBlockIndexWorkComparator()(chainActive.Tip(), starting_tip)));",
      "path": "src/validation.cpp",
      "position": 93,
      "original_position": 59,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "ecc3c4a019e6db30e208b8554b1a3658dcb9a80a",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe this means we'll infinite loop if we ever had a bug like the race condition that this PR fixes, that could cause us to invoke ABCStep with a pindexMostWork that is less work than our tip.\r\n\r\nI think an infinite loop would be strictly worse than an assert failure, so could we also add an assert above that pindexMostWork has more work than chainActive.Tip(), before we invoke ABCStep?",
      "created_at": "2018-05-16T14:03:03Z",
      "updated_at": "2018-05-16T19:21:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r188636798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188636798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2716,
      "original_line": 2703,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188742314",
      "pull_request_review_id": 120651738,
      "id": 188742314,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc0MjMxNA==",
      "diff_hunk": "@@ -144,6 +144,12 @@ class CChainState {\n       */\n     std::set<CBlockIndex*> g_failed_blocks;\n \n+    /**\n+     * the ChainState CriticalSection\n+     * A lock that must be held when modifying this ChainState - held in ActivateBestChain()",
      "path": "src/validation.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "dd435ad40267f5c50ff17533c696f9302829a6a6",
      "original_commit_id": "8febf4850b11406883d457d3c63e713acfacf682",
      "in_reply_to_id": 187712808,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree -- this is more of a lock on the logic in ABC than any particular data structure.  The comment in ABC itself is pretty good though.",
      "created_at": "2018-05-16T19:18:17Z",
      "updated_at": "2018-05-16T19:21:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13023#discussion_r188742314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188742314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13023"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    }
  ]
}