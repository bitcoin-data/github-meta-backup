{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
    "id": 600412038,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjAwNDEyMDM4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21527",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21527.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21527.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/023909c6382ec7ea27e94ca832b85ad3b2045fba",
    "number": 21527,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "net_processing: lock clean up",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`cs_sendProcessing` is replaced by a private mutex in net_processing, non-orphan-specific things are moved out from `g_cs_orphans` and `g_cs_orphans` is replaced by a private mutex in txorphanage.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2021-03-25T04:16:30Z",
    "updated_at": "2022-08-29T06:54:34Z",
    "closed_at": "2022-08-29T06:54:34Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "ee62494b4bc8b82c7ff3146ac2fb204536635bb4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "ajtowns:202102-orphanworkset",
      "ref": "202102-orphanworkset",
      "sha": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 262427,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T19:54:41Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 257,
    "deletions": 230,
    "changed_files": 15,
    "commits": 18,
    "review_comments": 89,
    "comments": 24
  },
  "events": [
    {
      "event": "labeled",
      "id": 4505610290,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1MDU2MTAyOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4505610290",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T04:20:47Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 806478833,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjQ3ODgzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806478833",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T08:57:08Z",
      "updated_at": "2022-05-20T19:43:10Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25168](https://github.com/bitcoin/bitcoin/pull/25168) (refactor: Avoid passing params where not needed by MarcoFalke)\n* [#24970](https://github.com/bitcoin/bitcoin/pull/24970) (net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-806478833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 620835937,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwODM1OTM3",
      "url": null,
      "actor": null,
      "commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Lots of minor review comments inline, but a bit of high-level design feedback:\r\n\r\n- I'm not at all convinced by the `g_mutex_message_handler`. It seems like you're trying to reinvent thread_local storage. That makes potential future changes difficult. It also adds unnecessary coupling between net and net_processing.\r\n- This PR changes orphan processing from being done for the peer that provided the parent to the peer that provided the orphan. I think that's fine, but perhaps we should split the PR into one that does refactoring only and one that has behaviour changes.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-620835937",
      "submitted_at": "2021-03-25T10:13:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4616928083,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNjkyODA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4616928083",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T05:36:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4616995320,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNjk5NTMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4616995320",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T05:59:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4617082895,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNzA4Mjg5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4617082895",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:24:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4617187124,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNzE4NzEyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4617187124",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:52:00Z"
    },
    {
      "event": "commented",
      "id": 823022635,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzAyMjYzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823022635",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:53:00Z",
      "updated_at": "2021-04-20T06:53:00Z",
      "author_association": "MEMBER",
      "body": "Rebased, some of the suggestions picked up, reworked the \"message handler\" mutex.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823022635",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 639768190,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5NzY4MTkw",
      "url": null,
      "actor": null,
      "commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I don't understand the second commit log: _SendMessages() is now protected internally by m_mutex_messages; so this additional lock is not useful._ `SendMessages()` is not protected by the new mutex as far as I can see.\r\n\r\nI prefer the approach in #21563, which locks the mutex whenever any `NetEvents` method is called.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-639768190",
      "submitted_at": "2021-04-20T10:15:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 823260165,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzI2MDE2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823260165",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T13:08:48Z",
      "updated_at": "2021-04-20T13:08:48Z",
      "author_association": "MEMBER",
      "body": "I've re-reviewed the locking changes and they look reasonable. There are still a few review comments outstanding. I'm happy to review this PR again once those have been addressed.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823260165",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4633700200,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYzMzcwMDIwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633700200",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:22:01Z"
    },
    {
      "event": "renamed",
      "id": 4633742824,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDYzMzc0MjgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633742824",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:37:22Z",
      "rename": {
        "from": "NOMERGE: net_processing: orphan handling changes ",
        "to": "net_processing: lock clean up"
      }
    },
    {
      "event": "commented",
      "id": 825228907,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTIyODkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825228907",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:15Z",
      "updated_at": "2021-04-22T22:43:15Z",
      "author_association": "MEMBER",
      "body": "I think this is now cleaned up, and ready for review. The behaviour changes that were in the last commit are now deferred to https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans . ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-825228907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 4633759637,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2MzM3NTk2Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633759637",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:30Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "ready_for_review",
      "id": 4633760276,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQ0NjMzNzYwMjc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633760276",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:45Z"
    },
    {
      "event": "subscribed",
      "id": 4633781902,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MzM3ODE5MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633781902",
      "actor": {
        "login": "Sooraj-Kumar-Gogia",
        "id": 81988522,
        "node_id": "MDQ6VXNlcjgxOTg4NTIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/81988522?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sooraj-Kumar-Gogia",
        "html_url": "https://github.com/Sooraj-Kumar-Gogia",
        "followers_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/followers",
        "following_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/subscriptions",
        "organizations_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/orgs",
        "repos_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/repos",
        "events_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:52:11Z"
    },
    {
      "event": "labeled",
      "id": 4640945939,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2NDA5NDU5Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4640945939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-25T09:20:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 826344035,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjM0NDAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826344035",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-25T15:38:13Z",
      "updated_at": "2021-04-25T15:38:13Z",
      "author_association": "MEMBER",
      "body": "When you rebase this, there are a few files that no longer need to include txorphanage.h:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex bb5b144802..e7b5ed60e3 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -52,7 +52,6 @@\r\n #include <torcontrol.h>\r\n #include <txdb.h>\r\n #include <txmempool.h>\r\n-#include <txorphanage.h>\r\n #include <util/asmap.h>\r\n #include <util/check.h>\r\n #include <util/moneystr.h>\r\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\r\nindex 7b99193ad0..5a71b25768 100644\r\n--- a/src/test/fuzz/process_message.cpp\r\n+++ b/src/test/fuzz/process_message.cpp\r\n@@ -18,7 +18,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validationinterface.h>\r\n #include <version.h>\r\n \r\ndiff --git a/src/test/fuzz/process_messages.cpp b/src/test/fuzz/process_messages.cpp\r\nindex 11b236c9bd..f8b1c8fc90 100644\r\n--- a/src/test/fuzz/process_messages.cpp\r\n+++ b/src/test/fuzz/process_messages.cpp\r\n@@ -13,7 +13,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validation.h>\r\n #include <validationinterface.h>\r\n```\r\n\r\n</details>\r\n\r\nThose files were only including txorphange.h to use the g_cs_orphans mutex.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-826344035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4661393731,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2MTM5MzczMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661393731",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:06:13Z"
    },
    {
      "event": "unlabeled",
      "id": 4661439139,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDY2MTQzOTEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661439139",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:14:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4661457592,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2MTQ1NzU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661457592",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:18:32Z"
    },
    {
      "event": "commented",
      "id": 829077016,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyOTA3NzAxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829077016",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:21:17Z",
      "updated_at": "2021-04-29T09:21:17Z",
      "author_association": "MEMBER",
      "body": "Rebased (and likewise the whohandlesorphans followup)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-829077016",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 648135263,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ4MTM1MjYz",
      "url": null,
      "actor": null,
      "commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 584043a0203332fe645529b1c27c086e4f14a61c\r\n\r\nVery nice cleanup.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-648135263",
      "submitted_at": "2021-04-29T12:40:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 831142078,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTE0MjA3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z",
      "updated_at": "2021-05-03T09:32:51Z",
      "author_association": "MEMBER",
      "body": "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @sipa has been requested to review this pull request as specified in the REVIEWERS file.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-831142078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4677165334,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3NzE2NTMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4677165334",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z"
    },
    {
      "event": "subscribed",
      "id": 4677165336,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzcxNjUzMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4677165336",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z"
    },
    {
      "event": "labeled",
      "id": 4699125355,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2OTkxMjUzNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699125355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T03:16:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4701503483,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwMTUwMzQ4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701503483",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:24:30Z"
    },
    {
      "event": "commented",
      "id": 834330923,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDMzMDkyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834330923",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:21Z",
      "updated_at": "2021-05-07T12:27:21Z",
      "author_association": "MEMBER",
      "body": "Rebased past #21845. cc @MarcoFalke @promag for reviews :)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834330923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4701520256,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwMTUyMDI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520256",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "subscribed",
      "id": 4701520258,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDE1MjAyNTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520258",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "mentioned",
      "id": 4701520263,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwMTUyMDI2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520263",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "subscribed",
      "id": 4701520266,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDE1MjAyNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520266",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "commented",
      "id": 834360334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDM2MDMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834360334",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T13:00:50Z",
      "updated_at": "2021-05-07T13:00:50Z",
      "author_association": "MEMBER",
      "body": "utACK 8b4f685ebef5eb14f049d04e2c4f4ce5b44878de\r\n\r\nDo you mind addressing https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740 while there are no other ACKs on the branch?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834360334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 4702011048,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDcwMjAxMTA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4702011048",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T13:40:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4702187219,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwMjE4NzIxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4702187219",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T14:04:17Z"
    },
    {
      "event": "commented",
      "id": 834466926,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDQ2NjkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834466926",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T14:39:42Z",
      "updated_at": "2021-05-07T14:39:42Z",
      "author_association": "MEMBER",
      "body": "ACK dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834466926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 655041297,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1MDQxMjk3",
      "url": null,
      "actor": null,
      "commit_id": "fec0ff16627c1cbf5545c9de8db19b749c90beee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968 🕵\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\ndd754fd73ab0fcbe9461a6a21b5fc2bc22faf968 🕵\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgcDAwAqL240wertSr+Mw2Ei6s6SQizRd2AzRniN6bec0MgUdiNK8aOz7CBTuf5\r\n3g5Jt5vqORpMkWidS6+JZFMDJQzOzcZXet+eGP6OpuUEFjUKQ2DXIPvRUvtZZU0s\r\nd0Ad75v5Ov/jw5dU/+Mh1o/eaNJvtvE0bkHJMZrounpUDIH+0M0XKuzCVDPe1NeN\r\nPomxQwCDlCBbpYJ02ca6oOo9mSzVi0IaMToCdb+S0nI3/1fZwJ2saN16w1ul9Xg+\r\n8w8Z6j9sxvV9DTTkQTVqv7ckyaXO7V/pZVGzW2FI2hqHYSf8LLRae07+Muqxlec7\r\n6ldtgIZE0v262nVbcWJFITGr6hrZPr/Oyo6FBfAZnNjZmr/7Z60hY2n2FSNu8GUG\r\nB84+424mEkH2oOcevu6GeP/GKoL/JXu1gLNxKKPUoOohBfTMHM1OfAeEVm/o/DnI\r\nxIhl10GoHg3jo127zutHb1TCvknUKCzJzPeHbVvUSJB9g5DIbKqPaABFn7k+cCUy\r\nzJ3COLUx\r\n=f8yk\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `04c8a7094b10796be32033da7a78c70f9926aef2456fc44aaece53aa2519e97d  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010804c8a7094b10796be32033da7a78c70f9926aef2456fc44aaece53aa2519e97df010e6984a50046b85f9751ce02adcc0381f08fff0108899f33747c05cd789c99839c0fc2acb08f020328a9c818e7ca87409f85bc29cadf8934eb564d2567d4db2cd171de23a797ad808f10460977b8df00884974b7dda4baa310083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01098ff5aff5cbbe59ecd8b2f63f2f7383a08f10460977b8df008da426e455d56a9790083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010bd02bb5dddaa70666f9c822eb55c30ec08f120e675d46d23a2e425ee65d2ac5a634712685cb1fc6ed97e3457f178223ebfcd3408f10460977b8df008f8fd6ab1fd94c1570083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-655041297",
      "submitted_at": "2021-05-09T06:05:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 658993554,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU4OTkzNTU0",
      "url": null,
      "actor": null,
      "commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-658993554",
      "submitted_at": "2021-05-13T15:35:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4751946460,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc1MTk0NjQ2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4751946460",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-17T03:51:35Z"
    },
    {
      "event": "reviewed",
      "id": 660637741,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwNjM3NzQx",
      "url": null,
      "actor": null,
      "commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660637741",
      "submitted_at": "2021-05-17T07:31:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 660646816,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwNjQ2ODE2",
      "url": null,
      "actor": null,
      "commit_id": "bdd227493602437d4b6ee2d366ca0a83189f071c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660646816",
      "submitted_at": "2021-05-17T08:02:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 660851825,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwODUxODI1",
      "url": null,
      "actor": null,
      "commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK d2f5cc9de12196c870b2079bffc38e90076074d4.\r\n\r\nVerified range-diff. Only significant difference was replacing `std::multimap<NodeId, uint256> m_peer_work_set` with `std::map<NodeId, std::set<uint256>> m_peer_work_set`.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660851825",
      "submitted_at": "2021-05-17T11:26:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "labeled",
      "id": 4786806404,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3ODY4MDY0MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4786806404",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-24T13:49:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4789937492,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc4OTkzNzQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789937492",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:09:28Z"
    },
    {
      "event": "unlabeled",
      "id": 4789971047,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDc4OTk3MTA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789971047",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:23:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4789982691,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc4OTk4MjY5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789982691",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:02Z"
    },
    {
      "event": "commented",
      "id": 847520754,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzUyMDc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847520754",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z",
      "updated_at": "2021-05-25T04:28:44Z",
      "author_association": "MEMBER",
      "body": "Rebased past #21186, addressed @jnewbery's nits.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-847520754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4789984452,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc4OTk4NDQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789984452",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z"
    },
    {
      "event": "subscribed",
      "id": 4789984457,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3ODk5ODQ0NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789984457",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z"
    },
    {
      "event": "commented",
      "id": 847768237,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0Nzc2ODIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847768237",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T10:55:54Z",
      "updated_at": "2021-05-25T10:55:54Z",
      "author_association": "MEMBER",
      "body": "Code review ACK d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-847768237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 667889439,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3ODg5NDM5",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-667889439",
      "submitted_at": "2021-05-26T17:05:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 669963251,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5OTYzMjUx",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-669963251",
      "submitted_at": "2021-05-27T09:38:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 862308967,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjMwODk2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862308967",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z",
      "updated_at": "2021-06-16T11:42:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> NACK the addition of m_mutex_message_handling.\r\n\r\n> Looks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.\r\n\r\n@vasild: Are you in a position where you can ACK this PR overall (with reservations) or would you prefer not to ACK it? Either is fine (obviously), I just suspect other reviewers may be waiting to see if your concerns are addressed or not before spending time reviewing this.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-862308967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4897332687,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDg5NzMzMjY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4897332687",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z"
    },
    {
      "event": "subscribed",
      "id": 4897332692,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4OTczMzI2OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4897332692",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z"
    },
    {
      "event": "reviewed",
      "id": 685461575,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1NDYxNTc1",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK, reviewed up to 1e3f227 so far",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-685461575",
      "submitted_at": "2021-06-16T18:19:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 687760801,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg3NzYwODAx",
      "url": null,
      "actor": null,
      "commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-687760801",
      "submitted_at": "2021-06-18T22:55:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 687771014,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg3NzcxMDE0",
      "url": null,
      "actor": null,
      "commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-687771014",
      "submitted_at": "2021-06-18T23:28:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 865057893,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTA1Nzg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/865057893",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z",
      "updated_at": "2021-06-21T14:02:13Z",
      "author_association": "MEMBER",
      "body": "> > NACK the addition of m_mutex_message_handling.\r\n> \r\n> > Looks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.\r\n> \r\n> @vasild: Are you in a position where you can ACK this PR overall (with reservations) or would you prefer not to ACK it? Either is fine (obviously), I just suspect other reviewers may be waiting to see if your concerns are addressed or not before spending time reviewing this.\r\n\r\nThe rest of this PR looks good overall (modulo some minor other comments I left). But the mutex `m_mutex_message_handling` looks [really strange](https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780) to me, with a [confusing comment](https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654705472).\r\n\r\nI would re-review carefully and probably ACK this PR if the mutex is removed. If needed later then it can be added in another PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-865057893",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4917039667,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkxNzAzOTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4917039667",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z"
    },
    {
      "event": "subscribed",
      "id": 4917039673,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MTcwMzk2NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4917039673",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z"
    },
    {
      "event": "commented",
      "id": 887393835,
      "node_id": "IC_kwDOABII58405I4r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887393835",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z",
      "updated_at": "2021-07-27T10:20:37Z",
      "author_association": "MEMBER",
      "body": "@ajtowns are you still working on this? I think this new net_processing lock is the best way we have to make progress with much of the net/net_processing/validation separation work.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-887393835",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 5073403815,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA3MzQwMzgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5073403815",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 5073403816,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwNzM0MDM4MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5073403816",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z"
    },
    {
      "event": "referenced",
      "id": 5082651072,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwODI2NTEwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5082651072",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1b84b99caa12417c1410956d8473ffb219e5eece",
      "commit_url": "https://api.github.com/repos/jnewbery/bitcoin/commits/1b84b99caa12417c1410956d8473ffb219e5eece",
      "created_at": "2021-07-28T21:39:02Z"
    },
    {
      "event": "commented",
      "id": 912129890,
      "node_id": "IC_kwDOABII5842Xf9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912129890",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T23:31:36Z",
      "updated_at": "2021-09-02T23:31:36Z",
      "author_association": "MEMBER",
      "body": "Rebased past #21562. Minor updates per reviews.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-912129890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5250498342,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAE49D8m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5250498342",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T23:32:12Z"
    },
    {
      "event": "commented",
      "id": 926635717,
      "node_id": "IC_kwDOABII5843O1bF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926635717",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-24T13:43:46Z",
      "updated_at": "2021-09-24T13:43:46Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, I like the idea of txorphanage being internally thread-safe",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-926635717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 5365611776,
      "node_id": "LE_lADOABII584yGaB7zwAAAAE_0L0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5365611776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-27T13:27:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5382984859,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFA2dSb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5382984859",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:12:55Z"
    },
    {
      "event": "commented",
      "id": 930467996,
      "node_id": "IC_kwDOABII5843ddCc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930467996",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:13:24Z",
      "updated_at": "2021-09-29T19:13:24Z",
      "author_association": "MEMBER",
      "body": "Rebased past #22976",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-930467996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5383012653,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFA2kEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5383012653",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:18:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 5514000086,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFIqPbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5514000086",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-25T14:20:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5520328450,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFJCYcC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5520328450",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T12:41:30Z"
    },
    {
      "event": "commented",
      "id": 951900670,
      "node_id": "IC_kwDOABII5844vNn-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951900670",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T12:42:37Z",
      "updated_at": "2021-10-26T12:42:37Z",
      "author_association": "MEMBER",
      "body": "Rebased past #23157",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-951900670",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5520567605,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFJDS01",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5520567605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T13:17:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 5597239938,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFNnxqC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5597239938",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T13:59:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5741577538,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFWOYVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5741577538",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T15:16:53Z"
    },
    {
      "event": "commented",
      "id": 989947680,
      "node_id": "IC_kwDOABII5847AWcg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/989947680",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T15:17:14Z",
      "updated_at": "2021-12-09T15:17:14Z",
      "author_association": "MEMBER",
      "body": "Rebased past a few conflicts.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-989947680",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5742332422,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFWRQoG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5742332422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T17:10:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 5940957539,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFiG9Fj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5940957539",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-24T09:40:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6187285970,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFwyn3S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187285970",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:41:48Z"
    },
    {
      "event": "commented",
      "id": 1059462475,
      "node_id": "IC_kwDOABII584_Jh1L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059462475",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:42:49Z",
      "updated_at": "2022-03-04T19:42:49Z",
      "author_association": "MEMBER",
      "body": "Rebased with the `cs_sendProcessing` parts split out into #24474; marking as draft while that one gets reviewed.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1059462475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "convert_to_draft",
      "id": 6187292301,
      "node_id": "CTDE_lADOABII584yGaB7zwAAAAFwypaN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187292301",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:43:00Z"
    },
    {
      "event": "unlabeled",
      "id": 6187316744,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFwyvYI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187316744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:48:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6192895960,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFxIBfY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6192895960",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:24:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6192945484,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFxINlM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6192945484",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:32:41Z"
    },
    {
      "event": "unlabeled",
      "id": 6193749918,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFxLR-e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6193749918",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T10:30:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6308780917,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAF4CFt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308780917",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T17:10:14Z"
    },
    {
      "event": "labeled",
      "id": 6496480741,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGDOG3l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6496480741",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T08:02:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6542685309,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGF-XR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6542685309",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T17:49:59Z"
    },
    {
      "event": "commented",
      "id": 1116381806,
      "node_id": "IC_kwDOABII585CiqJu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116381806",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T17:52:47Z",
      "updated_at": "2022-05-03T17:52:47Z",
      "author_association": "MEMBER",
      "body": "Rebased to keep up with #24474",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1116381806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 6542851230,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGF-_ye",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6542851230",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T18:13:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6615983755,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGKV-aL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6615983755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:06:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6616847284,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGKZRO0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616847284",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T14:46:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6616974158,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGKZwNO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616974158",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:00:06Z"
    },
    {
      "event": "unlabeled",
      "id": 6617111910,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGKaR1m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617111910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:16:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6641255726,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGL2YUu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641255726",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:21:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwYTMzMjRkODQ4NzhjYzg2ZGEwMmQxYzJlOGUyNzIzYWRiZjI5ZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
      "tree": {
        "sha": "c4974f8aa7695afce35e05567af8255708c79995",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4974f8aa7695afce35e05567af8255708c79995"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0de36941eca1bff91420dd878eb097db2b1a596c",
          "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0de36941eca1bff91420dd878eb097db2b1a596c"
        }
      ],
      "message": "net/net_processing: add missing thread safety annotations",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:31:34Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:31:34Z"
      },
      "sha": "70a3324d84878cc86da02d1c2e8e2723adbf29d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjYTlmYWRkNGI0YjQ1ZjI0NzZmMTQwM2M4ZTE3MDU3MDk2YWRjZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca9fadd4b4b45f2476f1403c8e17057096adcda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fca9fadd4b4b45f2476f1403c8e17057096adcda",
      "tree": {
        "sha": "b4563847168aa8eb81260eb472f36d4595fd8e21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4563847168aa8eb81260eb472f36d4595fd8e21"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
          "sha": "70a3324d84878cc86da02d1c2e8e2723adbf29d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/70a3324d84878cc86da02d1c2e8e2723adbf29d8"
        }
      ],
      "message": "net: mark TransportSerializer/m_serializer as const\n\nThe (V1)TransportSerializer instance CNode::m_serializer is used from\nmultiple threads via PushMessage without protection by a mutex. This\nis only thread safe because the class does not have any mutable state,\nso document that by marking the methods and the object as \"const\".",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:32:10Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T18:09:35Z"
      },
      "sha": "fca9fadd4b4b45f2476f1403c8e17057096adcda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyMWE5NmQ0MWIzMzRmZDc3NDkxZmNjNTQxNzkxZGU0OTY2YTA3NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021a96d41b334fd77491fcc541791de4966a0742",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/021a96d41b334fd77491fcc541791de4966a0742",
      "tree": {
        "sha": "8e3a5629659bd64ab0353300414222fc7c313f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e3a5629659bd64ab0353300414222fc7c313f99"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca9fadd4b4b45f2476f1403c8e17057096adcda",
          "sha": "fca9fadd4b4b45f2476f1403c8e17057096adcda",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fca9fadd4b4b45f2476f1403c8e17057096adcda"
        }
      ],
      "message": "net: mark CNode unique_ptr members as const\n\nDereferencing a unique_ptr is not necessarily thread safe. The reason\nthese are safe is because their values are set at construction and do\nnot change later; so mark them as const and set them via the initializer\nlist to guarantee that.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:37:54Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:37:54Z"
      },
      "sha": "021a96d41b334fd77491fcc541791de4966a0742"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkZjBiZDFlOGRiZmEyNDRiYTdjZjRiY2VkMGJkMTRlMjk3YzAyZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "tree": {
        "sha": "d42e124e4906e7640638b5545973ead24b9953f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d42e124e4906e7640638b5545973ead24b9953f5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021a96d41b334fd77491fcc541791de4966a0742",
          "sha": "021a96d41b334fd77491fcc541791de4966a0742",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/021a96d41b334fd77491fcc541791de4966a0742"
        }
      ],
      "message": "net: note CNode members that are treated as const\n\nm_permissionFlags and m_prefer_evict are treated as const -- they're\nonly set immediately after construction before any other thread has\naccess to the object, and not changed again afterwards. As such they\ndon't need to be marked atomic or guarded by a mutex; though it would\nprobably be better to actually mark them as const...",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:02Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T18:44:58Z"
      },
      "sha": "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4YzRmYWFjNDg0YjJkNGU0YTNiMWM4YmEwOTJmMjJkNjA1NmFiMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
      "tree": {
        "sha": "9723157a5c256b0c673b88772b344da730e3a155",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9723157a5c256b0c673b88772b344da730e3a155"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
          "sha": "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3"
        }
      ],
      "message": "net: add NetEventsInterface::g_mutex_msgproc_thread mutex\n\nThere are many cases where we asssume message processing is\nsingle-threaded in order for how we access node-related memory to be\nsafe. Add an explicit mutex that we can use to document this, which allows\nthe compiler to catch any cases where we try to access that memory from\nother threads and break that assumption.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:19Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:10:36Z"
      },
      "sha": "c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxYWY3ODUzNDZjZDJjOTMyZmQxMzEwZGYxMGY3NTdiYTEzNDZjMmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1af785346cd2c932fd1310df10f757ba1346c2b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b1af785346cd2c932fd1310df10f757ba1346c2b",
      "tree": {
        "sha": "2faf0ddf8a6d2b97bdfa5cc9b595b85d0fb5209f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2faf0ddf8a6d2b97bdfa5cc9b595b85d0fb5209f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
          "sha": "c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14"
        }
      ],
      "message": "net: drop cs_sendProcessing\n\nSendMessages() is now protected g_mutex_msgproc_thread; so this additional\nper-node mutex is redundant.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:22Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:49:48Z"
      },
      "sha": "b1af785346cd2c932fd1310df10f757ba1346c2b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlNzVlNzRlNmE1YjBkMjA2ODA3NWY3YTA3ZmJhN2YyYmUwMDUyMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
      "tree": {
        "sha": "aa73acaab0d574a675c283a3b1457b9b978e9f12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa73acaab0d574a675c283a3b1457b9b978e9f12"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1af785346cd2c932fd1310df10f757ba1346c2b",
          "sha": "b1af785346cd2c932fd1310df10f757ba1346c2b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b1af785346cd2c932fd1310df10f757ba1346c2b"
        }
      ],
      "message": "[move-only] net: move NetEventsInterface before CNode\n\nThis allows CNode members to be marked as guarded by the\ng_mutex_msgproc_thread mutex.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T09:56:19Z"
      },
      "sha": "8e75e74e6a5b0d2068075f7a07fba7f2be005211"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5YjcyZDIzNWNmNWMxN2VmYTc1NWZlMDUxMjU0YzFmYjdhNzI0OTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b72d235cf5c17efa755fe051254c1fb7a72498",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49b72d235cf5c17efa755fe051254c1fb7a72498",
      "tree": {
        "sha": "c09160514dc9e5107f02f6c7a3c23ed1729f2594",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c09160514dc9e5107f02f6c7a3c23ed1729f2594"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
          "sha": "8e75e74e6a5b0d2068075f7a07fba7f2be005211",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e75e74e6a5b0d2068075f7a07fba7f2be005211"
        }
      ],
      "message": "net: add thread safety annotations for CNode/Peer members accessed only via the msgproc thread",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:26Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T11:25:58Z"
      },
      "sha": "49b72d235cf5c17efa755fe051254c1fb7a72498"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjYTk2MTdkNDVmYjkzOWRhNjJiYWI3NzFiZjY5NWM2YjhlNzlmODg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca9617d45fb939da62bab771bf695c6b8e79f88",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca9617d45fb939da62bab771bf695c6b8e79f88",
      "tree": {
        "sha": "a89b565f7062627709f6a8ab11e854aa07bf7578",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a89b565f7062627709f6a8ab11e854aa07bf7578"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b72d235cf5c17efa755fe051254c1fb7a72498",
          "sha": "49b72d235cf5c17efa755fe051254c1fb7a72498",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49b72d235cf5c17efa755fe051254c1fb7a72498"
        }
      ],
      "message": "net_processing: add thread safety annotations for Peer members accessed only via the msgproc thread",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:08Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:08Z"
      },
      "sha": "3ca9617d45fb939da62bab771bf695c6b8e79f88"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5YzNiMjhhYjRjNDYyNTBkNWEyODEyYzkyYWQ1ZWNmZTUyOWQzZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
      "tree": {
        "sha": "46ddba46603b72de116edc674b92fb72c42479a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46ddba46603b72de116edc674b92fb72c42479a7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca9617d45fb939da62bab771bf695c6b8e79f88",
          "sha": "3ca9617d45fb939da62bab771bf695c6b8e79f88",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca9617d45fb939da62bab771bf695c6b8e79f88"
        }
      ],
      "message": "net_processing: extra transactions data are accessed only via the msgproc thread\n\nPreviously vExtraTxnForCompact and vExtraTxnForCompactIt were protected\nby g_cs_orphans; protect them by g_mutex_msgproc_thread instead, as they\nare only used during message processing.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:30Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:15:23Z"
      },
      "sha": "49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1M2U5YmMwYThmYTNmZDE2NTc1NWEzNjE0OTIzMWUzZWY1NDY1Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953e9bc0a8fa3fd165755a36149231e3ef546538",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/953e9bc0a8fa3fd165755a36149231e3ef546538",
      "tree": {
        "sha": "8f794fab194ea46212dadff4333b70a0826d6571",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f794fab194ea46212dadff4333b70a0826d6571"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
          "sha": "49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee"
        }
      ],
      "message": "Remove unnecessary includes of txorphanage.h",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-04-29T09:14:23Z"
      },
      "sha": "953e9bc0a8fa3fd165755a36149231e3ef546538"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkZDU2OGY0MWUyNjUxYmYxZWNlZWEyZTE4ZThmODY0MzUyOWMwMmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
      "tree": {
        "sha": "e5c90e7d9cfd599a528dc4acb1da35fb78d000d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5c90e7d9cfd599a528dc4acb1da35fb78d000d3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953e9bc0a8fa3fd165755a36149231e3ef546538",
          "sha": "953e9bc0a8fa3fd165755a36149231e3ef546538",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/953e9bc0a8fa3fd165755a36149231e3ef546538"
        }
      ],
      "message": "net_processing: Pass a Peer to ProcessOrphanTx",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T07:32:51Z"
      },
      "sha": "0dd568f41e2651bf1eceea2e18e8f8643529c02c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk4M2E2YzA5Y2E3ZTUxMzk2YWUxNzBkZjNiODEwMGY2ODJjOWQwZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
      "tree": {
        "sha": "fd862a16a27e30edf915d703055733101dfe9e5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd862a16a27e30edf915d703055733101dfe9e5a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
          "sha": "0dd568f41e2651bf1eceea2e18e8f8643529c02c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd568f41e2651bf1eceea2e18e8f8643529c02c"
        }
      ],
      "message": "net_processing: Localise orphan_work_set handling to ProcessOrphanTx",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T08:07:26Z"
      },
      "sha": "983a6c09ca7e51396ae170df3b8100f682c9d0fc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzMGQxZGEyMzUwYjViODM5YTE0MGZiNWE5MTFlYTFjMmNlNjcyYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
      "tree": {
        "sha": "25064d51b6e2d28b1460dd076993a5db629aba85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25064d51b6e2d28b1460dd076993a5db629aba85"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
          "sha": "983a6c09ca7e51396ae170df3b8100f682c9d0fc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/983a6c09ca7e51396ae170df3b8100f682c9d0fc"
        }
      ],
      "message": "txorphange/net_processing: move orphan workset to txorphanage",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T14:03:23Z"
      },
      "sha": "d30d1da2350b5b839a140fb5a911ea1c2ce672ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViM2Y0ZDQxMDFlZGIyZWNlYmM4MTU1YTJlMTJjOWUyMmQzNWJiMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
      "tree": {
        "sha": "a9f65147c9f40f16f7abe216f823314b5a2a5941",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9f65147c9f40f16f7abe216f823314b5a2a5941"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
          "sha": "d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d30d1da2350b5b839a140fb5a911ea1c2ce672ba"
        }
      ],
      "message": "txorphanage: make m_peer_work_set private",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T14:28:16Z"
      },
      "sha": "5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0YTg5NjJlYWQ2YWNkYTI5MzYwMjMzYWQ4ZjE5NGQ0NGM1YzM0Y2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04a8962ead6acda29360233ad8f194d44c5c34cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04a8962ead6acda29360233ad8f194d44c5c34cb",
      "tree": {
        "sha": "a0f761bdd83cea08a8c3b97e5fc28218ccce5811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0f761bdd83cea08a8c3b97e5fc28218ccce5811"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
          "sha": "5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33"
        }
      ],
      "message": "Move all g_cs_orphans locking to txorphanage",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-03-02T15:12:12Z"
      },
      "sha": "04a8962ead6acda29360233ad8f194d44c5c34cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwMzc3MTZmZTg5YjRlMmI4NGFjYjFkYTJhNTRlMGYyMGQxNmI2M2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
      "tree": {
        "sha": "833616d2856cec42eebaf02235deac2716817cac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/833616d2856cec42eebaf02235deac2716817cac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04a8962ead6acda29360233ad8f194d44c5c34cb",
          "sha": "04a8962ead6acda29360233ad8f194d44c5c34cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04a8962ead6acda29360233ad8f194d44c5c34cb"
        }
      ],
      "message": "txorphanage: move g_cs_orphans to TxOrphanage::m_mutex",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-03-02T15:24:04Z"
      },
      "sha": "9037716fe89b4e2b84acb1da2a54e0f20d16b63d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyMzkwOWM2MzgyZWM3ZWEyN2U5NGNhODMyYjg1YWQzYjIwNDVmYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "tree": {
        "sha": "7eb91559ecdbabcf73064a99d4c8abe553b8e930",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7eb91559ecdbabcf73064a99d4c8abe553b8e930"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
          "sha": "9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9037716fe89b4e2b84acb1da2a54e0f20d16b63d"
        }
      ],
      "message": "txorphanage: fix missing includes",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-09-02T05:47:30Z"
      },
      "sha": "023909c6382ec7ea27e94ca832b85ad3b2045fba"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6646368027,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGMJ4cb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6646368027",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T22:42:45Z"
    },
    {
      "event": "unlabeled",
      "id": 6646407323,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGMKCCb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6646407323",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T22:55:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1132916061,
      "node_id": "IC_kwDOABII585Dhu1d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132916061",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T13:41:23Z",
      "updated_at": "2022-05-20T13:41:23Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1132916061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 6650813658,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGMa1za",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6650813658",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T13:41:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1229854478,
      "node_id": "IC_kwDOABII585JThcO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229854478",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T06:53:36Z",
      "updated_at": "2022-08-29T06:53:36Z",
      "author_association": "MEMBER",
      "body": "Closing this. If you'd like it resurrected please help https://github.com/bitcoin/bitcoin/pull/25174 make progress.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1229854478",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "closed",
      "id": 7275718943,
      "node_id": "CE_lADOABII584yGaB7zwAAAAGxqqkf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7275718943",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T06:54:34Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396",
      "pull_request_review_id": 620835937,
      "id": 601192396,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTE5MjM5Ng==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about removing this call? The comment above is incorrect (we only process one tx at most, not recursively), and we'll process the orphans in subsequent calls to `ProcessMessages()`. It seems strange that in this one case we can process up to two transactions in `ProcessMessage()` (the one that we just received, and up to one orphan child of it).",
      "created_at": "2021-03-25T08:28:45Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601192396",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659",
      "pull_request_review_id": 620835937,
      "id": 601207659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIwNzY1OQ==",
      "diff_hunk": "@@ -3871,8 +3871,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;\n+        if (more_orphans) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 185,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about moving this check up to immediately after the call to `ProcessOrphanTx()`? It's not possible to have both `more_orphans` be true _and_ have `m_getdata_requests` be non-empty:\r\n\r\n- `ProcessOrphanTx(*peer)` can only return true if there are elements in peer's orphan work set, which can only be true if the last network message processed was a `tx` (`m_peer_work_set` only gets added to when processing a `tx` or when processing an element of `m_peer_work_set`, and we won't process another network message until it's empty)\r\n- `m_getdata_requests` can only be non-empty if the last network message processed was a `getdata` (`m_getdata_requests` only gets added to when processing a `getdata`, and we won't process another message until it's empty)\r\n\r\nThat'd eliminate the need for a `more_orphans` variable, and make it immediately obvious that we're not going to process an orphan _and_ a getdata request on the same pass through `ProcessMessage()`.",
      "created_at": "2021-03-25T08:44:03Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601207659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830",
      "pull_request_review_id": 620835937,
      "id": 601210830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIxMDgzMA==",
      "diff_hunk": "@@ -3853,11 +3854,10 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         }\n     }\n \n+    bool more_orphans = false;\n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        more_orphans = ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 175,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be more concisely written as:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 02e2785c24..c90d73cb95 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3854,11 +3854,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\r\n         }\r\n     }\r\n \r\n-    bool more_orphans = false;\r\n-    {\r\n-        LOCK(cs_main);\r\n-        more_orphans = ProcessOrphanTx(*peer);\r\n-    }\r\n+    const bool more_orphans{WITH_LOCK(cs_main, return ProcessOrphanTx(*peer);)};\r\n \r\n     if (pfrom->fDisconnect)\r\n         return false;\r\n",
      "created_at": "2021-03-25T08:47:11Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601210830",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 3859,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165",
      "pull_request_review_id": 620835937,
      "id": 601221165,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMTE2NQ==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It'd be good to remove the `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` and only take the cs_main lock inside the while look (once we know that we have orphans to reprocess). In vast majority of cases we're taking and releasing cs_main for no reason because we have no orphans to process.",
      "created_at": "2021-03-25T08:57:13Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122",
      "pull_request_review_id": 620835937,
      "id": 601223122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMzEyMg==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well remembered to do this. Perhaps add a `TxOrphange::Empty()` function that returns whether there are any elements in any of the containers in the orphanage, and then assert `m_orphange.Empty()` in the `FinalizeNode()` logic when the last peer is deleted.",
      "created_at": "2021-03-25T08:58:51Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601223122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798",
      "pull_request_review_id": 620835937,
      "id": 601225798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyNTc5OA==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n+\n     std::map<uint256, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n         std::map<uint256, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTx(maybeErase->second.tx->GetHash());\n+            nErased += _EraseTx(maybeErase->second.tx->GetHash());\n         }\n     }\n-    if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\n+    if (nErased > 0 || work_erased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx and %d from orphan work set for peer=%d\\n\", nErased, work_erased, peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure that it's very interesting to log `work_erased`. It'll only ever be 0 (nothing in the work set) or 1 (items in the work set).",
      "created_at": "2021-03-25T09:01:24Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601225798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470",
      "pull_request_review_id": 620835937,
      "id": 601236470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIzNjQ3MA==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is a good idea. Anything that you guard with this mutex will never be accessible on other threads, which would prevent us from eg exposing it to RPC methods, or using it in validation interface callbacks. This seems like a way of reinventing thread local storage, which I don't think we want.\r\n\r\nIn addition, this mutex is exposed and used in both the net and net_processing layer, which adds to the coupling between those components. That's the opposite direction that I think we want to go in.",
      "created_at": "2021-03-25T09:11:32Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601236470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387",
      "pull_request_review_id": 620835937,
      "id": 601253387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI1MzM4Nw==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this possible? I think the logic in `GetTxToReconsider()` ensures that if true is returned, then porphanTx will not be null.",
      "created_at": "2021-03-25T09:26:41Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266",
      "pull_request_review_id": 620835937,
      "id": 601279266,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI3OTI2Ng==",
      "diff_hunk": "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a very strange interface. How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "created_at": "2021-03-25T09:49:02Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601279266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373",
      "pull_request_review_id": 620835937,
      "id": 601280373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MDM3Mw==",
      "diff_hunk": "@@ -10,8 +10,10 @@\n #include <primitives/transaction.h>\n #include <sync.h>\n \n-/** Guards orphan transactions and extra txs for compact blocks */\n-extern RecursiveMutex g_cs_orphans;\n+#include <map>\n+#include <optional>",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess this means you already tried using an optional in the return value of `GetTxToReconsider()`? ",
      "created_at": "2021-03-25T09:49:56Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601280373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910",
      "pull_request_review_id": 620835937,
      "id": 601283910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MzkxMA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think you need this lock. It was previously here to enforce that cs_main was taken before g_cs_orphans.\r\n\r\nIt can also be removed from the process_message and process_messages fuzz tests.",
      "created_at": "2021-03-25T09:53:10Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601283910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826",
      "pull_request_review_id": 620835937,
      "id": 601298826,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI5ODgyNg==",
      "diff_hunk": "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    void EraseForBlock(const CBlock& block);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into the from peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */",
      "path": "src/txorphanage.h",
      "position": 106,
      "original_position": 92,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is now incorrect. The multimap stores the node that provided the orphan tx.\r\n\r\nAlso, this data is redundant data with the `fromPeer` in the `OrphanTx` struct (this could easily be a set of txids to reconsider, and the originating peer is then looked up in the `OrphanTx` struct). We store it in the multimap for efficiency - the comment could be updated to indicate that.",
      "created_at": "2021-03-25T10:05:44Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601298826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 92,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595",
      "pull_request_review_id": 620999343,
      "id": 601391595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MTU5NQ==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601192396,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could process 3 txs I think -- the last orphan already in the workset (in ProcessMessages), one from a just received TX message, and an additional orphan whose parent was the contents of that TX message. I don't think it's problematic that way, but 1-non-trivial-ATMP-call per ProcessMessages invocation could be reasonable.",
      "created_at": "2021-03-25T11:27:43Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601391595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702",
      "pull_request_review_id": 621000254,
      "id": 601392702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MjcwMg==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601223122,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It crossed my mind that this might be another case where a multi index could be a win.",
      "created_at": "2021-03-25T11:28:46Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601392702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665",
      "pull_request_review_id": 621004986,
      "id": 601398665,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5ODY2NQ==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The reasoning isn't that this is particularly \"good\", it's that it's documenting the safety mechanisms we already have. It would have caught https://github.com/bitcoin/bitcoin/pull/21528#discussion_r601317221 for instance.\r\n\r\nnet_processing is fundamentally coupled with net -- it implements the NetEventsInterface defined and called from net. I mean I guess if you preferred, it could be `NetEventsInterface::m_mutex_message_handler`? (EDIT: actually, whether or not you prefer that, I think I do...)",
      "created_at": "2021-03-25T11:34:23Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601398665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123",
      "pull_request_review_id": 621006771,
      "id": 601401123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQwMTEyMw==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601253387,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`assert(porphanTx != nullptr)` seemed overkill and not having anything seemed like it might be annoying for static analysers",
      "created_at": "2021-03-25T11:36:39Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601401123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014",
      "pull_request_review_id": 621016147,
      "id": 601414014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDAxNA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I updated the comments which should still indicate why cs_main is needed there -- it needs to be locked before cs_vNodes, but cs_vNodes is locked first if you call StopThreads directly?",
      "created_at": "2021-03-25T11:48:29Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581",
      "pull_request_review_id": 621016668,
      "id": 601414581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDU4MQ==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601192396,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Very good point. I hadn't considered processing the orphan _before_ processing the net message.",
      "created_at": "2021-03-25T11:49:09Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590",
      "pull_request_review_id": 621019338,
      "id": 601416590,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNjU5MA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601253387,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about: `if (!Assume(porphanTx)) break` ?",
      "created_at": "2021-03-25T11:52:34Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601416590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013",
      "pull_request_review_id": 621026235,
      "id": 601422013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQyMjAxMw==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, very good point. And we can't take `cs_main` inside `StopNodes` because net isn't aware of `cs_main`.\r\n\r\nIt's outside the scope of this PR, but it'd be good to untangle this lock ordering dependency by eg making sure that cs_vNodes is not held when calling any PeerManager functions.",
      "created_at": "2021-03-25T12:00:57Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601422013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522",
      "pull_request_review_id": 621066590,
      "id": 601452522,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQ1MjUyMg==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "And if you're doing that then perhaps you can make it a `PeerManagerImpl::m_mutex_message_handler` and take it in `ProcessMessages()` and `SendMessages()`. Taking that lock once at the top of those functions would be very low cost (since there would never be any contention).",
      "created_at": "2021-03-25T12:46:18Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601452522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502",
      "pull_request_review_id": 639533523,
      "id": 616368502,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM2ODUwMg==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've done this now -- the first three commits introduce `m_mutex_messages`, remove `cs_sendProcessing` and move extra txns to be protected by `m_mutex_messages` instead of `g_cs_orphans`. I think it would be good to cherry-pick those commits into #21186 so that the moved addr variables can actually be marked as guarded by something.",
      "created_at": "2021-04-20T06:04:30Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616368502",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405",
      "pull_request_review_id": 639554968,
      "id": 616385405,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM4NTQwNQ==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think:\r\n\r\n * just call AddChildrenToWorkSet when a new tx arrives, don't also immediately process them (ie don't also call ProcessOrphanTx)\r\n * when ProcessOrphanTx does work, don't continue on to also do a ProcessMessage, give another peer a chance to get some work done first\r\n * have ProcessOrphanTx take cs_main only when necessary\r\n * make the GetTxToReconsider signature simpler\r\n \r\nwould all fit together nicely and be a good idea, but it also feels like it's adding a bit much to this PR?\r\n ",
      "created_at": "2021-04-20T06:39:32Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616385405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400",
      "pull_request_review_id": 639563941,
      "id": 616392400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5MjQwMA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See #21563",
      "created_at": "2021-04-20T06:52:36Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887",
      "pull_request_review_id": 639564557,
      "id": 616392887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5Mjg4Nw==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also see #21563",
      "created_at": "2021-04-20T06:53:25Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524",
      "pull_request_review_id": 639768190,
      "id": 616546524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU0NjUyNA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it'd be cleaner for the `m_mutex_messages` lock to be taken by ProcessMessage**s**, rather than ProcessMessage. That would remove the need to define an inner `_ProcessMessage` to be called when the mutex is already locked. It's also consistent with the comment on the `m_mutex_messages` member, which says \"is acquired by ProcessMessages and SendMessages\"",
      "created_at": "2021-04-20T10:14:46Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616546524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414",
      "pull_request_review_id": 639790506,
      "id": 616563414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU2MzQxNA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": 616546524,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is taken by `ProcessMessages()` (and also by `SendMessages()`), however `ProcessMessage()` is also called from the test suite, so cannot assume the lock has been taken. That's why the public interface, `ProcessMessage()`, is implemented as a wrapper that takes the lock, then calls the internal function.",
      "created_at": "2021-04-20T10:40:27Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616563414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184",
      "pull_request_review_id": 639919003,
      "id": 616661184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY2MTE4NA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": 616546524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, sorry - misread.",
      "created_at": "2021-04-20T13:02:28Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616661184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972",
      "pull_request_review_id": 639968531,
      "id": 616696972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY5Njk3Mg==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This PR changes orphan processing from being done for the peer that provided the parent to the peer that provided the orphan. I think that's fine, but perhaps we should split the PR into one that does refactoring only and one that has behaviour changes.\r\n\r\nHmm, might make sense to put the changes above together with the last commit in a separate PR, so this is just refactoring and the behaviour changes (who processes orphans, and how many orphans are processed in a cycle) are collected together.",
      "created_at": "2021-04-20T13:44:22Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616696972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448",
      "pull_request_review_id": 639989638,
      "id": 616712448,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjcxMjQ0OA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I agree that it's better to split the PR into two: one that refactors and one that changes behaviour.",
      "created_at": "2021-04-20T14:00:59Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616712448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454",
      "pull_request_review_id": 642749069,
      "id": 618789454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODc4OTQ1NA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is drafted at https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans",
      "created_at": "2021-04-22T22:41:31Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r618789454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668",
      "pull_request_review_id": 644149974,
      "id": 619829668,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgyOTY2OA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "21563 is merged",
      "created_at": "2021-04-25T15:02:06Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r619829668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740",
      "pull_request_review_id": 648135263,
      "id": 622998740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjk5ODc0MA==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Get an orphan transaction for a peer to work on and erase it from the peer's workset.\r\n```",
      "created_at": "2021-04-29T12:20:48Z",
      "updated_at": "2021-04-29T12:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298",
      "pull_request_review_id": 654495227,
      "id": 628237298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODIzNzI5OA==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": 622998740,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done-ish",
      "created_at": "2021-05-07T14:04:51Z",
      "updated_at": "2021-05-07T14:04:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628237298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177",
      "pull_request_review_id": 654531888,
      "id": 628263177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODI2MzE3Nw==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": 622998740,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thank you!",
      "created_at": "2021-05-07T14:39:58Z",
      "updated_at": "2021-05-07T14:39:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628263177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510",
      "pull_request_review_id": 655041297,
      "id": 628835510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNTUxMA==",
      "diff_hunk": "@@ -2093,6 +2095,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n {\n     AssertLockHeld(cs_main);\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "fec0ff16627c1cbf5545c9de8db19b749c90beee",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit fec0ff16627c1cbf5545c9de8db19b749c90beee:\r\n\r\nThe lock order is m_mutex_message_handling -> cs_main -> g_cs_orphans, so it would be nice to also order the Asserts here in the same way.",
      "created_at": "2021-05-09T05:21:12Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628835510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372",
      "pull_request_review_id": 655041297,
      "id": 628836372,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNjM3Mg==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "57900348db566105351b525ae18cc2830e9665b5:\r\n\r\nThis undocumented one-line-if might be a bit too minimal. Previously there was a nice comment as to why return early is needed here. Now the comment is gone, or at least can't be trivially attached to the return here.",
      "created_at": "2021-05-09T05:30:24Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628836372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074",
      "pull_request_review_id": 655041297,
      "id": 628839074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzOTA3NA==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "67618f024690bc9b926aa48ead23a0f687f03fe4: I know there is a check to avoid duplicate insertion of the same txid, but is there a reason to pick this datastructure, which doesn't disallow duplicate entries like set? Also insertion is trivially more expensive (log(all peers' work sets) vs log(this peers' work set)). Finally handling is done in insertion order, not in sorted order.",
      "created_at": "2021-05-09T06:00:19Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628839074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747",
      "pull_request_review_id": 655090428,
      "id": 628907747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODkwNzc0Nw==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": 628836372,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure what you mean by \"the comment is gone\" ? The \"maintains the order of responses and prevents ~vRecvGetData~ m_getdata_requests to grow unbounded\" is still there, but at least I thought that sensibly described the ~`!pfrom->vRecvGetData.empty()`~ `!peer->m_getdata_requests.empty()` check it remains attached to, and didn't really fit the \"more orphans to work on\" check. (EDIT: oops, was looking at 0.19 to see if there was any other comment)",
      "created_at": "2021-05-09T15:45:33Z",
      "updated_at": "2021-05-09T16:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628907747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871",
      "pull_request_review_id": 658925527,
      "id": 631826871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTgyNjg3MQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> ... is there a reason to pick this datastructure, which doesn't disallow duplicate entries ...\r\n\r\nI think the reason could be to allow (nodeX, tx1), (nodeX, tx2)?",
      "created_at": "2021-05-13T13:53:19Z",
      "updated_at": "2021-05-13T13:53:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631826871",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780",
      "pull_request_review_id": 658993554,
      "id": 631895780,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTg5NTc4MA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If it is single-threaded, then we don't need to guard anything with a mutex?\r\n\r\nIt looks to me that `PeerManagerImpl::m_mutex_message_handling` is useless because it is only being acquired from a single thread. No two threads are ever going to race to acquire it at the same time:\r\n\r\n```cpp\r\nThreadMessageHandler() // there is just one thread executing this\r\n   ProcessMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n   ...\r\n   SendMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n```\r\n\r\nI may be missing something but to me it looks like `m_mutex_message_handling` can be removed safely, which will reduce the complexity of the code.\r\n",
      "created_at": "2021-05-13T15:25:27Z",
      "updated_at": "2021-05-13T15:35:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205",
      "pull_request_review_id": 660532615,
      "id": 633205205,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTIwNQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that if you've got N peers each with K items in their work set, then a log search over everything is `log(N*K)`, and a log search for the peer followed by a log search or the work item is `log(N) + log(K)` which is the same. If there's one peer with K items and every other peer has 0, you instead get `log(K)` vs `log(N) + 1/N log(K)`; so a map of sets would be better than a set of pairs provided `N < K`, but probably isn't very interesting.\r\n\r\nI picked the data structure because I thought it was simpler than a set of pairs, but I don't think there's an adequate check to avoid duplicate insertion of the same txid (and to do that, you'd have to search through all the entries for a peer, which would be annoying).",
      "created_at": "2021-05-17T03:49:59Z",
      "updated_at": "2021-05-17T03:49:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205205",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889",
      "pull_request_review_id": 660533417,
      "id": 633205889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTg4OQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `map<NodeId,set<uint256>>`",
      "created_at": "2021-05-17T03:52:59Z",
      "updated_at": "2021-05-17T03:52:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688",
      "pull_request_review_id": 660534298,
      "id": 633206688,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNjY4OA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't need the mutex at runtime, but having the `GUARDED_BY(m_mutex_message_handling)` at compile time makes it easy to verify nobody's accidentally accessing the object from some other thread (either currently, or as a result of some future change, eg adding an RPC call that wants to expose some of the information stored in those objects). The cost of also having the mutex at runtime is trivial since there's never any contention on it.",
      "created_at": "2021-05-17T03:56:19Z",
      "updated_at": "2021-05-17T03:56:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633206688",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175",
      "pull_request_review_id": 660637741,
      "id": 633287175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI4NzE3NQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // lookup this peer's work set, ensuring it exists",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // Look up this peer's work set, ensuring it exists.\r\n```",
      "created_at": "2021-05-17T07:31:35Z",
      "updated_at": "2021-05-17T07:31:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633287175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884",
      "pull_request_review_id": 660646816,
      "id": 633293884,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI5Mzg4NA==",
      "diff_hunk": "@@ -2100,11 +2097,15 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n     AssertLockHeld(cs_main);\n     AssertLockHeld(g_cs_orphans);\n \n-    if (peer.m_orphan_work_set.empty()) return false;\n+    auto work_set_it = m_orphanage.m_peer_work_set.find(peer.m_id);\n+    if (work_set_it == m_orphanage.m_peer_work_set.end()) return false;\n+\n+    std::set<uint256>& orphan_work_set = work_set_it->second;\n \n-    while (!peer.m_orphan_work_set.empty()) {\n-        const uint256 orphanHash = *peer.m_orphan_work_set.begin();\n-        peer.m_orphan_work_set.erase(peer.m_orphan_work_set.begin());\n+    while (!orphan_work_set.empty()) {\n+        auto it = orphan_work_set.begin();\n+        const uint256 orphanHash = *it;\n+        it = orphan_work_set.erase(it);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "bdd227493602437d4b6ee2d366ca0a83189f071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit bdd227493602437d4b6ee2d366ca0a83189f071c:\r\n\r\nThe new value for `it` is unused. No need to set it here:\r\n\r\n```suggestion\r\n        orphan_work_set.erase(it);\r\n```",
      "created_at": "2021-05-17T07:42:41Z",
      "updated_at": "2021-05-17T08:02:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633293884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322",
      "pull_request_review_id": 660851825,
      "id": 633446322,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NjMyMg==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 38,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I left a comment about this interface further up that seems to have been lost without being resolved. I think the interface is needlessly complex and doing too much. From my comment above:\r\n\r\n> How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "created_at": "2021-05-17T11:22:06Z",
      "updated_at": "2021-05-17T11:26:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633446322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335",
      "pull_request_review_id": 660851825,
      "id": 633447335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NzMzNQ==",
      "diff_hunk": "@@ -153,26 +159,43 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>\n \n bool TxOrphanage::HaveTx(const GenTxid& gtxid) const\n {\n-    LOCK(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n     if (gtxid.IsWtxid()) {\n         return m_wtxid_to_orphan_it.count(gtxid.GetHash());\n     } else {\n         return m_orphans.count(gtxid.GetHash());\n     }\n }\n \n-std::pair<CTransactionRef, NodeId> TxOrphanage::GetTx(const uint256& txid) const\n+bool TxOrphanage::GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more)\n {\n-    AssertLockHeld(g_cs_orphans);\n-\n-    const auto it = m_orphans.find(txid);\n-    if (it == m_orphans.end()) return {nullptr, -1};\n-    return {it->second.tx, it->second.fromPeer};\n+    LOCK(m_mutex);\n+\n+    auto work_set_it = m_peer_work_set.find(peer);\n+    if (work_set_it != m_peer_work_set.end()) {\n+        auto& work_set = work_set_it->second;\n+        auto it = work_set.begin();\n+        while (it != work_set.end()) {\n+            uint256 txid = *it;\n+            it = work_set.erase(it);\n+\n+            const auto orphan_it = m_orphans.find(txid);\n+            if (orphan_it != m_orphans.end()) {\n+                more = (it != work_set.end());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(if you're keeping `more`), the following is equivalent, and maybe more direct/clear:\r\n\r\n```suggestion\r\n                more = !(work_set.empty());\r\n```",
      "created_at": "2021-05-17T11:23:53Z",
      "updated_at": "2021-05-17T11:26:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633447335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971",
      "pull_request_review_id": 660865808,
      "id": 633456971,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ1Njk3MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 38,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": 633446322,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "created_at": "2021-05-17T11:40:48Z",
      "updated_at": "2021-05-17T11:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633456971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006",
      "pull_request_review_id": 661155372,
      "id": 633669006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY2OTAwNg==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NACK the addition of `m_mutex_message_handling`.\r\n\r\nFollowing the logic of\r\n\r\n> GUARDED_BY() makes it easy to verify nobody's accidentally accessing...\r\n\r\nshould we add a dummy mutex for **every** variable?\r\n\r\nIMO mutexes should be used only where concurrent access is possible.",
      "created_at": "2021-05-17T16:11:21Z",
      "updated_at": "2021-05-17T16:11:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633669006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263",
      "pull_request_review_id": 661186513,
      "id": 633692263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY5MjI2Mw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild can you take a look at the commits that build on top of this branch in https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling. Currently, a lot of the data in net_processing is guarded by cs_main, which is also used in validation. One way to loosen that coupling between validation and net_processing is to introduce an internal mutex inside net_processing (`m_mutex_message_handling`) that guards its own members.",
      "created_at": "2021-05-17T16:43:31Z",
      "updated_at": "2021-05-17T16:43:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633692263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833",
      "pull_request_review_id": 662077356,
      "id": 634375833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDM3NTgzMw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling can be simplified and the common `m_mutex_message_handling` avoided by changing some of the variables to atomics and using a dedicated mutex for e.g. `m_txrequest`.\r\n\r\nBtw, it does not compile.\r\n<details>\r\n<summary>minor fixups</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex c56863e5ef..cc04679683 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -401,13 +401,13 @@ private:\r\n      * Set mapBlockSource[hash].second to false if the node should not be\r\n      * punished if the block is invalid.\r\n      */\r\n     std::map<uint256, std::pair<NodeId, bool>> mapBlockSource GUARDED_BY(cs_main);\r\n \r\n     /** Number of peers with wtxid relay. */\r\n-    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handing) {0};\r\n+    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handling) {0};\r\n \r\n     /** Number of outbound peers with m_chain_sync.m_protect. */\r\n     int m_outbound_peers_with_protect_from_disconnect GUARDED_BY(cs_main) = 0;\r\n \r\n     bool AlreadyHaveTx(const GenTxid& gtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n@@ -1000,20 +1000,15 @@ void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds)\r\n     CNodeState *state = State(node);\r\n     if (state) state->m_last_block_announcement = time_in_seconds;\r\n }\r\n \r\n void PeerManagerImpl::InitializeNode(CNode *pnode)\r\n {\r\n-    LOCK(m_mutex_message_handling);\r\n-\r\n     NodeId nodeid = pnode->GetId();\r\n-    {\r\n-        LOCK(cs_main);\r\n-        mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn()));\r\n-        assert(m_txrequest.Count(nodeid) == 0);\r\n-    }\r\n+    WITH_LOCK(cs_main, mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn())));\r\n+    WITH_LOCK(m_mutex_message_handling, assert(m_txrequest.Count(nodeid) == 0));\r\n     {\r\n         PeerRef peer = std::make_shared<Peer>(nodeid, m_mutex_message_handling);\r\n         LOCK(m_peer_mutex);\r\n         m_peer_map.emplace_hint(m_peer_map.end(), nodeid, std::move(peer));\r\n     }\r\n     if (!pnode->IsInboundConn()) {\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>compilation errors</summary>\r\n\r\n```sh\r\n(clang 13)\r\n\r\nnet_processing.cpp:986:33: error: reading variable 'fPreferredDownload' requires holding mutex 'peer.m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n    const bool preferred = peer.fPreferredDownload;\r\n                                ^\r\nnet_processing.cpp:1033:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(txid, tx->GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:1062:41: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            nPreferredDownload -= peer->fPreferredDownload;\r\n                                        ^\r\nnet_processing.cpp:1063:42: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            m_wtxid_relay_peers -= peer->m_wtxid_relay;\r\n                                         ^\r\nnet_processing.cpp:1537:41: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    WITH_LOCK(m_mutex_message_handling, _RelayTransaction(txid, wtxid););\r\n                                        ^\r\nnet_processing.cpp:1550:43: error: reading variable 'm_wtxid_relay' requires holding mutex 'it->second->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        node->PushTxInventory(it->second->m_wtxid_relay ? wtxid : txid);\r\n                                          ^\r\nnet_processing.cpp:2485:15: error: writing variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n        peer->fPreferredDownload = (!pfrom.IsInboundConn() || pfrom.HasPermission(PF_NOBAN)) && !pfrom.IsAddrFetchConn() && !pfrom.fClient;\r\n              ^\r\nnet_processing.cpp:2486:37: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        nPreferredDownload -= peer->fPreferredDownload;\r\n                                    ^\r\nnet_processing.cpp:2653:24: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (!peer->m_wtxid_relay) {\r\n                       ^\r\nnet_processing.cpp:2654:23: error: writing variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n                peer->m_wtxid_relay = true;\r\n                      ^\r\nnet_processing.cpp:2777:23: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (peer->m_wtxid_relay) {\r\n                      ^\r\nnet_processing.cpp:3049:37: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\r\n                                    ^\r\nnet_processing.cpp:3051:19: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        if (peer->m_wtxid_relay && txid != wtxid) {\r\n                  ^\r\nnet_processing.cpp:3075:13: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        if (AlreadyHaveTx(GenTxid(/* is_wtxid=*/true, wtxid))) {\r\n            ^\r\nnet_processing.cpp:3084:21: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n                    ^\r\nnet_processing.cpp:3090:44: error: calling function 'AcceptToMemoryPool' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        const MempoolAcceptResult result = AcceptToMemoryPool(m_chainman.ActiveChainstate(), m_mempool, ptx, false /* bypass_limits */);\r\n                                           ^\r\nnet_processing.cpp:3094:23: error: calling function 'check' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            m_mempool.check(m_chainman.ActiveChainstate());\r\n                      ^\r\nnet_processing.cpp:3099:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:3114:13: error: calling function 'ProcessOrphanTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            ProcessOrphanTx(*peer);\r\n            ^\r\nnet_processing.cpp:3131:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                if (recentRejects->contains(parent_txid)) {\r\n                    ^\r\nnet_processing.cpp:3147:26: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    if (!AlreadyHaveTx(gtxid)) AddTxAnnouncement(pfrom, *peer, gtxid, current_time);\r\n                         ^\r\nnet_processing.cpp:3172:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetHash());\r\n                ^\r\nnet_processing.cpp:3173:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3192:24: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                assert(recentRejects);\r\n                       ^\r\nnet_processing.cpp:3193:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3204:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                    recentRejects->insert(tx.GetHash());\r\n                    ^\r\nnet_processing.cpp:4291:29: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        bool fFetch = peer->fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->IsAddrFetchConn()); // Download if this is a nice peer, or we have no nice peers and this one might do.\r\n                            ^\r\nnet_processing.cpp:4504:53: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\r\n                                                    ^\r\nnet_processing.cpp:4505:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4536:85: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                    CompareInvMempoolOrder compareInvMempoolOrder(&m_mempool, peer->m_wtxid_relay);\r\n                                                                                    ^\r\nnet_processing.cpp:4548:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4636:117: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                if (current_time > state.m_headers_sync_timeout && nSyncStarted == 1 && (nPreferredDownload - peer->fPreferredDownload >= 1)) {\r\n                                                                                                                    ^\r\n32 errors generated.\r\n```\r\n</details>\r\n",
      "created_at": "2021-05-18T13:26:04Z",
      "updated_at": "2021-05-18T13:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634375833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643",
      "pull_request_review_id": 662301412,
      "id": 634534643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDUzNDY0Mw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Should we add a dummy mutex for every variable\" -- we should have a GUARDED_BY for every object that's reachable by multiple threads, yes. The mutex is not a dummy, it's a real mutex.\r\n\r\nFor this specific case, here's an example of a patch that adds an access from another thread: https://github.com/ajtowns/bitcoin/commits/202105-whyhaveaguard . With the `GUARDED_BY(m_mutex_message_handling)` this is caught at compile time; without the guard (removed in the second commit), it compiles fine but introduces a race condition.",
      "created_at": "2021-05-18T16:10:19Z",
      "updated_at": "2021-05-18T16:10:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634534643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808",
      "pull_request_review_id": 663035458,
      "id": 635119808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTExOTgwOA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> we should have a GUARDED_BY for every object that's reachable by multiple threads\r\n\r\nI assume here you mean -- even if the current code accesses it from a single thread.\r\n\r\nIf yes, then I think that is an overkill - it means having a mutex attached to every non-const global or class member variable, including private ones (coz in the future somebody may access it from another thread).\r\n\r\n> For this specific case, here's an example...\r\n\r\nYeah, but one can do such an example for any other variable. IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n<details>\r\n<summary>Similar example for two other, randomly picked variables</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 6b9a7ef136..18d57a7d8e 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -1256,12 +1256,18 @@ private:\r\n      * an address and port that are designated for incoming Tor connections.\r\n      */\r\n     std::vector<CService> m_onion_binds;\r\n \r\n     friend struct CConnmanTest;\r\n     friend struct ConnmanTestMsg;\r\n+\r\n+public:\r\n+    size_t ResponseCachesSize() const\r\n+    {\r\n+        return m_addr_response_caches.size();\r\n+    }\r\n };\r\n \r\n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */\r\n std::chrono::microseconds PoissonNextSend(std::chrono::microseconds now, std::chrono::seconds average_interval);\r\n \r\n /** Dump binary message to file, with timestamp */\r\ndiff --git i/src/rpc/net.cpp w/src/rpc/net.cpp\r\nindex 1f6b6e8d7e..cfab1ebafc 100644\r\n--- i/src/rpc/net.cpp\r\n+++ w/src/rpc/net.cpp\r\n@@ -631,12 +631,14 @@ static RPCHelpMan getnetworkinfo()\r\n     NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     if (node.connman) {\r\n         ServiceFlags services = node.connman->GetLocalServices();\r\n         obj.pushKV(\"localservices\", strprintf(\"%016x\", services));\r\n         obj.pushKV(\"localservicesnames\", GetServicesNames(services));\r\n     }\r\n+    obj.pushKV(\"bug1\", node.connman->ResponseCachesSize());\r\n+    obj.pushKV(\"bug2\", node.addrman->m_asmap.size());\r\n     if (node.peerman) {\r\n         obj.pushKV(\"localrelay\", !node.peerman->IgnoresIncomingTxs());\r\n     }\r\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\r\n     if (node.connman) {\r\n         obj.pushKV(\"networkactive\", node.connman->GetNetworkActive());\r\n```\r\n</details>\r\n",
      "created_at": "2021-05-19T10:41:11Z",
      "updated_at": "2021-05-19T10:41:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r635119808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047",
      "pull_request_review_id": 664469678,
      "id": 636167047,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNjE2NzA0Nw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `diff --git i/src/net.h w/src/net.h`\r\n\r\nYes, net.cpp/net.h is terrible for having globally accessible variables that aren't annotated for thread safety. Being able to introduce races that the compiler doesn't catch is a bad thing... txmempool's a better example, though it's also missing some guards (cf #22003).\r\n\r\n> IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n`GUARDED_BY` is always a \"just in case\" thing -- any time the code compiles correctly with `GUARDED_BY` it will also compile correctly without it -- the benefit is \"just in case\" someone forgets while modifying the code later. With a guard, the compiler will catch the mistake; without it, you have to hope someone reviewing the code remembers, or wait for some obscure bug to be noticed and reported.\r\n\r\nNot consistently guarding variables has an easily observable adverse affect on the code bas as a whole: it makes it hard to change code, because you're not sure when things might be safe to reuse in a different context. eg see https://github.com/bitcoin/bitcoin/pull/21061#discussion_r602283867\r\n\r\n>  it means having a mutex attached to every non-const global or class member variable, including private ones\r\n\r\nYes and no -- no, in that most classes don't need to manually manage locks, but should rather rely on whatever instantiates them to ensure the entire object is accessed safely; but for the ones that do, yes: every non-const, non-atomic member should be guarded (as should every class's non-const, non-atomic static members, since they're effectively globals themselves).",
      "created_at": "2021-05-20T14:37:12Z",
      "updated_at": "2021-05-20T14:37:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r636167047",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638801680",
      "pull_request_review_id": 667846182,
      "id": 638801680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODgwMTY4MA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns, thanks for the elaboration.\r\n\r\nI still think that mutexes should be introduced when needed, not beforehand (with a reason that in the future somebody may access a variable from a different thread).\r\n\r\nLooks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.",
      "created_at": "2021-05-25T13:44:20Z",
      "updated_at": "2021-05-25T13:44:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638801680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638801680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638832780",
      "pull_request_review_id": 667889439,
      "id": 638832780,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODgzMjc4MA==",
      "diff_hunk": "@@ -2197,10 +2197,7 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n             // Send messages\n-            {\n-                LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode);\n-            }\n+            m_msgproc->SendMessages(pnode);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Previously this would have allowed concurrent executions of `SendMessages()` for different peers, whereas now the concurrency is reduced by serializing all `SendMessages()` under the newly introduced single mutex `m_mutex_message_handling`.\r\n\r\nCurrently this code is executed by a single thread, so that is irrelevant, but in a possible future where we might want to do concurrent `SendMessages()` for different peers, the deleted `cs_sendProcessing` will have to be re-introduced.",
      "created_at": "2021-05-25T14:18:12Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638832780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638832780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 2200,
      "start_side": "LEFT",
      "line": null,
      "original_line": 2257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638964977",
      "pull_request_review_id": 667889439,
      "id": 638964977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk2NDk3Nw==",
      "diff_hunk": "@@ -3927,10 +3955,8 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        if (ProcessOrphanTx(*peer)) return true;\n     }\n \n     if (pfrom->fDisconnect)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 233,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Before this PR we would have returned `false` (no more work) if `fDisconnect` was set regardless of the outcome of `ProcessOrphanTx()` and regardless of whether `peer->m_orphan_work_set` was empty.\r\n\r\nNow `fDisconnect` may be set, but we may return `true` if `ProcessOrphanTx()` returns `true`.\r\n\r\nIf this change is not intentional, then maybe swap the order:\r\n\r\n```cpp\r\n    if (pfrom->fDisconnect) {\r\n        return false;\r\n    }\r\n\r\n    {\r\n        LOCK(cs_main);\r\n        if (ProcessOrphanTx(*peer)) return true;\r\n    }\r\n```\r\n",
      "created_at": "2021-05-25T16:27:27Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638964977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638964977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638972961",
      "pull_request_review_id": 667889439,
      "id": 638972961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk3Mjk2MQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // Get this peer's work set, ensuring it exists\n+    std::set<uint256>& orphan_work_set = m_peer_work_set.emplace(peer, std::set<uint256>{}).first->second;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be simplified?\r\n\r\n```suggestion\r\n    std::set<uint256>& orphan_work_set = m_peer_work_set[peer];\r\n```",
      "created_at": "2021-05-25T16:35:10Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638972961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638972961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638975978",
      "pull_request_review_id": 667889439,
      "id": 638975978,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk3NTk3OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::map<NodeId, std::set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 107,
      "original_position": 93,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/map/unordered_map/` to make lookup `O(1)` (we don't rely on this being ordered by `NodeId`). Same for the set of transaction ids.\r\n\r\n```suggestion\r\n    std::unordered_map<NodeId, std::unordered_set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);\r\n```",
      "created_at": "2021-05-25T16:39:03Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638975978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638975978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639923436",
      "pull_request_review_id": 667889439,
      "id": 639923436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTkyMzQzNg==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This `Assume()` seems unnecessary because `GetTxToReconsider()` is documented to populate `porphanTx` if it returns `true`.",
      "created_at": "2021-05-26T16:53:24Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r639923436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639923436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640459998",
      "pull_request_review_id": 669963251,
      "id": 640459998,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDQ1OTk5OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 104,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it possible for `TxOrphanage::m_orphans` to contain keys (transaction ids) which are not in `TxOrphanage::m_peer_work_set` or the other way around?",
      "created_at": "2021-05-27T09:36:09Z",
      "updated_at": "2021-05-27T09:38:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r640459998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640459998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641181600",
      "pull_request_review_id": 670890047,
      "id": 641181600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTE4MTYwMA==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 639923436,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All Assume's should be unnecessary by definition? See https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387 for prior discussion.",
      "created_at": "2021-05-28T02:53:58Z",
      "updated_at": "2021-05-28T02:53:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641181600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641181600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641207541",
      "pull_request_review_id": 670898345,
      "id": 641207541,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTIwNzU0MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 104,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 640459998,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_orphans` will normally contain txids that aren't in `m_peer_work_set` -- they only get added to the work set when a parent appears and are (hopefully) very quickly removed from the work set after retrying ATMP.\r\n\r\nIt's also possible for something to expire from `m_orphans` and still be present in `m_peer_work_set`: if a tx that's in the work set is removed via `LimitOrphans` or `EraseForBlock` you'll get that case. It will eventually be removed from the work set when `GetTxToReconsider` is called.",
      "created_at": "2021-05-28T03:20:24Z",
      "updated_at": "2021-05-28T03:20:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641207541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641207541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641381542",
      "pull_request_review_id": 671075089,
      "id": 641381542,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTM4MTU0Mg==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 639923436,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`Assume()` makes sense if the value is derived in an obscure way. But not for checking whether a function has set its \"out\" parameters as documented.\r\n\r\nFor example, when calling `CSHA256::Finalize(result)` we don't set `result` to a dummy value before the call and check that it is not that dummy value after the call with `Assume()`. Same for any other function that has \"out\" parameters.\r\n\r\nIf you insist to check that `porphanTx` was set by the function, then I guess you should do the same with `from_peer`: `Assume(from_peer != -1)`.",
      "created_at": "2021-05-28T08:48:08Z",
      "updated_at": "2021-05-28T08:48:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641381542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641381542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652902450",
      "pull_request_review_id": 685461575,
      "id": 652902450,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkwMjQ1MA==",
      "diff_hunk": "@@ -329,7 +337,17 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode, Peer& peer);\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /**\n+     * Reconsider orphan transactions after a parent has been accepted to the mempool.\n+     *\n+     * @param[in,out]  peer             The peer whose orphan transactions we will reconsider. Generally only one\n+     *                                  orphan will be reconsidered on each call of this function. This peer's set\n+     *                                  may be added to if accepting an orphan causes its children to be\n+     *                                  reconsidered.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think second part of this comment \"This peer's set may be added...\" is confusing and annotating the parameter as an output doesn't make sense anymore.\r\n\r\nAfter this PR, parameter is no more a `std::map<NodeId, std::set<uint256>>` and new one can be actually a const.",
      "created_at": "2021-06-16T17:30:57Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652902450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652902450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652906116",
      "pull_request_review_id": 685461575,
      "id": 652906116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkwNjExNg==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 50,
      "original_position": 45,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about `EXCLUSIVE_LOCKS_EXCLUDED(!(...))` ? The logical negation operator is easy to miss for a reviewer. ",
      "created_at": "2021-06-16T17:36:04Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652906116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652906116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652926191",
      "pull_request_review_id": 685461575,
      "id": 652926191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkyNjE5MQ==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At commit f86a525, I don't think this lock is useful to protect `vExtraTxnForCompact`, there is already one in `AddToCompactExtraTransactions` ? Though it might be useful at branch tip ?",
      "created_at": "2021-06-16T18:00:56Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652926191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652926191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652937929",
      "pull_request_review_id": 685461575,
      "id": 652937929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkzNzkyOQ==",
      "diff_hunk": "@@ -3943,11 +3969,6 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         if (!peer->m_getdata_requests.empty()) return true;\n     }\n \n-    {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;",
      "path": "src/net_processing.cpp",
      "position": 359,
      "original_position": 240,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this introduce a lightweight behavior change.\r\n\r\nPreviously, if our peer has `fDisconnect=true` set up from a previous message processing and the orphan work set is still non-empty after the `ProcessOrphanTx` above, we would have return `false`.\r\n\r\nFrom now on, if the orphan work set is still non-empty after `ProcessOrphanTx`, we're going to return `true`. \r\n\r\nThough i don't think it has any impact on allowing our peer to abuse more our CPU time, when we return from `ProcessMessages` to `ThreadMessageHandler`, we go to `SendMessages` which calls `MaybeDiscourageAndDisconnect` as first thing.\r\n\r\n(Actually why the check on `fDisconnect` isn't first in `ProcessMessages`, should be before any kind of processing work attempted with `ProcessGetData`/`ProcessOrphanTx` ?)",
      "created_at": "2021-06-16T18:18:37Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652937929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652937929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4239,
      "original_line": 4239,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652945059",
      "pull_request_review_id": 685520228,
      "id": 652945059,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Mjk0NTA1OQ==",
      "diff_hunk": "@@ -2197,10 +2197,7 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n             // Send messages\n-            {\n-                LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode);\n-            }\n+            m_msgproc->SendMessages(pnode);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638832780,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, sharing block headers/compact blocks messages in parallel has been discussed a while back (iirc  https://bitcoincore.org/en/meetings/2018/05/03/, see \"Call ProcessNewBlock asynchronously\") though we could insert some queued interface between a net_processing thread and multiple net threads ?\r\n\r\nThat said, if it's direction we agree on, I think the discussion is worthy to have.",
      "created_at": "2021-06-16T18:28:00Z",
      "updated_at": "2021-06-16T18:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652945059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652945059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 2200,
      "start_side": "LEFT",
      "line": null,
      "original_line": 2257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654705472",
      "pull_request_review_id": 687760801,
      "id": 654705472,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDcwNTQ3Mg==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  /** Message handling mutex.\r\n>    *  Message processing is single-threaded, so anything only accessed\r\n>    *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\r\n>    *  which guarantees it's only accessed by a single thread.\r\n\r\nI'm confused. This mutex ends up protecting everything accessed in those functions. For example, in `SendMessages`, it also protects `MaybeDiscourageAndDisconnect` that accesses things like `peer.m_misbehavior_mutex`, which can be accessed by the validation thread. So this mutex is guarding more things than what is _only_ accessed by the `ProcessMessage(s)` and `SendMessages` thread.\r\n\r\nI suppose it's safe that this mutex also ends up guarding things that are accessed by multiple threads, but I find the comment confusing.",
      "created_at": "2021-06-18T22:55:03Z",
      "updated_at": "2021-06-18T22:55:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654705472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654705472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654713376",
      "pull_request_review_id": 687771014,
      "id": 654713376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDcxMzM3Ng==",
      "diff_hunk": "@@ -2396,6 +2407,14 @@ void PeerManagerImpl::ProcessBlock(CNode& pfrom, const std::shared_ptr<const CBl\n void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do I understand correctly that after these changes `PeerManagerImpl::ProcessMessage` is a test-only function? If so, I think the comment in `net_processing.h` should be updated. Or even better, the function renamed to something like `ProcessMessageTest` :)",
      "created_at": "2021-06-18T23:28:52Z",
      "updated_at": "2021-06-18T23:29:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654713376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654713376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700794786",
      "pull_request_review_id": 744666339,
      "id": 700794786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDc5NDc4Ng==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652926191,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was just adding `AssertLockHeld` to correspond with the `EXCLUSIVE_LOCKS_REQUIRED` annotation as a matter of course (see the recommendation in developer-notes.md).",
      "created_at": "2021-09-02T06:49:02Z",
      "updated_at": "2021-09-02T06:49:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r700794786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700794786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700795929",
      "pull_request_review_id": 744667754,
      "id": 700795929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDc5NTkyOQ==",
      "diff_hunk": "@@ -3943,11 +3969,6 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         if (!peer->m_getdata_requests.empty()) return true;\n     }\n \n-    {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;",
      "path": "src/net_processing.cpp",
      "position": 359,
      "original_position": 240,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652937929,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`fDisconnect` is already checked in net.cpp prior to `ProcessMessages` being called, but there's always a chance that there's a race and `fDisconnect` is set while in the middle of `ProcessMessages` for the peer.",
      "created_at": "2021-09-02T06:51:05Z",
      "updated_at": "2021-09-02T06:51:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r700795929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700795929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4239,
      "original_line": 4239,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701462414",
      "pull_request_review_id": 745569164,
      "id": 701462414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ2MjQxNA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you have:\r\n\r\n```c++\r\nMutex mutex;\r\nint x GUARDED_BY(mutex);\r\nint y;\r\nstatic void A() { LOCK(mutex); ++x; ++y; }\r\nstatic void B() { LOCK(mutex); --x; }\r\nvoid ThreadA() { for (int i = 0; i < 100; ++i) { A(); } }\r\nvoid ThreadB() { for (int i = 0; i < 100; ++i) { B(); } }\r\n```\r\n\r\nthen I'd say that only `x` is guarded by the mutex, even though `y` is only actually accessed while the mutex is held. If you later  introduce\r\n\r\n```c++\r\nstatic void C() { y *= 2; }\r\n```\r\n\r\nthen that would still be safe/correct if `ThreadA` were to start calling `C()`, but `y` would no longer always be protected by the mutex; conversely if `ThreadB` were to start calling `C()`, then `y` would no longer be thread safe, but because it's not guarded by anything, the compiler would not catch that bug.\r\n\r\nI guess I'd look at it more as mutexes protect **code** from being run simultaneously; it's the GUARDED_BY **annotations** that protect the variables. If the variables aren't annotated, they don't have any automatic protections, only manual protection by the programmer constantly being careful.",
      "created_at": "2021-09-02T22:26:56Z",
      "updated_at": "2021-09-02T22:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701462414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701462414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701466455",
      "pull_request_review_id": 745573547,
      "id": 701466455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ2NjQ1NQ==",
      "diff_hunk": "@@ -2396,6 +2407,14 @@ void PeerManagerImpl::ProcessBlock(CNode& pfrom, const std::shared_ptr<const CBl\n void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654713376,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`PeerManager::ProcessMessage` has always only been exposed for tests, and is already documented that way in the header file:\r\n\r\n```c++\r\n    /** Process a single message from a peer. Public for fuzz testing */\r\n    virtual void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\r\n```\r\n\r\n`PeerManagerImpl::ProcessMessage` is thus needed to complete the `PeerManager` interface.",
      "created_at": "2021-09-02T22:35:53Z",
      "updated_at": "2021-09-02T22:35:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701466455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701466455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484079",
      "pull_request_review_id": 745593894,
      "id": 701484079,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDA3OQ==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": 628836372,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.",
      "created_at": "2021-09-02T23:21:53Z",
      "updated_at": "2021-09-02T23:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484517",
      "pull_request_review_id": 745594486,
      "id": 701484517,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDUxNw==",
      "diff_hunk": "@@ -3927,10 +3955,8 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        if (ProcessOrphanTx(*peer)) return true;\n     }\n \n     if (pfrom->fDisconnect)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 233,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638964977,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `return !pfrom->fDisconnect` to preserve the same behaviour.",
      "created_at": "2021-09-02T23:23:16Z",
      "updated_at": "2021-09-02T23:23:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484925",
      "pull_request_review_id": 745595054,
      "id": 701484925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDkyNQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // Get this peer's work set, ensuring it exists\n+    std::set<uint256>& orphan_work_set = m_peer_work_set.emplace(peer, std::set<uint256>{}).first->second;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638972961,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to C++17's `try_emplace` which simplifies it slightly. Not really a fan of `map::operator[]`",
      "created_at": "2021-09-02T23:24:37Z",
      "updated_at": "2021-09-02T23:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701485341",
      "pull_request_review_id": 745595604,
      "id": 701485341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NTM0MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::map<NodeId, std::set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 107,
      "original_position": 93,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638975978,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Left as map; I don't think performance matters enough to justify using extra space for the hashmap; and longer term, using a multiindex rather than a bunch of different containers referencing each other is probably better.",
      "created_at": "2021-09-02T23:25:57Z",
      "updated_at": "2021-09-02T23:25:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701485341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701485341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486116",
      "pull_request_review_id": 745596441,
      "id": 701486116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NjExNg==",
      "diff_hunk": "@@ -329,7 +337,17 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode, Peer& peer);\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /**\n+     * Reconsider orphan transactions after a parent has been accepted to the mempool.\n+     *\n+     * @param[in,out]  peer             The peer whose orphan transactions we will reconsider. Generally only one\n+     *                                  orphan will be reconsidered on each call of this function. This peer's set\n+     *                                  may be added to if accepting an orphan causes its children to be\n+     *                                  reconsidered.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652902450,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropped the `out` which doesn't make sense. Knowing that this may increase the size of the set, not simply reduce it is valuable I think, so have left that text alone.",
      "created_at": "2021-09-02T23:28:04Z",
      "updated_at": "2021-09-02T23:28:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701486116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486468",
      "pull_request_review_id": 745596865,
      "id": 701486468,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NjQ2OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 50,
      "original_position": 45,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652906116,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like something more for clang upstream if anything?",
      "created_at": "2021-09-02T23:29:08Z",
      "updated_at": "2021-09-02T23:29:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701486468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701689238",
      "pull_request_review_id": 745835427,
      "id": 701689238,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTY4OTIzOA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I guess I'd look at it more as mutexes protect __code__ from being run simultaneously\r\n\r\nIMO mutexes protect variables, not code.\r\n\r\nFrom https://en.wikipedia.org/wiki/Lock_(computer_science)\r\n> ... a mechanism that enforces limits on access to a __resource__ ...\r\n> ... each thread cooperates by acquiring the lock before accessing the __corresponding data__ ...",
      "created_at": "2021-09-03T08:06:17Z",
      "updated_at": "2021-09-03T08:06:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701689238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701689238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703141868",
      "pull_request_review_id": 747496945,
      "id": 703141868,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzE0MTg2OA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Read your second quote carefully -- it's not the mutex/lock that protects the data, it's the threads that protect it by cooperatively acquiring the lock before accessing the data.\r\n\r\nIt's 99% true that the point of using a mutex is to protect data, but it's not the mutex itself that ensures the data is protected, it's how you use the mutex. It's like looking both ways before crossing the road -- if you don't do that, you'll probably walk into traffic; but looking alone isn't enough, you have to make sure you do it before crossing the road, and depending on what you see, delay crossing the road. The point of annotations here is to ensure at compile time that you're not metaphorically stepping into the road before looking, or literally not accessing variables that are only meant to be accessed by a particular thread from another thread.\r\n\r\n(I think I've repeated this point enough now; if there's something not clear, feel free to ask, but I'm not seeing any point to going around in circles another time)",
      "created_at": "2021-09-07T02:55:55Z",
      "updated_at": "2021-09-07T02:55:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r703141868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703141868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/790857566",
      "pull_request_review_id": 861123301,
      "id": 790857566,
      "node_id": "PRRC_kwDOABII584vI4de",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is fine to not have thread safety stuff on things that aren't meant to be called by more than one thread. For example, most code in init.cpp doesn't need them because they are only called once per process. Though, other stuff should communicate to the developer whether it is thread safe. Either via code comments (https://github.com/bitcoin/bitcoin/blob/e3de7cb9039770e0fd5b8bb8a5cba35c87ae8f00/src/random.h#L67, https://github.com/bitcoin/bitcoin/blob/e3de7cb9039770e0fd5b8bb8a5cba35c87ae8f00/src/random.h#L129) or via annotations.",
      "created_at": "2022-01-24T15:29:46Z",
      "updated_at": "2022-01-24T15:29:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r790857566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/790857566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    }
  ]
}