{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
    "id": 859701486,
    "node_id": "PR_kwDOABII584zPgDu",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24408",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24408.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24408.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/418557034055f740951294e7677ae9fd5149ea9b",
    "number": 24408,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: add rpc to get mempool txs spending specific prevouts",
    "user": {
      "login": "t-bast",
      "id": 31281497,
      "node_id": "MDQ6VXNlcjMxMjgxNDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/t-bast",
      "html_url": "https://github.com/t-bast",
      "followers_url": "https://api.github.com/users/t-bast/followers",
      "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
      "organizations_url": "https://api.github.com/users/t-bast/orgs",
      "repos_url": "https://api.github.com/users/t-bast/repos",
      "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/t-bast/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We add an RPC to fetch mempool transactions spending any of the given outpoints.\r\n\r\nWithout this RPC, application developers need to first call `getrawmempool` which returns a long list of `txid`, then fetch each of these transactions individually (`getrawtransaction`) to check whether they spend the given outpoints, which wastes a lot of bandwidth (in the worst case we need to transfer the whole mempool).\r\n\r\nFor example in lightning, when we discover that one of our channel funding transactions has been spent, we need to find the spending transaction to claim our outputs from it. We are currently forced to fetch the whole mempool to do the analysis ourselves, which is quite costly.\r\n\r\nI believe that this RPC is also generally useful when doing some introspection on your mempool after one of your transactions failed to broadcast, for example when you implement RBF at the application level. Fetching and analyzing the conflicting transaction gives you more information to successfully replace it.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2022-02-21T17:24:18Z",
    "updated_at": "2023-05-29T10:04:03Z",
    "closed_at": "2022-05-27T13:18:10Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-05-27T13:18:10Z",
    "merge_commit_sha": "3ba6dd6f4bb42bfab48194ce5f44850b0109451a",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "t-bast:get-mempool-spending-tx",
      "ref": "get-mempool-spending-tx",
      "sha": "418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 296024928,
        "node_id": "MDEwOlJlcG9zaXRvcnkyOTYwMjQ5Mjg=",
        "name": "bitcoin",
        "full_name": "t-bast/bitcoin",
        "owner": {
          "login": "t-bast",
          "id": 31281497,
          "node_id": "MDQ6VXNlcjMxMjgxNDk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/t-bast",
          "html_url": "https://github.com/t-bast",
          "followers_url": "https://api.github.com/users/t-bast/followers",
          "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
          "organizations_url": "https://api.github.com/users/t-bast/orgs",
          "repos_url": "https://api.github.com/users/t-bast/repos",
          "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/t-bast/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/t-bast/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/t-bast/bitcoin",
        "archive_url": "https://api.github.com/repos/t-bast/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/t-bast/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/t-bast/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/t-bast/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/t-bast/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/t-bast/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/t-bast/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/t-bast/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/t-bast/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/t-bast/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/t-bast/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/t-bast/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/t-bast/bitcoin/events",
        "forks_url": "https://api.github.com/repos/t-bast/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/t-bast/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/t-bast/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/t-bast/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/t-bast/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/t-bast/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/t-bast/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/t-bast/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/t-bast/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/t-bast/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/t-bast/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/t-bast/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/t-bast/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/t-bast/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/t-bast/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/t-bast/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:t-bast/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/t-bast/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/t-bast/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/t-bast/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/t-bast/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/t-bast/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/t-bast/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/t-bast/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/t-bast/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/t-bast/bitcoin/hooks",
        "svn_url": "https://github.com/t-bast/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 207411,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-09-23T13:16:35Z",
        "created_at": "2020-09-16T12:24:35Z",
        "updated_at": "2021-10-04T14:02:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1ad5d5088d69939b0551de31d6c33c03153697c5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 200,
    "deletions": 0,
    "changed_files": 7,
    "commits": 1,
    "review_comments": 50,
    "comments": 34
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 6113154040,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFsX1P4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6113154040",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:25:16Z"
    },
    {
      "event": "reviewed",
      "id": 888961324,
      "node_id": "PRR_kwDOABII5840_Hks",
      "url": null,
      "actor": null,
      "commit_id": "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-888961324",
      "submitted_at": "2022-02-21T17:27:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1047099947,
      "node_id": "IC_kwDOABII584-aXor",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047099947",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:28:21Z",
      "updated_at": "2022-02-21T17:28:21Z",
      "author_association": "MEMBER",
      "body": "For this usecase, why not using `getmempoolentry`'s `spentby` field?",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047099947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047101622,
      "node_id": "IC_kwDOABII584-aYC2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047101622",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:30:35Z",
      "updated_at": "2022-02-21T17:31:47Z",
      "author_association": "MEMBER",
      "body": "> For this usecase, why not using getmempoolentry's spentby field?\r\n\r\nBecause that wouldn't work for confirmed utxos!\r\n\r\nMy funding transaction (or any L2 protocol initial state) has been confirmed on-chain and I want to check who spends it in the mempool. I can't use `getmempoolentry` because I don't know yet the `txid` of the spending tx...\r\n\r\nMaybe the RPC name is misleading, because its inputs (`txid` and `vout`) aren't necessarily for a mempool tx (and most of the time will not), but the RPC output will be a mempool tx (or `null`).",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047101622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047107192,
      "node_id": "IC_kwDOABII584-aZZ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047107192",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:39:00Z",
      "updated_at": "2022-02-21T17:39:00Z",
      "author_association": "MEMBER",
      "body": "Right, sorry, i shouldn't have inferred the behaviour from the name. I see it's in the context of `txindex` then, so i don't have an opinion.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047107192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047114442,
      "node_id": "IC_kwDOABII584-abLK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047114442",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:50:42Z",
      "updated_at": "2022-02-21T17:51:03Z",
      "author_association": "MEMBER",
      "body": "It's much weaker than `txindex`, it's exposing a `txindex` for mempool contents, which is why I think it's acceptable (I'm only querying existing mempool functions).",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047114442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6113292387,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFsYXBj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6113292387",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T17:55:14Z"
    },
    {
      "event": "labeled",
      "id": 6113556901,
      "node_id": "LE_lADOABII585ET4crzwAAAAFsZXml",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6113556901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T18:59:43Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 1047356352,
      "node_id": "IC_kwDOABII584-bWPA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047356352",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T02:04:29Z",
      "updated_at": "2022-02-22T02:04:54Z",
      "author_association": "NONE",
      "body": "> > For this usecase, why not using getmempoolentry's spentby field?\r\n> \r\n> Because that wouldn't work for confirmed utxos!\r\n> \r\n> My funding transaction (or any L2 protocol initial state) has been confirmed on-chain and I want to check who spends it in the mempool. I can't use `getmempoolentry` because I don't know yet the `txid` of the spending tx...\r\n> \r\n> Maybe the RPC name is misleading, because its inputs (`txid` and `vout`) aren't necessarily for a mempool tx (and most of the time will not), but the RPC output will be a mempool tx (or `null`).\r\n\r\nIs it possible to add it in existing RPC `getmempoolentry` by adding more arguments (optional)?",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047356352",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047557230,
      "node_id": "IC_kwDOABII584-cHRu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047557230",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T08:48:35Z",
      "updated_at": "2022-02-22T08:48:35Z",
      "author_association": "MEMBER",
      "body": "> Is it possible to add it in existing RPC getmempoolentry by adding more arguments (optional)?\r\n\r\nI'm not sure it would be very ergonomic, because `getmempoolentry` requires the `txid` of the mempool transaction you're fetching. If we wanted to overload it, it would have the following two distinct sets of behaviors:\r\n\r\n- a `txid` is provided, so we return a mempool transaction that matches this `txid`\r\n- a `txid` (probably named differently to avoid confusion) and a `vout` are provided, so we return a mempool transaction spending this given `txid:vout`\r\n\r\nCorrectly defining the arguments lists (and which are required) to support both use-cases without creating confusion seems hard to be honest...",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047557230",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047689558,
      "node_id": "IC_kwDOABII584-cnlW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047689558",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:15:28Z",
      "updated_at": "2022-02-22T11:15:28Z",
      "author_association": "NONE",
      "body": "Not being able to walk the chain forward is certainly the source of huge friction and hacky code while working with Bitcoin RPC. I'd even go that far to claim that this is the single largest missing feature that if we'd have, it would have saved the most time for me personally. Certainly cACK this approach, but I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not.",
      "user": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047689558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "reviewed",
      "id": 889639706,
      "node_id": "PRR_kwDOABII5841BtMa",
      "url": null,
      "actor": null,
      "commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, seems very reasonable to me especially since we already have a mempool function to fetch the transaction. Also in general, it seems useful to be able to fetch the transaction that conflicts with yours.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-889639706",
      "submitted_at": "2022-02-22T11:28:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1047703058,
      "node_id": "IC_kwDOABII584-cq4S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047703058",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:32:07Z",
      "updated_at": "2022-02-22T11:32:07Z",
      "author_association": "MEMBER",
      "body": "> I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not.\r\n\r\nThis might be tricky (the non-mempool case) since we would have deleted the UTXO from our chainstate. And not possible sometimes on a pruned node.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047703058",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047720804,
      "node_id": "IC_kwDOABII584-cvNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047720804",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:55:35Z",
      "updated_at": "2022-02-22T11:55:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK - rationale in PR description seems strong and other projects (e.g. Wasabi) have experienced same issue.\r\n\r\n> I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not\r\n\r\nI think the use case from @nopara73's comment above would be you don't know whether the transaction spending the UTXO is in your mempool or confirmed onchain and you want to query your mempool first and then your transaction index? I think generally you'd want one RPC to query your mempool and one RPC to query your transaction index. Combining both into a single RPC seems to me against separation of concerns (and is easily resolved by just running two RPC commands).\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047720804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6117487486,
      "node_id": "MEE_lADOABII585ET4crzwAAAAFsoXN-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117487486",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:55:36Z"
    },
    {
      "event": "subscribed",
      "id": 6117487506,
      "node_id": "SE_lADOABII585ET4crzwAAAAFsoXOS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117487506",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T11:55:36Z"
    },
    {
      "event": "commented",
      "id": 1047725184,
      "node_id": "IC_kwDOABII584-cwSA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047725184",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:01:14Z",
      "updated_at": "2022-02-22T12:01:14Z",
      "author_association": "NONE",
      "body": "FTR there's `gettxout`. I think my suggestion would fit best there.",
      "user": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047725184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1047749530,
      "node_id": "IC_kwDOABII584-c2Oa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047749530",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:31:46Z",
      "updated_at": "2022-02-22T12:31:46Z",
      "author_association": "MEMBER",
      "body": "> FTR there's gettxout. I think my suggestion would fit best there.\r\n\r\n@nopara73 do you mean that instead of adding a new RPC like I'm doing, we could update `gettxout` to return the spending tx when the utxo is spent?\r\n\r\nIn the case where the spending tx is not in the mempool, I think the only solution would be to walk the chain backwards and analyze each block to see if the spending tx is inside it. However, as @glozow says, if you're running a pruned node, you will likely analyze every block you have and won't find anything, which is very inefficient. Even worse, if the provided utxo never existed, you will walk the whole chain without finding anything...\r\n\r\nIt looks like a much more debatable change which would involve serious trade-offs, that's why I think restricting this PR to mempool txs has a better chance of being accepted. I could still reuse `gettxout` instead of adding a new RPC, but that would make it harder (backwards-compatibility wise) to accept a list of `prevouts` as @glozow suggests [here](https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811843082).",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047749530",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6117703279,
      "node_id": "MEE_lADOABII585ET4crzwAAAAFspL5v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117703279",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:31:46Z"
    },
    {
      "event": "subscribed",
      "id": 6117703290,
      "node_id": "SE_lADOABII585ET4crzwAAAAFspL56",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117703290",
      "actor": {
        "login": "nopara73",
        "id": 9156103,
        "node_id": "MDQ6VXNlcjkxNTYxMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9156103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nopara73",
        "html_url": "https://github.com/nopara73",
        "followers_url": "https://api.github.com/users/nopara73/followers",
        "following_url": "https://api.github.com/users/nopara73/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nopara73/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nopara73/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
        "organizations_url": "https://api.github.com/users/nopara73/orgs",
        "repos_url": "https://api.github.com/users/nopara73/repos",
        "events_url": "https://api.github.com/users/nopara73/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nopara73/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:31:46Z"
    },
    {
      "event": "mentioned",
      "id": 6117703301,
      "node_id": "MEE_lADOABII585ET4crzwAAAAFspL6F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117703301",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:31:46Z"
    },
    {
      "event": "subscribed",
      "id": 6117703309,
      "node_id": "SE_lADOABII585ET4crzwAAAAFspL6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6117703309",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T12:31:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6133374533,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFtk95F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6133374533",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-24T16:17:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6133448768,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFtlQBA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6133448768",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-24T16:28:15Z"
    },
    {
      "event": "commented",
      "id": 1050575675,
      "node_id": "IC_kwDOABII584-noM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050575675",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T06:51:53Z",
      "updated_at": "2022-05-25T08:20:22Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25204](https://github.com/bitcoin/bitcoin/pull/25204) (rpc: remove deprecated top-level fee fields from mempool entries by theStack)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n* [#21422](https://github.com/bitcoin/bitcoin/pull/21422) (Add feerate histogram to getmempoolinfo by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1050575675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "renamed",
      "id": 6137608083,
      "node_id": "RTE_lADOABII585ET4crzwAAAAFt1HeT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6137608083",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T08:43:03Z",
      "rename": {
        "from": "Add RPC to get mempool spending tx",
        "to": "rpc: add rpc to get mempool spending tx"
      }
    },
    {
      "event": "renamed",
      "id": 6137610076,
      "node_id": "RTE_lADOABII585ET4crzwAAAAFt1H9c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6137610076",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T08:43:28Z",
      "rename": {
        "from": "rpc: add rpc to get mempool spending tx",
        "to": "rpc: add rpc to get mempool txs spending specific prevouts"
      }
    },
    {
      "event": "reviewed",
      "id": 893831901,
      "node_id": "PRR_kwDOABII5841Rsrd",
      "url": null,
      "actor": null,
      "commit_id": "263b0a775d606035a852cebfc7c70a3c1a45dce3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\nMaybe the two commits can be merged. Apparently the first commit is in an invalid state (since the `outputs` parameter is not converted).\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-893831901",
      "submitted_at": "2022-02-25T15:35:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6139932884,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFt9_DU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6139932884",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T15:40:09Z"
    },
    {
      "event": "commented",
      "id": 1050962672,
      "node_id": "IC_kwDOABII584-pGrw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050962672",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T15:40:35Z",
      "updated_at": "2022-02-25T15:40:35Z",
      "author_association": "MEMBER",
      "body": "> Maybe the two commits can be merged.\r\n\r\nDefinitely, done. I was waiting for the builds to complete to check that I hadn't missed something else that would need fixing.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1050962672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "labeled",
      "id": 6180251010,
      "node_id": "LE_lADOABII585ET4crzwAAAAFwXyWC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6180251010",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T18:38:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1058405400,
      "node_id": "IC_kwDOABII584_FfwY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058405400",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T19:23:51Z",
      "updated_at": "2022-03-03T19:23:51Z",
      "author_association": "MEMBER",
      "body": "> Without this RPC, application developers need to first call getrawmempool which returns a long list of txid, then fetch each of these transactions individually (getrawtransaction) to check whether they spend the given outpoints, which wastes a lot of bandwidth (in the worst case we need to transfer the whole mempool).\r\n\r\nI think without this RPC, you can create a tx that spends the input and only fetch the whole mempool if the input was spent.\r\n\r\nMoreover, I wonder what happens if the tx is included in a block right away? So the input will be gone, but there isn't a tx in the mempool that spends it.\r\n\r\nWhile the RPC makes sense on its own, it doesn't fix your problem completely?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1058405400",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "reviewed",
      "id": 899417562,
      "node_id": "PRR_kwDOABII5841nAXa",
      "url": null,
      "actor": null,
      "commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-899417562",
      "submitted_at": "2022-03-03T19:24:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "reviewed",
      "id": 899418005,
      "node_id": "PRR_kwDOABII5841nAeV",
      "url": null,
      "actor": null,
      "commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-899418005",
      "submitted_at": "2022-03-03T19:26:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1058677337,
      "node_id": "IC_kwDOABII584_GiJZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058677337",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T23:52:08Z",
      "updated_at": "2022-03-03T23:52:08Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @MarcoFalke!\r\n\r\n> I think without this RPC, you can create a tx that spends the input and only fetch the whole mempool if the input was spent.\r\n> Moreover, I wonder what happens if the tx is included in a block right away? So the input will be gone, but there isn't a tx in the mempool that spends it.\r\n> While the RPC makes sense on its own, it doesn't fix your problem completely?\r\n\r\nI probably tried to be a bit too general in my description, let me try to explain in more details my current scenario.\r\n\r\nIn the specific case where I want to apply this in the short term, I'm trying to spend lightning htlcs. I have a pre-signed transaction that spends the outpoint I'm interested in but doesn't provide enough fees, so I'll want to add more inputs to reach the right feerate.\r\n\r\nThe complete flow looks like this:\r\n\r\n- I verify that the output is unspent with `gettxout` (without including the mempool)\r\n  - If it's spent, then I have nothing to do (actually it triggers another flow to spend the output of that spending tx, but that's orthogonal)\r\n  - Otherwise, I check if there is already a mempool tx spending this output with `getmempooltxspendingprevout`\r\n    - If nothing is in the mempool, I'll use `fundrawtransaction` to add inputs and broadcast the transaction\r\n    - Otherwise, I'll modify the mempool transaction to pay more fees (by lowering/removing the existing change output and potentially adding new inputs)\r\n\r\nWithout this RPC, I would have to optimistically fund and broadcast, and if that fails fetch the whole mempool to find the conflicting transaction. I expect to regularly have to go through the RBF flow, so it feels inefficient to have to dump the mempool when that happens :(\r\n\r\nYou're right that if the current mempool transaction confirms while I'm funding its replacement, I'll need to correctly handle it, but that doesn't seem to be too much of a problem for my use-case.\r\n\r\nDoes that make sense with this more detailed scenario?\r\n",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1058677337",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6181907380,
      "node_id": "MEE_lADOABII585ET4crzwAAAAFweGu0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6181907380",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T23:52:08Z"
    },
    {
      "event": "subscribed",
      "id": 6181907384,
      "node_id": "SE_lADOABII585ET4crzwAAAAFweGu4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6181907384",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T23:52:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6181932110,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAFweMxO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6181932110",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T00:00:17Z"
    },
    {
      "event": "unlabeled",
      "id": 6182115283,
      "node_id": "UNLE_lADOABII585ET4crzwAAAAFwe5fT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6182115283",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T00:55:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1059188351,
      "node_id": "IC_kwDOABII584_Ie5_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059188351",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T14:02:16Z",
      "updated_at": "2022-03-04T14:02:16Z",
      "author_association": "MEMBER",
      "body": "Actually there is a simpler place where we'll use that new RPC in our codebase. When a lightning node restarts, it lists its channels from its internal DB and verifies that the funding outpoint of each channel is still unspent (with `gettxout`).\r\n\r\nIf we discover than a channel has actually been spent (maybe our counterparty is malicious and saw that we were offline, and tried to cheat), we want to find the spending transaction to be able to react and publish our set of follow-up transactions. So the first thing we do is look into the mempool, currently by dumping it and checking every transaction ourselves. With `getmempooltxspendingprevout` we would avoid a performance hit here.\r\n\r\nOf course, if the spending transaction isn't in the mempool, then we have to check recent blocks one by one, but that shouldn't happen often, and since lightning nodes shouldn't be offline for too long, you usually only have to check 1 or 2 blocks (which means transferring < 5MB which is much smaller than the whole mempool).",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1059188351",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "reviewed",
      "id": 900888495,
      "node_id": "PRR_kwDOABII5841snev",
      "url": null,
      "actor": null,
      "commit_id": "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-900888495",
      "submitted_at": "2022-03-05T03:49:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1061079594,
      "node_id": "IC_kwDOABII584_Psoq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061079594",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T20:00:47Z",
      "updated_at": "2022-03-07T20:00:47Z",
      "author_association": "MEMBER",
      "body": "This seems like it should be using a watch-only wallet instead.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1061079594",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "reviewed",
      "id": 904662270,
      "node_id": "PRR_kwDOABII58417Az-",
      "url": null,
      "actor": null,
      "commit_id": "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK 4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21 - the code looks good to me, I tested locally and it works as expected.\r\n\r\nI would have needed this API quite a few times in the past, so I'd be happy to see this merged :) ",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-904662270",
      "submitted_at": "2022-03-09T17:26:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1063193347,
      "node_id": "IC_kwDOABII584_XwsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063193347",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-09T17:47:03Z",
      "updated_at": "2022-03-09T17:47:03Z",
      "author_association": "MEMBER",
      "body": "> This seems like it should be using a watch-only wallet instead.\r\n\r\nThis wouldn't work for users that don't have or don't want a bdb/sqlite dependency as well the overhead of having to deal with wallet maintenance. So I can see the argument that this RPC makes it easier for users.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1063193347",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "labeled",
      "id": 6249754228,
      "node_id": "LE_lADOABII585ET4crzwAAAAF0g650",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6249754228",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-16T10:32:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6297884576,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF3Yheg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6297884576",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:38:43Z"
    },
    {
      "event": "commented",
      "id": 1077433383,
      "node_id": "IC_kwDOABII585AOFQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077433383",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:45:47Z",
      "updated_at": "2022-03-24T09:45:47Z",
      "author_association": "MEMBER",
      "body": "> This seems like it should be using a watch-only wallet instead.\r\n\r\n@luke-jr can you detail how that would work? I may be missing something, but I don't see how that would address my issue. I do need a regular wallet as I'm relying heavily on `fundrawtransaction`, it would be wasteful to need both a watch-only wallet and a regular wallet to make this use-case work?",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1077433383",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6297933582,
      "node_id": "MEE_lADOABII585ET4crzwAAAAF3YtcO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6297933582",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:45:48Z"
    },
    {
      "event": "subscribed",
      "id": 6297933590,
      "node_id": "SE_lADOABII585ET4crzwAAAAF3YtcW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6297933590",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:45:48Z"
    },
    {
      "event": "commented",
      "id": 1077435461,
      "node_id": "IC_kwDOABII585AOFxF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077435461",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:47:44Z",
      "updated_at": "2022-03-24T09:47:44Z",
      "author_association": "MEMBER",
      "body": "Sorry for the delay in responding to comments and rebasing, I've been away for a while, the PR is now rebased.\r\n\r\nOne of the points that I'd like more feedback on is that I chose to return only the `spendingtxid` instead of the mempool tx data, because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a (small) waste.\r\n\r\nCallers can chain this with `getmempoolentry` to get more complete tx data for the conflicting transaction. If you think it makes more sense to directly include the mempool tx let me know, I don't have strong feelings about that.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1077435461",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "unlabeled",
      "id": 6298795781,
      "node_id": "UNLE_lADOABII585ET4crzwAAAAF3b_8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6298795781",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T11:47:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 929105300,
      "node_id": "PRR_kwDOABII5843YQWU",
      "url": null,
      "actor": null,
      "commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Concept ACK\r\n\r\nJust some code styling improvement",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-929105300",
      "submitted_at": "2022-04-01T15:38:27Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6361122204,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF7JwWc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6361122204",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T08:54:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6361309033,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF7Kd9p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6361309033",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T09:19:33Z"
    },
    {
      "event": "reviewed",
      "id": 930189844,
      "node_id": "PRR_kwDOABII5843cZIU",
      "url": null,
      "actor": null,
      "commit_id": "b68dd3b93172d32545eff86d586445f01bfdfd6a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-930189844",
      "submitted_at": "2022-04-04T11:05:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "reviewed",
      "id": 930464526,
      "node_id": "PRR_kwDOABII5843dcMO",
      "url": null,
      "actor": null,
      "commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/24408/commits/e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-930464526",
      "submitted_at": "2022-04-04T14:23:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "reviewed",
      "id": 933445279,
      "node_id": "PRR_kwDOABII5843oz6f",
      "url": null,
      "actor": null,
      "commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-933445279",
      "submitted_at": "2022-04-06T12:55:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6380682593,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF8UX1h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6380682593",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T14:29:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6380737057,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF8UlIh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6380737057",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T14:36:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6380797280,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAF8Uz1g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6380797280",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T14:44:19Z"
    },
    {
      "event": "reviewed",
      "id": 933624483,
      "node_id": "PRR_kwDOABII5843pfqj",
      "url": null,
      "actor": null,
      "commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/24408/commits/c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-933624483",
      "submitted_at": "2022-04-06T14:47:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1092587389,
      "node_id": "IC_kwDOABII585BH499",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092587389",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z",
      "updated_at": "2022-04-08T08:18:53Z",
      "author_association": "MEMBER",
      "body": "@danielabrozzoni @w0xlt @glozow would you mind having a look at the latest state of this PR?\r\n\r\nMy only open question/thing to consider is whether I should include the whole spending tx instead of just the `spendingtxid` in the results. I chose to only include the `spendingtxid` because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a bandwidth waste. Callers can chain this with `getmempoolentry` to get more complete tx data for the conflicting transaction. If you think it makes more sense to directly include the mempool tx let me know, I don't have very strong feelings about that.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1092587389",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6394551740,
      "node_id": "MEE_lADOABII585ET4crzwAAAAF9JR28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551740",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "subscribed",
      "id": 6394551746,
      "node_id": "SE_lADOABII585ET4crzwAAAAF9JR3C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551746",
      "actor": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "mentioned",
      "id": 6394551755,
      "node_id": "MEE_lADOABII585ET4crzwAAAAF9JR3L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551755",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "subscribed",
      "id": 6394551761,
      "node_id": "SE_lADOABII585ET4crzwAAAAF9JR3R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551761",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "mentioned",
      "id": 6394551768,
      "node_id": "MEE_lADOABII585ET4crzwAAAAF9JR3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551768",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "subscribed",
      "id": 6394551777,
      "node_id": "SE_lADOABII585ET4crzwAAAAF9JR3h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6394551777",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:18:53Z"
    },
    {
      "event": "commented",
      "id": 1092762135,
      "node_id": "IC_kwDOABII585BIjoX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092762135",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T11:26:18Z",
      "updated_at": "2022-04-08T11:26:18Z",
      "author_association": "NONE",
      "body": ">My only open question/thing to consider is whether I should include the whole spending tx instead of just the spendingtxid in the results. I chose to only include the spendingtxid because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a bandwidth waste. \r\n\r\nIMHO the RPC command needs to do one operation, and in a clean way. What `getmempooltxspendingprevout` already done with your actual implementation. How I can see in my mind if the `getmempooltxspendingprevout` return all the mem pool entry is a solution that makes the API a little bit messy?\r\n\r\n\r\nA solution that can fix your open question is to add another RPC method that returns all the `spendingtxid` for each `prevouts` in there the duplicated can be fine because lives in a separate JSON object.\r\n\r\nWhat do you think?",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1092762135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1092834772,
      "node_id": "IC_kwDOABII585BI1XU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092834772",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T13:00:49Z",
      "updated_at": "2022-04-08T13:00:49Z",
      "author_association": "MEMBER",
      "body": "> IMHO the RPC command needs to do one operation, and in a clean way. What getmempooltxspendingprevout already done with your actual implementation. \r\n\r\n:+1: \r\n\r\n> A solution that can fix your open question is to add another RPC method that returns all the spendingtxid for each prevouts in there the duplicated can be fine because lives in a separate JSON object.\r\n\r\nI would avoid adding yet another RPC method, since the same result can be easily achieved by doing `getmempooltxspendingprevout` followed by `getmempoolentry`. I would add new RPC methods only for things that really cannot be done with existing RPCs, otherwise `bitcoind` will end up with way too many RPC methods which is going to be a pain to maintain.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1092834772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1092840201,
      "node_id": "IC_kwDOABII585BI2sJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092840201",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T13:06:50Z",
      "updated_at": "2022-04-08T13:06:50Z",
      "author_association": "NONE",
      "body": ">I would avoid adding yet another RPC method, since the same result can be easily achieved by doing getmempooltxspendingprevout followed by getmempoolentry. I would add new RPC methods only for things that really cannot be done with existing RPCs, otherwise bitcoind will end up with way too many RPC methods which is going to be a pain to maintain.\r\n\r\nI have your same idea here!",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1092840201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "reviewed",
      "id": 950589393,
      "node_id": "PRR_kwDOABII5844qNfR",
      "url": null,
      "actor": null,
      "commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK c3cde8ca864f13a638f558d1631f144ffa37e03d. Looks correct, clean, and well-tested to me. Some nits if you retouch.\r\n\r\n> My only open question/thing to consider is whether I should include the whole spending tx instead of just the spendingtxid in the results.\r\n\r\nI don't feel strongly, but if you change your mind, I think it's perfectly fine to include the whole spending tx. There's not much waste since we've already retrieved it from the mempool, and only a privileged user can be using the RPC interface anyway.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-950589393",
      "submitted_at": "2022-04-22T21:35:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6488452248,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAGCveyY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6488452248",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T08:30:05Z"
    },
    {
      "event": "commented",
      "id": 1108257047,
      "node_id": "IC_kwDOABII585CDqkX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108257047",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T08:38:13Z",
      "updated_at": "2022-04-25T08:39:45Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @glozow! \r\n\r\n> I don't feel strongly, but if you change your mind, I think it's perfectly fine to include the whole spending tx. There's not much waste since we've already retrieved it from the mempool, and only a privileged user can be using the RPC interface anyway.\r\n\r\nI am more and more convinced that it's better to only have the `spendingtxid`. There is a lot of useful information in the output of `getrawtransaction` that callers will want, so they will very likely follow up with a call to that RPC anyway (and we don't want to replicate all of its contents in the output of `gettxspendingprevout`). \r\n\r\nWe're regularly seeing big coinjoin transactions in our systems, so if we include the whole tx in the RPC response we can easily have responses that span several Mb, which is a waste for `bitcoind` nodes on remote machines accessed through a (sometimes flaky) VPN (which we've seen some lightning node operators do).",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1108257047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6488509534,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGCvsxe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6488509534",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T08:38:30Z"
    },
    {
      "event": "subscribed",
      "id": 6488509543,
      "node_id": "SE_lADOABII585ET4crzwAAAAGCvsxn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6488509543",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T08:38:30Z"
    },
    {
      "event": "commented",
      "id": 1109162622,
      "node_id": "IC_kwDOABII585CHHp-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109162622",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T00:17:36Z",
      "updated_at": "2022-04-26T00:17:36Z",
      "author_association": "MEMBER",
      "body": "re ACK 8c9152c1098acec4b1b4e333240f0e95eea21159",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1109162622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1110947401,
      "node_id": "IC_kwDOABII585CN7ZJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110947401",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:35:02Z",
      "updated_at": "2022-04-27T12:35:02Z",
      "author_association": "MEMBER",
      "body": "cc Antoine for review (@darosior @ariard), if interested.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1110947401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6506626325,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGD0z0V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506626325",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:35:02Z"
    },
    {
      "event": "subscribed",
      "id": 6506626328,
      "node_id": "SE_lADOABII585ET4crzwAAAAGD0z0Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506626328",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:35:02Z"
    },
    {
      "event": "mentioned",
      "id": 6506626342,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGD0z0m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506626342",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:35:02Z"
    },
    {
      "event": "subscribed",
      "id": 6506626348,
      "node_id": "SE_lADOABII585ET4crzwAAAAGD0z0s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506626348",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:35:02Z"
    },
    {
      "event": "reviewed",
      "id": 955079717,
      "node_id": "PRR_kwDOABII58447Vwl",
      "url": null,
      "actor": null,
      "commit_id": "8c9152c1098acec4b1b4e333240f0e95eea21159",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK 8c9152c\r\n\r\n-----------\r\n\r\nA caveat : the usage of this RPC you're describing sounds unsafe to me. If you're desirous to monitor the spend of a shared-utxo such as LN funding output, your counterparty might be able to broadcast multiple conflicting transactions. If this counterparty knows your full-node, your mempool can even be partitioned from the rest of the network, with a junk feerate, potentially wrecking your fee-bump. Of course, this assumes a bit of cross-layer mapping work on your malicious counterparty. So better to reconciliate from multiple mempools or opt for blind fee-bump after a while imho.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-955079717",
      "submitted_at": "2022-04-27T15:18:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1111804552,
      "node_id": "IC_kwDOABII585CRMqI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111804552",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T06:39:01Z",
      "updated_at": "2022-04-28T06:39:01Z",
      "author_association": "MEMBER",
      "body": "> A caveat : the usage of this RPC you're describing sounds unsafe to me. If you're desirous to monitor the spend of a shared-utxo such as LN funding output, your counterparty might be able to broadcast multiple conflicting transactions.\r\n\r\nThanks for the comments! But that shouldn't be an issue in our case (at least not related to this RPC). This RPC is helpful to react instantly once a shared output is spent. It doesn't matter if in the end it's another transaction that gets confirmed, we will learn this when we receive blocks and will then adapt. It then becomes a different problem of ensuring you're receiving blocks (avoiding complete eclipse attacks), which we solve by a combination of blockchain watchdogs and a good `bitcoind` setup.\r\n\r\nProtecting against commit tx pinning is an entirely separate issue as well, which exists regardless of whether this RPC exists or not.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1111804552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6512408419,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAGEK3dj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6512408419",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T06:40:53Z"
    },
    {
      "event": "commented",
      "id": 1113681008,
      "node_id": "IC_kwDOABII585CYWxw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113681008",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:09:11Z",
      "updated_at": "2022-04-29T20:09:11Z",
      "author_association": "MEMBER",
      "body": ">@luke-jr can you detail how that would work? \r\n\r\nYou would add the txout you need to watch to the wallet (maybe we need to add a way to do that), then the wallet would scan every new block/tx internally, letting you know via listtransactions.\r\n\r\n>it would be wasteful to need both a watch-only wallet and a regular wallet to make this use-case work?\r\n\r\nAt least legacy wallets support both normal and watch-only in the same wallet...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1113681008",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6526024554,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGE-ztq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526024554",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:09:11Z"
    },
    {
      "event": "subscribed",
      "id": 6526024556,
      "node_id": "SE_lADOABII585ET4crzwAAAAGE-zts",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526024556",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:09:11Z"
    },
    {
      "event": "reviewed",
      "id": 958542031,
      "node_id": "PRR_kwDOABII5845IjDP",
      "url": null,
      "actor": null,
      "commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK https://github.com/bitcoin/bitcoin/pull/24408/commits/8f9335f19ce75515f9e6944de503a5278a92f464\r\n\r\nI confirmed that the new RPC correctly returns the ids of transactions that spend the outpoints passed as a parameter.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-958542031",
      "submitted_at": "2022-05-01T04:34:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1114552961,
      "node_id": "IC_kwDOABII585CbrqB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114552961",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T06:59:00Z",
      "updated_at": "2022-05-02T06:59:00Z",
      "author_association": "MEMBER",
      "body": "@luke-jr thanks, I understand what you mean, I didn't know a wallet could be both normal and watch-only. This is something that could make sense, we are currently doing this scan outside of `bitcoind`, but having `bitcoind` do it for us could be useful.\r\n\r\nDoes it completely replace this PR though? I can see value in having both options (a dedicated RPC and a watch-only feature), the watch-only mode could be added afterwards (especially if we see people starting to rely on this new RPC).\r\n",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1114552961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6531427057,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGFTarx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6531427057",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T06:59:01Z"
    },
    {
      "event": "subscribed",
      "id": 6531427060,
      "node_id": "SE_lADOABII585ET4crzwAAAAGFTar0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6531427060",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T06:59:01Z"
    },
    {
      "event": "reviewed",
      "id": 958824741,
      "node_id": "PRR_kwDOABII5845JoEl",
      "url": null,
      "actor": null,
      "commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Conceptually, this feature needs a transaction indexer and that's what a wallet is. I think ideally this feature should be part of the wallet as a more general \"get spending tx by prevout\" feature, rather than a very usecase-specific feature leveraging the mempool index.\r\nHowever, it would be a bit convoluted to use at the moment. It would require them to import a new descriptor for each output they would need to claim, without (currently) the possibility to delete it. The number of descriptors under watch would therefore grow continuously as the software would be used.\r\nAccounting for the immediate benefit to users, and the low cost of this RPC (it only calls into a single mempool function), i agree it can be merged. I believe longer term we should rather improve the wallet instead of providing (what i think are) specialized wallet functionalities at the node level.\r\n\r\nlight code review ACK 8f9335f19ce75515f9e6944de503a5278a92f464 -- the code makes sense to me and i didn't spot any issue. But i only quickly glanced at the diff.\r\n\r\n*(For reference, we have a similar issue with `revaultd`: in order to fetch a spending transaction from the watchonly wallet whose txid is unknown we need to iterate on the list of the wallet transactions. https://github.com/revault/revaultd/blob/b310208a8b3b420f9b0cddcc03588e264a99538b/src/bitcoind/interface.rs#L777-L864 (fortunately `listsinceblock` allows us to reduce the cost by only iterating on transactions since the last pool).)*",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-958824741",
      "submitted_at": "2022-05-02T08:22:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "commented",
      "id": 1114635200,
      "node_id": "IC_kwDOABII585Cb_vA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114635200",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T08:54:20Z",
      "updated_at": "2022-05-02T08:54:20Z",
      "author_association": "MEMBER",
      "body": "> Conceptually, this feature needs a transaction indexer and that's what a wallet is. I think ideally this feature should be part of the wallet as a more general \"get spending tx by prevout\" feature, rather than a very usecase-specific feature leveraging the mempool index.\r\n\r\nI agree, and you're one step ahead, see #24539 :)\r\nThanks for the comments!\r\n",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1114635200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6532726849,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAGFYYBB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6532726849",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T11:20:33Z"
    },
    {
      "event": "reviewed",
      "id": 958967888,
      "node_id": "PRR_kwDOABII5845KLBQ",
      "url": null,
      "actor": null,
      "commit_id": "ad14372cab1897b3f5efafe9861ec696f5e97060",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/24408/commits/ad14372cab1897b3f5efafe9861ec696f5e97060",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-958967888",
      "submitted_at": "2022-05-02T11:39:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxODU1NzAzNDA1NWY3NDA5NTEyOTRlNzY3N2FlOWZkNTE0OWVhOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/418557034055f740951294e7677ae9fd5149ea9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/418557034055f740951294e7677ae9fd5149ea9b",
      "tree": {
        "sha": "3c0137a53cbad899d52ddb6b120b5b61da032bb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c0137a53cbad899d52ddb6b120b5b61da032bb1"
      },
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "payload": "tree 3c0137a53cbad899d52ddb6b120b5b61da032bb1\nparent 1ad5d5088d69939b0551de31d6c33c03153697c5\nauthor t-bast <bastuc@hotmail.fr> 1650875365 +0200\ncommitter t-bast <bastuc@hotmail.fr> 1651755408 +0200\n\nAdd RPC to get mempool txs spending outputs\n\nWe add an RPC to fetch the mempool transactions spending given outpoints.\nWithout this RPC, application developers would need to first call\n`getrawmempool` which returns a long list of `txid`, then fetch each of\nthese txs individually to check whether they spend the given outpoint(s).\n\nThis RPC can later be enriched to also find confirmed transactions instead\nof being restricted to mempool transactions.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWmvUsbjhNg6Tzyflvl00KtNowToFAmJzyZAACgkQvl00KtNo\nwTpSChAAlyJJzm8BEDinru4M1E49r5//fqCKtDWj8cptbij15Q0ozfJg7m9WeNja\nvNp1HwaAjo/fhk4SJTm0eK1uOLTFWj3MCBA+VlqpXFXPMfCp4nsVfb7dqAHzjtF0\nVl2Do9cebXabRivFbqkn3N7FqhG61nZOJxKvo7oxtZh98wzwNMGOsGbSM3lmnini\nQyDij4OcJvtP3ESbNwvBEiv3fUmtZG1uzbH8dqe3b0Ehq86Atf3abzzE7kUhneUn\nq0FydTyxeTCVhuWQyXVPER/9lnXAxjKq2G5TqVOWPDqGi9ZTsx4aoZQRH0JqpmW/\n/DArW9Ap1WqZFcbxU8GlJO5ZZTpUHY/3fVmK2EbTfEOvWqezwGKodf5ziQfLpWUC\nWvpNtkMWMeK08H63ruvkZhizZVaoHtPlldidwJfuioEobx3PGN5GLNvik0+1cMXt\ntwcrwB0m98thI/mszL6iFDwZHlMS4J93sKI2dfoBLZQgpWMrZhjjP85D2BUKxqdl\nnN/uLTMfCT8e7jaKBPLbzFsOyJtscRHw+USXmN6Ic8MhFVxTq1c65c70MCh/U1SE\ndy9L6K9BpimBZ3X+NJM58tgaJbTAbSB4BPOA2LrXpIrWWLWkr63f81bCS0bw4xci\n6IBTQ/OXkOkNL4QYVTVgXylIv4wPrmPVbHrtoaVDl8AyJSlAiRg=\n=WMKw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ad5d5088d69939b0551de31d6c33c03153697c5",
          "sha": "1ad5d5088d69939b0551de31d6c33c03153697c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1ad5d5088d69939b0551de31d6c33c03153697c5"
        }
      ],
      "message": "Add RPC to get mempool txs spending outputs\n\nWe add an RPC to fetch the mempool transactions spending given outpoints.\nWithout this RPC, application developers would need to first call\n`getrawmempool` which returns a long list of `txid`, then fetch each of\nthese txs individually to check whether they spend the given outpoint(s).\n\nThis RPC can later be enriched to also find confirmed transactions instead\nof being restricted to mempool transactions.",
      "committer": {
        "name": "t-bast",
        "email": "bastuc@hotmail.fr",
        "date": "2022-05-05T12:56:48Z"
      },
      "author": {
        "name": "t-bast",
        "email": "bastuc@hotmail.fr",
        "date": "2022-04-25T08:29:25Z"
      },
      "sha": "418557034055f740951294e7677ae9fd5149ea9b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6556318771,
      "node_id": "HRFPE_lADOABII585ET4crzwAAAAGGyXwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6556318771",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T12:57:23Z"
    },
    {
      "event": "commented",
      "id": 1118537370,
      "node_id": "IC_kwDOABII585Cq4aa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118537370",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T13:16:53Z",
      "updated_at": "2022-05-05T13:16:53Z",
      "author_association": "MEMBER",
      "body": "Simple rebase on `master` without any changes in https://github.com/bitcoin/bitcoin/pull/24408/commits/418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1118537370",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "commented",
      "id": 1129681061,
      "node_id": "IC_kwDOABII585DVZCl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1129681061",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z",
      "updated_at": "2022-05-18T07:44:02Z",
      "author_association": "MEMBER",
      "body": "I don't have any pending issues on that PR, if @ariard @darosior @glozow @MarcoFalke you have time to give this another pass whenever possible it would be great :pray: ",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1129681061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6629968219,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGLLUlb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968219",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "subscribed",
      "id": 6629968224,
      "node_id": "SE_lADOABII585ET4crzwAAAAGLLUlg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968224",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "mentioned",
      "id": 6629968239,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGLLUlv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968239",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "subscribed",
      "id": 6629968247,
      "node_id": "SE_lADOABII585ET4crzwAAAAGLLUl3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968247",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "mentioned",
      "id": 6629968253,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGLLUl9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968253",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "subscribed",
      "id": 6629968258,
      "node_id": "SE_lADOABII585ET4crzwAAAAGLLUmC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968258",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "mentioned",
      "id": 6629968268,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGLLUmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968268",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:02Z"
    },
    {
      "event": "subscribed",
      "id": 6629968275,
      "node_id": "SE_lADOABII585ET4crzwAAAAGLLUmT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6629968275",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T07:44:03Z"
    },
    {
      "event": "reviewed",
      "id": 976583390,
      "node_id": "PRR_kwDOABII5846NXre",
      "url": null,
      "actor": null,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-utACK 418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-976583390",
      "submitted_at": "2022-05-18T08:46:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "reviewed",
      "id": 976656894,
      "node_id": "PRR_kwDOABII5846Npn-",
      "url": null,
      "actor": null,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "re-ACK https://github.com/bitcoin/bitcoin/pull/24408/commits/418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-976656894",
      "submitted_at": "2022-05-18T09:37:51Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "reviewed",
      "id": 976660668,
      "node_id": "PRR_kwDOABII5846Nqi8",
      "url": null,
      "actor": null,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-tACK 418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-976660668",
      "submitted_at": "2022-05-18T09:40:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "review_requested",
      "id": 6630818335,
      "node_id": "RRE_lADOABII585ET4crzwAAAAGLOkIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6630818335",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-18T09:41:53Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "referenced",
      "id": 6655417544,
      "node_id": "REFE_lADOABII585ET4crzwAAAAGMsZzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6655417544",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2cca8c669484e4e268a298bef5d2d70885f58f6",
      "commit_url": "https://api.github.com/repos/luke-jr/bitcoin/commits/a2cca8c669484e4e268a298bef5d2d70885f58f6",
      "created_at": "2022-05-21T21:51:50Z"
    },
    {
      "event": "commented",
      "id": 1134289715,
      "node_id": "IC_kwDOABII585Dm-Mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1134289715",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T07:30:12Z",
      "updated_at": "2022-05-23T07:30:12Z",
      "author_association": "MEMBER",
      "body": "cc @glozow ",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1134289715",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24408"
    },
    {
      "event": "mentioned",
      "id": 6658465964,
      "node_id": "MEE_lADOABII585ET4crzwAAAAGM4CCs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6658465964",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T07:30:13Z"
    },
    {
      "event": "subscribed",
      "id": 6658465970,
      "node_id": "SE_lADOABII585ET4crzwAAAAGM4CCy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6658465970",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T07:30:13Z"
    },
    {
      "event": "reviewed",
      "id": 982449528,
      "node_id": "PRR_kwDOABII5846jv14",
      "url": null,
      "actor": null,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/24408/commits/418557034055f740951294e7677ae9fd5149ea9b",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#pullrequestreview-982449528",
      "submitted_at": "2022-05-23T23:51:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
    },
    {
      "event": "merged",
      "id": 6692535106,
      "node_id": "ME_lADOABII585ET4crzwAAAAGO5_tC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6692535106",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3ba6dd6f4bb42bfab48194ce5f44850b0109451a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ba6dd6f4bb42bfab48194ce5f44850b0109451a",
      "created_at": "2022-05-27T13:18:10Z"
    },
    {
      "event": "closed",
      "id": 6692535130,
      "node_id": "CE_lADOABII585ET4crzwAAAAGO5_ta",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6692535130",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T13:18:10Z"
    },
    {
      "event": "referenced",
      "id": 6697616903,
      "node_id": "REFE_lADOABII585ET4crzwAAAAGPNYYH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6697616903",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "03c47642164a70bd2275aa5fc1ca4a3f7f361f63",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/03c47642164a70bd2275aa5fc1ca4a3f7f361f63",
      "created_at": "2022-05-28T22:51:04Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 6698856034,
      "node_id": "HRDE_lADOABII585ET4crzwAAAAGPSG5i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6698856034",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-29T22:58:07Z"
    },
    {
      "event": "locked",
      "id": 9367601111,
      "node_id": "LOE_lADOABII585ET4crzwAAAAIuWj_X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9367601111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T10:04:03Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811327243",
      "pull_request_review_id": 888961324,
      "id": 811327243,
      "node_id": "PRRC_kwDOABII584wW98L",
      "diff_hunk": "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "path": "test/functional/mempool_packages.py",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It looks like there aren't any dedicated test files for `getmempoolentry`, `getmempoolancestors` and `getmempooldescendants` (I wanted to insert my tests in such a file).\r\n\r\nShould I create a new `rpc_getmempoolpendingtx.py` to put more tests (e.g. some failure cases)?",
      "created_at": "2022-02-21T17:27:55Z",
      "updated_at": "2022-02-21T17:27:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811327243",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811327243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811842010",
      "pull_request_review_id": 889639706,
      "id": 811842010,
      "node_id": "PRRC_kwDOABII584wY7na",
      "diff_hunk": "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "path": "test/functional/mempool_packages.py",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "in_reply_to_id": 811327243,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, that's probably the move. \"rpc_mempool_info.py\" would be a good place to put tests for all of these RPCs.",
      "created_at": "2022-02-22T11:22:51Z",
      "updated_at": "2022-02-22T11:28:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811842010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811842010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811843082",
      "pull_request_review_id": 889639706,
      "id": 811843082,
      "node_id": "PRRC_kwDOABII584wY74K",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm wondering if, in the future, you might want to pass in a list of prevouts? (e.g. if you have transaction(s) with multiple inputs and want to see if anything in the mempool conflicts)",
      "created_at": "2022-02-22T11:24:16Z",
      "updated_at": "2022-02-22T11:28:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811843082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811843082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 792,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 804,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811846174",
      "pull_request_review_id": 889639706,
      "id": 811846174,
      "node_id": "PRRC_kwDOABII584wY8oe",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry to nitpick but I was confused in the beginning by the name as well (I thought you wanted the child of a mempool transaction). Maybe `gettxspendingprevout` would be better, but I'm sure there's someone out there who would find it even more confusing :sweat_smile:",
      "created_at": "2022-02-22T11:28:05Z",
      "updated_at": "2022-02-22T11:28:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811846174",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811846174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811897533",
      "pull_request_review_id": 889728684,
      "id": 811897533,
      "node_id": "PRRC_kwDOABII584wZJK9",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": 811846174,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree, I'm not a fan of the name! Should it be `getmempooltxspendingprevout` though to highlight that we return a mempool tx (with ancestor / descendant feerates, which are useful in fee-bumping cases)? It's a long name, but at least it's quite obvious what it does (hopefully).",
      "created_at": "2022-02-22T12:33:49Z",
      "updated_at": "2022-02-22T12:33:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811897533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811897533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811898624",
      "pull_request_review_id": 889730193,
      "id": 811898624,
      "node_id": "PRRC_kwDOABII584wZJcA",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": 811843082,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good idea, it's worth adding this flexibility right now to avoid running in backwards-compatibility issues if we add it later, I'll try that. I'll take a list of `prevouts` and return a map of `prevout -> spending tx (or null if not found)`.",
      "created_at": "2022-02-22T12:35:09Z",
      "updated_at": "2022-02-22T12:35:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811898624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811898624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 792,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 804,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814057779",
      "pull_request_review_id": 892692776,
      "id": 814057779,
      "node_id": "PRRC_kwDOABII584whYkz",
      "diff_hunk": "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "path": "test/functional/mempool_packages.py",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "in_reply_to_id": 811327243,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/0015ceb04cb3545914e2bf7c4b2cde6d66f172ed, I have only added tests for my new RPC for now, future PRs can add tests for `getmempoolentry`, `getmempoolancestors` and `getmempooldescendants` here if that makes sense.",
      "created_at": "2022-02-24T16:31:51Z",
      "updated_at": "2022-02-25T15:41:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814057779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814057779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814060287",
      "pull_request_review_id": 892696288,
      "id": 814060287,
      "node_id": "PRRC_kwDOABII584whZL_",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": 811843082,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/0015ceb04cb3545914e2bf7c4b2cde6d66f172ed\r\nI chose to return only the `spendingtxid` instead of the mempool tx data, because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a (small) waste.\r\n\r\nCallers can chain this with `getmempoolentry` to get more data about the conflicting transaction.\r\nIf you think it makes more sense to directly include the mempool tx let me know, I don't have strong feelings about that.",
      "created_at": "2022-02-24T16:34:20Z",
      "updated_at": "2022-02-25T15:40:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814060287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814060287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 792,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 804,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814061201",
      "pull_request_review_id": 892697968,
      "id": 814061201,
      "node_id": "PRRC_kwDOABII584whZaR",
      "diff_hunk": "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "in_reply_to_id": 811846174,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I updated the name, but now that is accepts multiple prevouts, I'm not sure whether I should make it plural or not...\r\nNone of the names I find are completely satisfying, so I'll let reviewers chime in with better proposals!",
      "created_at": "2022-02-24T16:35:13Z",
      "updated_at": "2022-02-24T16:35:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814061201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814061201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818993962",
      "pull_request_review_id": 899417562,
      "id": 818993962,
      "node_id": "PRRC_kwDOABII584w0Nsq",
      "diff_hunk": "@@ -123,6 +123,8 @@ New RPCs\n   a future release. Note that in either case, the `status` field\n   now reflects the status of the current block rather than the next\n   block. (#23508)\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)",
      "path": "doc/release-notes.md",
      "position": null,
      "original_position": 5,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe move this to a separate file for now?\r\n\r\n`doc/release-notes-24408.md`",
      "created_at": "2022-03-03T19:24:54Z",
      "updated_at": "2022-03-03T19:24:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818993962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818993962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818994278",
      "pull_request_review_id": 899418005,
      "id": 818994278,
      "node_id": "PRRC_kwDOABII584w0Nxm",
      "diff_hunk": "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"\\nScans the mempool to find transactions spending any of the given outputs\\n\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                \"Scans the mempool to find transactions spending any of the given outputs\",\r\n```\r\n\r\nnit: I think those can be removed",
      "created_at": "2022-03-03T19:25:21Z",
      "updated_at": "2022-03-03T19:26:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818994278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818994278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 792,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162210",
      "pull_request_review_id": 899663446,
      "id": 819162210,
      "node_id": "PRRC_kwDOABII584w02xi",
      "diff_hunk": "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"\\nScans the mempool to find transactions spending any of the given outputs\\n\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "in_reply_to_id": 818994278,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "created_at": "2022-03-04T00:00:50Z",
      "updated_at": "2022-03-04T00:00:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 792,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162399",
      "pull_request_review_id": 899663676,
      "id": 819162399,
      "node_id": "PRRC_kwDOABII584w020f",
      "diff_hunk": "@@ -123,6 +123,8 @@ New RPCs\n   a future release. Note that in either case, the `status` field\n   now reflects the status of the current block rather than the next\n   block. (#23508)\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)",
      "path": "doc/release-notes.md",
      "position": null,
      "original_position": 5,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "in_reply_to_id": 818993962,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21, let me know if the format should be different",
      "created_at": "2022-03-04T00:01:14Z",
      "updated_at": "2022-03-04T00:01:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820032184",
      "pull_request_review_id": 900888495,
      "id": 820032184,
      "node_id": "PRRC_kwDOABII584w4LK4",
      "diff_hunk": "@@ -0,0 +1,5 @@\n+New RPCs\n+--------\n+\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find",
      "path": "doc/release-notes/release-notes-24408.md",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "in_reply_to_id": null,
      "user": null,
      "body": "```suggestion\r\n- A new `getmempoolprevout` RPC has been added, which scans the mempool to find\r\n```",
      "created_at": "2022-03-05T03:49:56Z",
      "updated_at": "2022-03-05T03:49:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r820032184",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820032184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822857757",
      "pull_request_review_id": 904662270,
      "id": 822857757,
      "node_id": "PRRC_kwDOABII584xC9Ad",
      "diff_hunk": "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (ommitted if unspent)\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "in_reply_to_id": null,
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think it should be spelled \"omitted\" (only one m) :) ",
      "created_at": "2022-03-09T16:41:45Z",
      "updated_at": "2022-03-09T17:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r822857757",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822857757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 812,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834105358",
      "pull_request_review_id": 919975417,
      "id": 834105358,
      "node_id": "PRRC_kwDOABII584xt3AO",
      "diff_hunk": "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (ommitted if unspent)\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "in_reply_to_id": 822857757,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Fixed in https://github.com/bitcoin/bitcoin/pull/24408/commits/9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "created_at": "2022-03-24T09:39:30Z",
      "updated_at": "2022-03-24T09:39:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r834105358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834105358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 812,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840701421",
      "pull_request_review_id": 929105300,
      "id": 840701421,
      "node_id": "PRRC_kwDOABII584yHBXt",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        outputs.emplace_back(txid, nOutput);\r\n```\r\n\r\nChange this can avoid a copy of the object",
      "created_at": "2022-04-01T15:31:58Z",
      "updated_at": "2022-04-01T15:38:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840701421",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840701421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840705230",
      "pull_request_review_id": 929105300,
      "id": 840705230,
      "node_id": "PRRC_kwDOABII584yHCTO",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+    LOCK(mempool.cs);\n+\n+    UniValue result{UniValue::VARR};\n+\n+    for (const COutPoint& output : outputs) {\n+        UniValue o(UniValue::VOBJ);\n+        o.pushKV(\"txid\", output.hash.ToString());\n+        o.pushKV(\"vout\", (uint64_t)output.n);\n+\n+        const CTransaction* spendingTx = mempool.GetConflictTx(output);\n+        if (spendingTx != nullptr) {\n+            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+        }\n+\n+        result.push_back(o);\n+    }",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    for (const COutPoint& output : outputs) {\r\n        result.emplace_back(UniValue::VOBJ);\r\n        UniValue o = result.back();\r\n        o.pushKV(\"txid\", output.hash.ToString());\r\n        o.pushKV(\"vout\", (uint64_t)output.n);\r\n\r\n        const CTransaction* spendingTx = mempool.GetConflictTx(output);\r\n        if (spendingTx != nullptr) {\r\n            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\r\n        }\r\n    }\r\n```\r\n\r\nIn this way we avoid the move too, and for a transaction this is important IMHO",
      "created_at": "2022-04-01T15:36:35Z",
      "updated_at": "2022-04-01T15:38:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840705230",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840705230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 445,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841428747",
      "pull_request_review_id": 929919934,
      "id": 841428747,
      "node_id": "PRRC_kwDOABII584yJy8L",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/8e6db71ff6cf2c8f724183996b4842fcf53d16b0",
      "created_at": "2022-04-04T07:14:32Z",
      "updated_at": "2022-04-04T07:14:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841428747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841428747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841429455",
      "pull_request_review_id": 929921000,
      "id": 841429455,
      "node_id": "PRRC_kwDOABII584yJzHP",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+    LOCK(mempool.cs);\n+\n+    UniValue result{UniValue::VARR};\n+\n+    for (const COutPoint& output : outputs) {\n+        UniValue o(UniValue::VOBJ);\n+        o.pushKV(\"txid\", output.hash.ToString());\n+        o.pushKV(\"vout\", (uint64_t)output.n);\n+\n+        const CTransaction* spendingTx = mempool.GetConflictTx(output);\n+        if (spendingTx != nullptr) {\n+            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+        }\n+\n+        result.push_back(o);\n+    }",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840705230,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the review! This doesn't seem to compile though...and I'm not sure it's needed at all, we're not dealing with a whole transaction here, just a `txid`, so a copy is really not something we care about IMO.",
      "created_at": "2022-04-04T07:15:36Z",
      "updated_at": "2022-04-04T07:15:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841429455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841429455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 445,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841481867",
      "pull_request_review_id": 929996280,
      "id": 841481867,
      "node_id": "PRRC_kwDOABII584yJ_6L",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+    LOCK(mempool.cs);\n+\n+    UniValue result{UniValue::VARR};\n+\n+    for (const COutPoint& output : outputs) {\n+        UniValue o(UniValue::VOBJ);\n+        o.pushKV(\"txid\", output.hash.ToString());\n+        o.pushKV(\"vout\", (uint64_t)output.n);\n+\n+        const CTransaction* spendingTx = mempool.GetConflictTx(output);\n+        if (spendingTx != nullptr) {\n+            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+        }\n+\n+        result.push_back(o);\n+    }",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840705230,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">Thanks for the review! This doesn't seem to compile though\r\n\r\nI will try to compile it locally maybe something wrong with `UniValue::VOBJ` that my mind compiler is not able to catch right now!\r\n\r\n>just a txid, so a copy is really not something we care about IMO\r\n\r\nRight, I wrote a bad motivation, I mean here there `COutPoint` can be a lot, and this loop with the `emplace_back` and be optimized, because with the `push_back` to need to copy the structure in a pointer this can cause move, or a copy in some case.\r\n\r\nWith emplace_back you need to allocate the space of the struct one time, and this will summarize from:\r\n\r\npush_back: 1 stack allocation + 1 copy to heap, and the copy cost O(N)\r\nemplace_back: 1 allocation and this with reserve() cost O(1)\r\n\r\nBut yes, overall it is not a big deal.",
      "created_at": "2022-04-04T08:22:46Z",
      "updated_at": "2022-04-04T08:22:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841481867",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841481867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 445,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841510561",
      "pull_request_review_id": 930037317,
      "id": 841510561,
      "node_id": "PRRC_kwDOABII584yKG6h",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The tests started failing after this change, so I'm reverting it.\r\nTo be honest, I don't think we care about such optimizations on just a few bytes here.",
      "created_at": "2022-04-04T08:55:41Z",
      "updated_at": "2022-04-04T08:56:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841510561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841510561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841525214",
      "pull_request_review_id": 930058268,
      "id": 841525214,
      "node_id": "PRRC_kwDOABII584yKKfe",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">The tests started failing after this change, so I'm reverting it.\r\n\r\nMh! strange the Ci looks like failing again.\r\n\r\n>To be honest, I don't think we care about such optimizations on just a few bytes here.\r\n\r\nRight, this can be also a followup PR too",
      "created_at": "2022-04-04T09:12:27Z",
      "updated_at": "2022-04-04T09:12:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841525214",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841525214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841530527",
      "pull_request_review_id": 930066042,
      "id": 841530527,
      "node_id": "PRRC_kwDOABII584yKLyf",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Mh! strange the Ci looks like failing again.\r\n\r\nTrue! That is strange, I tried rebasing, let's see if that fixes it.",
      "created_at": "2022-04-04T09:18:31Z",
      "updated_at": "2022-04-04T09:19:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841530527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841530527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841617042",
      "pull_request_review_id": 930189844,
      "id": 841617042,
      "node_id": "PRRC_kwDOABII584yKg6S",
      "diff_hunk": "@@ -587,6 +587,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "b68dd3b93172d32545eff86d586445f01bfdfd6a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                            {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=/*true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\r\n```\r\n\r\nThis may fix the CI failure (haven't tested)",
      "created_at": "2022-04-04T11:05:37Z",
      "updated_at": "2022-04-04T11:05:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841617042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841617042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841618622",
      "pull_request_review_id": 930192285,
      "id": 841618622,
      "node_id": "PRRC_kwDOABII584yKhS-",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Test failure is due to stricter documentation checking in current master, not due to commit 8e6db71ff6cf2c8f724183996b4842fcf53d16b0 . I left a comment with a potential fix.",
      "created_at": "2022-04-04T11:07:38Z",
      "updated_at": "2022-04-04T11:07:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841618622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841618622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841770613",
      "pull_request_review_id": 930424638,
      "id": 841770613,
      "node_id": "PRRC_kwDOABII584yLGZ1",
      "diff_hunk": "@@ -587,6 +587,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "b68dd3b93172d32545eff86d586445f01bfdfd6a",
      "in_reply_to_id": 841617042,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the tip, this seems to be working! Love the new github name btw ;)",
      "created_at": "2022-04-04T13:58:30Z",
      "updated_at": "2022-04-04T13:58:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841770613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841770613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841771322",
      "pull_request_review_id": 930425731,
      "id": 841771322,
      "node_id": "PRRC_kwDOABII584yLGk6",
      "diff_hunk": "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "in_reply_to_id": 840701421,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the tip, I re-added the change requested in that comment in https://github.com/bitcoin/bitcoin/pull/24408/commits/e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "created_at": "2022-04-04T13:59:08Z",
      "updated_at": "2022-04-04T13:59:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841771322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841771322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 436,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 648,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843915773",
      "pull_request_review_id": 933445279,
      "id": 843915773,
      "node_id": "PRRC_kwDOABII584yTSH9",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    chain_transaction,\n+)\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 23,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've reworked this test to use the MiniWallet.\r\n\r\nIf you want you can take the diff and squash. It requires a rebase on current master, though.\r\n\r\nHowever, for some reason one line in the test fails and I fail to see why. I can take another look there, unless someone beats me to it.\r\n\r\nAlso, there are some whitespace fixes. You can check them with `git diff --ignore-all-space`.\r\n\r\n```diff\r\ndiff --git a/src/rpc/mempool.cpp b/src/rpc/mempool.cpp\r\nindex fe25dc9edc..2d07b8bd2e 100644\r\n--- a/src/rpc/mempool.cpp\r\n+++ b/src/rpc/mempool.cpp\r\n@@ -590,83 +590,83 @@ static RPCHelpMan getmempoolentry()\r\n static RPCHelpMan getmempooltxspendingprevout()\r\n {\r\n     return RPCHelpMan{\"getmempooltxspendingprevout\",\r\n-                \"Scans the mempool to find transactions spending any of the given outputs\",\r\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\r\n+        {\r\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\r\n                 {\r\n-                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\r\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\r\n                         {\r\n-                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\r\n-                                {\r\n-                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\r\n-                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\r\n-                                },\r\n-                            },\r\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\r\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\r\n                         },\r\n                     },\r\n                 },\r\n-                RPCResult{\r\n-                    RPCResult::Type::ARR, \"\", \"\",\r\n-                    {\r\n-                        {RPCResult::Type::OBJ, \"\", \"\",\r\n-                        {\r\n-                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\r\n-                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\r\n-                            {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\r\n-                        }},\r\n-                    }\r\n-                },\r\n-                RPCExamples{\r\n-                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\r\n-                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\r\n-                },\r\n+            },\r\n+        },\r\n+        RPCResult{\r\n+            RPCResult::Type::ARR, \"\", \"\",\r\n+            {\r\n+                {RPCResult::Type::OBJ, \"\", \"\",\r\n+                {\r\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\r\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\r\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\r\n+                }},\r\n+            }\r\n+        },\r\n+        RPCExamples{\r\n+            HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\r\n+            + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\r\n+        },\r\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n-{\r\n-    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\r\n-    const UniValue& output_params = request.params[0];\r\n-    if (output_params.empty()) {\r\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\r\n-    }\r\n+        {\r\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\r\n+            const UniValue& output_params = request.params[0];\r\n+            if (output_params.empty()) {\r\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\r\n+            }\r\n \r\n-    std::vector<COutPoint> outputs;\r\n-    outputs.reserve(output_params.size());\r\n+            std::vector<COutPoint> outputs;\r\n+            outputs.reserve(output_params.size());\r\n \r\n-    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\r\n-        const UniValue& o = output_params[idx].get_obj();\r\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\r\n+                const UniValue& o = output_params[idx].get_obj();\r\n \r\n-        RPCTypeCheckObj(o,\r\n-            {\r\n-                {\"txid\", UniValueType(UniValue::VSTR)},\r\n-                {\"vout\", UniValueType(UniValue::VNUM)},\r\n-            });\r\n+                RPCTypeCheckObj(o,\r\n+                                {\r\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\r\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\r\n+                                });\r\n+\r\n+                const uint256 txid(ParseHashO(o, \"txid\"));\r\n+                const int nOutput = find_value(o, \"vout\").get_int();\r\n+                if (nOutput < 0) {\r\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\r\n+                }\r\n \r\n-        const uint256 txid(ParseHashO(o, \"txid\"));\r\n-        const int nOutput = find_value(o, \"vout\").get_int();\r\n-        if (nOutput < 0) {\r\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\r\n-        }\r\n+                outputs.emplace_back(txid, nOutput);\r\n+            }\r\n \r\n-        outputs.emplace_back(txid, nOutput);\r\n-    }\r\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\r\n+            LOCK(mempool.cs);\r\n \r\n-    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\r\n-    LOCK(mempool.cs);\r\n-\r\n-    UniValue result{UniValue::VARR};\r\n+            UniValue result{UniValue::VARR};\r\n \r\n-    for (const COutPoint& output : outputs) {\r\n-        UniValue o(UniValue::VOBJ);\r\n-        o.pushKV(\"txid\", output.hash.ToString());\r\n-        o.pushKV(\"vout\", (uint64_t)output.n);\r\n+            for (const COutPoint& output : outputs) {\r\n+                UniValue o(UniValue::VOBJ);\r\n+                o.pushKV(\"txid\", output.hash.ToString());\r\n+                o.pushKV(\"vout\", (uint64_t)output.n);\r\n \r\n-        const CTransaction* spendingTx = mempool.GetConflictTx(output);\r\n-        if (spendingTx != nullptr) {\r\n-            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\r\n-        }\r\n+                const CTransaction* spendingTx = mempool.GetConflictTx(output);\r\n+                if (spendingTx != nullptr) {\r\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\r\n+                }\r\n \r\n-        result.push_back(o);\r\n-    }\r\n+                result.push_back(o);\r\n+            }\r\n \r\n-    return result;\r\n-},\r\n+            return result;\r\n+        },\r\n     };\r\n }\r\n \r\ndiff --git a/test/functional/rpc_mempool_info.py b/test/functional/rpc_mempool_info.py\r\nindex ef5b9535d4..da4314444d 100755\r\n--- a/test/functional/rpc_mempool_info.py\r\n+++ b/test/functional/rpc_mempool_info.py\r\n@@ -13,19 +13,17 @@ from test_framework.util import (\r\n     assert_raises_rpc_error,\r\n     chain_transaction,\r\n )\r\n+from test_framework.wallet import MiniWallet\r\n+\r\n \r\n class RPCMempoolInfoTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.num_nodes = 1\r\n-        self.setup_clean_chain = True\r\n-\r\n-    def skip_test_if_missing_module(self):\r\n-        self.skip_if_no_wallet()\r\n \r\n     def run_test(self):\r\n-        # Mine some blocks and have them mature.\r\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\r\n-        confirmed_utxo = self.nodes[0].listunspent(1)[0]\r\n+        self.wallet = MiniWallet(self.nodes[0])\r\n+        self.wallet.rescan_utxos()\r\n+        confirmed_utxo = self.wallet.get_utxo()\r\n \r\n         # Create a tree of unconfirmed transactions in the mempool:\r\n         #             txA\r\n@@ -41,15 +39,21 @@ class RPCMempoolInfoTest(BitcoinTestFramework):\r\n         #            \\   /\r\n         #             \\ /\r\n         #             txH\r\n-        fee = Decimal(\"0.0001\")\r\n-        (txidA, txA_amount) = chain_transaction(self.nodes[0], [confirmed_utxo['txid']], [0], confirmed_utxo['amount'], fee, 2)\r\n-        (txidB, txB_amount) = chain_transaction(self.nodes[0], [txidA], [0], txA_amount, fee, 2)\r\n-        (txidC, txC_amount) = chain_transaction(self.nodes[0], [txidA], [1], txA_amount, fee, 2)\r\n-        txidD, _ = chain_transaction(self.nodes[0], [txidB], [0], txB_amount, fee, 1)\r\n-        (txidE, txE_amount) = chain_transaction(self.nodes[0], [txidB], [1], txB_amount, fee, 3)\r\n-        (txidF, txF_amount) = chain_transaction(self.nodes[0], [txidC], [0], txC_amount, fee, 2)\r\n-        txidG, _ = chain_transaction(self.nodes[0], [txidC], [1], txC_amount, fee, 1)\r\n-        txidH, _ = chain_transaction(self.nodes[0], [txidE, txidF], [0, 1], txE_amount + txF_amount, fee, 1)\r\n+\r\n+        def create_tx(**kwargs):\r\n+            return self.wallet.send_self_transfer_multi(\r\n+                from_node=self.nodes[0],\r\n+                **kwargs,\r\n+            )\r\n+\r\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\r\n+        txB, txC = [create_tx(utxos_to_spend=[u], num_outputs=2) for u in txA[\"new_utxos\"]]\r\n+        txD, txE = [create_tx(utxos_to_spend=[u]) for u in txB[\"new_utxos\"]]\r\n+        txF, txG = [create_tx(utxos_to_spend=[u]) for u in txC[\"new_utxos\"]]\r\n+        txH = create_tx(utxos_to_spend=txE[\"new_utxos\"] + txF[\"new_utxos\"])\r\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\r\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\r\n+        ]\r\n \r\n         mempool = self.nodes[0].getrawmempool()\r\n         assert_equal(len(mempool), 8)\r\n",
      "created_at": "2022-04-06T12:55:08Z",
      "updated_at": "2022-04-06T12:55:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r843915773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843915773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844024462",
      "pull_request_review_id": 933599028,
      "id": 844024462,
      "node_id": "PRRC_kwDOABII584yTsqO",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    chain_transaction,\n+)\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 23,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "in_reply_to_id": 843915773,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Many thanks for the suggestion! I have rebased and applied it in https://github.com/bitcoin/bitcoin/pull/24408/commits/aa39757914efd638f76dbb20d21865e8f0488c03, along with a small fix for the MiniWallet issue (by default it looked like there was no utxo generated for the wallet).\r\n\r\nRegarding the whitespace changes, I agree with you that it's much better now, I thought I had to stick with the formatting used by the other functions in this file for consistency (even though it looked weird).",
      "created_at": "2022-04-06T14:31:48Z",
      "updated_at": "2022-04-06T14:37:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r844024462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844024462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844037153",
      "pull_request_review_id": 933616734,
      "id": 844037153,
      "node_id": "PRRC_kwDOABII584yTvwh",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    chain_transaction,\n+)\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 23,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "in_reply_to_id": 843915773,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good to see you fixed up the test. If you squash everything down into one commit, it should be easier for others to review. You don't need to mention me in the commit body.",
      "created_at": "2022-04-06T14:42:56Z",
      "updated_at": "2022-04-06T14:42:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r844037153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844037153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844038931",
      "pull_request_review_id": 933619269,
      "id": 844038931,
      "node_id": "PRRC_kwDOABII584yTwMT",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    chain_transaction,\n+)\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 23,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "e143e80fb93a752f522c7cc3e98a4f55626d6b49",
      "in_reply_to_id": 843915773,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done!",
      "created_at": "2022-04-06T14:44:30Z",
      "updated_at": "2022-04-06T14:44:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r844038931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844038931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856576738",
      "pull_request_review_id": 950589393,
      "id": 856576738,
      "node_id": "PRRC_kwDOABII584zDlLi",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=3)\n+        txF = create_tx(utxos_to_spend=[txC[\"new_utxos\"][0]], num_outputs=2)\n+        txG = create_tx(utxos_to_spend=[txC[\"new_utxos\"][1]], num_outputs=1)\n+        txH = create_tx(utxos_to_spend=[txE[\"new_utxos\"][2],txF[\"new_utxos\"][0]], num_outputs=1)\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\n+        ]\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        assert_equal(len(mempool), 8)\n+        for txid in [txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH]:\n+            assert_equal(txid in mempool, True)\n+\n+        self.log.info(\"Find transactions spending outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+\n+        self.log.info(\"Find transaction spending multiple outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidE, 'vout' : 2}, {'txid' : txidF, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidE, 'vout' : 2, 'spendingtxid' : txidH}, {'txid' : txidF, 'vout' : 0, 'spendingtxid' : txidH} ])\n+\n+        self.log.info(\"Find no transaction when output is unspent\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidH, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidH, 'vout' : 0} ])\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidA, 'vout' : 5} ])\n+        assert_equal(result, [ {'txid' : txidA, 'vout' : 5} ])\n+\n+        self.log.info(\"Mixed spent and unspent outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidB, 'vout' : 0}, {'txid' : txidG, 'vout' : 3} ])\n+        assert_equal(result, [ {'txid' : txidB, 'vout' : 0, 'spendingtxid' : txidD}, {'txid' : txidG, 'vout' : 3} ])\n+\n+        self.log.info(\"Unknown input fields\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidC, 'vout' : 1, 'unknown' : 42} ])\n+        assert_equal(result, [ {'txid' : txidC, 'vout' : 1, 'spendingtxid' : txidG} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 84,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Question: would it be better for this to throw a `RPC_INVALID_PARAMETER`?",
      "created_at": "2022-04-22T21:26:07Z",
      "updated_at": "2022-04-22T21:35:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r856576738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856576738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856577386",
      "pull_request_review_id": 950589393,
      "id": 856577386,
      "node_id": "PRRC_kwDOABII584zDlVq",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> outputs;\n+            outputs.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                outputs.emplace_back(txid, nOutput);\n+            }\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& output : outputs) {",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Small nit: since the type is `COutPoint`, I would prefer to name this `prevout` or `outpoint` so we don't confuse it with a `COutput`.",
      "created_at": "2022-04-22T21:27:31Z",
      "updated_at": "2022-04-22T21:35:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r856577386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856577386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856579604",
      "pull_request_review_id": 950589393,
      "id": 856579604,
      "node_id": "PRRC_kwDOABII584zDl4U",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also a nit (especially since that PR didn't exist when you opened this one): if we end up with #24539 as well, a more generic RPC named `gettxspendingprevout` might be better, i.e. to retrieve a transaction from block or from mempool.",
      "created_at": "2022-04-22T21:32:43Z",
      "updated_at": "2022-04-22T21:35:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r856579604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856579604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856580142",
      "pull_request_review_id": 950589393,
      "id": 856580142,
      "node_id": "PRRC_kwDOABII584zDmAu",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=3)",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 51,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: seems like txE only needs 1 output",
      "created_at": "2022-04-22T21:33:58Z",
      "updated_at": "2022-04-22T21:35:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r856580142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856580142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857348954",
      "pull_request_review_id": 951471380,
      "id": 857348954,
      "node_id": "PRRC_kwDOABII584zGhta",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=3)\n+        txF = create_tx(utxos_to_spend=[txC[\"new_utxos\"][0]], num_outputs=2)\n+        txG = create_tx(utxos_to_spend=[txC[\"new_utxos\"][1]], num_outputs=1)\n+        txH = create_tx(utxos_to_spend=[txE[\"new_utxos\"][2],txF[\"new_utxos\"][0]], num_outputs=1)\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\n+        ]\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        assert_equal(len(mempool), 8)\n+        for txid in [txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH]:\n+            assert_equal(txid in mempool, True)\n+\n+        self.log.info(\"Find transactions spending outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+\n+        self.log.info(\"Find transaction spending multiple outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidE, 'vout' : 2}, {'txid' : txidF, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidE, 'vout' : 2, 'spendingtxid' : txidH}, {'txid' : txidF, 'vout' : 0, 'spendingtxid' : txidH} ])\n+\n+        self.log.info(\"Find no transaction when output is unspent\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidH, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidH, 'vout' : 0} ])\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidA, 'vout' : 5} ])\n+        assert_equal(result, [ {'txid' : txidA, 'vout' : 5} ])\n+\n+        self.log.info(\"Mixed spent and unspent outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidB, 'vout' : 0}, {'txid' : txidG, 'vout' : 3} ])\n+        assert_equal(result, [ {'txid' : txidB, 'vout' : 0, 'spendingtxid' : txidD}, {'txid' : txidG, 'vout' : 3} ])\n+\n+        self.log.info(\"Unknown input fields\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidC, 'vout' : 1, 'unknown' : 42} ])\n+        assert_equal(result, [ {'txid' : txidC, 'vout' : 1, 'spendingtxid' : txidG} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 84,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856576738,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good question. I tend to silently ignore unknown parameters in APIs because it's generally more friendly to clients. If a future version of `bitcoind` introduces new optional parameters, a client can safely start including them without caring about the version of `bitcoind` it's running against, and calls will work on older `bitcoind` as well. That's not a very strong reason though, I can change that if you want.",
      "created_at": "2022-04-25T07:51:51Z",
      "updated_at": "2022-04-25T07:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857348954",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857348954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857380544",
      "pull_request_review_id": 951516180,
      "id": 857380544,
      "node_id": "PRRC_kwDOABII584zGpbA",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=3)",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 51,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856580142,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/8c9152c1098acec4b1b4e333240f0e95eea21159",
      "created_at": "2022-04-25T08:30:24Z",
      "updated_at": "2022-04-25T08:30:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857380544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857380544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857380658",
      "pull_request_review_id": 951516314,
      "id": 857380658,
      "node_id": "PRRC_kwDOABII584zGpcy",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> outputs;\n+            outputs.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                outputs.emplace_back(txid, nOutput);\n+            }\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& output : outputs) {",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856577386,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/8c9152c1098acec4b1b4e333240f0e95eea21159",
      "created_at": "2022-04-25T08:30:30Z",
      "updated_at": "2022-04-25T08:30:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857380658",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857380658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857383697",
      "pull_request_review_id": 951520581,
      "id": 857383697,
      "node_id": "PRRC_kwDOABII584zGqMR",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856579604,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea! I changed that in https://github.com/bitcoin/bitcoin/pull/24408/commits/8c9152c1098acec4b1b4e333240f0e95eea21159 so that #24539 can build on top of it. I currently kept it in `mempool.cpp` and in the mempool RPCs list, I feel it's the responsibility of #24539 to move it elsewhere, is that ok @sstone?\r\n\r\nI think #24539 won't have to modify any of the RPC fields, which is great. Callers will simply follow up with `getrawtransaction` which will provide the `confirmations` field, informing them of whether the sending transaction is in the mempool or is confirmed.",
      "created_at": "2022-04-25T08:34:04Z",
      "updated_at": "2022-04-25T08:34:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857383697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857383697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857708543",
      "pull_request_review_id": 951984496,
      "id": 857708543,
      "node_id": "PRRC_kwDOABII584zH5f_",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856579604,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, and I agree that it makes sense to rebase https://github.com/bitcoin/bitcoin/pull/24539 on this PR ",
      "created_at": "2022-04-25T14:42:31Z",
      "updated_at": "2022-04-25T14:42:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857708543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857708543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858039758",
      "pull_request_review_id": 952469531,
      "id": 858039758,
      "node_id": "PRRC_kwDOABII584zJKXO",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=3)\n+        txF = create_tx(utxos_to_spend=[txC[\"new_utxos\"][0]], num_outputs=2)\n+        txG = create_tx(utxos_to_spend=[txC[\"new_utxos\"][1]], num_outputs=1)\n+        txH = create_tx(utxos_to_spend=[txE[\"new_utxos\"][2],txF[\"new_utxos\"][0]], num_outputs=1)\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\n+        ]\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        assert_equal(len(mempool), 8)\n+        for txid in [txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH]:\n+            assert_equal(txid in mempool, True)\n+\n+        self.log.info(\"Find transactions spending outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+\n+        self.log.info(\"Find transaction spending multiple outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidE, 'vout' : 2}, {'txid' : txidF, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidE, 'vout' : 2, 'spendingtxid' : txidH}, {'txid' : txidF, 'vout' : 0, 'spendingtxid' : txidH} ])\n+\n+        self.log.info(\"Find no transaction when output is unspent\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidH, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidH, 'vout' : 0} ])\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidA, 'vout' : 5} ])\n+        assert_equal(result, [ {'txid' : txidA, 'vout' : 5} ])\n+\n+        self.log.info(\"Mixed spent and unspent outputs\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidB, 'vout' : 0}, {'txid' : txidG, 'vout' : 3} ])\n+        assert_equal(result, [ {'txid' : txidB, 'vout' : 0, 'spendingtxid' : txidD}, {'txid' : txidG, 'vout' : 3} ])\n+\n+        self.log.info(\"Unknown input fields\")\n+        result = self.nodes[0].getmempooltxspendingprevout([ {'txid' : txidC, 'vout' : 1, 'unknown' : 42} ])\n+        assert_equal(result, [ {'txid' : txidC, 'vout' : 1, 'spendingtxid' : txidG} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 84,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "c3cde8ca864f13a638f558d1631f144ffa37e03d",
      "in_reply_to_id": 856576738,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No objections here! Being more user-friendly sounds good :grin:",
      "created_at": "2022-04-25T21:24:37Z",
      "updated_at": "2022-04-25T21:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r858039758",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858039758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859922532",
      "pull_request_review_id": 955079717,
      "id": 859922532,
      "node_id": "PRRC_kwDOABII584zQWBk",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8c9152c1098acec4b1b4e333240f0e95eea21159",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "super-nit: if you wanna normalize the wording, one of the information outcome of this RPC is that output might not be spent in fact, so might said \"the check output\" here and above.",
      "created_at": "2022-04-27T15:11:16Z",
      "updated_at": "2022-04-27T15:18:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r859922532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859922532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860536095",
      "pull_request_review_id": 955930692,
      "id": 860536095,
      "node_id": "PRRC_kwDOABII584zSr0f",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8c9152c1098acec4b1b4e333240f0e95eea21159",
      "in_reply_to_id": 859922532,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/8f9335f19ce75515f9e6944de503a5278a92f464",
      "created_at": "2022-04-28T06:41:05Z",
      "updated_at": "2022-04-28T06:41:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r860536095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860536095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862421580",
      "pull_request_review_id": 958542031,
      "id": 862421580,
      "node_id": "PRRC_kwDOABII584zZ4JM",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the checked output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the checked output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: With this change, RPC will not accept invalid/unrelated parameters.\r\n\r\n```suggestion\r\n                RPCTypeCheckObj(o,\r\n                                /*typesExpected=*/{\r\n                                    {\"txid\", UniValueType(UniValue::VSTR)},\r\n                                    {\"vout\", UniValueType(UniValue::VNUM)},\r\n                                }, /*fAllowNull=*/false, /*fStrict=*/true);\r\n```",
      "created_at": "2022-05-01T04:30:50Z",
      "updated_at": "2022-05-01T04:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862421580",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862421580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862421744",
      "pull_request_review_id": 958542031,
      "id": 862421744,
      "node_id": "PRRC_kwDOABII584zZ4Lw",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=1)\n+        txF = create_tx(utxos_to_spend=[txC[\"new_utxos\"][0]], num_outputs=2)\n+        txG = create_tx(utxos_to_spend=[txC[\"new_utxos\"][1]], num_outputs=1)\n+        txH = create_tx(utxos_to_spend=[txE[\"new_utxos\"][0],txF[\"new_utxos\"][0]], num_outputs=1)\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\n+        ]\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        assert_equal(len(mempool), 8)\n+        for txid in [txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH]:\n+            assert_equal(txid in mempool, True)\n+\n+        self.log.info(\"Find transactions spending outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+\n+        self.log.info(\"Find transaction spending multiple outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidE, 'vout' : 0}, {'txid' : txidF, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidE, 'vout' : 0, 'spendingtxid' : txidH}, {'txid' : txidF, 'vout' : 0, 'spendingtxid' : txidH} ])\n+\n+        self.log.info(\"Find no transaction when output is unspent\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidH, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidH, 'vout' : 0} ])\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidA, 'vout' : 5} ])\n+        assert_equal(result, [ {'txid' : txidA, 'vout' : 5} ])\n+\n+        self.log.info(\"Mixed spent and unspent outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidB, 'vout' : 0}, {'txid' : txidG, 'vout' : 3} ])\n+        assert_equal(result, [ {'txid' : txidB, 'vout' : 0, 'spendingtxid' : txidD}, {'txid' : txidG, 'vout' : 3} ])\n+\n+        self.log.info(\"Unknown input fields\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidC, 'vout' : 1, 'unknown' : 42} ])\n+        assert_equal(result, [ {'txid' : txidC, 'vout' : 1, 'spendingtxid' : txidG} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 84,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit (related to the previous suggestion): \r\n```suggestion\r\n        self.log.info(\"Unknown input fields\")\r\n        assert_raises_rpc_error(-3, \"Unexpected key unknown\", self.nodes[0].gettxspendingprevout, [{'txid' : txidC, 'vout' : 1, 'unknown' : 42}])\r\n```",
      "created_at": "2022-05-01T04:33:12Z",
      "updated_at": "2022-05-01T13:15:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862421744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862421744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862623302",
      "pull_request_review_id": 958759476,
      "id": 862623302,
      "node_id": "PRRC_kwDOABII584zapZG",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the checked output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the checked output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": 862421580,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the tip! I'm leaning more towards being flexible here with regards to unknown parameters (see [this comment](https://github.com/bitcoin/bitcoin/pull/24408#discussion_r857348954)) but it's a weak preference, if you feel more strongly about being strict here I can apply your proposed change, let me know!",
      "created_at": "2022-05-02T06:51:00Z",
      "updated_at": "2022-05-02T06:51:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862623302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862623302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862736367",
      "pull_request_review_id": 958913246,
      "id": 862736367,
      "node_id": "PRRC_kwDOABII584zbE_v",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the checked output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the checked output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": 862421580,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both options work for me. I don't have a strong opinion on that.\r\nI just assume that if an invalid parameter is used then maybe the user is expecting different behavior than the default.",
      "created_at": "2022-05-02T10:17:43Z",
      "updated_at": "2022-05-02T10:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862736367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862736367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862766245",
      "pull_request_review_id": 958954861,
      "id": 862766245,
      "node_id": "PRRC_kwDOABII584zbMSl",
      "diff_hunk": "@@ -587,6 +587,89 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the checked output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the checked output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": 862421580,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since both you and @glozow noticed this, it's probably worth making this stricter as you suggest. Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/ad14372cab1897b3f5efafe9861ec696f5e97060",
      "created_at": "2022-05-02T11:20:45Z",
      "updated_at": "2022-05-02T11:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862766245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862766245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862766318",
      "pull_request_review_id": 958954944,
      "id": 862766318,
      "node_id": "PRRC_kwDOABII584zbMTu",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.generate(self.wallet, COINBASE_MATURITY + 1)\n+        self.wallet.rescan_utxos()\n+        confirmed_utxo = self.wallet.get_utxo()\n+\n+        # Create a tree of unconfirmed transactions in the mempool:\n+        #             txA\n+        #             / \\\n+        #            /   \\\n+        #           /     \\\n+        #          /       \\\n+        #         /         \\\n+        #       txB         txC\n+        #       / \\         / \\\n+        #      /   \\       /   \\\n+        #    txD   txE   txF   txG\n+        #            \\   /\n+        #             \\ /\n+        #             txH\n+\n+        def create_tx(**kwargs):\n+            return self.wallet.send_self_transfer_multi(\n+                from_node=self.nodes[0],\n+                **kwargs,\n+            )\n+\n+        txA = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        txB = create_tx(utxos_to_spend=[txA[\"new_utxos\"][0]], num_outputs=2)\n+        txC = create_tx(utxos_to_spend=[txA[\"new_utxos\"][1]], num_outputs=2)\n+        txD = create_tx(utxos_to_spend=[txB[\"new_utxos\"][0]], num_outputs=1)\n+        txE = create_tx(utxos_to_spend=[txB[\"new_utxos\"][1]], num_outputs=1)\n+        txF = create_tx(utxos_to_spend=[txC[\"new_utxos\"][0]], num_outputs=2)\n+        txG = create_tx(utxos_to_spend=[txC[\"new_utxos\"][1]], num_outputs=1)\n+        txH = create_tx(utxos_to_spend=[txE[\"new_utxos\"][0],txF[\"new_utxos\"][0]], num_outputs=1)\n+        txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH = [\n+            tx[\"txid\"] for tx in [txA, txB, txC, txD, txE, txF, txG, txH]\n+        ]\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        assert_equal(len(mempool), 8)\n+        for txid in [txidA, txidB, txidC, txidD, txidE, txidF, txidG, txidH]:\n+            assert_equal(txid in mempool, True)\n+\n+        self.log.info(\"Find transactions spending outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+\n+        self.log.info(\"Find transaction spending multiple outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidE, 'vout' : 0}, {'txid' : txidF, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidE, 'vout' : 0, 'spendingtxid' : txidH}, {'txid' : txidF, 'vout' : 0, 'spendingtxid' : txidH} ])\n+\n+        self.log.info(\"Find no transaction when output is unspent\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidH, 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : txidH, 'vout' : 0} ])\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidA, 'vout' : 5} ])\n+        assert_equal(result, [ {'txid' : txidA, 'vout' : 5} ])\n+\n+        self.log.info(\"Mixed spent and unspent outputs\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidB, 'vout' : 0}, {'txid' : txidG, 'vout' : 3} ])\n+        assert_equal(result, [ {'txid' : txidB, 'vout' : 0, 'spendingtxid' : txidD}, {'txid' : txidG, 'vout' : 3} ])\n+\n+        self.log.info(\"Unknown input fields\")\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : txidC, 'vout' : 1, 'unknown' : 42} ])\n+        assert_equal(result, [ {'txid' : txidC, 'vout' : 1, 'spendingtxid' : txidG} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": null,
      "original_position": 84,
      "commit_id": "418557034055f740951294e7677ae9fd5149ea9b",
      "original_commit_id": "8f9335f19ce75515f9e6944de503a5278a92f464",
      "in_reply_to_id": 862421744,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/ad14372cab1897b3f5efafe9861ec696f5e97060",
      "created_at": "2022-05-02T11:20:53Z",
      "updated_at": "2022-05-02T11:20:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r862766318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862766318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    }
  ]
}