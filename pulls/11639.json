{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
    "id": 151497667,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxNDk3NjY3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11639",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/11639.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/11639.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e73cf5195daa5b740775a1cd07ece992c6a89cae",
    "number": 11639,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Rewrite the interface between validation and net_processing wrt DoS",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This cleans up an old main-carryover - it made sense that main could decide what DoS scores to assign things because the DoS scores were handled in a different part of main, but now validation is telling net_processing what DoS scores to assign to different things, which is utter nonsense. Instead, we replace CValidationState's nDoS and CorruptionPossible with a general ValidationInvalidReason, which net_processing can handle as it sees fit. I keep the behavior changes here to a minimum, but in the future we can utilize these changes for other smarter behavior, such as disconnecting/preferring to rotate outbound peers based on them providing things which are invalid due to SOFT_FORK because we shouldn't ban for such cases.\r\n\r\nThis is somewhat complementary with, though obviously conflicts heavily with #11523, which added enums in place of DoS scores, as well as a few other cleanups (which are still relevant).\r\n\r\nCompared with previous bans, the following changes are made:\r\n * Txn with empty vin/vout or null prevouts move from 10 DoS\r\n   points to 100.\r\n * Loose transactions with a dependency loop now result in a ban\r\n   instead of 10 DoS points.\r\n * BIP68-violation no longer results in a ban as it is SOFT_FORK.\r\n * Non-SegWit SigOp violation no longer results in a ban as it\r\n   considers P2SH sigops and is thus SOFT_FORK.\r\n * Any script violation in a block no longer results in a ban as\r\n   it may be the result of a SOFT_FORK. This should likely be\r\n   fixed in the future by differentiating between them.\r\n * Proof of work failure moves from 50 DoS points to a ban.\r\n * Blocks with timestamps under MTP now result in a ban, blocks\r\n   too far in the future continue to *not* result in a ban.\r\n * Inclusion of non-final transactions in a block now results in a\r\n   ban instead of 10 DoS points.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-11-08T21:17:00Z",
    "updated_at": "2021-12-16T14:54:28Z",
    "closed_at": "2018-06-14T21:18:09Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "c23c4bbf5cefbadc5568ce06b90d5f11d54ef730",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "TheBlueMatt:2017-10-dos-rewrite",
      "ref": "2017-10-dos-rewrite",
      "sha": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1443291,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDQzMjkx",
        "name": "bitcoin",
        "full_name": "TheBlueMatt/bitcoin",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bitcoin",
        "description": "Bitcoin (dont fork from here, fork from bitcoin/bitcoin)",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bitcoin",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bitcoin",
        "homepage": "http://www.bitcoin.org/",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 171686,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:23Z",
        "created_at": "2011-03-05T14:14:49Z",
        "updated_at": "2022-12-15T18:21:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c5870ab689995e7dc1ada530e9db27cfae9bb448",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:11:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 265,
    "deletions": 175,
    "changed_files": 7,
    "commits": 8,
    "review_comments": 97,
    "comments": 23
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 1332768147,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMzMjc2ODE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1332768147",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-08T21:25:27Z"
    },
    {
      "event": "labeled",
      "id": 1332897363,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEzMzI4OTczNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1332897363",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-08T22:40:56Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "added_to_project",
      "id": 1388317209,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxMzg4MzE3MjA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1388317209",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-14T19:04:01Z",
      "project_card": {
        "id": 6170355,
        "url": "https://api.github.com/projects/columns/cards/6170355",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1390409337,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM5MDQwOTMzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1390409337",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-15T22:06:47Z"
    },
    {
      "event": "commented",
      "id": 352124547,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEyNDU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352124547",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-15T22:10:09Z",
      "updated_at": "2017-12-15T22:10:09Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-352124547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1390572201,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM5MDU3MjIwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1390572201",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-16T01:30:23Z"
    },
    {
      "event": "reviewed",
      "id": 84774914,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODQ3NzQ5MTQ=",
      "url": null,
      "actor": null,
      "commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nDo you think it's reasonable to treat `ValidationInvalidReason` like `CONSENSUS | MISSING_INPUTS`, so you could accumulate reasons instead of overwriting?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-84774914",
      "submitted_at": "2017-12-20T14:33:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1400680178,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQwMDY4MDE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1400680178",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-24T16:45:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1400698752,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQwMDY5ODc1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1400698752",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-24T18:30:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1400698783,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQwMDY5ODc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1400698783",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-24T18:30:28Z"
    },
    {
      "event": "reviewed",
      "id": 87486202,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODc0ODYyMDI=",
      "url": null,
      "actor": null,
      "commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-87486202",
      "submitted_at": "2018-01-09T11:42:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1416586278,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQxNjU4NjI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1416586278",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-09T22:04:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1416652793,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQxNjY1Mjc5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1416652793",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-09T22:48:14Z"
    },
    {
      "event": "reviewed",
      "id": 99801359,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTk4MDEzNTk=",
      "url": null,
      "actor": null,
      "commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-99801359",
      "submitted_at": "2018-02-27T18:30:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "reviewed",
      "id": 99802794,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTk4MDI3OTQ=",
      "url": null,
      "actor": null,
      "commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, but don't think we need SOFT_FORK to be used anywhere now.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-99802794",
      "submitted_at": "2018-02-27T20:01:49Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "commented",
      "id": 369954899,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk1NDg5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369954899",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-02T15:35:57Z",
      "updated_at": "2018-03-02T15:35:57Z",
      "author_association": "MEMBER",
      "body": "Commented on the points I disagreed with, I obviously strongly disagree about making assumptions about the net_processing layer in validation, as that's been one of my overarching goals over the past few years. Will address the other points when I get a chance to rebase.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-369954899",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 370234133,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIzNDEzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370234133",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-04T14:38:52Z",
      "updated_at": "2018-03-04T14:39:09Z",
      "author_association": "MEMBER",
      "body": "The more I think about this, the more I think we should drop the distinction between \"SOFT_FORK\" and \"CONSENSUS\" altogether.  At least when it comes to block processing, the only concept that matters is CONSENSUS.\r\n\r\nThe reason we care to distinguish SOFT_FORK from CONSENSUS is to highlight recent rule changes that our peers may not know about, so that the net_processing layer can optionally do something different for SOFT_FORK violations than it would do for CONSENSUS violations.  However I don't think this is a terribly meaningful distinction.  The main goals of the net_processing/net layers, with respect to these validation issues, is:\r\n * keep us connected to the honest network\r\n * prevent attackers from DoS'ing us\r\n * don't needlessly partition old nodes that have fallen back to SPV security because they're unaware of the consensus rules\r\n\r\nSo what is our strategy for each of these points?  For keeping us connected to the honest network, I think we mainly rely on having robust outbound peers -- any outbound peer that is not enforcing all the consensus rules should be disconnected.  Combined with the mitigations we deployed last fall for outbound peers whose tips aren't keeping up, and for protection in the case that our tip hasn't advanced in a while, I believe this is sufficient.  (See https://gist.github.com/sdaftuar/c2a3320c751efb078a7c1fd834036cb0 for more details around my thinking here.)\r\n\r\nFor not needlessly partitioning old nodes -- I think it's sufficient to not disconnect inbound peers that relay blocks that violate consensus rules, regardless of whether the rule is a recent soft fork or not.\r\n\r\nAnd to prevent DoS -- I think we just ensure that any blocks have valid proof-of-work, combined with protections against processing blocks that are too far behind our tip (or on a too-little-work-chain).\r\n\r\nIn all of these cases, I don't think we need to distinguish \"SOFT_FORK\" from \"CONSENSUS\".  And as its pretty arbitrary about when to decide to move something from the SOFT_FORK designation to CONSENSUS, I think we may as well not bother.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-370234133",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "removed_from_project",
      "id": 1524080953,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTUyNDA4MDk1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524080953",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T19:07:45Z",
      "project_card": {
        "id": 6170355,
        "url": "https://api.github.com/projects/columns/cards/6170355",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 378984143,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk4NDE0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378984143",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T15:52:14Z",
      "updated_at": "2018-04-05T15:52:14Z",
      "author_association": "MEMBER",
      "body": "Discussed this offline with @sdaftuar for a bit - I'm OK with redefining \"SOFT_FORK\" to mean \"any future SOFT_FORK after segwit, so is currently unused\", but I'd rather leave it there as we'd certainly need it for \"any future SOFT_FORK\". Happy to do so if others like. Still want more review here, though.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-378984143",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "mentioned",
      "id": 1559097721,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTA5NzcyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559097721",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T15:52:14Z"
    },
    {
      "event": "subscribed",
      "id": 1559097722,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTkwOTc3MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559097722",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T15:52:14Z"
    },
    {
      "event": "commented",
      "id": 379005876,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAwNTg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379005876",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:01:41Z",
      "updated_at": "2018-04-05T17:01:41Z",
      "author_association": "MEMBER",
      "body": "No objection to leaving \"SOFT_FORK\" in for future use (even if I'm not sure we'll ever use it, I am open to being convinced).  Nit: I would somewhat prefer to call it something other than \"SOFT_FORK\" -- perhaps \"RECENT_CONSENSUS_CHANGE\" or something else that indicates the relevant substance rather than the form? ",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379005876",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 379029154,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAyOTE1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379029154",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:15:33Z",
      "updated_at": "2018-04-05T18:17:09Z",
      "author_association": "MEMBER",
      "body": "Big concept ACK, I'm happy to see the DoS scores get out of the network processing logic.\r\n\r\nAs for SOFT_FORK vs CONSENSUS: I like calling it `RECENT_CONSENSUS_CHANGE` or something similar, and making it match whatever we're currently not banning for. The discussion about how to deal with softforks and banning and DoS protection in general is more complicated and can be continued later.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379029154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 379038624,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAzODYyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379038624",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:47:03Z",
      "updated_at": "2018-04-05T18:47:03Z",
      "author_association": "MEMBER",
      "body": "@sipa well, current master consider RECENT_CONSENSUS_CHANGE/not-banning as any soft fork, ever, kinda, but also some other stuff, but not SegWit things. Its kinda a grab-bag as @sdaftuar points out. This PR cleaned it up somewhat but aired on the side of \"all soft-forks\", @sdaftuar wants it to air more on the side of \"things after segwit\", which I think makes sense. Leaving it the way it is on master kinda makes no sense (and would be hard to do).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379038624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "mentioned",
      "id": 1559453179,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTQ1MzE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559453179",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:47:03Z"
    },
    {
      "event": "subscribed",
      "id": 1559453180,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTk0NTMxODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559453180",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:47:03Z"
    },
    {
      "event": "mentioned",
      "id": 1559453181,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTQ1MzE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559453181",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:47:03Z"
    },
    {
      "event": "subscribed",
      "id": 1559453182,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTk0NTMxODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559453182",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:47:03Z"
    },
    {
      "event": "commented",
      "id": 379062592,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA2MjU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379062592",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T20:15:14Z",
      "updated_at": "2018-04-05T20:15:14Z",
      "author_association": "MEMBER",
      "body": "In the interests of advancing this refactor, I'm fine with doing whatever is least controversial (presumably, less change to existing behavior) in this PR, and saving the larger behavioral changes for a future PR.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379062592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1576837291,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3NjgzNzI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1576837291",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:10:30Z"
    },
    {
      "event": "commented",
      "id": 381679879,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY3OTg3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381679879",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:11:26Z",
      "updated_at": "2018-04-16T17:11:26Z",
      "author_association": "MEMBER",
      "body": "Rebased and changed SOFT_FORK to RECENT_CONSENSUS_CHANGE, redefining it to mean \"change more recent than segwit\" (ie it is currently unused, as @sdaftuar requested).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381679879",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "mentioned",
      "id": 1576839543,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU3NjgzOTU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1576839543",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:11:26Z"
    },
    {
      "event": "subscribed",
      "id": 1576839545,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NzY4Mzk1NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1576839545",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:11:26Z"
    },
    {
      "event": "commented",
      "id": 381680248,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY4MDI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381680248",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:12:32Z",
      "updated_at": "2018-04-16T17:12:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ack to the motivation - while validation shouldn't be deciding how many points to assign peers, you could argue that it should be telling net processing \"this is rejected because I don't have enough information to assess that it is valid\" vs. \"this is invalid because it was maliciously constructed\" - it would be nice from a readability perspective if that were more immediately apparent (e.g. by categorizing the reason names or the like)",
      "user": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381680248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 381686281,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY4NjI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381686281",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:32:33Z",
      "updated_at": "2018-04-16T17:32:33Z",
      "author_association": "MEMBER",
      "body": "I think the only cases where we can say \"I'm missing something this is based on\" is ValidationInvalidReason::MISSING_PREV and MISSING_INPUTS, which are pretty self-explanitory. Open to suggestions if you had something else in mind (or a comment to clarify).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381686281",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1576886789,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3Njg4Njc4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1576886789",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T17:37:11Z"
    },
    {
      "event": "reviewed",
      "id": 112526654,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyNTI2NjU0",
      "url": null,
      "actor": null,
      "commit_id": "f22fdb51afb0965f78efd70155bf5e327fbf7ffb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-112526654",
      "submitted_at": "2018-04-16T18:01:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1576996243,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3Njk5NjI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1576996243",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T18:30:15Z"
    },
    {
      "event": "reviewed",
      "id": 112553444,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyNTUzNDQ0",
      "url": null,
      "actor": null,
      "commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-112553444",
      "submitted_at": "2018-04-16T21:18:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "commented",
      "id": 381753221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTc1MzIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381753221",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-16T21:19:09Z",
      "updated_at": "2018-04-16T21:19:09Z",
      "author_association": "MEMBER",
      "body": "I've left a bunch of comments, mostly around making the commenting clearer.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381753221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "reviewed",
      "id": 112653589,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyNjUzNTg5",
      "url": null,
      "actor": null,
      "commit_id": "332461018e82ebb13c48776771c801e282e9b8f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-112653589",
      "submitted_at": "2018-04-17T03:06:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "commented",
      "id": 381838239,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTgzODIzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381838239",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T04:40:29Z",
      "updated_at": "2018-04-17T04:40:29Z",
      "author_association": "MEMBER",
      "body": "Is it possible to also kill the `REJECT_*` codes here? They seem possibly duplicative with the new reason value.",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381838239",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1579095774,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3OTA5NTc3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579095774",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T15:08:01Z"
    },
    {
      "event": "mentioned",
      "id": 1579096611,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU3OTA5NjYxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579096611",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T15:08:20Z"
    },
    {
      "event": "subscribed",
      "id": 1579096612,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NzkwOTY2MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579096612",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T15:08:20Z"
    },
    {
      "event": "reviewed",
      "id": 112956609,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyOTU2NjA5",
      "url": null,
      "actor": null,
      "commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-112956609",
      "submitted_at": "2018-04-17T19:22:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1579700340,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3OTcwMDM0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579700340",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T19:27:43Z"
    },
    {
      "event": "reviewed",
      "id": 112962054,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyOTYyMDU0",
      "url": null,
      "actor": null,
      "commit_id": "41ca0cf9b97358d91eb91b49f5acdd48ce18cc6e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Does it make sense to squash the commits _Use state reason field to check for collisions in cmpctblocks_ and _Remove references to CValidationState's DoS and CorruptionPossible_?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-112962054",
      "submitted_at": "2018-04-17T19:45:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "commented",
      "id": 382119120,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjExOTEyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382119120",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T19:49:18Z",
      "updated_at": "2018-04-17T19:49:18Z",
      "author_association": "MEMBER",
      "body": "Much clearer to me now. Thanks for the updates!\r\n\r\nA few more comments inline.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-382119120",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 382549338,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU0OTMzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382549338",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-18T22:29:22Z",
      "updated_at": "2018-04-18T22:31:56Z",
      "author_association": "MEMBER",
      "body": "Renaming `ValidationInvalidReason` to `InvalidReason` would save 1,130 chars. Think of all those chars. ;)\r\nhttps://github.com/Empact/bitcoin/commit/beb63f3baadbe054f12ed8847fae4e38293cc46f",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-382549338",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "mentioned",
      "id": 1587039286,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU4NzAzOTI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1587039286",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T21:04:31Z"
    },
    {
      "event": "subscribed",
      "id": 1587039289,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1ODcwMzkyODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1587039289",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T21:04:31Z"
    },
    {
      "event": "reviewed",
      "id": 114116540,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE0MTE2NTQw",
      "url": null,
      "actor": null,
      "commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-114116540",
      "submitted_at": "2018-04-20T21:06:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "mentioned",
      "id": 1589425709,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU4OTQyNTcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1589425709",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-23T15:17:35Z"
    },
    {
      "event": "subscribed",
      "id": 1589425713,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1ODk0MjU3MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1589425713",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-23T15:17:35Z"
    },
    {
      "event": "commented",
      "id": 383883290,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzg4MzI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383883290",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-24T10:28:49Z",
      "updated_at": "2018-04-24T10:28:49Z",
      "author_association": "MEMBER",
      "body": "Needs rebase. (Presumably due to #13032)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-383883290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1599311364,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5OTMxMTM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599311364",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T17:54:13Z"
    },
    {
      "event": "commented",
      "id": 385046530,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA0NjUzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385046530",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T17:54:53Z",
      "updated_at": "2018-04-27T17:54:53Z",
      "author_association": "MEMBER",
      "body": "Rebased and addressed all outstanding feedback (I believe). I didnt opt for shortening the name of \"ValidationInvalidReason\"...I dont think we should be shortening unless things are just as clear as the more verbose name.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-385046530",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1599412334,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5OTQxMjMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599412334",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T18:47:49Z"
    },
    {
      "event": "reviewed",
      "id": 116071269,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE2MDcxMjY5",
      "url": null,
      "actor": null,
      "commit_id": "efd9c1728de51c7596cbe377eab71674f69557be",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-116071269",
      "submitted_at": "2018-04-27T20:19:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1599573443,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5OTU3MzQ0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599573443",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T20:22:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1599874668,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5OTg3NDY2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599874668",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-28T01:26:00Z"
    },
    {
      "event": "commented",
      "id": 385412468,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQxMjQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385412468",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-30T14:20:42Z",
      "updated_at": "2018-04-30T14:20:42Z",
      "author_association": "MEMBER",
      "body": "utACK f29c11a45edb138711ae7004b3b550ba416fc215",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-385412468",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 385564203,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTU2NDIwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385564203",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-01T00:04:07Z",
      "updated_at": "2018-05-01T00:04:07Z",
      "author_association": "MEMBER",
      "body": "utACK f29c11a45edb138711ae7004b3b550ba416fc215",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-385564203",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 387562958,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU2Mjk1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387562958",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-08T22:30:48Z",
      "updated_at": "2018-05-08T22:30:48Z",
      "author_association": "MEMBER",
      "body": "weak utACK f29c11a45edb138711ae7004b3b550ba416fc215 (Did a single pass over all commits)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-387562958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "commented",
      "id": 388647252,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY0NzI1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388647252",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-13T18:42:28Z",
      "updated_at": "2018-05-13T18:42:28Z",
      "author_association": "MEMBER",
      "body": "Needs rebase due to #13185.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-388647252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1623671131,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyMzY3MTEzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623671131",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-13T19:25:35Z"
    },
    {
      "event": "commented",
      "id": 388650002,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY1MDAwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388650002",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-13T19:26:00Z",
      "updated_at": "2018-05-13T19:26:00Z",
      "author_association": "MEMBER",
      "body": "(trivially) rebased. Would love another once-over from @sdaftuar.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-388650002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "mentioned",
      "id": 1623671226,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyMzY3MTIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623671226",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-13T19:26:00Z"
    },
    {
      "event": "subscribed",
      "id": 1623671227,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjM2NzEyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623671227",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-13T19:26:00Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTFmNzc1OTg2YWY5YTg3YWEwM2RkZmRhN2U3OWY4NTg2MWE4OTQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/711f775986af9a87aa03ddfda7e79f85861a8947",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/711f775986af9a87aa03ddfda7e79f85861a8947",
      "tree": {
        "sha": "0afed485c2e0e6824393a3f125e3d895fc7ac6ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0afed485c2e0e6824393a3f125e3d895fc7ac6ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5870ab689995e7dc1ada530e9db27cfae9bb448",
          "sha": "c5870ab689995e7dc1ada530e9db27cfae9bb448",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c5870ab689995e7dc1ada530e9db27cfae9bb448"
        }
      ],
      "message": "Add useful-for-dos \"reason\" field to CValidationState\n\nThis is a first step towards cleaning up our DoS interface - make\nvalidation return *why* something is invalid, and let net_processing\nfigure out what that implies in terms of banning/disconnection/etc.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:50:12Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-27T22:22:56Z"
      },
      "sha": "711f775986af9a87aa03ddfda7e79f85861a8947"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjU5N2I2YjkyMmZjNTQ5OWE1MWFkNjNmNTFjZDFhMGQwZDBmMjg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb597b6b922fc5499a51ad63f51cd1a0d0d0f289",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eb597b6b922fc5499a51ad63f51cd1a0d0d0f289",
      "tree": {
        "sha": "fcbd488631badfb751f299fbd94e26543187e509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcbd488631badfb751f299fbd94e26543187e509"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/711f775986af9a87aa03ddfda7e79f85861a8947",
          "sha": "711f775986af9a87aa03ddfda7e79f85861a8947",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/711f775986af9a87aa03ddfda7e79f85861a8947"
        }
      ],
      "message": "Add functions to convert CValidationInterface's reason to DoS info\n\nCValidationInterface's new GetReason() field provides more than\nenough information for net_processing to determine what to do with\nthe peer, use that instead of trusting validation's idea of what\nshould result in a DoS ban.\n\nCompared with previous bans, the following changes are made:\n * Txn with empty vin/vout or null prevouts move from 10 DoS\n   points to 100.\n * Loose transactions with a dependency loop now result in a ban\n   instead of 10 DoS points.\n * Any pre-segwit soft-fork errors (ie all soft-fork errors)\n   now result in a ban.\n * Proof of work failure moves from 50 DoS points to a ban.\n * Blocks with timestamps under MTP now result in a ban, blocks\n   too far in the future continue to *not* result in a ban.\n * Inclusion of non-final transactions in a block now results in a\n   ban instead of 10 DoS points.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:52:37Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-11-08T16:57:38Z"
      },
      "sha": "eb597b6b922fc5499a51ad63f51cd1a0d0d0f289"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmVjNjdlZmY3MDNlOWU3NzgyMjlkZGNmMzBmZDVmZDY1ZDJmMjhk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
      "tree": {
        "sha": "656562dc0899a1d4060f74e067af326475a09ad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/656562dc0899a1d4060f74e067af326475a09ad0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb597b6b922fc5499a51ad63f51cd1a0d0d0f289",
          "sha": "eb597b6b922fc5499a51ad63f51cd1a0d0d0f289",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eb597b6b922fc5499a51ad63f51cd1a0d0d0f289"
        }
      ],
      "message": "Use new reason-based DoS/disconnect logic instead of state.nDoS",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:52:37Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-04-16T16:52:03Z"
      },
      "sha": "16ec67eff703e9e778229ddcf30fd5fd65d2f28d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjJjOWRiYjczODBiMWEzODBkODQ1OTE0ODIwNTEzNWZkNGRkMzA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d22c9dbb7380b1a380d8459148205135fd4dd304",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d22c9dbb7380b1a380d8459148205135fd4dd304",
      "tree": {
        "sha": "573c8872d155214357ac0829d8dd0278511bacb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/573c8872d155214357ac0829d8dd0278511bacb9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
          "sha": "16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16ec67eff703e9e778229ddcf30fd5fd65d2f28d"
        }
      ],
      "message": "Use state reason field to check for collisions in cmpctblocks",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:52:37Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-11-08T20:05:13Z"
      },
      "sha": "d22c9dbb7380b1a380d8459148205135fd4dd304"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDViY2E1Y2I3NTcwMDM5YjRjNTljZmJlYjViY2RmMzEwN2M0MDkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/905bca5cb7570039b4c59cfbeb5bcdf3107c4091",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/905bca5cb7570039b4c59cfbeb5bcdf3107c4091",
      "tree": {
        "sha": "5c3e9eae1d0abcf37436aa1a2ea0948f4ae5adb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c3e9eae1d0abcf37436aa1a2ea0948f4ae5adb1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d22c9dbb7380b1a380d8459148205135fd4dd304",
          "sha": "d22c9dbb7380b1a380d8459148205135fd4dd304",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d22c9dbb7380b1a380d8459148205135fd4dd304"
        }
      ],
      "message": "Prep for scripted-diff by removing some \\ns which annoy sed.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:52:37Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-11-08T19:50:18Z"
      },
      "sha": "905bca5cb7570039b4c59cfbeb5bcdf3107c4091"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGQ2OGNhOTM2ODAyNDdjMDU5YjNlYTMzYzIyZjVkOTRlMWJkZWMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54d68ca93680247c059b3ea33c22f5d94e1bdec3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54d68ca93680247c059b3ea33c22f5d94e1bdec3",
      "tree": {
        "sha": "16c1d64fbe1133d7c29da8ca841d6aa990f02d70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16c1d64fbe1133d7c29da8ca841d6aa990f02d70"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/905bca5cb7570039b4c59cfbeb5bcdf3107c4091",
          "sha": "905bca5cb7570039b4c59cfbeb5bcdf3107c4091",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/905bca5cb7570039b4c59cfbeb5bcdf3107c4091"
        }
      ],
      "message": "scripted-diff: Remove DoS calls to CValidationState\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/\\.DoS(\\(.*\\), REJECT_\\(.*\\), \\(true\\|false\\)/.DoS(\\1, REJECT_\\2/' src/validation.cpp src/consensus/tx_verify.cpp\nsed -i 's/state.GetRejectCode(), state.GetRejectReason(), state.CorruptionPossible(), state.GetDebugMessage())/state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage())/' src/validation.cpp\nsed -i 's/\\.DoS([^,]*, /.Invalid\\(/' src/validation.cpp src/consensus/tx_verify.cpp\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:53:03Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:53:03Z"
      },
      "sha": "54d68ca93680247c059b3ea33c22f5d94e1bdec3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzM1YWM0ZDNkNzhkODRmZDYxMzQ3YjhjZDU5NTU0OTBkNGM3YzYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c35ac4d3d78d84fd61347b8cd5955490d4c7c60",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c35ac4d3d78d84fd61347b8cd5955490d4c7c60",
      "tree": {
        "sha": "b2cfaaeddcc4f086fef0e183b4fd28dde4974ec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2cfaaeddcc4f086fef0e183b4fd28dde4974ec7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54d68ca93680247c059b3ea33c22f5d94e1bdec3",
          "sha": "54d68ca93680247c059b3ea33c22f5d94e1bdec3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54d68ca93680247c059b3ea33c22f5d94e1bdec3"
        }
      ],
      "message": "Remove references to CValidationState's DoS and CorruptionPossible",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:56:41Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-11-08T20:17:38Z"
      },
      "sha": "8c35ac4d3d78d84fd61347b8cd5955490d4c7c60"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzNjZjUxOTVkYWE1Yjc0MDc3NWExY2QwN2VjZTk5MmM2YTg5Y2Fl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "tree": {
        "sha": "65da273ca79f6f53427d3c4c11ee8cf563df80fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65da273ca79f6f53427d3c4c11ee8cf563df80fd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c35ac4d3d78d84fd61347b8cd5955490d4c7c60",
          "sha": "8c35ac4d3d78d84fd61347b8cd5955490d4c7c60",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c35ac4d3d78d84fd61347b8cd5955490d4c7c60"
        }
      ],
      "message": "Update some comments in validation.cpp as we arent doing DoS there",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-05-14T16:56:41Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-04-17T14:46:30Z"
      },
      "sha": "e73cf5195daa5b740775a1cd07ece992c6a89cae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1625311941,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyNTMxMTk0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625311941",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T16:56:50Z"
    },
    {
      "event": "commented",
      "id": 388894349,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODg5NDM0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388894349",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T17:16:36Z",
      "updated_at": "2018-05-14T17:16:36Z",
      "author_association": "MEMBER",
      "body": "re-utACK e73cf5195daa5b740775a1cd07ece992c6a89cae (verified that the only diff since my previous ACK after a rebase is dealing with #11423 and #13185).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-388894349",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11639"
    },
    {
      "event": "reviewed",
      "id": 119806375,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5ODA2Mzc1",
      "url": null,
      "actor": null,
      "commit_id": "fa85da0e9042cd2aaa5f80247cead1a92d556e05",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks pretty good; left some nits and spotted a couple behavior changes with headers processing that should be addressed.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-119806375",
      "submitted_at": "2018-05-15T17:45:22Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "reviewed",
      "id": 120496074,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIwNDk2MDc0",
      "url": null,
      "actor": null,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-120496074",
      "submitted_at": "2018-05-16T05:22:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "reviewed",
      "id": 120496265,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIwNDk2MjY1",
      "url": null,
      "actor": null,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#pullrequestreview-120496265",
      "submitted_at": "2018-05-16T05:23:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
    },
    {
      "event": "labeled",
      "id": 1665121540,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2NjUxMjE1NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1665121540",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-06T02:46:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "closed",
      "id": 1682186741,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTY4MjE4Njc0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1682186741",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T21:18:09Z"
    },
    {
      "event": "referenced",
      "id": 2318951549,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIzMTg5NTE1NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2318951549",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7d7d315060620446bd363ca50f95f79d3260db7",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7d7d315060620446bd363ca50f95f79d3260db7",
      "created_at": "2019-05-04T10:00:15Z"
    },
    {
      "event": "unlabeled",
      "id": 2741496936,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc0MTQ5NjkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2741496936",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-24T16:51:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "locked",
      "id": 5778917215,
      "node_id": "LOE_lADOABII584QO8TRzwAAAAFYc0df",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778917215",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:54:28Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158033628",
      "pull_request_review_id": 84774914,
      "id": 158033628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODAzMzYyOA==",
      "diff_hunk": "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\n+    BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);",
      "path": "src/test/txvalidation_tests.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also BOOST_CHECK_EQUAL?",
      "created_at": "2017-12-20T14:15:55Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158033628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158033628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158036096",
      "pull_request_review_id": 84774914,
      "id": 158036096,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODAzNjA5Ng==",
      "diff_hunk": "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Make it `CONSENSUS` only if `NOT_STANDARD`? I know that atm only those 2 are set but, imo, it's more clear to do so inside that condition:\r\n```cpp\r\nif (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\r\n    state.Invalid(ValidationInvalidReason::CONSENSUS, ...);\r\n}\r\n```\r\nThe same happens in line 1951.",
      "created_at": "2017-12-20T14:25:50Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158036096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158036096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1912,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605611",
      "pull_request_review_id": 85444994,
      "id": 158605611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODYwNTYxMQ==",
      "diff_hunk": "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\n+    BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);",
      "path": "src/test/txvalidation_tests.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": 158033628,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doesn't compile as GetReason() can't be printed.",
      "created_at": "2017-12-24T16:27:58Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605955",
      "pull_request_review_id": 85445303,
      "id": 158605955,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODYwNTk1NQ==",
      "diff_hunk": "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": 158036096,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2017-12-24T16:45:29Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605955",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1912,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160381451",
      "pull_request_review_id": 87486202,
      "id": 160381451,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM4MTQ1MQ==",
      "diff_hunk": "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": 158036096,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ATM `CheckTxInputs` set `MISSING_INPUTS` and `CONSENSUS` reasons and only makes sense to override when reason is `MISSING_INPUTS`:\r\n```cpp\r\nif (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\r\n    state.Invalid(ValidationInvalidReason::CONSENSUS, ...);\r\n}\r\n```\r\n  ",
      "created_at": "2018-01-09T11:27:02Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160381451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160381451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1912,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160383713",
      "pull_request_review_id": 87486202,
      "id": 160383713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM4MzcxMw==",
      "diff_hunk": "@@ -22,6 +22,32 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    VALID,           //!< not actually invalid",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "2a117b2cc3a9a257f30312841f5d3f126d631cb7",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`ValidationInvalidReason::NONE` instead?\r\n  ",
      "created_at": "2018-01-09T11:38:26Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160383713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160383713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538094",
      "pull_request_review_id": 87673566,
      "id": 160538094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDUzODA5NA==",
      "diff_hunk": "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": 158036096,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Errrr....fixed, actually this time.",
      "created_at": "2018-01-09T22:04:24Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1912,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538115",
      "pull_request_review_id": 87673597,
      "id": 160538115,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDUzODExNQ==",
      "diff_hunk": "@@ -22,6 +22,32 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    VALID,           //!< not actually invalid",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "2a117b2cc3a9a257f30312841f5d3f126d631cb7",
      "in_reply_to_id": 160383713,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, sounds good.",
      "created_at": "2018-01-09T22:04:30Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171021132",
      "pull_request_review_id": 99801359,
      "id": 171021132,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAyMTEzMg==",
      "diff_hunk": "@@ -1906,11 +1914,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::CONSENSUS, false,\n+                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 230,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The arguments don't match here:\r\n```\r\nvalidation.cpp:1921:79: error: no viable conversion from 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >') to 'bool'\r\n                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n```\r\nbut more generally I think this would be a lot more readable if we could just add an explicit way to set the invalid reason on a CValidationState, rather than invoke DoS() in this way (here and elsewhere as well).",
      "created_at": "2018-02-27T18:30:07Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171021132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171021132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022331",
      "pull_request_review_id": 99802794,
      "id": 171022331,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAyMjMzMQ==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't quite understand this comment?",
      "created_at": "2018-02-27T18:34:21Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022331",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022830",
      "pull_request_review_id": 99802794,
      "id": 171022830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAyMjgzMA==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I personally find this fall-through for the non-compact block case harder to follow and more fragile than having each case end with a return or break.",
      "created_at": "2018-02-27T18:36:09Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022830",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171033168",
      "pull_request_review_id": 99802794,
      "id": 171033168,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAzMzE2OA==",
      "diff_hunk": "@@ -1866,7 +1874,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n+                    return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): tried to overwrite transaction\"),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 218,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should probably be CONSENSUS rather than SOFT_FORK.",
      "created_at": "2018-02-27T19:09:23Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171033168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171033168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171035667",
      "pull_request_review_id": 99802794,
      "id": 171035667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAzNTY2Nw==",
      "diff_hunk": "@@ -3136,7 +3164,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // Check that all transactions are finalized\n     for (const auto& tx : block.vtx) {\n         if (!IsFinalTx(*tx, nHeight, nLockTimeCutoff)) {\n-            return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n+            return state.DoS(10, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 404,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that this could be \"SOFT_FORK\" (BIP 113).  But as I wrote elsewhere I think we should just use CONSENSUS everywhere in place of SOFT_FORK, for now.",
      "created_at": "2018-02-27T19:16:57Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171035667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171035667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171036526",
      "pull_request_review_id": 99802794,
      "id": 171036526,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAzNjUyNg==",
      "diff_hunk": "@@ -3194,7 +3222,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided\n+        // us with witness data can be expected to support SegWit validation.\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 447,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we're going to use this line of reasoning, then I think we may as well also not use SOFT_FORK anywhere else either (at least for invalid blocks, perhaps loose transactions should be different) -- presumably no nodes that support segwit validation should be unaware of any of the prior soft forks.",
      "created_at": "2018-02-27T19:19:45Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171036526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171036526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171042519",
      "pull_request_review_id": 99802794,
      "id": 171042519,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTA0MjUxOQ==",
      "diff_hunk": "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1) As all parallel-validation script failures are SOFT_FORK further down, I think we ought to make the non-parallel validation case be the same, rather than filter for NOT_STANDARD first.\r\n2) Since our blocks are only coming from segwit peers, I actually think we should just change all these to CONSENSUS anyway, and leave a comment explaining that when we deploy a new soft fork, we need to be careful about not splitting the network.",
      "created_at": "2018-02-27T19:39:27Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171042519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171042519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171045987",
      "pull_request_review_id": 99802794,
      "id": 171045987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTA0NTk4Nw==",
      "diff_hunk": "@@ -3168,11 +3189,11 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n             // already does not permit it, it is impossible to trigger in the\n             // witness tree.\n             if (block.vtx[0]->vin[0].scriptWitness.stack.size() != 1 || block.vtx[0]->vin[0].scriptWitness.stack[0].size() != 32) {\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-witness-nonce-size\", true, strprintf(\"%s : invalid witness nonce size\", __func__));\n+                return state.Invalid(ValidationInvalidReason::MUTATED, false, REJECT_INVALID, \"bad-witness-nonce-size\", strprintf(\"%s : invalid witness nonce size\", __func__));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 447,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "f2c33c3f19bf88064d38e4c7c02a8a4eb55fbb71",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not really obvious here why we use MUTATED rather than WITNESS_MUTATED, here and in the next few lines (other than needing to match the code in InvalidBlockFound() and AcceptBlock(), which only check against MUTATED). Perhaps add a comment explaining the usage somewhere?",
      "created_at": "2018-02-27T19:51:26Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171045987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171045987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877060",
      "pull_request_review_id": 100811060,
      "id": 171877060,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTg3NzA2MA==",
      "diff_hunk": "@@ -1866,7 +1874,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n+                    return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): tried to overwrite transaction\"),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 218,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": 171033168,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We should figure out where we want to draw a line between CONSENSUS (ban the peer) and SOFT_FORK (ignore the peer). Obviously this case *is* a SOFT_FORK, but at this point its so old that it may not be worth keeping that distinction. I aired on the side of \"let any node, no matter how old, not get banned\" in general.",
      "created_at": "2018-03-02T15:29:26Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877364",
      "pull_request_review_id": 100811440,
      "id": 171877364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTg3NzM2NA==",
      "diff_hunk": "@@ -3168,11 +3189,11 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n             // already does not permit it, it is impossible to trigger in the\n             // witness tree.\n             if (block.vtx[0]->vin[0].scriptWitness.stack.size() != 1 || block.vtx[0]->vin[0].scriptWitness.stack[0].size() != 32) {\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-witness-nonce-size\", true, strprintf(\"%s : invalid witness nonce size\", __func__));\n+                return state.Invalid(ValidationInvalidReason::MUTATED, false, REJECT_INVALID, \"bad-witness-nonce-size\", strprintf(\"%s : invalid witness nonce size\", __func__));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 447,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "f2c33c3f19bf88064d38e4c7c02a8a4eb55fbb71",
      "in_reply_to_id": 171045987,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "WITNESS_MUTATED is only for transactions. In the future we could separate out the InvalidReason into two different ones for transactions/blocks.",
      "created_at": "2018-03-02T15:30:27Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878154",
      "pull_request_review_id": 100812379,
      "id": 171878154,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTg3ODE1NA==",
      "diff_hunk": "@@ -3194,7 +3222,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided\n+        // us with witness data can be expected to support SegWit validation.\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 447,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": 171036526,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Huh? Doing so would break the ability of a pre-segwit node to provide us a non-segwit-but-valid block. Further, this line of reasoning does *not* assume that we only download blocks from segwit-enabled peers (which may be the case in practice in our current net layer, but making that assumption strong in validation seems bad). The line of reasoning here is only applicable to nodes that *provided* the witness, not nodes that (for some reason) does not.",
      "created_at": "2018-03-02T15:33:12Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878581",
      "pull_request_review_id": 100812909,
      "id": 171878581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTg3ODU4MQ==",
      "diff_hunk": "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": 171042519,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm confused. The NOT_STANDARD return here is to keep behavior the same for transactions as well as blocks. NOT_STANDARD is not a valid response for block ValidationReasons, so we have to swap it here.",
      "created_at": "2018-03-02T15:34:51Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172050340",
      "pull_request_review_id": 101007263,
      "id": 172050340,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjA1MDM0MA==",
      "diff_hunk": "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": 171042519,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Re 1), I'm just saying that we should always rewrite the reason to be the same as we'd get if we did parallel validation (which is SOFT_FORK in this PR currently), versus only return SOFT_FORK if the reason was NOT_STANDARD.  It doesn't really make sense for ConnectBlock() to behave differently with regard to error codes if using single vs parallel script checking.",
      "created_at": "2018-03-04T14:23:05Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r172050340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172050340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181833367",
      "pull_request_review_id": 112526654,
      "id": 181833367,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTgzMzM2Nw==",
      "diff_hunk": "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 380,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "f22fdb51afb0965f78efd70155bf5e327fbf7ffb",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "from the linter: \"All calls to LogPrintf() should be terminated with \\n\"",
      "created_at": "2018-04-16T18:01:49Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181833367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181833367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181856096",
      "pull_request_review_id": 112553444,
      "id": 181856096,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg1NjA5Ng==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not a big fan of these colorful comments - mainly because without context, it's difficult for new contributors to understand the spirit in which they were written.\r\n\r\nCan we keep them a bit more precise, eg `A reason why something was invalid. This is used to determine what action to take towards the provider of the object (eg disconnect, ban, etc).`",
      "created_at": "2018-04-16T19:21:14Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181856096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181856096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181857895",
      "pull_request_review_id": 112553444,
      "id": 181857895,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg1Nzg5NQ==",
      "diff_hunk": "@@ -560,28 +560,31 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"coinbase\");\n \n     // Reject transactions with witness before segregated witness activates (override with -prematurewitness)\n     bool witnessEnabled = IsWitnessEnabled(chainActive.Tip(), chainparams.GetConsensus());\n     if (!gArgs.GetBoolArg(\"-prematurewitness\", false) && tx.HasWitness() && !witnessEnabled) {\n-        return state.DoS(0, false, REJECT_NONSTANDARD, \"no-witness-yet\", true);\n+        // We call this WITNESS_MUTATED because we don't bother to check if the witness was maybe garbage\n+        // and its important clients realize that they shouldn't assume the witness indicated the",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find this comment really difficult to parse. What are the witness's important clients? Also, please remove `bother to`.",
      "created_at": "2018-04-16T19:27:50Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181857895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181857895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181859175",
      "pull_request_review_id": 112553444,
      "id": 181859175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg1OTE3NQ==",
      "diff_hunk": "@@ -710,21 +713,21 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n         // merely non-standard transaction.\n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+            return state.Invalid(ValidationInvalidReason::NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems to contradict the comment above `we still consider this an invalid rather than merely non-standard transaction.` Perhaps update the comment?",
      "created_at": "2018-04-16T19:32:18Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181859175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181859175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 708,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181860495",
      "pull_request_review_id": 112553444,
      "id": 181860495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2MDQ5NQ==",
      "diff_hunk": "@@ -1422,7 +1423,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                     // as to the correct behavior - we may want to continue\n                     // peering with non-upgraded nodes even after soft-fork\n                     // super-majority signaling has occurred.\n-                    return state.DoS(100,false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));\n+                    return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 225,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps update comment above, which talks about DoS banning nodes.",
      "created_at": "2018-04-16T19:37:11Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181860495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181860495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181863702",
      "pull_request_review_id": 112553444,
      "id": 181863702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2MzcwMg==",
      "diff_hunk": "@@ -1971,11 +1972,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 253,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment would be clearer if it explained *why* the reason needs to be changed, rather than just asserting that \"its nonsense\". Perhaps something like:\r\n\r\n```\r\n`MISSING_INPUTS` is a legitimate `InvalidReason` for a transaction, but not for a block. If one of the block's transactions is missing inputs, then the block is consensus invalid. Update the `InvalidReason`.\r\n```\r\n\r\nSame for the other 'nonsense' comment below.",
      "created_at": "2018-04-16T19:49:33Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181863702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181863702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864068",
      "pull_request_review_id": 112553444,
      "id": 181864068,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NDA2OA==",
      "diff_hunk": "@@ -2024,13 +2039,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n \n     CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n     if (block.vtx[0]->GetValueOut() > blockReward)\n-        return state.DoS(100,\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS,\n                          error(\"ConnectBlock(): coinbase pays too much (actual=%d vs limit=%d)\",\n                                block.vtx[0]->GetValueOut(), blockReward),\n                                REJECT_INVALID, \"bad-cb-amount\");\n \n+    // TODO: We should be able to ban peers that send us completely bogus scripts,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 313,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand this TODO. We are returning CONSENSUS here, not SOFT_FORK.",
      "created_at": "2018-04-16T19:50:56Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2047,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864480",
      "pull_request_review_id": 112553444,
      "id": 181864480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NDQ4MA==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be clearer to prefix the block-only reasons with `BLOCK_` and the transaction-only reasons with `TX_`",
      "created_at": "2018-04-16T19:52:23Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866293",
      "pull_request_review_id": 112553444,
      "id": 181866293,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NjI5Mw==",
      "diff_hunk": "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": 402,
      "original_position": 380,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not clear to me why you've removed the `Invalid()` call in the _Add useful-for-dos \"reason\" field to CValidationState_ commit.",
      "created_at": "2018-04-16T19:59:25Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866293",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3088,
      "original_line": 3088,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866943",
      "pull_request_review_id": 112553444,
      "id": 181866943,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2Njk0Mw==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": 171022331,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I also don't understand this comment!",
      "created_at": "2018-04-16T20:01:51Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867122",
      "pull_request_review_id": 112553444,
      "id": 181867122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NzEyMg==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What does \"duplicate of invalid \" mean?",
      "created_at": "2018-04-16T20:02:33Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867308",
      "pull_request_review_id": 112553444,
      "id": 181867308,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NzMwOA==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": 171022830,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree. an `else return true` would be clearer here.",
      "created_at": "2018-04-16T20:03:15Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867540",
      "pull_request_review_id": 112553444,
      "id": 181867540,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg2NzU0MA==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What does this mean?!",
      "created_at": "2018-04-16T20:04:04Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870187",
      "pull_request_review_id": 112553444,
      "id": 181870187,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3MDE4Nw==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": 171022830,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, I think this would be clearer if it wasn't a `switch` statement at all. There are only a handful of cases where we return true. Explicitly test them and return false otherwise.",
      "created_at": "2018-04-16T20:13:49Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870743",
      "pull_request_review_id": 112553444,
      "id": 181870743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3MDc0Mw==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid\"\n+        if (via_compact_block) break;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Speed-of-light or out-of-sync:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, not sure what this means. In this function `MISSING_PREV` seems to count as `Speed-of-light or out-of-sync`, but not in `MayResultInDisconnect()`",
      "created_at": "2018-04-16T20:15:45Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 836,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870985",
      "pull_request_review_id": 112553444,
      "id": 181870985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3MDk4NQ==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {",
      "path": "src/net_processing.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, I think this is clearer if you remove the switch statement.",
      "created_at": "2018-04-16T20:16:35Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 821,
      "original_line": 821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181877907",
      "pull_request_review_id": 112553444,
      "id": 181877907,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3NzkwNw==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181867122,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I think I understand now. This comment should be clarified and moved to the enum definition. Perhaps even rename to `DUPLICATE_INVALID`?",
      "created_at": "2018-04-16T20:40:13Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181877907",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181877907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181879716",
      "pull_request_review_id": 112553444,
      "id": 181879716,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3OTcxNg==",
      "diff_hunk": "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 89,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This `!it->second.second` is pretty obscure:\r\n\r\n- when adding an entry to `mapBlockSource`, we check whether it was received as a compact block, invert that to mean 'should punish peer'\r\n- when reading from `mapBlockSource`, we take the `.second`, and invert it to mean `via compact_block` before calling `MaybePunishNode()`.\r\n\r\nCan we change `mapBlockSource` to just store whether the block was received via compact block to avoid this double inversion?",
      "created_at": "2018-04-16T20:46:36Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181879716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181879716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1041,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181881401",
      "pull_request_review_id": 112553444,
      "id": 181881401,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg4MTQwMQ==",
      "diff_hunk": "@@ -1406,6 +1466,10 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            if (!MaybePunishNode(pfrom->GetId(), state, false, \"invalid header received\")) {\n+                // MaybePunishNode returning true indicates Misbehaving logged the error for us",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems unnecessary. Why not just log inside `MaybePunishNode()` (it knows whether it called `Misbehaving()`) and remove the return value from `MaybePunishNode()`. Then the callers don't need to worry about logging.",
      "created_at": "2018-04-16T20:53:00Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181881401",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181881401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181883001",
      "pull_request_review_id": 112553444,
      "id": 181883001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg4MzAwMQ==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid\"\n+        if (via_compact_block) break;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        {\n+            // TODO: Handle this much more gracefully",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you comment *why* you think this is ungraceful?",
      "created_at": "2018-04-16T20:58:54Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181883001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181883001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181888861",
      "pull_request_review_id": 112553444,
      "id": 181888861,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg4ODg2MQ==",
      "diff_hunk": "@@ -71,19 +96,7 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    bool IsInvalid(int &nDoSOut) const {\n-        if (IsInvalid()) {\n-            nDoSOut = nDoS;\n-            return true;\n-        }\n-        return false;\n-    }\n-    bool CorruptionPossible() const {",
      "path": "src/consensus/validation.h",
      "position": 98,
      "original_position": 88,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alternatively, you could just change this function to return whether `reason` is set to `MUTATED` or `WITNESS_MUTATED`",
      "created_at": "2018-04-16T21:18:23Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181888861",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181888861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941331",
      "pull_request_review_id": 112653589,
      "id": 181941331,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk0MTMzMQ==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "332461018e82ebb13c48776771c801e282e9b8f3",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renaming this `InvalidReason` would save a lot of chars overall. The only other prefix in this module is `REJECT_`, so `RejectReason` is an option.",
      "created_at": "2018-04-17T03:06:56Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941331",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941390",
      "pull_request_review_id": 112653650,
      "id": 181941390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk0MTM5MA==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181864480,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed",
      "created_at": "2018-04-17T03:07:27Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181945752",
      "pull_request_review_id": 112658612,
      "id": 181945752,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk0NTc1Mg==",
      "diff_hunk": "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": 402,
      "original_position": 380,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181866293,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `Invalid` call here just adds to the debug info - see that each arg is carried over from the existing state, and the debug `strprintf` prepends a message to the existing debug info. Logging is potentially an equivalently communicative alternative, though I would use `FormatStateMessage` here to include all the state info.",
      "created_at": "2018-04-17T03:51:43Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181945752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181945752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3088,
      "original_line": 3088,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108089",
      "pull_request_review_id": 112854373,
      "id": 182108089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODA4OQ==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181856096,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Gotta ruin all my fun...fixed.",
      "created_at": "2018-04-17T15:08:12Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108096",
      "pull_request_review_id": 112854386,
      "id": 182108096,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODA5Ng==",
      "diff_hunk": "@@ -560,28 +560,31 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"coinbase\");\n \n     // Reject transactions with witness before segregated witness activates (override with -prematurewitness)\n     bool witnessEnabled = IsWitnessEnabled(chainActive.Tip(), chainparams.GetConsensus());\n     if (!gArgs.GetBoolArg(\"-prematurewitness\", false) && tx.HasWitness() && !witnessEnabled) {\n-        return state.DoS(0, false, REJECT_NONSTANDARD, \"no-witness-yet\", true);\n+        // We call this WITNESS_MUTATED because we don't bother to check if the witness was maybe garbage\n+        // and its important clients realize that they shouldn't assume the witness indicated the",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181857895,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the comment and replaced it with a more detailed comment on the WITNESS_MUTATED definition.",
      "created_at": "2018-04-17T15:08:14Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108104",
      "pull_request_review_id": 112854398,
      "id": 182108104,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODEwNA==",
      "diff_hunk": "@@ -710,21 +713,21 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n         // merely non-standard transaction.\n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+            return state.Invalid(ValidationInvalidReason::NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181859175,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the comment, looks like it was just wrong.",
      "created_at": "2018-04-17T15:08:15Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 708,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108113",
      "pull_request_review_id": 112854410,
      "id": 182108113,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODExMw==",
      "diff_hunk": "@@ -1422,7 +1423,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                     // as to the correct behavior - we may want to continue\n                     // peering with non-upgraded nodes even after soft-fork\n                     // super-majority signaling has occurred.\n-                    return state.DoS(100,false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));\n+                    return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 225,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181860495,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the comment. It isnt adding anything that the RECENT_CONSENSUS_CHANGE documentation didnt already cover.",
      "created_at": "2018-04-17T15:08:17Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108122",
      "pull_request_review_id": 112854426,
      "id": 182108122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODEyMg==",
      "diff_hunk": "@@ -2024,13 +2039,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n \n     CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n     if (block.vtx[0]->GetValueOut() > blockReward)\n-        return state.DoS(100,\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS,\n                          error(\"ConnectBlock(): coinbase pays too much (actual=%d vs limit=%d)\",\n                                block.vtx[0]->GetValueOut(), blockReward),\n                                REJECT_INVALID, \"bad-cb-amount\");\n \n+    // TODO: We should be able to ban peers that send us completely bogus scripts,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 313,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181864068,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah missed removing that when I changed things for @sdaftuar's suggestion. Removed.",
      "created_at": "2018-04-17T15:08:20Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2047,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108127",
      "pull_request_review_id": 112854429,
      "id": 182108127,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODEyNw==",
      "diff_hunk": "@@ -1971,11 +1972,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 253,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181863702,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-04-17T15:08:20Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108139",
      "pull_request_review_id": 112854442,
      "id": 182108139,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODEzOQ==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181864480,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd rather just split it up into separate validation state objects in a later refactor, then its type-checked  instead.",
      "created_at": "2018-04-17T15:08:23Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108148",
      "pull_request_review_id": 112854459,
      "id": 182108148,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODE0OA==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181867540,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Clearer?",
      "created_at": "2018-04-17T15:08:25Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108153",
      "pull_request_review_id": 112854465,
      "id": 182108153,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODE1Mw==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181867122,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The enum definition is pretty clear IMO \"this object was cached as being invalid, but we don't know why\". Any suggestions for a different comment?",
      "created_at": "2018-04-17T15:08:26Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108170",
      "pull_request_review_id": 112854489,
      "id": 182108170,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODE3MA==",
      "diff_hunk": "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 89,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181879716,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Happy to do it in a followup, this is already enough code and I don't want to risk a bug if it sits for another 6 months and requires rebase.",
      "created_at": "2018-04-17T15:08:28Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1041,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108178",
      "pull_request_review_id": 112854500,
      "id": 182108178,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODE3OA==",
      "diff_hunk": "@@ -1406,6 +1466,10 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            if (!MaybePunishNode(pfrom->GetId(), state, false, \"invalid header received\")) {\n+                // MaybePunishNode returning true indicates Misbehaving logged the error for us",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181881401,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-04-17T15:08:28Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108178",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108196",
      "pull_request_review_id": 112854521,
      "id": 182108196,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODE5Ng==",
      "diff_hunk": "@@ -71,19 +96,7 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    bool IsInvalid(int &nDoSOut) const {\n-        if (IsInvalid()) {\n-            nDoSOut = nDoS;\n-            return true;\n-        }\n-        return false;\n-    }\n-    bool CorruptionPossible() const {",
      "path": "src/consensus/validation.h",
      "position": 98,
      "original_position": 88,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181888861,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Then it'd be dead code and forcing the caller to be more clear about what *exactly* they're checking for is much more stable.",
      "created_at": "2018-04-17T15:08:30Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108202",
      "pull_request_review_id": 112854525,
      "id": 182108202,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwODIwMg==",
      "diff_hunk": "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid\"\n+        if (via_compact_block) break;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        {\n+            // TODO: Handle this much more gracefully",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181883001,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-04-17T15:08:31Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182108202",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182108202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197193",
      "pull_request_review_id": 112956609,
      "id": 182197193,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5NzE5Mw==",
      "diff_hunk": "@@ -784,6 +784,77 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I still think this comment belongs where the enum is defined. Something like:\r\n\r\n`/!< this object was previously cached as being invalid, and we've now received a duplicate notification. We don't store the reason that it was previously marked invalid.",
      "created_at": "2018-04-17T19:21:56Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182197193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197387",
      "pull_request_review_id": 112956609,
      "id": 182197387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5NzM4Nw==",
      "diff_hunk": "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "in_reply_to_id": 171022830,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not addressed.\r\n\r\nFall through `case` statements are confusing.",
      "created_at": "2018-04-17T19:22:42Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182197387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197991",
      "pull_request_review_id": 112957597,
      "id": 182197991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5Nzk5MQ==",
      "diff_hunk": "@@ -784,6 +784,77 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "in_reply_to_id": 182197193,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"where the enum is defined\" - I'm confused, at the enum definition it says \"this object was cached as being invalid, but we don't know why\", is that insufficient?",
      "created_at": "2018-04-17T19:24:58Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182197991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182197991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182198646",
      "pull_request_review_id": 112958427,
      "id": 182198646,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5ODY0Ng==",
      "diff_hunk": "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181864480,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good, but is there any downside to making it clearer until that future refactor?",
      "created_at": "2018-04-17T19:27:37Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182198646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182198646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201058",
      "pull_request_review_id": 112961332,
      "id": 182201058,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMTA1OA==",
      "diff_hunk": "@@ -784,6 +784,77 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "in_reply_to_id": 182197193,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Apparently it is insufficient, since you've felt the need to leave a comment here explaining what you really mean (and repeated it in the function below) :slightly_smiling_face: ",
      "created_at": "2018-04-17T19:36:39Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182201058",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201679",
      "pull_request_review_id": 112962054,
      "id": 182201679,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMTY3OQ==",
      "diff_hunk": "@@ -2304,8 +2370,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.\n-                int nDoS = 0;\n-                if (!state.IsInvalid(nDoS) || nDoS == 0) {\n+                if (!state.IsInvalid() || !MayResultInDisconnect(state, false)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 185,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "41ca0cf9b97358d91eb91b49f5acdd48ce18cc6e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At this point, it's clearer to switch the ordering of the conditionals:\r\n\r\n```\r\n                if (state.IsInvalid() && MayResultInDisconnect(state, false)) {\r\n                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\r\n                } else {\r\n                    LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\r\n                    RelayTransaction(tx, connman);\r\n                }\r\n```\r\n\r\nif (THING AND THING) is more natural than if (^THING OR ^THING)",
      "created_at": "2018-04-17T19:38:57Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182201679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203717",
      "pull_request_review_id": 112964588,
      "id": 182203717,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMzcxNw==",
      "diff_hunk": "@@ -71,19 +96,7 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    bool IsInvalid(int &nDoSOut) const {\n-        if (IsInvalid()) {\n-            nDoSOut = nDoS;\n-            return true;\n-        }\n-        return false;\n-    }\n-    bool CorruptionPossible() const {",
      "path": "src/consensus/validation.h",
      "position": 98,
      "original_position": 88,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181888861,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Understood. This is fine as is.",
      "created_at": "2018-04-17T19:46:44Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182203717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204007",
      "pull_request_review_id": 112964938,
      "id": 182204007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwNDAwNw==",
      "diff_hunk": "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 89,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181879716,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes - can be done in a follow up, but in the meantime:\r\n\r\n` MaybePunishNode(it->second.first, state, !it->second.second);`\r\n\r\nis almost completely inscrutable!",
      "created_at": "2018-04-17T19:47:50Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182204007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1041,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182587368",
      "pull_request_review_id": 113413765,
      "id": 182587368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU4NzM2OA==",
      "diff_hunk": "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 89,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181879716,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fairness, it was this way when he found it. :P Def worthy of cleanup.",
      "created_at": "2018-04-18T22:25:27Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182587368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182587368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1041,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182587516",
      "pull_request_review_id": 113413939,
      "id": 182587516,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU4NzUxNg==",
      "diff_hunk": "@@ -784,6 +784,77 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "in_reply_to_id": 182197193,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed the comment should be carried over, or the value renamed.",
      "created_at": "2018-04-18T22:26:08Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r182587516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182587516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183161894",
      "pull_request_review_id": 114116540,
      "id": 183161894,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2MTg5NA==",
      "diff_hunk": "@@ -748,7 +743,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n             if (setConflicts.count(hashAncestor))\n             {\n-                return state.DoS(10, false,\n+                return state.DoS(10, ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CONSENSUS seems strange here, as it's not a script or amount violation.\r\n\r\nCONFLICT or MISSING_INPUTS seems more appropriate.",
      "created_at": "2018-04-20T20:31:19Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183161894",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183161894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183162234",
      "pull_request_review_id": 114116540,
      "id": 183162234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2MjIzNA==",
      "diff_hunk": "@@ -1971,11 +1971,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its not defined for a block, so we reset the reason flag to CONSENSUS here.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 231,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: it's",
      "created_at": "2018-04-20T20:32:47Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183162234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183162234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183163307",
      "pull_request_review_id": 114116540,
      "id": 183163307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2MzMwNw==",
      "diff_hunk": "@@ -22,6 +22,43 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW\n+    MISSING_PREV,            //!< We don't have the previous block the checked one is built on\n+    INVALID_PREV,            //!< A block this one builds on is invalid\n+    BAD_TIME,                //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    CHECKPOINT,              //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    NOT_STANDARD,            //!< didn't meet our local policy rules\n+    MISSING_INPUTS,          //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    WITNESS_MUTATED,\n+    CONFLICT,                //!< tx already in mempool or conflicts with an existing one (which is in chain or in mempool and RBF failed)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The distinction between CONFLICT and MEMPOOL_LIMIT seems very vague (at least when it's about conflicts with the existing mempool), and perhaps hard to maintain if the mempool policy gets more complicated.\r\n\r\nWhat would you think about using CONFLICT only for conflicts with confirmed transactions, and have a MEMPOOL_POLICY for all the rest?",
      "created_at": "2018-04-20T20:37:01Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183163307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183163307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183163513",
      "pull_request_review_id": 114116540,
      "id": 183163513,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2MzUxMw==",
      "diff_hunk": "@@ -1999,17 +2005,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its not defined for a block, so",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 270,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: it's",
      "created_at": "2018-04-20T20:38:00Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183163513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183163513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183164079",
      "pull_request_review_id": 114116540,
      "id": 183164079,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2NDA3OQ==",
      "diff_hunk": "@@ -1999,17 +2005,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is this possible? CheckInputs for blocks should only run with consensus flags, in which case we shouldn't ever return NOT_STANDARD, I think?",
      "created_at": "2018-04-20T20:40:33Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183164079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183164079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2006,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183169268",
      "pull_request_review_id": 114116540,
      "id": 183169268,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzE2OTI2OA==",
      "diff_hunk": "@@ -1906,11 +1914,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::CONSENSUS, false,\n+                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 230,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "in_reply_to_id": 171021132,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems fixed now, @sdaftuar?",
      "created_at": "2018-04-20T21:04:31Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183169268",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183169268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183429342",
      "pull_request_review_id": 114425500,
      "id": 183429342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQyOTM0Mg==",
      "diff_hunk": "@@ -748,7 +743,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n             if (setConflicts.count(hashAncestor))\n             {\n-                return state.DoS(10, false,\n+                return state.DoS(10, ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183161894,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "MISSING_INPUTS and CONFLICT imply that its possible the transaction may be valid, but we're missing something or otherwise unable to add it to the mempool right now. That is not the case here - there is no way this transaction could have been included in the mempool of any well-behaved node, nor could it ever make it into a block, so CONSENSUS is correct here.",
      "created_at": "2018-04-23T15:05:53Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183429342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183429342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183433629",
      "pull_request_review_id": 114430738,
      "id": 183433629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQzMzYyOQ==",
      "diff_hunk": "@@ -1999,17 +2005,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183164079,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In an earlier version of the patch it may have returned NON_STANDARD for flags which were added in a soft fork, but at @sdaftuar's suggestion that is no longer the case. Will fix the comment, but we'll need this when we need RECENT_CONSENSUS_CHANGE at some point.",
      "created_at": "2018-04-23T15:17:35Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183433629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183433629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2006,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183433656",
      "pull_request_review_id": 114430779,
      "id": 183433656,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQzMzY1Ng==",
      "diff_hunk": "@@ -22,6 +22,43 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW\n+    MISSING_PREV,            //!< We don't have the previous block the checked one is built on\n+    INVALID_PREV,            //!< A block this one builds on is invalid\n+    BAD_TIME,                //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    CHECKPOINT,              //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    NOT_STANDARD,            //!< didn't meet our local policy rules\n+    MISSING_INPUTS,          //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    WITNESS_MUTATED,\n+    CONFLICT,                //!< tx already in mempool or conflicts with an existing one (which is in chain or in mempool and RBF failed)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183163307,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems reasonable. Will do.",
      "created_at": "2018-04-23T15:17:39Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183433656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183433656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183488403",
      "pull_request_review_id": 114496341,
      "id": 183488403,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQ4ODQwMw==",
      "diff_hunk": "@@ -748,7 +743,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n             if (setConflicts.count(hashAncestor))\n             {\n-                return state.DoS(10, false,\n+                return state.DoS(10, ValidationInvalidReason::CONSENSUS, false,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183161894,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I see. The block \"missing inputs\" case is also reported as CONSENSUS; makes sense.",
      "created_at": "2018-04-23T18:09:32Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r183488403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183488403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761398",
      "pull_request_review_id": 116027739,
      "id": 184761398,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc2MTM5OA==",
      "diff_hunk": "@@ -2304,8 +2370,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.\n-                int nDoS = 0;\n-                if (!state.IsInvalid(nDoS) || nDoS == 0) {\n+                if (!state.IsInvalid() || !MayResultInDisconnect(state, false)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 185,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "41ca0cf9b97358d91eb91b49f5acdd48ce18cc6e",
      "in_reply_to_id": 182201679,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-04-27T17:54:07Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r184761398",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761408",
      "pull_request_review_id": 116027756,
      "id": 184761408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc2MTQwOA==",
      "diff_hunk": "@@ -784,6 +784,77 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "8d483f3de6188bf65ea9d831c8ca12ffa8d3f03a",
      "in_reply_to_id": 182197193,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Cleaned up.",
      "created_at": "2018-04-27T17:54:09Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r184761408",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761427",
      "pull_request_review_id": 116027782,
      "id": 184761427,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc2MTQyNw==",
      "diff_hunk": "@@ -1971,11 +1971,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its not defined for a block, so we reset the reason flag to CONSENSUS here.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 231,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183162234,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-04-27T17:54:13Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r184761427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761443",
      "pull_request_review_id": 116027795,
      "id": 184761443,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc2MTQ0Mw==",
      "diff_hunk": "@@ -1999,17 +2005,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its not defined for a block, so",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 270,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183163513,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-04-27T17:54:16Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r184761443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184761443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184796933",
      "pull_request_review_id": 116071269,
      "id": 184796933,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc5NjkzMw==",
      "diff_hunk": "@@ -2228,19 +2295,18 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     }\n                     else if (!fMissingInputs2)\n                     {\n-                        int nDos = 0;\n-                        if (stateDummy.IsInvalid(nDos) && nDos > 0)\n+                        if (orphan_state.IsInvalid())\n                         {\n                             // Punish peer that gave us an invalid orphan tx\n-                            Misbehaving(fromPeer, nDos);\n+                            MaybePunishNode(fromPeer, orphan_state, false);\n                             setMisbehaving.insert(fromPeer);\n                             LogPrint(BCLog::MEMPOOL, \"   invalid orphan tx %s\\n\", orphanHash.ToString());\n                         }\n                         // Has inputs but not accepted to mempool\n                         // Probably non-standard or insufficient fee\n                         LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n                         vEraseQueue.push_back(orphanHash);\n-                        if (!orphanTx.HasWitness() && !stateDummy.CorruptionPossible()) {\n+                        if (!orphanTx.HasWitness() && state.GetReason() != ValidationInvalidReason::TX_WITNESS_MUTATED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 166,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "efd9c1728de51c7596cbe377eab71674f69557be",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this be `orphan_state` instead of `state`?",
      "created_at": "2018-04-27T20:19:53Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r184796933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184796933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185145409",
      "pull_request_review_id": 116478550,
      "id": 185145409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE0NTQwOQ==",
      "diff_hunk": "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\n+    BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);",
      "path": "src/test/txvalidation_tests.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "in_reply_to_id": 158033628,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not worthy of revisiting here, but fyi I added a facility here to support `BOOST_CHECK_EQUAL` for enum: https://github.com/bitcoin/bitcoin/pull/13076/files#diff-4a0cb5ad5e93d187a1b065a99bbae143",
      "created_at": "2018-05-01T00:25:33Z",
      "updated_at": "2018-05-14T16:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r185145409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185145409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187931800",
      "pull_request_review_id": 119806375,
      "id": 187931800,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkzMTgwMA==",
      "diff_hunk": "@@ -22,6 +22,49 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain\n+     * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n+     * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n+     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n+     */\n+    TX_CONFLICT,",
      "path": "src/consensus/validation.h",
      "position": 43,
      "original_position": 43,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "fa85da0e9042cd2aaa5f80247cead1a92d556e05",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:  TX_CONFLICT for conflicting with an in-mempool transaction makes sense to me, but it's not clear to me why we'd also include 'duplicate-transaction-in-chain' and 'conflicts-with-an-in-chain-transaction' as a reason, which would be covered by TX_MISSING_INPUTS?  ",
      "created_at": "2018-05-14T12:18:37Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r187931800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187931800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187934135",
      "pull_request_review_id": 119806375,
      "id": 187934135,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkzNDEzNQ==",
      "diff_hunk": "@@ -660,7 +660,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                 for (size_t out = 0; out < tx.vout.size(); out++) {\n                     // Optimistically just do efficient check of cache for outputs\n                     if (pcoinsTip->HaveCoinInCache(COutPoint(hash, out))) {\n-                        return state.Invalid(false, REJECT_DUPLICATE, \"txn-already-known\");\n+                        return state.Invalid(ValidationInvalidReason::TX_CONFLICT, false, REJECT_DUPLICATE, \"txn-already-known\");",
      "path": "src/validation.cpp",
      "position": 55,
      "original_position": 50,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "fa85da0e9042cd2aaa5f80247cead1a92d556e05",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I commented elsewhere that I thought this may make more sense as MISSING_INPUTS, but either way, it would be nice to add a comment explaining why we're not using CONSENSUS here.  (I think it's because relay delays can cause transaction to propagate after a block is found, and CONSENSUS errors are for things that should never be propagated in the first place -- is there another reason?)",
      "created_at": "2018-05-14T12:27:11Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r187934135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187934135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 663,
      "original_line": 663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187934987",
      "pull_request_review_id": 119806375,
      "id": 187934987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkzNDk4Nw==",
      "diff_hunk": "@@ -683,7 +683,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // Must keep pool.cs for this unless we change CheckSequenceLocks to take a\n         // CoinsViewCache instead of create its own\n         if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n+            return state.DoS(0, ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"non-BIP68-final\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "fa85da0e9042cd2aaa5f80247cead1a92d556e05",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: This seems fine, but I did note that for premature coinbase spends, we return MISSING_INPUTS, whereas for premature bip68 spends, we're returning NOT_STANDARD.  Seems like those could be the same reason? ",
      "created_at": "2018-05-14T12:30:24Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r187934987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187934987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187938513",
      "pull_request_review_id": 119806375,
      "id": 187938513,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkzODUxMw==",
      "diff_hunk": "@@ -1971,11 +1971,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_MISSING_INPUTS) {",
      "path": "src/validation.cpp",
      "position": 273,
      "original_position": 231,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "fa85da0e9042cd2aaa5f80247cead1a92d556e05",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this seems brittle, as a future change to CheckTxInputs that returns a new reason code would break this logic.  Can we just always overwrite the reason to be CONSENSUS, or perhaps overwrite it to be CONSENSUS if the reason code is not a valid block-reason?",
      "created_at": "2018-05-14T12:43:18Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r187938513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187938513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1962,
      "original_line": 1962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188316014",
      "pull_request_review_id": 119806375,
      "id": 188316014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODMxNjAxNA==",
      "diff_hunk": "@@ -1999,17 +2005,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 269,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "3de3878a454180c1716cefea4af075faa88efd8b",
      "in_reply_to_id": 183164079,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Similar to my nit above for handling CheckTxInputs() response, it seems brittle to look for one kind of error code and only overwrite to CONSENSUS in that case.  If someone changes CheckInputs() in the future to return other TX invalid-reasons, then this logic won't be correct, and this would be an easy oversight.\r\n\r\nI would suggest that we always overwrite the reason here to be CONSENSUS (leaving in the comment about potentially needing to be careful to distinguish between RECENT_CONSENSUS_CHANGE in the future) so that this logic -- which only triggers in the case where we're not doing parallel script checks -- matches the invalid reason given at line 2051 below.",
      "created_at": "2018-05-15T14:47:07Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188316014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188316014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2006,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188320470",
      "pull_request_review_id": 119806375,
      "id": 188320470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODMyMDQ3MA==",
      "diff_hunk": "@@ -22,6 +22,49 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:",
      "path": "src/consensus/validation.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "711f775986af9a87aa03ddfda7e79f85861a8947",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \"(or headers)\"?",
      "created_at": "2018-05-15T14:57:40Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188320470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188320470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188321473",
      "pull_request_review_id": 119806375,
      "id": 188321473,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODMyMTQ3Mw==",
      "diff_hunk": "@@ -784,6 +784,83 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:",
      "path": "src/net_processing.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "eb597b6b922fc5499a51ad63f51cd1a0d0d0f289",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \"is is\"",
      "created_at": "2018-05-15T15:00:11Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188321473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188321473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 797,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188372100",
      "pull_request_review_id": 119806375,
      "id": 188372100,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODM3MjEwMA==",
      "diff_hunk": "@@ -1485,6 +1476,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            MaybePunishNode(pfrom->GetId(), state, false, \"invalid header received\");",
      "path": "src/net_processing.cpp",
      "position": 123,
      "original_position": 39,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe this can result in a behavior change, where we would DoS-ban peers that send duplicate headers that are invalid.",
      "created_at": "2018-05-15T17:31:23Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188372100",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188372100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1479,
      "original_line": 1479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188374633",
      "pull_request_review_id": 119806375,
      "id": 188374633,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODM3NDYzMw==",
      "diff_hunk": "@@ -2440,14 +2427,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n-            int nDoS;\n-            if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0) {\n-                    LOCK(cs_main);\n-                    Misbehaving(pfrom->GetId(), nDoS, strprintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId()));\n-                } else {\n-                    LogPrint(BCLog::NET, \"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n-                }\n+            if (state.IsInvalid()) {\n+                MaybePunishNode(pfrom->GetId(), state, true, \"invalid header via cmpctblock\");",
      "path": "src/net_processing.cpp",
      "position": 232,
      "original_position": 148,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "16ec67eff703e9e778229ddcf30fd5fd65d2f28d",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This also appears to be a behavior change; some headers failures currently result in a Misbehaving call, but as-is I believe compact block peers are never punished for errors here?",
      "created_at": "2018-05-15T17:39:52Z",
      "updated_at": "2018-05-15T17:45:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188374633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188374633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2431,
      "original_line": 2431,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188505707",
      "pull_request_review_id": 120496074,
      "id": 188505707,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUwNTcwNw==",
      "diff_hunk": "@@ -784,6 +784,83 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        if (via_compact_block) { return false; } else { return true; }",
      "path": "src/net_processing.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `return !via_compact_block`",
      "created_at": "2018-05-16T05:22:00Z",
      "updated_at": "2018-05-16T05:22:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188505707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188505707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 801,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188505852",
      "pull_request_review_id": 120496265,
      "id": 188505852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUwNTg1Mg==",
      "diff_hunk": "@@ -784,6 +784,83 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        if (via_compact_block) { return false; } else { return true; }\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        {\n+            // TODO: Handle this much more gracefully (10 DoS points is super arbitrary)\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 10, message);\n+        }\n+        return true;\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        break;\n+    }",
      "path": "src/net_processing.cpp",
      "position": 74,
      "original_position": 74,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe log a warning or throw on the default case, to make unhandled cases more visible?",
      "created_at": "2018-05-16T05:23:34Z",
      "updated_at": "2018-05-16T05:25:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188505852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188505852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188508491",
      "pull_request_review_id": 120499270,
      "id": 188508491,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUwODQ5MQ==",
      "diff_hunk": "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 89,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181879716,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FYI, a more self-documenting alternative looks something like:\r\n```c++\r\nif (state.IsInvalid()) {      \r\n    // Don't send reject message with code 0 or an internal reject code.\r\n    NodeId node_id;\r\n    bool punish_if_block_invalid;\r\n    std::tie(node_id, punish_if_block_invalid) = it->second;\r\n    if (it != mapBlockSource.end() && State(node_id) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\r\n        CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\r\n        State(node_id)->rejects.push_back(reject);\r\n        MaybePunishNode(node_id, state, !punish_if_block_invalid);\r\n    }\r\n}\r\n```\r\nNote you can early return for the `== end()` case here because it's present in every case.",
      "created_at": "2018-05-16T05:46:01Z",
      "updated_at": "2018-05-16T05:46:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188508491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188508491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1041,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188509273",
      "pull_request_review_id": 120500162,
      "id": 188509273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUwOTI3Mw==",
      "diff_hunk": "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "path": "src/validation.cpp",
      "position": 402,
      "original_position": 380,
      "commit_id": "e73cf5195daa5b740775a1cd07ece992c6a89cae",
      "original_commit_id": "01640d11ae79edf25a3471bb42a08aec3070859c",
      "in_reply_to_id": 181866293,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I still think the full `FormatStateMessage` is the better info to record here.",
      "created_at": "2018-05-16T05:52:08Z",
      "updated_at": "2018-05-16T05:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r188509273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188509273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3088,
      "original_line": 3088,
      "side": "RIGHT"
    }
  ]
}